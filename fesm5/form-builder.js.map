{"version":3,"file":"form-builder.js","sources":["../../../../../../src/material/form-builder/branch-line.ts","../../../../../../src/material/form-builder/choices-origin-data-source.ts","../../../../../../src/material/form-builder/choices-origin-editor.ts","../../../../../../src/material/form-builder/form-builder-service.ts","../../../../../../src/material/form-builder/choices-origin-editor-dialog.ts","../../../../../../src/material/form-builder/condition-editor.ts","../../../../../../src/material/form-builder/condition-editor-dialog.ts","../../../../../../src/material/form-builder/string-identifier-dialog.ts","../../../../../../src/material/form-builder/form-builder.ts","../../../../../../src/material/form-builder/node-entry.ts","../../../../../../src/material/form-builder/validation-condition-editor-dialog.ts","../../../../../../src/material/form-builder/warning-condition-editor-dialog.ts","../../../../../../src/material/form-builder/node-properties.ts","../../../../../../src/material/form-builder/node-type-entry.ts","../../../../../../src/material/form-builder/form-builder-module.ts","../../../../../../src/material/form-builder/public-api.ts","../../../../../../src/material/form-builder/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2,\n  ViewEncapsulation} from '@angular/core';\n\n@Component({\n  selector: 'ajf-fb-branch-line',\n  templateUrl: 'branch-line.html',\n  styleUrls: ['branch-line.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbBranchLine {\n  private _offset = 0;\n  @Input() set offset(offset: number) {\n    this._offset = offset;\n    this._updateOffset();\n  }\n\n  private _color: string;\n  @Input() set color(color: string) {\n    this._color = color;\n    this._updateColor();\n  }\n\n  private _height = 0;\n  @Input() set height(height: number) {\n    this._height = height;\n    this._updateHeight();\n  }\n\n  constructor(private _el: ElementRef, private _renderer: Renderer2) { }\n\n  private _updateHeight(): void {\n    const height = `${Math.max(0, this._height - 25)}px`;\n    this._renderer.setStyle(this._el.nativeElement, 'height', height);\n  }\n\n  private _updateOffset(): void {\n    const margin = `${this._offset * 4}px`;\n    this._renderer.setStyle(this._el.nativeElement, 'margin-top', margin);\n    this._renderer.setStyle(this._el.nativeElement, 'margin-left', margin);\n  }\n\n  private _updateColor(): void {\n    this._renderer.setStyle(this._el.nativeElement, 'border-color', this._color);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {DataSource} from '@angular/cdk/collections';\n\nimport {BehaviorSubject, Observable} from 'rxjs';\n\n\nexport type ChoicesOriginChoiceEntry = {label: string, value: string};\n\nexport class ChoicesOriginDataSource\n    extends DataSource<ChoicesOriginChoiceEntry> {\n  private _choices: BehaviorSubject<ChoicesOriginChoiceEntry[]> =\n      new BehaviorSubject<ChoicesOriginChoiceEntry[]>([]);\n  private _choicesObs: Observable<ChoicesOriginChoiceEntry[]>;\n\n  constructor() {\n    super();\n    this._choicesObs = this._choices.asObservable();\n  }\n\n  connect(): Observable<ChoicesOriginChoiceEntry[]> {\n    return this._choicesObs;\n  }\n\n  disconnect() {}\n\n  updateChoices(choices: ChoicesOriginChoiceEntry[]) {\n    this._choices.next(choices);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin, isChoicesFixedOrigin} from '@ajf/core/forms';\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\n\nimport {ChoicesOriginChoiceEntry, ChoicesOriginDataSource} from './choices-origin-data-source';\n\n\n@Component({\n  selector: 'ajf-fb-choices-origin-editor',\n  templateUrl: 'choices-origin-editor.html',\n  styleUrls: ['choices-origin-editor.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbChoicesOriginEditor {\n  private _displayedColumns: string[] = ['label', 'value', 'delete'];\n  get displayedColumns(): string[] { return this._displayedColumns; }\n\n  private _choicesOrigin: AjfChoicesOrigin<any>;\n  get choicesOrigin(): AjfChoicesOrigin<any> {\n    return this._choicesOrigin;\n  }\n  @Input()\n  set choicesOrigin(choicesOrigin: AjfChoicesOrigin<any>) {\n    this._choicesOrigin = choicesOrigin;\n    this.name = choicesOrigin.name;\n    this.label = choicesOrigin.label;\n\n    this.canEditChoices = isChoicesFixedOrigin(choicesOrigin);\n    this._choicesArr = choicesOrigin.choices;\n    this._choices.updateChoices(this._choicesArr);\n  }\n\n  editing: {[key: string]: boolean} = {};\n  name: string;\n  label: string;\n  canEditChoices: boolean;\n\n  private _choices: ChoicesOriginDataSource = new ChoicesOriginDataSource();\n  get choices(): ChoicesOriginDataSource { return this._choices; }\n\n  private _choicesArr: ChoicesOriginChoiceEntry[] = [];\n  get choicesArr(): ChoicesOriginChoiceEntry[] { return this._choicesArr; }\n\n  updateValue(evt: any, cell: string, _value: any, rowIdx: number): void {\n    this.editing[rowIdx + '-' + cell] = false;\n    (this._choicesArr[rowIdx] as any)[cell] = evt.target.value;\n    this._choices.updateChoices(this._choicesArr);\n  }\n\n  deleteRow(rowIdx: number): void {\n    this._choicesArr.splice(rowIdx, 1);\n    this._choices.updateChoices(this._choicesArr);\n  }\n\n  addRow(): void {\n    this._choicesArr.push({label: '', value: ''});\n    this._choices.updateChoices(this._choicesArr);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfAttachmentsOrigin, AjfChoicesOrigin, AjfField, AjfFieldType,\n  AjfFieldWithChoices, AjfForm, AjfFormStringIdentifier, AjfNode, AjfNodeGroup, AjfNodesOperation,\n  AjfNodeType, AjfRepeatingContainerNode, AjfRepeatingSlide, AjfSlide, createChoicesFixedOrigin,\n  createField, createForm, createContainerNode, createValidation, createValidationGroup,\n  createWarning, createWarningGroup, isChoicesFixedOrigin, isContainerNode, isField,\n  isFieldWithChoices, isRepeatingContainerNode, isSlidesNode, maxDigitsValidation, maxValidation,\n  minDigitsValidation, minValidation, notEmptyValidation, notEmptyWarning\n} from '@ajf/core/forms';\nimport {AjfCondition, alwaysCondition, createCondition, createFormula} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {filter, map, publishReplay, refCount, scan, withLatestFrom} from 'rxjs/operators';\n\nimport {AjfAttachmentsOriginsOperation, AjfChoicesOriginsOperation,\n  AjfFormStringIdentifierOperation} from './operations';\n\n\nexport interface AjfFormBuilderNodeTypeEntry {\n  label: string;\n  icon: {\n    fontSet: string;\n    fontIcon: string;\n  };\n  nodeType: {\n    node: AjfNodeType;\n    field?: AjfFieldType,\n  };\n  isSlide?: boolean;\n}\n\n\nexport interface AjfFormBuilderNodeEntry {\n  node: AjfNode;\n  container: AjfContainerNode | null;\n  children: AjfFormBuilderNodeEntry[];\n  content: AjfFormBuilderNodeEntry[];\n}\n\n\nexport interface AjfFormBuilderEmptySlot {\n  parent: AjfNode;\n  parentNode: number;\n}\n\n\nexport type AjfFormBuilderNode = AjfFormBuilderNodeEntry | AjfFormBuilderEmptySlot;\nexport type AjfContainerNode = AjfSlide | AjfRepeatingSlide | AjfNodeGroup;\n\nfunction getNodeContainer(c: {nodes: AjfNode[]}, node: AjfNode): {nodes: AjfNode[]} | null {\n  if (c.nodes.indexOf(node) > -1) {\n    return c;\n  }\n  const cns = c.nodes.filter(n => isContainerNode(n));\n  const len = cns.length;\n  for (let i = 0 ; i < len ; i++) {\n    const cn = getNodeContainer(<AjfContainerNode>cns[i], node);\n    if (cn != null) { return cn; }\n  }\n  return null;\n}\n\nfunction buildFormBuilderNodesSubtree(\n  nodes: AjfNode[], parent: AjfNode, ignoreConditionalBranches = false\n): AjfFormBuilderNode[] {\n  const entries: AjfFormBuilderNode[] = nodes\n    .filter(n => n.parent === parent.id)\n    .sort((n1, n2) => n1.parentNode - n2.parentNode)\n    .map(n => {\n      const children = buildFormBuilderNodesSubtree(nodes, n);\n      if (children.length === 0) {\n        children.push({parent: n, parentNode: 0});\n      }\n      return <AjfFormBuilderNodeEntry>{\n        node: n,\n        children,\n        content: buildFormBuilderNodesContent(nodes, n)\n      };\n    });\n  if (!ignoreConditionalBranches) {\n    const entriesNum = entries.length;\n    const cbs = parent.conditionalBranches.length;\n    for (let i = entriesNum ; i < cbs ; i++) {\n      entries.push({\n        parent: parent,\n        parentNode: i\n      });\n    }\n  }\n  return entries;\n}\n\nfunction buildFormBuilderNodesContent(_nodes: AjfNode[], node: AjfNode): AjfFormBuilderNode[] {\n  if (isContainerNode(node)) {\n    return buildFormBuilderNodesSubtree((<AjfContainerNode>node).nodes, node, true);\n  }\n  return [];\n}\n\n\nfunction buildFormBuilderNodesTree(nodes: AjfNode[]): (AjfFormBuilderNode | null)[] {\n  const rootNodes = nodes.filter(n => n.parent == null || n.parent === 0);\n  if (rootNodes.length === 1) {\n    const rootNode = rootNodes[0];\n    if (isSlidesNode(rootNode)) {\n      const tree: AjfFormBuilderNode[] = [];\n      tree.push(<AjfFormBuilderNodeEntry>{\n        node: rootNode,\n        container: null,\n        children: buildFormBuilderNodesSubtree(nodes, rootNode),\n        content: buildFormBuilderNodesContent(nodes, rootNode)\n      });\n      return tree;\n    }\n  } else if (rootNodes.length === 0) {\n    return [null];\n  }\n  throw new Error('Invalid form definition');\n}\n\nexport function flattenNodes(nodes: AjfNode[]): AjfNode[] {\n  let flatNodes: AjfNode[] = [];\n\n  nodes.forEach((node: AjfNode) => {\n    if (isContainerNode(node)) {\n      flatNodes = flatNodes.concat(flattenNodes((<AjfContainerNode>node).nodes));\n    }\n    flatNodes.push(node);\n  });\n\n  return flatNodes;\n}\n\nfunction getDescendants(\n  flatNodes: AjfNode[], parentNode: AjfNode, branch: number | null = null\n): AjfNode[] {\n  return branch != null ?\n    flatNodes.filter(n => n.parent === parentNode.id && n.parentNode === branch) :\n    flatNodes.filter(n => n.parent === parentNode.id);\n}\n\nfunction removeNodes(nodes: AjfNode[], ids: number[]): AjfNode[] {\n  const len = nodes.length;\n  for (let i = 0 ; i < len ; i++) {\n    const node = nodes[i];\n    if (isContainerNode(node)) {\n      const container = (<AjfContainerNode>node);\n      container.nodes = removeNodes(container.nodes, ids);\n    }\n  }\n  return nodes.filter(n => ids.indexOf(n.id) === -1);\n}\n\nfunction deleteNodeSubtree(\n  nodes: AjfNode[], parentNode: AjfNode, branch: number | null = null\n): AjfNode[] {\n  const flatNodes = flattenNodes(nodes);\n  let delNodes: AjfNode[] = [];\n  let descendants = getDescendants(flatNodes, parentNode, branch);\n  const len = descendants.length;\n  for (let i = 0 ; i < len ; i++) {\n    delNodes = delNodes.concat(getDescendants(flatNodes, descendants[i]));\n  }\n  delNodes = delNodes.concat(descendants);\n  return removeNodes(nodes, delNodes.map(n => n.id));\n}\n\nlet nodeUniqueId = 0;\n\n\n@Injectable()\nexport class AjfFormBuilderService {\n  private _availableNodeTypes: AjfFormBuilderNodeTypeEntry[] = [\n    {\n      label: 'Slide',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-slide'},\n      nodeType: {node: AjfNodeType.AjfSlide},\n      isSlide: true\n    },\n    {\n      label: 'Repeating slide',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-repeatingslide'},\n      nodeType: {node: AjfNodeType.AjfRepeatingSlide},\n      isSlide: true\n    },\n    {\n      label: 'String',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-string'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.String}\n    },\n    {\n      label: 'Text',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-text'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Text}\n    },\n    {\n      label: 'Number',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-number'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Number}\n    },\n    {\n      label: 'Boolean',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-boolean'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Boolean}\n    },\n    {\n      label: 'Single choice',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-singlechoice'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.SingleChoice}\n    },\n    {\n      label: 'Multiple choice',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-multiplechoice'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.MultipleChoice}\n    },\n    {\n      label: 'Formula',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-formula'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Formula}\n    },\n    {\n      label: 'Date',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-date'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Date}\n    },\n    {\n      label: 'Date input',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-dateinput'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.DateInput}\n    },\n    {\n      label: 'Time',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-time'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Time}\n    },\n    {\n      label: 'Table',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-table'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Table}\n    }\n  ];\n  /**\n   * Available node types\n   *\n   * @readonly\n   * @memberOf AjfFormBuilderService\n   */\n  get availableNodeTypes(): AjfFormBuilderNodeTypeEntry[] { return this._availableNodeTypes; }\n\n  private _form: BehaviorSubject<AjfForm | null> = new BehaviorSubject<AjfForm | null>(null);\n  private _formObs: Observable<AjfForm | null> = this._form.asObservable();\n  /**\n   * Current edited form stream\n   *\n   * @readonly\n   * @memberOf AjfFormBuilderService\n   */\n  get form(): Observable<AjfForm | null> { return this._formObs; }\n\n  private _attachmentsOrigins: Observable<AjfAttachmentsOrigin<any>[]>;\n  get attachmentsOrigins(): Observable<AjfAttachmentsOrigin<any>[]> {\n    return this._attachmentsOrigins;\n  }\n\n  private _choicesOrigins: Observable<AjfChoicesOrigin<any>[]>;\n  get choicesOrigins(): Observable<AjfChoicesOrigin<any>[]> {\n    return this._choicesOrigins;\n  }\n\n  private _stringIdentifier: Observable<AjfFormStringIdentifier[]>;\n  get stringIdentifier(): Observable<AjfFormStringIdentifier[]> {\n    return this._stringIdentifier;\n  }\n\n  private _nodes: Observable<AjfNode[]>;\n  get nodes(): Observable<AjfNode[]> { return this._nodes; }\n\n  private _flatNodes: Observable<AjfNode[]>;\n  get flatNodes(): Observable<AjfNode[]> {\n    return this._flatNodes;\n  }\n\n  private _flatFields: Observable<AjfField[]>;\n  get flatFields(): Observable<AjfField[]> { return this._flatFields; }\n\n  private _nodeEntriesTree: Observable<AjfFormBuilderNodeEntry[]>;\n  get nodeEntriesTree(): Observable<AjfFormBuilderNodeEntry[]> { return this._nodeEntriesTree; }\n\n  private _editedNodeEntry: BehaviorSubject<AjfFormBuilderNodeEntry | null> =\n    new BehaviorSubject<AjfFormBuilderNodeEntry | null>(null);\n  private _editedNodeEntryObs: Observable<AjfFormBuilderNodeEntry | null> =\n    this._editedNodeEntry.asObservable();\n  get editedNodeEntry(): Observable<AjfFormBuilderNodeEntry | null> {\n    return this._editedNodeEntryObs;\n  }\n\n  private _editedCondition: BehaviorSubject<AjfCondition | null> =\n    new BehaviorSubject<AjfCondition | null>(null);\n  private _editedConditionObs: Observable<AjfCondition | null> =\n    this._editedCondition.asObservable();\n  get editedCondition(): Observable<AjfCondition | null> { return this._editedConditionObs; }\n\n  private _editedChoicesOrigin: BehaviorSubject<AjfChoicesOrigin<any>|null> =\n      new BehaviorSubject<AjfChoicesOrigin<any>|null>(null);\n  private _editedChoicesOriginObs: Observable<AjfChoicesOrigin<any>|null> =\n      this._editedChoicesOrigin.asObservable();\n  get editedChoicesOrigin(): Observable<AjfChoicesOrigin<any>|null> {\n    return this._editedChoicesOriginObs;\n  }\n\n  private _beforeNodesUpdate: EventEmitter<void> = new EventEmitter<void>();\n  private _beforeNodesUpdateObs: Observable<void> = this._beforeNodesUpdate.asObservable();\n  get beforeNodesUpdate(): Observable<void> { return this._beforeNodesUpdateObs; }\n  private _afterNodeUpdate: EventEmitter<void> = new EventEmitter<void>();\n  private _afterNodeUpdateObs: Observable<void> = this._afterNodeUpdate.asObservable();\n  get afterNodeUpdate(): Observable<void> { return this._afterNodeUpdateObs; }\n\n  private _nodesUpdates: Subject<AjfNodesOperation> = new Subject<AjfNodesOperation>();\n  private _attachmentsOriginsUpdates: Subject<AjfAttachmentsOriginsOperation> =\n      new Subject<AjfAttachmentsOriginsOperation>();\n  private _choicesOriginsUpdates: Subject<AjfChoicesOriginsOperation> =\n      new Subject<AjfChoicesOriginsOperation>();\n  private _stringIdentifierUpdates: Subject<AjfFormStringIdentifierOperation> =\n      new Subject<AjfFormStringIdentifierOperation>();\n\n  private _saveNodeEntryEvent: EventEmitter<any> = new EventEmitter<any>();\n  private _deleteNodeEntryEvent: EventEmitter<AjfFormBuilderNodeEntry> =\n    new EventEmitter<AjfFormBuilderNodeEntry>();\n\n  constructor() {\n    this._initChoicesOriginsStreams();\n    this._initAttachmentsOriginsStreams();\n    this._initStringIdentifierStreams();\n    this._initNodesStreams();\n    this._initFormStreams();\n    this._initSaveNode();\n    this._initDeleteNode();\n  }\n\n  /**\n   * Sets the current edited form\n   *\n   * @param form\n   *\n   * @memberOf AjfFormBuilderService\n   */\n  setForm(form: AjfForm | null): void {\n    if (form !== this._form.getValue()) {\n      this._form.next(form);\n    }\n  }\n\n  editNodeEntry(nodeEntry: AjfFormBuilderNodeEntry): void {\n    this._editedNodeEntry.next(nodeEntry);\n  }\n\n  editCondition(condition: AjfCondition): void {\n    this._editedCondition.next(condition);\n  }\n\n  saveCurrentCondition(condition: string): void {\n    let c = this._editedCondition.getValue();\n    if (c == null) { return; }\n    c.condition = condition;\n    this._editedCondition.next(null);\n  }\n\n  cancelConditionEdit(): void {\n    this._editedChoicesOrigin.next(null);\n  }\n\n  insertNode(\n    nodeType: AjfFormBuilderNodeTypeEntry,\n    parent: AjfNode,\n    parentNode: number,\n    inContent = false\n  ): void {\n    let node: AjfNode|AjfField;\n    const id = ++nodeUniqueId;\n    const isFieldNode = nodeType.nodeType.field != null;\n    if (isFieldNode) {\n      node = createField({\n        id,\n        nodeType: AjfNodeType.AjfField,\n        fieldType: nodeType.nodeType.field!,\n        parent: parent.id,\n        parentNode,\n        name: '',\n      });\n    } else {\n      node = createContainerNode({\n        id,\n        nodeType: nodeType.nodeType.node,\n        parent: parent != null ? parent.id : 0,\n        parentNode,\n        name: '',\n        nodes: [],\n      });\n    }\n    this._beforeNodesUpdate.emit();\n    this._nodesUpdates.next((nodes: AjfNode[]): AjfNode[] => {\n      if (node.parent === 0) {\n        return [node];\n      }\n      const cn = isContainerNode(parent) && inContent ?\n        (<AjfContainerNode>parent) :\n        getNodeContainer({nodes}, parent);\n      if (cn != null) {\n        if (!isFieldNode) {\n          const replaceNodes = cn.nodes === nodes;\n          const newNodes = cn.nodes.slice(0);\n          newNodes.push(node);\n          cn.nodes = newNodes;\n          if (replaceNodes) {\n            nodes = newNodes;\n          }\n        } else {\n          cn.nodes.push(node);\n        }\n      }\n      return nodes;\n    });\n  }\n\n  saveNodeEntry(properties: any): void {\n    this._saveNodeEntryEvent.emit(properties);\n  }\n\n  cancelNodeEntryEdit(): void {\n    this._editedNodeEntry.next(null);\n  }\n\n  deleteNodeEntry(nodeEntry: AjfFormBuilderNodeEntry): void {\n    this._deleteNodeEntryEvent.next(nodeEntry);\n  }\n\n  getCurrentForm(): Observable<AjfForm> {\n    return combineLatest(\n      [this.form, this.nodes, this.attachmentsOrigins, this.choicesOrigins, this.stringIdentifier]\n    ).pipe(\n      filter(([form]) => form != null),\n      map(([form, nodes, attachmentsOrigins, choicesOrigins, stringIdentifier]) => {\n        return createForm({\n          choicesOrigins: choicesOrigins.slice(0),\n          attachmentsOrigins: attachmentsOrigins.slice(0),\n          stringIdentifier: (stringIdentifier || []).slice(0),\n          nodes: nodes.slice(0) as AjfSlide[],\n          supplementaryInformations: form!.supplementaryInformations,\n        });\n      })\n    );\n  }\n\n  editChoicesOrigin(choicesOrigin: AjfChoicesOrigin<any>): void {\n    this._editedChoicesOrigin.next(choicesOrigin);\n  }\n\n  createChoicesOrigin(): void {\n    this._editedChoicesOrigin.next(createChoicesFixedOrigin<any>({name: ''}));\n  }\n\n  cancelChoicesOriginEdit(): void {\n    this._editedChoicesOrigin.next(null);\n  }\n\n  saveChoicesOrigin(params: {label: string, name: string, choices: any[]}): void {\n    const choicesOrigin = this._editedChoicesOrigin.getValue();\n    if (choicesOrigin != null) {\n      choicesOrigin.label = params.label;\n      choicesOrigin.name = params.name;\n      if (isChoicesFixedOrigin(choicesOrigin)) {\n        choicesOrigin.choices = params.choices;\n      }\n      this._choicesOriginsUpdates.next((choicesOrigins) => {\n        const idx = choicesOrigins.indexOf(choicesOrigin);\n        if (idx > -1) {\n          choicesOrigins = [\n            ...choicesOrigins.slice(0, idx),\n            choicesOrigin,\n            ...choicesOrigins.slice(idx + 1),\n          ];\n        } else {\n          choicesOrigins = [...choicesOrigins, choicesOrigin];\n        }\n        return choicesOrigins;\n      });\n    }\n    this._editedChoicesOrigin.next(null);\n  }\n\n  saveStringIdentifier(identifier: AjfFormStringIdentifier[]): void {\n    this._stringIdentifierUpdates.next(() => [...identifier]);\n  }\n\n  private _findMaxNodeId(nodes: AjfNode[], _curMaxId = 0): number {\n    let maxId = 0;\n    nodes.forEach((n) => {\n      maxId = Math.max(maxId, n.id);\n      if (isContainerNode(n)) {\n        maxId = Math.max(maxId, this._findMaxNodeId((<AjfContainerNode>n).nodes));\n      }\n    });\n    return maxId;\n  }\n\n  private _initFormStreams(): void {\n    this._form\n      .subscribe((form: AjfForm | null) => {\n        nodeUniqueId = 0;\n        if (form != null && form.nodes != null && form.nodes.length > 0) {\n          nodeUniqueId = this._findMaxNodeId(form.nodes);\n        }\n        this._nodesUpdates.next(\n          (_nodes: AjfNode[]): AjfNode[] => {\n            return form != null && form.nodes != null ? form.nodes.slice(0) : [];\n          }\n        );\n        this._attachmentsOriginsUpdates.next(\n            (_attachmentsOrigins: AjfAttachmentsOrigin<any>[]): AjfAttachmentsOrigin<any>[] => {\n              return form != null && form.attachmentsOrigins != null ?\n                  form.attachmentsOrigins.slice(0) :\n                  [];\n            });\n        this._choicesOriginsUpdates.next(\n            (_choicesOrigins: AjfChoicesOrigin<any>[]): AjfChoicesOrigin<any>[] => {\n              return form != null && form.choicesOrigins != null ? form.choicesOrigins.slice(0) :\n                                                                   [];\n            });\n        this._stringIdentifierUpdates.next(\n            (_: AjfFormStringIdentifier[]): AjfFormStringIdentifier[] => {\n              return form != null && form.stringIdentifier != null\n                ? form.stringIdentifier.slice(0)\n                : [];\n            });\n      });\n  }\n\n  private _initChoicesOriginsStreams(): void {\n    this._choicesOrigins =\n        (<Observable<AjfChoicesOriginsOperation>>this._choicesOriginsUpdates)\n            .pipe(\n                scan((choicesOrigins: AjfChoicesOrigin<any>[], op: AjfChoicesOriginsOperation) => {\n                  return op(choicesOrigins);\n                }, []), publishReplay(1), refCount());\n  }\n\n  private _initAttachmentsOriginsStreams(): void {\n    this._attachmentsOrigins = this._attachmentsOriginsUpdates.pipe(\n      scan(\n        (attachmentsOrigins: AjfAttachmentsOrigin<any>[], op: AjfAttachmentsOriginsOperation) => {\n          return op(attachmentsOrigins);\n        }, []\n      ),\n      publishReplay(1),\n      refCount(),\n    );\n  }\n\n  private _initStringIdentifierStreams(): void {\n    this._stringIdentifier = this._stringIdentifierUpdates.pipe(\n      scan(\n        (stringIdentifier: AjfFormStringIdentifier[], op: AjfFormStringIdentifierOperation) => {\n          return op(stringIdentifier);\n        }, []\n      ),\n      publishReplay(1),\n      refCount(),\n    );\n  }\n\n  private _initNodesStreams(): void {\n    this._nodes = (<Observable<AjfNodesOperation>>this._nodesUpdates)\n                      .pipe(scan((nodes: AjfNode[], op: AjfNodesOperation) => {\n                              return op(nodes);\n                            }, []), publishReplay(1), refCount());\n\n    this._flatNodes = this._nodes.pipe(\n      map((nodes: AjfNode[]) => flattenNodes(nodes)),\n      publishReplay(1),\n      refCount()\n    );\n\n    this._flatFields = this._flatNodes.pipe(\n      map((nodes: AjfNode[]) => <AjfField[]>nodes.filter(n => !isContainerNode(n))),\n      publishReplay(1),\n      refCount()\n    );\n\n    this._nodeEntriesTree = this._nodes.pipe(\n      map(nodes => <AjfFormBuilderNodeEntry[]>buildFormBuilderNodesTree(nodes)),\n      publishReplay(1),\n      refCount()\n    );\n  }\n\n  private _initSaveNode(): void {\n    this._saveNodeEntryEvent\n        .pipe(\n            withLatestFrom(this.editedNodeEntry, this.choicesOrigins, this.attachmentsOrigins),\n            filter(([_, nodeEntry]) => nodeEntry != null),\n            map(([properties, nodeEntry]) => {\n              this._beforeNodesUpdate.emit();\n              nodeEntry = nodeEntry!;\n              const origNode = nodeEntry.node;\n              const node = deepCopy(origNode);\n              node.id = nodeEntry.node.id;\n              node.name = properties.name;\n              node.label = properties.label;\n              node.visibility = properties.visibility != null ?\n                  createCondition({condition: properties.visibility}) :\n                  null;\n\n              const oldConditionalBranches = node.conditionalBranches.length;\n              node.conditionalBranches = properties.conditionalBranches != null ?\n                  properties.conditionalBranches.map(\n                      (condition: string) => createCondition({condition})) :\n                  [alwaysCondition()];\n              const newConditionalBranches = node.conditionalBranches.length;\n\n              if (isRepeatingContainerNode(node)) {\n                const repNode = <AjfRepeatingContainerNode>node;\n                repNode.formulaReps = properties.formulaReps != null ?\n                    createFormula({formula: properties.formulaReps}) :\n                    undefined;\n                repNode.minReps = properties.minReps;\n                repNode.maxReps = properties.maxReps;\n              }\n\n              if (isField(node)) {\n                const field = node as AjfField;\n                field.description = properties.description;\n                field.defaultValue = properties.defaultValue;\n                field.formula = properties.formula != null ?\n                    createFormula({formula: properties.formula}) :\n                    undefined;\n                const forceValue = properties.value;\n                const notEmpty = properties.notEmpty;\n                const validationConditions = properties.validationConditions;\n                let minValue: number|null = parseInt(properties.minValue, 10);\n                let maxValue: number|null = parseInt(properties.maxValue, 10);\n                let minDigits: number|null = parseInt(properties.minDigits, 10);\n                let maxDigits: number|null = parseInt(properties.maxDigits, 10);\n                if (isNaN(minValue)) {\n                  minValue = null;\n                }\n                if (isNaN(maxValue)) {\n                  maxValue = null;\n                }\n                if (isNaN(minDigits)) {\n                  minDigits = null;\n                }\n                if (isNaN(maxDigits)) {\n                  maxDigits = null;\n                }\n                if (forceValue != null || notEmpty != null ||\n                    (validationConditions != null && validationConditions.length > 0) ||\n                    minValue != null || maxValue != null || minDigits != null ||\n                    maxDigits != null) {\n                  const validation = field.validation || createValidationGroup({});\n                  validation.forceValue = forceValue;\n                  validation.notEmpty = notEmpty ? notEmptyValidation() : undefined;\n                  validation.minValue = minValue != null ? minValidation(minValue) : undefined;\n                  validation.maxValue = maxValue != null ? maxValidation(maxValue) : undefined;\n                  validation.minDigits =\n                      minDigits != null ? minDigitsValidation(minDigits) : undefined;\n                  validation.maxDigits =\n                      maxDigits != null ? maxDigitsValidation(maxDigits) : undefined;\n                  validation.conditions =\n                      (validationConditions ||\n                       []).map((c: {condition: string, errorMessage: string}) => createValidation({\n                                 condition: c.condition,\n                                 errorMessage: c.errorMessage\n                               }));\n                  field.validation = validation;\n                } else {\n                  field.validation = undefined;\n                }\n                const notEmptyWarn = properties.notEmptyWarning;\n                const warningConditions = properties.warningConditions;\n                if (notEmptyWarn != null ||\n                    (warningConditions != null && warningConditions.length > 0)) {\n                  const warning = field.warning || createWarningGroup({});\n                  warning.notEmpty = notEmptyWarn ? notEmptyWarning() : undefined;\n                  warning.conditions =\n                      (warningConditions ||\n                       []).map((w: {condition: string, warningMessage: string}) => createWarning({\n                                 condition: w.condition,\n                                 warningMessage: w.warningMessage\n                               }));\n                  field.warning = warning;\n                } else {\n                  field.warning = undefined;\n                }\n                field.nextSlideCondition = properties.nextSlideCondition != null ?\n                    createCondition({condition: properties.nextSlideCondition}) :\n                    undefined;\n                field.size = properties.size;\n                field.defaultValue = properties.defaultValue;\n\n                if (isFieldWithChoices(field)) {\n                  const fwc = <AjfFieldWithChoices<any>>field;\n                  (fwc as any).choicesOriginRef = properties.choicesOriginRef;\n                  fwc.forceExpanded = properties.forceExpanded;\n                  fwc.forceNarrow = properties.forceNarrow;\n                  fwc.triggerConditions = (properties.triggerConditions ||\n                                           []).map((t: string) => createCondition({condition: t}));\n                }\n              }\n\n              this._editedNodeEntry.next(null);\n\n              return (nodes: AjfNode[]): AjfNode[] => {\n                let cn = getNodeContainer({nodes}, origNode);\n                if (cn != null) {\n                  // TODO: @trik check this, was always true?\n                  // if (cn instanceof AjfNode) {\n                  const replaceNodes = cn.nodes === nodes;\n                  const idx = cn.nodes.indexOf(origNode);\n                  let newNodes = cn.nodes.slice(0, idx);\n                  newNodes.push(node);\n                  newNodes = newNodes.concat(cn.nodes.slice(idx + 1));\n                  cn.nodes = newNodes;\n                  if (replaceNodes) {\n                    nodes = newNodes;\n                  } else {\n                    nodes = nodes.slice(0);\n                  }\n                  // } else {\n                  //   const idx = nodes.indexOf(origNode);\n                  //   nodes = nodes.slice(0, idx).concat([node]).concat(nodes.slice(idx + 1));\n                  // }\n                  if (newConditionalBranches < oldConditionalBranches) {\n                    for (let i = newConditionalBranches; i < oldConditionalBranches; i++) {\n                      nodes = deleteNodeSubtree(nodes, node, i);\n                    }\n                  }\n                }\n                return nodes;\n              };\n            }))\n        .subscribe(this._nodesUpdates);\n  }\n\n  private _initDeleteNode(): void {\n    (<Observable<AjfFormBuilderNodeEntry>>this._deleteNodeEntryEvent).pipe(\n      map((nodeEntry: AjfFormBuilderNodeEntry) => {\n        this._beforeNodesUpdate.emit();\n        return (nodes: AjfNode[]): AjfNode[] => {\n          const node = nodeEntry.node;\n          let cn = getNodeContainer({nodes}, node);\n          if (cn != null) {\n            const replaceNodes = cn.nodes === nodes;\n            const idx = cn.nodes.indexOf(node);\n            let newNodes = cn.nodes.slice(0, idx);\n            newNodes = newNodes.concat(cn.nodes.slice(idx + 1));\n            cn.nodes = newNodes;\n            if (replaceNodes) {\n              nodes = newNodes;\n            } else {\n              nodes = nodes.slice(0);\n            }\n            nodes = deleteNodeSubtree(nodes, node);\n          }\n          return nodes;\n        };\n      })\n    ).subscribe(this._nodesUpdates);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin} from '@ajf/core/forms';\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {AjfFbChoicesOriginEditor} from './choices-origin-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  selector: 'ajf-fb-choices-origin-editor-dialog',\n  templateUrl: 'choices-origin-editor-dialog.html',\n  styleUrls: ['choices-origin-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbChoicesOriginEditorDialog {\n  @ViewChild(AjfFbChoicesOriginEditor, {static: false}) editor: AjfFbChoicesOriginEditor;\n\n  private _choicesOrigin: Observable<AjfChoicesOrigin<any>>;\n  get choicesOrigin(): Observable<AjfChoicesOrigin<any>> {\n    return this._choicesOrigin;\n  }\n\n  constructor(private _service: AjfFormBuilderService) {\n    this._choicesOrigin = this._service.editedChoicesOrigin.pipe(\n      filter(c => c != null),\n      map(c => c!)\n    );\n  }\n\n  saveChoicesOrigin(): void {\n    this._service.saveChoicesOrigin({\n      label: this.editor.label,\n      name: this.editor.name,\n      choices: this.editor.choicesArr\n    });\n  }\n\n  cancelChoicesOriginEdit(): void {\n    this._service.cancelChoicesOriginEdit();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField, AjfFieldType, AjfValidationService} from '@ajf/core/forms';\nimport {AjfExpressionUtils} from '@ajf/core/models';\nimport {AjfMonacoEditor} from '@ajf/material/monaco-editor';\nimport {\n  ChangeDetectionStrategy, Component, Input, ViewChild, ViewEncapsulation\n} from '@angular/core';\n\ndeclare var monaco: any;\n\n@Component({\n  selector: 'ajf-condition-editor',\n  templateUrl: 'fb-condition-editor.html',\n  styleUrls: ['fb-condition-editor.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class AjfFbConditionEditor {\n  @ViewChild(AjfMonacoEditor, {static: true}) monacoEditor: AjfMonacoEditor;\n\n  private _fields: AjfField[];\n  get fields(): AjfField[] { return this._fields; }\n  @Input() set fields(fields: AjfField[]) {\n    this._fields = fields;\n    this._updateVariables();\n  }\n  @Input() condition: string;\n\n  editedValue: string;\n\n  constructor(_: AjfValidationService) { }\n\n  insertVariable(variable: string): void {\n    if (this.monacoEditor != null && this.monacoEditor.editor != null) {\n      const editor = this.monacoEditor.editor;\n      let value: string[] = editor.getValue().split('\\n');\n      let position: {column: number, lineNumber: number} = editor.getPosition();\n      const ln = position.lineNumber - 1;\n      let line = value[ln];\n      let col = position.column - 1;\n      line = line.substring(0, col) + variable + line.substring(col);\n      value[ln] = line;\n      position.column += variable.length;\n      this.monacoEditor.value = value.join('\\n');\n      editor.setPosition(position);\n      editor.focus();\n      this.editedValue = editor.getValue();\n    }\n  }\n\n  onEditorInit(): void {\n    monaco.languages.typescript.javascriptDefaults.setDiagnosticsOptions({\n      noSemanticValidation: false,\n      noSyntaxValidation: false\n    });\n\n    monaco.languages.typescript.javascriptDefaults.setCompilerOptions({\n      target: monaco.languages.typescript.ScriptTarget.ES2015,\n      allowNonTsExtensions: true,\n      allowJs: true,\n      module: monaco.languages.typescript.ModuleKind.None\n    });\n\n    try {\n      monaco.languages.typescript.javascriptDefaults.addExtraLib(\n        '', 'condition-editor-variables.d.ts'\n      );\n    } catch (e) {\n      monaco.languages.typescript.javascriptDefaults\n          ._extraLibs['condition-editor-variables.d.ts'] = '';\n    }\n\n    try {\n      monaco.languages.typescript.javascriptDefaults.addExtraLib(\n        '', 'condition-editor-functions.d.ts'\n      );\n    } catch (e) {\n      monaco.languages.typescript.javascriptDefaults\n          ._extraLibs['condition-editor-functions.d.ts'] = '';\n    }\n\n    this._updateVariables();\n    this._updateFunctions();\n  }\n\n  private _updateVariables(): void {\n    if (this._fields == null) { return; }\n    try {\n      monaco.languages.typescript.javascriptDefaults\n        ._extraLibs['condition-editor-variables.d.ts'] =\n          this._fields\n            .map((field: AjfField) => {\n              return `declare const ${field.name}: ${this._fieldVarType(field.fieldType)};`;\n            })\n            .join('\\n');\n    } catch (e) { }\n  }\n\n  private _updateFunctions(): void {\n    try {\n      monaco.languages.typescript.javascriptDefaults._extraLibs['condition-editor-functions.d.ts'] =\n          AjfExpressionUtils.UTIL_FUNCTIONS;\n    } catch (e) { }\n  }\n\n  private _fieldVarType(fieldType: AjfFieldType): string | null {\n    switch (fieldType) {\n      case AjfFieldType.Boolean:\n      return 'boolean';\n      case AjfFieldType.Date:\n      case AjfFieldType.DateInput:\n      case AjfFieldType.Time:\n      return 'Date';\n      case AjfFieldType.Empty:\n      return 'void';\n      case AjfFieldType.Formula:\n      return 'number';\n      case AjfFieldType.MultipleChoice:\n      case AjfFieldType.SingleChoice:\n      return 'any';\n      case AjfFieldType.Number:\n      return 'number';\n      case AjfFieldType.Table:\n      return 'Array';\n      case AjfFieldType.String:\n      case AjfFieldType.Text:\n      return 'string';\n    }\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AjfField} from '@ajf/core/forms';\n\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  selector: 'ajf-condition-editor-dialog',\n  templateUrl: 'condition-editor-dialog.html',\n  styleUrls: ['condition-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbConditionEditorDialog {\n  @ViewChild(AjfFbConditionEditor, {static: false}) editor: AjfFbConditionEditor;\n\n  private _fields: Observable<AjfField[]>;\n  get fields(): Observable<AjfField[]> { return this._fields; }\n\n  condition: string;\n\n  constructor(\n    service: AjfFormBuilderService,\n    public dialogRef: MatDialogRef<AjfFbConditionEditorDialog>\n  ) {\n    this._fields = service.flatFields.pipe(\n      map((fields: AjfField[]) => fields.sort((f1, f2) => f1.name.localeCompare(f2.name)))\n    );\n  }\n\n  saveCondition(): void {\n    if (this.editor == null) { return; }\n    const newValue = this.editor.editedValue;\n    this.dialogRef.close(newValue);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormStringIdentifier} from '@ajf/core/forms';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy,\n  ViewEncapsulation} from '@angular/core';\nimport {MatAutocompleteSelectedEvent} from '@angular/material/autocomplete';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Observable, Subscription} from 'rxjs';\nimport {map, shareReplay} from 'rxjs/operators';\n\nimport {AjfFormBuilderService} from './form-builder-service';\n\n@Component({\n  selector: 'ajf-fb-string-identifier-dialog',\n  templateUrl: 'string-identifier-dialog.html',\n  styleUrls: ['./string-identifier-dialog.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfFbStringIdentifierDialogComponent implements OnDestroy {\n  readonly dataSource: MatTableDataSource<AjfFormStringIdentifier>\n      = new MatTableDataSource<AjfFormStringIdentifier>();\n  readonly displayedColumns = ['label', 'value', 'delete'];\n  readonly fields$: Observable<string[]>;\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  private _stringIdentifierSub: Subscription = Subscription.EMPTY;\n\n  constructor(private _service: AjfFormBuilderService, private _cdr: ChangeDetectorRef) {\n    this._stringIdentifierSub = _service.stringIdentifier.subscribe(identifier => {\n      this.dataSource.data = [...identifier];\n    });\n    this.fields$ = _service.flatFields.pipe(\n      map(fields =>\n        fields.sort((f1, f2) => f1.name.localeCompare(f2.name)).map(f => f.name)\n          .filter(f => f.length > 0)),\n      shareReplay(1),\n    );\n  }\n\n  addRow(): void {\n    this.dataSource.data = [...this.dataSource.data, {label: '', value: []}];\n  }\n\n  deleteRow(rowIdx: number): void {\n    this.dataSource.data = [\n      ...this.dataSource.data.slice(0, rowIdx),\n      ...this.dataSource.data.slice(rowIdx + 1),\n    ];\n  }\n\n  addValue(\n    row: AjfFormStringIdentifier, evt: MatChipInputEvent, valueInput: HTMLInputElement\n  ): void {\n    if (evt.value.length === 0) { return; }\n    row.value = [...row.value, evt.value];\n    valueInput.value = '';\n    this._cdr.markForCheck();\n  }\n\n  removeValue(row: AjfFormStringIdentifier, value: string): void {\n    const idx = row.value.indexOf(value);\n    if (idx > -1) {\n      row.value = [\n        ...row.value.slice(0, idx),\n        ...row.value.slice(idx + 1),\n      ];\n      this._cdr.markForCheck();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._stringIdentifierSub.unsubscribe();\n  }\n\n  saveStringIdentifier(): void {\n    this._service.saveStringIdentifier(this.dataSource.data);\n  }\n\n  selected(\n    row: AjfFormStringIdentifier, evt: MatAutocompleteSelectedEvent\n  ): void {\n    row.value = [...row.value, evt.option.value];\n    this._cdr.markForCheck();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin, AjfForm} from '@ajf/core/forms';\nimport {AjfCondition} from '@ajf/core/models';\nimport {\n  AfterContentInit, AfterViewChecked, ChangeDetectionStrategy, Component, ElementRef, EventEmitter,\n  Input, OnDestroy, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {Observable, Subscription} from 'rxjs';\nimport {sample} from 'rxjs/operators';\n\nimport {AjfFbChoicesOriginEditorDialog} from './choices-origin-editor-dialog';\nimport {AjfFbConditionEditorDialog} from './condition-editor-dialog';\nimport {\n  AjfFormBuilderNodeEntry, AjfFormBuilderNodeTypeEntry, AjfFormBuilderService\n} from './form-builder-service';\nimport {AjfFbStringIdentifierDialogComponent} from './string-identifier-dialog';\n\n@Component({\n  selector: 'ajf-form-builder',\n  templateUrl: 'form-builder.html',\n  styleUrls: ['form-builder.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class AjfFormBuilder implements AfterViewChecked, AfterContentInit, OnDestroy {\n  @ViewChild('designer', {static: true}) designerCont: ElementRef;\n\n  private _form: AjfForm;\n  get form(): AjfForm { return this._form; }\n  @Input() set form(form: AjfForm) {\n    if (this._form !== form) {\n      this._form = form;\n      if (this._init) {\n        this._setCurrentForm();\n      }\n    }\n  }\n\n  private _nodeTypes: AjfFormBuilderNodeTypeEntry[];\n  get nodeTypes(): AjfFormBuilderNodeTypeEntry[] { return this._nodeTypes; }\n\n  private _nodeEntriesTree: Observable<AjfFormBuilderNodeEntry[]>;\n  get nodeEntriesTree(): Observable<AjfFormBuilderNodeEntry[]> { return this._nodeEntriesTree; }\n\n  private _choicesOrigins: Observable<AjfChoicesOrigin<any>[]>;\n  get choicesOrigins(): Observable<AjfChoicesOrigin<any>[]> {\n    return this._choicesOrigins;\n  }\n\n  private _vc: EventEmitter<void> = new EventEmitter<void>();\n\n  private _init = false;\n  private _editConditionSub: Subscription = Subscription.EMPTY;\n  private _editConditionDialog: MatDialogRef<AjfFbConditionEditorDialog> | null;\n  private _beforeNodesUpdateSub: Subscription = Subscription.EMPTY;\n  private _editChoicesOriginSub: Subscription = Subscription.EMPTY;\n  private _editChoicesOriginDialog: MatDialogRef<AjfFbChoicesOriginEditorDialog> | null;\n  private _stringIdentifierDialog: MatDialogRef<AjfFbStringIdentifierDialogComponent> | null;\n  private _stringIdentifierSub: Subscription = Subscription.EMPTY;\n\n  private _lastScrollTop: number;\n\n  constructor(\n    private _service: AjfFormBuilderService,\n    private _dialog: MatDialog\n  ) {\n    this._nodeTypes = _service.availableNodeTypes;\n    this._nodeEntriesTree = _service.nodeEntriesTree;\n    this._choicesOrigins = _service.choicesOrigins;\n    this._editConditionSub = this._service.editedCondition\n      .subscribe((condition: AjfCondition | null) => {\n        if (this._editConditionDialog != null) {\n          this._editConditionDialog.close();\n          this._editConditionDialog = null;\n        }\n        if (condition != null) {\n          this._editConditionDialog = this._dialog.open(\n            AjfFbConditionEditorDialog, {disableClose: true}\n          );\n        }\n      });\n    this._editChoicesOriginSub =\n        this._service.editedChoicesOrigin.subscribe((choicesOrigin: AjfChoicesOrigin<any>|null) => {\n          if (this._editChoicesOriginDialog != null) {\n            this._editChoicesOriginDialog.close();\n            this._editChoicesOriginDialog = null;\n          }\n          if (choicesOrigin != null) {\n            this._editChoicesOriginDialog =\n                this._dialog.open(AjfFbChoicesOriginEditorDialog, {disableClose: true});\n          }\n        });\n\n    this._beforeNodesUpdateSub = this._service.beforeNodesUpdate\n      .subscribe(() => {\n        if (this.designerCont == null) { return; }\n        this._lastScrollTop = this.designerCont.nativeElement.scrollTop;\n      });\n\n    this.nodeEntriesTree\n      .pipe(sample((<Observable<void>>this._vc)))\n      .subscribe(() => {\n        if (this.designerCont == null) { return; }\n        this.designerCont.nativeElement.scrollTop = this._lastScrollTop;\n      });\n\n    this._stringIdentifierSub = this._service.stringIdentifier.subscribe(() => {});\n  }\n\n  ngAfterViewChecked(): void {\n    this._vc.emit();\n  }\n\n  ngAfterContentInit(): void {\n    this._setCurrentForm();\n    this._init = true;\n  }\n\n  ngOnDestroy(): void {\n    this._editConditionSub.unsubscribe();\n    this._beforeNodesUpdateSub.unsubscribe();\n    this._editChoicesOriginSub.unsubscribe();\n    this._stringIdentifierSub.unsubscribe();\n    this._service.setForm(null);\n  }\n\n  createChoicesOrigin(): void {\n    this._service.createChoicesOrigin();\n  }\n\n  disableDropPredicate(): boolean {\n    return false;\n  }\n\n  editChoicesOrigin(choicesOrigin: AjfChoicesOrigin<any>): void {\n    this._service.editChoicesOrigin(choicesOrigin);\n  }\n\n  editStringIdentifier(): void {\n    if (this._stringIdentifierDialog != null) {\n      this._stringIdentifierDialog.close();\n      this._stringIdentifierDialog = null;\n    }\n    this._stringIdentifierDialog =\n        this._dialog.open(AjfFbStringIdentifierDialogComponent, {\n          disableClose: true,\n          width: '60%',\n          height: '60%'\n        });\n  }\n\n  private _setCurrentForm(): void {\n    this._service.setForm(this._form);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {isContainerNode} from '@ajf/core/forms';\nimport {CdkDrag, CdkDragDrop, CdkDropList} from '@angular/cdk/drag-drop';\nimport {\n  AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, Input, OnDestroy, QueryList,\n  ViewChildren, ViewEncapsulation\n} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\n\nimport {AjfFbBranchLine} from './branch-line';\nimport {\n  AjfFormBuilderEmptySlot, AjfFormBuilderNode, AjfFormBuilderNodeEntry,\n  AjfFormBuilderNodeTypeEntry, AjfFormBuilderService\n} from './form-builder-service';\n\n\nconst branchColors: string [] = [\n  '#F44336', // RED\n  '#4CAF50', // GREEN\n  '#3F51B5', // INDIGO\n  '#FFC107', // AMBER\n  '#795548', // BROWN\n];\n\n\n@Component({\n  selector: 'ajf-fb-node-entry',\n  templateUrl: 'node-entry.html',\n  styleUrls: ['node-entry.css'],\n  host: {\n    '(window.resize)': 'onResize()'\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbNodeEntry implements AfterViewInit, OnDestroy {\n  @ViewChildren(AjfFbBranchLine) branchLines: QueryList<AjfFbBranchLine>;\n  @ViewChildren(AjfFbNodeEntry, {read: ElementRef}) childEntries: QueryList<ElementRef>;\n\n  private _hasContent = false;\n  get hasContent(): boolean { return this._hasContent; }\n\n  private _isFirst = false;\n  get isFirst(): boolean { return this._isFirst; }\n  @Input() set isFirst(isFirst: boolean) { this._isFirst = isFirst; }\n\n  private _isNodeEntry = false;\n  get isNodeEntry(): boolean { return this._isNodeEntry; }\n\n  private _nodeEntry: AjfFormBuilderNode;\n  get nodeEntry(): AjfFormBuilderNode { return this._nodeEntry; }\n  @Input() set nodeEntry(nodeEntry: AjfFormBuilderNode) {\n    this._nodeEntry = nodeEntry;\n    if (nodeEntry != null && (<AjfFormBuilderNodeEntry>nodeEntry).node !== void 0) {\n      const ne = <AjfFormBuilderNodeEntry>nodeEntry;\n      this._isNodeEntry = true;\n      const node = ne.node;\n      this._hasContent = node != null && isContainerNode(node);\n    } else {\n      this._isNodeEntry = false;\n      this._hasContent = false;\n    }\n  }\n\n  private _level = 0;\n  get level(): number { return this._level; }\n  @Input() set level(value: number) { this._level = value; }\n\n  get realNodeEntry(): AjfFormBuilderNodeEntry {\n    return this._nodeEntry as AjfFormBuilderNodeEntry;\n  }\n\n  private _branchColors: string[] = branchColors.slice(0);\n  get branchColors(): string[] { return this._branchColors; }\n\n  private _dropZones: string[] = ['fbdz-node'];\n  get dropZones(): string[] { return this._dropZones; }\n\n  private _slideDropZones: string[] = ['fbdz-slide'];\n  get slideDropZones(): string[] { return this._slideDropZones; }\n\n  private _originOffset = 0;\n  get originOffset(): number { return this._originOffset; }\n  @Input() set originOffset(originOffset: number) {\n    this._originOffset = originOffset;\n    this._originLeftMargin = `${this._originOffset * 4}px`;\n  }\n  private _originLeftMargin = '0';\n  get originLeftMargin(): string { return this._originLeftMargin; }\n\n  private _firstBranchColor = branchColors[0];\n  get firstBranchColor(): string { return this._firstBranchColor; }\n  @Input() set firstBranchColor(firstBranchColor: string) {\n    const idx = branchColors.indexOf(firstBranchColor);\n    if (idx > 0) {\n      this._firstBranchColor = firstBranchColor;\n      this._branchColors = branchColors.slice(idx).concat(branchColors.slice(0, idx));\n    } else {\n      this._firstBranchColor = branchColors[0];\n      this._branchColors = branchColors.slice(0);\n    }\n  }\n\n  private _currentEditedNode: Observable<AjfFormBuilderNodeEntry | null>;\n  get currentEditedNode(): Observable<AjfFormBuilderNodeEntry | null> {\n    return this._currentEditedNode;\n  }\n\n  private _branchLinesSubscription: Subscription = Subscription.EMPTY;\n  private _childEntriesSubscription: Subscription = Subscription.EMPTY;\n\n  constructor(private _service: AjfFormBuilderService) {\n    this._currentEditedNode = this._service.editedNodeEntry;\n  }\n\n  onResize(): void {\n  }\n\n  edit(): void {\n    if (this.nodeEntry == null || !this.isNodeEntry) { return; }\n    this._service.editNodeEntry(<AjfFormBuilderNodeEntry>this.nodeEntry);\n  }\n\n  delete(): void {\n    if (this.nodeEntry == null || !this.isNodeEntry) { return; }\n    this._service.deleteNodeEntry(<AjfFormBuilderNodeEntry>this.nodeEntry);\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this._updateBranchHeights());\n    this._childEntriesSubscription = this.childEntries.changes\n      .subscribe(() => {\n        this._updateBranchHeights();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this._branchLinesSubscription.unsubscribe();\n    this._childEntriesSubscription.unsubscribe();\n  }\n\n  onDropSuccess(evt: CdkDragDrop<AjfFormBuilderNodeTypeEntry>, content = false): void {\n    const dd = evt.item.data as AjfFormBuilderNodeTypeEntry;\n    if (this._nodeEntry == null) {\n      this._service.insertNode(dd, null as any, 0, content);\n      return;\n    }\n    if (dd.nodeType !== void 0 && (!this.isNodeEntry || (this.isNodeEntry && content))) {\n      const emptySlot = content ?\n        {parent: (<AjfFormBuilderNodeEntry>this.nodeEntry).node, parentNode: 0} :\n        <AjfFormBuilderEmptySlot>this._nodeEntry;\n      this._service.insertNode(\n        <AjfFormBuilderNodeTypeEntry>dd,\n        emptySlot.parent,\n        emptySlot.parentNode,\n        content\n      );\n    }\n  }\n\n  disableSlideDropPredicate(item: CdkDrag<AjfFormBuilderNodeTypeEntry>): boolean {\n    return !item.data.isSlide;\n  }\n\n  emptyAreaDropPredicate(): (item: CdkDrag, _drop: CdkDropList) => boolean {\n    return (item: CdkDrag, _drop: CdkDropList): boolean => {\n      if (this._level > 0) {\n        return !item.data.isSlide;\n      }\n      return item.data.isSlide || false;\n    };\n  }\n\n  private _updateBranchHeights(): void {\n    if (\n      this.nodeEntry == null || !this.isNodeEntry\n      || this.branchLines == null || this.childEntries == null) { return; }\n    const nodeEntry = <AjfFormBuilderNodeEntry>this.nodeEntry;\n    const branchLines: AjfFbBranchLine[] = this.branchLines.toArray();\n    const sliceIdx = nodeEntry.content != null ? nodeEntry.content.length : 0;\n    const childEntries: ElementRef[] = this.childEntries.toArray().slice(sliceIdx);\n\n    if (branchLines.length != childEntries.length) { return; }\n\n    branchLines.forEach((bl: AjfFbBranchLine, idx: number) => {\n      const ce: ElementRef  = childEntries[idx];\n      bl.height = ce.nativeElement.offsetTop;\n    });\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AjfField} from '@ajf/core/forms';\n\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  selector: 'ajf-fb-validation-condition-editor-dialog',\n  templateUrl: 'validation-condition-editor-dialog.html',\n  styleUrls: ['validation-condition-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbValidationConditionEditorDialog {\n  @ViewChild(AjfFbConditionEditor, {static: false}) editor: AjfFbConditionEditor;\n\n  private _fields: Observable<AjfField[]>;\n  get fields(): Observable<AjfField[]> { return this._fields; }\n\n  condition: string;\n  errorMessage: string;\n\n  constructor(\n    service: AjfFormBuilderService,\n    public dialogRef: MatDialogRef<AjfFbValidationConditionEditorDialog>\n  ) {\n    this._fields = service.flatFields.pipe(\n      map((fields: AjfField[]) => fields.sort((f1, f2) => f1.name.localeCompare(f2.name)))\n    );\n  }\n\n  saveCondition(): void {\n    if (this.editor == null) { return; }\n    const newValue = this.editor.editedValue;\n    this.dialogRef.close({condition: newValue, errorMessage: this.errorMessage});\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AjfField} from '@ajf/core/forms';\n\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  selector: 'ajf-fb-warning-condition-editor-dialog',\n  templateUrl: 'warning-condition-editor-dialog.html',\n  styleUrls: ['warning-condition-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbWarningConditionEditorDialog {\n  @ViewChild(AjfFbConditionEditor, {static: false}) editor: AjfFbConditionEditor;\n\n  private _fields: Observable<AjfField[]>;\n  get fields(): Observable<AjfField[]> { return this._fields; }\n\n  condition: string;\n  warningMessage: string;\n\n  constructor(\n    service: AjfFormBuilderService,\n    public dialogRef: MatDialogRef<AjfFbWarningConditionEditorDialog>\n  ) {\n    this._fields = service.flatFields.pipe(\n      map((fields: AjfField[]) => fields.sort((f1, f2) => f1.name.localeCompare(f2.name)))\n    );\n  }\n\n  saveCondition(): void {\n    if (this.editor == null) { return; }\n    const newValue = this.editor.editedValue;\n    this.dialogRef.close({condition: newValue, warningMessage: this.warningMessage});\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfChoicesOrigin, AjfField, AjfFieldWithChoices, AjfNode, AjfNumberField,\n  AjfRepeatingContainerNode, isField, isFieldWithChoices, isNumberField,\n  isRepeatingContainerNode\n} from '@ajf/core/forms';\nimport {AjfCondition, alwaysCondition, neverCondition} from '@ajf/core/models';\nimport {\n  ChangeDetectionStrategy, Component, EventEmitter, OnDestroy, ViewEncapsulation\n} from '@angular/core';\nimport {AbstractControl, FormBuilder, FormGroup, ValidatorFn, Validators} from '@angular/forms';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {Observable, Subscription} from 'rxjs';\nimport {\n  distinctUntilChanged, filter, map, publishReplay, refCount, withLatestFrom\n} from 'rxjs/operators';\n\nimport {AjfFbConditionEditorDialog} from './condition-editor-dialog';\nimport {AjfFormBuilderNodeEntry, AjfFormBuilderService} from './form-builder-service';\nimport {AjfFbValidationConditionEditorDialog} from './validation-condition-editor-dialog';\nimport {AjfFbWarningConditionEditorDialog} from './warning-condition-editor-dialog';\n\n\nfunction checkRepsValidity(c: AbstractControl): {[key: string]: any} | null {\n  const minReps = c.value.minReps;\n  const maxReps = c.value.maxReps;\n  if (minReps != null && maxReps != null && minReps > maxReps) {\n    return {\n      reps: 'Min repetions cannot be greater than max repetitions'\n    };\n  }\n  return null;\n}\n\nfunction checkValueLimitsValidity(c: AbstractControl): {[key: string]: any} | null {\n  const minValue = c.value.minValue;\n  const maxValue = c.value.maxValue;\n  if (minValue != null && maxValue != null && minValue > maxValue) {\n    return {\n      valueLimit: 'Min value cannot be greater than max value'\n    };\n  }\n  return null;\n}\n\nfunction checkDigitsValidity(c: AbstractControl): {[key: string]: any} | null {\n  const minDigits = c.value.minDigits;\n  const maxDigits = c.value.maxDigits;\n  if (minDigits != null && maxDigits != null && minDigits > maxDigits) {\n    return {\n      digits: 'Min digits cannot be greater than max digits'\n    };\n  }\n  return null;\n}\n\nexport interface ValidationCondition {\n  condition: string;\n  errorMessage: string;\n}\n\nexport interface WarningCondition {\n  condition: string;\n  warningMessage: string;\n}\n\n\n@Component({\n  selector: 'ajf-fb-node-properties',\n  templateUrl: 'node-properties.html',\n  styleUrls: ['node-properties.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbNodeProperties implements OnDestroy {\n  private _fieldSizes: {label: string, value: string}[] = [\n    {label: 'Normal', value: 'normal'},\n    {label: 'Small', value: 'small'},\n    {label: 'Smaller', value: 'smaller'},\n    {label: 'Tiny', value: 'tiny'},\n    {label: 'Mini', value: 'mini'}\n  ];\n  get fieldSizes(): {label: string, value: string}[] { return this._fieldSizes; }\n\n  private _nodeEntry: Observable<AjfFormBuilderNodeEntry | null>;\n  get nodeEntry(): Observable<AjfFormBuilderNodeEntry | null> { return this._nodeEntry; }\n\n  private _choicesOrigins: AjfChoicesOrigin<any>[] = [];\n  get choicesOrigins(): AjfChoicesOrigin<any>[] {\n    return this._choicesOrigins;\n  }\n\n  private _enabled: Observable<boolean>;\n  get enabled(): Observable<boolean> { return this._enabled; }\n\n  private _propertiesForm: Observable<FormGroup>;\n  get propertiesForm(): Observable<FormGroup> { return this._propertiesForm; }\n\n  private _hasChoices: Observable<boolean>;\n  get hasChoices(): Observable<boolean> { return this._hasChoices; }\n\n  private _curVisibility: string | null;\n  get curVisibility(): string | null { return this._curVisibility; }\n\n  private _curFormulaReps: string | null;\n  get curFormulaReps(): string | null { return this._curFormulaReps; }\n\n  private _curChoicesFilter: string;\n  get curChoicesFilter(): string { return this._curChoicesFilter; }\n\n  private _curForceValue: string | null;\n  get curForceValue(): string | null { return this._curForceValue; }\n\n  private _curFormula: string | null;\n  get curFormula(): string | null { return this._curFormula; }\n\n  private _conditionalBranches: string[] = [];\n  get conditionalBranches(): string[] { return this._conditionalBranches; }\n\n  private _validationConditions: ValidationCondition[] = [];\n  get validationConditions(): ValidationCondition[] { return this._validationConditions; }\n\n  private _warningConditions: WarningCondition[] = [];\n  get warningConditions(): WarningCondition[] { return this._warningConditions; }\n\n  private _nextSlideCondition: string;\n  get nextSlideCondition(): string { return this._nextSlideCondition; }\n\n  private _triggerConditions: string[];\n  get triggerConditions(): string[] { return this._triggerConditions; }\n\n  isRepeatingContainerNode: (nodeEntry: AjfFormBuilderNodeEntry|null) => boolean = (nodeEntry) => {\n    return nodeEntry != null && isRepeatingContainerNode(nodeEntry.node);\n  }\n\n  private _visibilitySub: Subscription = Subscription.EMPTY;\n  private _conditionalBranchesSub = Subscription.EMPTY;\n  private _formulaRepsSub = Subscription.EMPTY;\n  private _choicesFilterSub = Subscription.EMPTY;\n  private _formulaSub = Subscription.EMPTY;\n  private _forceValueSub = Subscription.EMPTY;\n  private _validationConditionsSub = Subscription.EMPTY;\n  private _warningConditionsSub = Subscription.EMPTY;\n  private _nextSlideConditionSub = Subscription.EMPTY;\n  private _choicesOriginsSub = Subscription.EMPTY;\n  private _triggerConditionsSub = Subscription.EMPTY;\n\n  private _editConditionDialog: MatDialogRef<AjfFbConditionEditorDialog> | null;\n  private _editConditionDialogSub: Subscription = Subscription.EMPTY;\n  private _editValidationConditionDialog: MatDialogRef<AjfFbValidationConditionEditorDialog> | null;\n  private _editValidationConditionDialogSub: Subscription = Subscription.EMPTY;\n  private _editWarningConditionDialog: MatDialogRef<AjfFbWarningConditionEditorDialog> | null;\n  private _editWarningConditionDialogSub: Subscription = Subscription.EMPTY;\n\n  private _editVisibilityEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editVisibilitySub = Subscription.EMPTY;\n\n  private _editConditionalBranchEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editConditionalBranchSub = Subscription.EMPTY;\n\n  private _editFormulaRepsEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editFormulaRepsSub = Subscription.EMPTY;\n\n  private _editChoicesFilterEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editChoicesFilterSub = Subscription.EMPTY;\n\n  private _editFormulaEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editFormulaSub = Subscription.EMPTY;\n\n  private _editForceValueEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editForceValueSub = Subscription.EMPTY;\n\n  private _editValidationConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editValidationConditionSub = Subscription.EMPTY;\n\n  private _addValidationConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _addValidationConditionSub = Subscription.EMPTY;\n\n  private _removeValidationConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _removeValidationConditionSub = Subscription.EMPTY;\n\n  private _editWarningConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editWarningConditionSub = Subscription.EMPTY;\n\n  private _addWarningConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _addWarningConditionSub = Subscription.EMPTY;\n\n  private _removeWarningConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _removeWarningConditionSub = Subscription.EMPTY;\n\n  private _editNextSlideConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editNextSlideConditionSub = Subscription.EMPTY;\n\n  private _editTriggerConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editTriggerConditionSub = Subscription.EMPTY;\n\n  private _addTriggerConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _addTriggerConditionSub = Subscription.EMPTY;\n\n  private _removeTriggerConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _removeTriggerConditionSub = Subscription.EMPTY;\n\n  private _saveEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _saveSub = Subscription.EMPTY;\n\n  constructor(\n    private _service: AjfFormBuilderService,\n    private _dialog: MatDialog,\n    private _fb: FormBuilder\n  ) {\n    this._nodeEntry = _service.editedNodeEntry;\n    this._choicesOriginsSub = _service.choicesOrigins\n      .subscribe((c) => this._choicesOrigins = c || []);\n\n    this._enabled = this._nodeEntry.pipe(map((n) => n != null));\n\n    this._initForm();\n    this._initVisibilityEdit();\n    this._initConditionalBranchEdit();\n    this._initFormulaRepsEdit();\n    this._initChoicesFilterEdit();\n    this._initFormulaEdit();\n    this._initForceValueEdit();\n    this._initValidationConditionEdit();\n    this._initAddValidationCondition();\n    this._initRemoveValidationCondition();\n    this._initWarningConditionEdit();\n    this._initAddWarningCondition();\n    this._initRemoveWarningCondition();\n    this._initNextSlideConditionEdit();\n    this._initTriggerConditionEdit();\n    this._initAddTriggerCondition();\n    this._initRemoveTriggerCondition();\n    this._initSave();\n  }\n\n  editVisibility(): void {\n    this._editVisibilityEvt.emit();\n  }\n\n  editConditionalBranch(idx: number): void {\n    if (idx < 0 || idx >= this._conditionalBranches.length) { return; }\n    this._editConditionalBranchEvt.emit(idx);\n  }\n\n  editFormulaReps(): void {\n    this._editFormulaRepsEvt.emit();\n  }\n\n  editChoicesFilter(): void {\n    this._editChoicesFilterEvt.emit();\n  }\n\n  editFormula(): void {\n    this._editFormulaEvt.emit();\n  }\n\n  editForceValue(): void {\n    this._editForceValueEvt.emit();\n  }\n\n  editValidationCondition(idx: number): void {\n    if (idx < 0 || idx >= this._validationConditions.length) { return; }\n    this._editValidationConditionEvt.emit(idx);\n  }\n\n  addValidationCondition(): void {\n    this._addValidationConditionEvt.emit();\n  }\n\n  removeValidationCondition(idx: number): void {\n    if (idx < 0 || idx >= this._validationConditions.length) { return; }\n    this._removeValidationConditionEvt.emit(idx);\n  }\n\n  editWarningCondition(idx: number): void {\n    if (idx < 0 || idx >= this._warningConditions.length) { return; }\n    this._editWarningConditionEvt.emit(idx);\n  }\n\n  addWarningCondition(): void {\n    this._addWarningConditionEvt.emit();\n  }\n\n  removeWarningCondition(idx: number): void {\n    if (idx < 0 || idx >= this._warningConditions.length) { return; }\n    this._removeWarningConditionEvt.emit(idx);\n  }\n\n  editNextSlideCondition(): void {\n    this._editNextSlideConditionEvt.emit();\n  }\n\n  editTriggerCondition(idx: number): void {\n    if (idx < 0 || idx >= this._triggerConditions.length) { return; }\n    this._editTriggerConditionEvt.emit(idx);\n  }\n\n  addTriggerCondition(): void {\n    this._addTriggerConditionEvt.emit();\n  }\n\n  removeTriggerCondition(idx: number): void {\n    if (idx < 0 || idx >= this._triggerConditions.length) { return; }\n    this._removeTriggerConditionEvt.emit(idx);\n  }\n\n  isField(nodeEntry: AjfFormBuilderNodeEntry|null): boolean {\n    return nodeEntry != null && isField(nodeEntry.node);\n  }\n\n  isNumericField(node: AjfNode): boolean {\n    return isField(node) && isNumberField(node as AjfField);\n  }\n\n  isFieldWithChoices(node: AjfNode): boolean {\n    return isField(node) && isFieldWithChoices(node as AjfField);\n  }\n\n  save(): void {\n    this._saveEvt.emit();\n  }\n\n  cancel(): void {\n    this._service.cancelNodeEntryEdit();\n  }\n\n  ngOnDestroy(): void {\n    this._choicesOriginsSub.unsubscribe();\n\n    this._visibilitySub.unsubscribe();\n    this._formulaRepsSub.unsubscribe();\n    this._choicesFilterSub.unsubscribe();\n    this._formulaSub.unsubscribe();\n    this._forceValueSub.unsubscribe();\n    this._validationConditionsSub.unsubscribe();\n    this._warningConditionsSub.unsubscribe();\n    this._triggerConditionsSub.unsubscribe();\n\n    this._editConditionDialogSub.unsubscribe();\n    this._editValidationConditionDialogSub.unsubscribe();\n    this._editWarningConditionDialogSub.unsubscribe();\n\n    this._editChoicesFilterSub.unsubscribe();\n    this._editConditionalBranchSub.unsubscribe();\n    this._editVisibilitySub.unsubscribe();\n    this._editFormulaRepsSub.unsubscribe();\n    this._editFormulaSub.unsubscribe();\n    this._editForceValueSub.unsubscribe();\n    this._editValidationConditionSub.unsubscribe();\n    this._editWarningConditionSub.unsubscribe();\n    this._nextSlideConditionSub.unsubscribe();\n\n    this._addTriggerConditionSub.unsubscribe();\n    this._addValidationConditionSub.unsubscribe();\n    this._addWarningConditionSub.unsubscribe();\n    this._editNextSlideConditionSub.unsubscribe();\n    this._editTriggerConditionSub.unsubscribe();\n    this._removeTriggerConditionSub.unsubscribe();\n    this._removeValidationConditionSub.unsubscribe();\n    this._removeWarningConditionSub.unsubscribe();\n\n    this._saveSub.unsubscribe();\n  }\n\n  private _initSave(): void {\n    this._saveSub = this._saveEvt.pipe(withLatestFrom(this.propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        const fg = r[1];\n        const val = {...fg.value,\n          conditionalBranches: this._conditionalBranches\n        };\n        this._service.saveNodeEntry(val);\n      });\n  }\n\n  private _initForm(): void {\n    this._propertiesForm = this._nodeEntry.pipe(\n      filter((n) => n != null),\n      map((n) => {\n        if (this._visibilitySub != null) { this._visibilitySub.unsubscribe(); }\n        if (this._conditionalBranchesSub != null) { this._conditionalBranchesSub.unsubscribe(); }\n        n = n!;\n\n        const visibility = n.node.visibility != null ?\n          n.node.visibility.condition : null;\n        const visibilityOpt = n.node.visibility != null ?\n          this._guessVisibilityOpt(n.node.visibility) : null;\n        let controls: any = {\n          name: [n.node.name, Validators.required],\n          label: n.node.label,\n          visibilityOpt: [visibilityOpt, Validators.required],\n          visibility: [visibility, Validators.required],\n          conditionalBranchesNum: n.node.conditionalBranches.length\n        };\n        const validators: ValidatorFn[] = [];\n\n        if (isRepeatingContainerNode(n.node)) {\n          const rn = <AjfRepeatingContainerNode>n.node;\n\n          const formulaReps = rn.formulaReps != null ? rn.formulaReps.formula : null;\n\n          controls.formulaReps = [formulaReps, Validators.required];\n          controls.minReps = rn.minReps;\n          controls.maxReps = rn.maxReps;\n\n          this._curFormulaReps = formulaReps;\n\n          validators.push(checkRepsValidity);\n        }\n\n        if (this.isField(n)) {\n          const field = <AjfField>n.node;\n\n          let forceValue: string | null = null;\n          let notEmpty: boolean = false;\n          let validationConditions: ValidationCondition[] = [];\n          if (field.validation != null) {\n            if (field.validation.forceValue != null) {\n              forceValue = field.validation.forceValue.condition;\n            }\n            notEmpty = field.validation.notEmpty != null;\n            validationConditions = (field.validation.conditions || [])\n              .map(c => {\n                return {\n                  condition: c.condition,\n                  errorMessage: c.errorMessage\n                };\n              });\n          }\n\n          let notEmptyW: boolean = false;\n          let warningConditions: WarningCondition[] = [];\n          if (field.warning != null) {\n            notEmptyW = field.warning.notEmpty != null;\n            warningConditions = (field.warning.conditions || [])\n              .map(w => {\n                return {\n                  condition: w.condition,\n                  warningMessage: w.warningMessage\n                };\n              });\n          }\n          const formula = field.formula != null ? field.formula.formula : null;\n\n          controls.description = field.description;\n          controls.defaultValue = field.defaultValue;\n          controls.size = field.size;\n          controls.formula = formula;\n          controls.forceValue = forceValue;\n          controls.notEmpty = notEmpty;\n          controls.validationConditions = [validationConditions, []];\n          controls.notEmptyWarning = notEmptyW;\n          controls.warningConditions = [warningConditions, []];\n          controls.nextSlideCondition = [field.nextSlideCondition];\n\n          this._curForceValue = forceValue;\n          this._curFormula = formula;\n          this._validationConditions = validationConditions;\n          this._warningConditions = warningConditions;\n        }\n\n        if (this.isNumericField(n.node)) {\n          const numField = <AjfNumberField>n.node;\n\n          let minValue: any;\n          let maxValue: any;\n          let minDigits: any;\n          let maxDigits: any;\n          if (numField.validation != null) {\n            if (numField.validation.minValue != null) {\n              minValue = (numField.validation.minValue.condition || '').replace('$value >= ', '');\n            }\n            if (numField.validation.maxValue != null) {\n              maxValue = (numField.validation.maxValue.condition || '').replace('$value <= ', '');\n            }\n            if (numField.validation.minDigits != null) {\n              minDigits = (numField.validation.minDigits.condition || '')\n                .replace('$value.toString().length >= ', '');\n            }\n            if (numField.validation.maxDigits != null) {\n              maxDigits = (numField.validation.maxDigits.condition || '')\n                .replace('$value.toString().length <= ', '');\n            }\n          }\n\n          controls.minValue = minValue;\n          controls.maxValue = maxValue;\n          controls.minDigits = minDigits;\n          controls.maxDigits = maxDigits;\n\n          validators.push(checkValueLimitsValidity);\n          validators.push(checkDigitsValidity);\n        }\n\n        if (this.isFieldWithChoices(n.node)) {\n          const fieldWithChoices = <AjfFieldWithChoices<any>>n.node;\n\n          let triggerConditions: string[] = (fieldWithChoices.triggerConditions || [])\n            .map((c) => c.condition);\n\n          controls.choicesOriginRef = (fieldWithChoices as any).choicesOriginRef;\n          controls.choicesFilter = fieldWithChoices.choicesFilter != null ?\n            fieldWithChoices.choicesFilter.formula : null;\n          controls.forceExpanded = fieldWithChoices.forceExpanded;\n          controls.forceNarrow = fieldWithChoices.forceNarrow;\n          controls.triggerConditions = triggerConditions;\n\n          this._triggerConditions = triggerConditions;\n        }\n\n        const fg = this._fb.group(controls);\n        fg.setValidators(validators);\n\n        this._conditionalBranches = n.node.conditionalBranches.map(c => c.condition);\n        this._curVisibility = n.node.visibility != null ? n.node.visibility.condition : null;\n\n        this._handleConditionalBranchesChange(fg);\n        this._handleVisibilityChange(fg);\n        this._handleFormulaRepsChange(fg);\n        this._handleChoicesFilterChange(fg);\n        this._handleFormulaChange(fg);\n        this._handleForceValueChange(fg);\n        this._handleValidationCondtionsChange(fg);\n        this._handleWarningCondtionsChange(fg);\n        this._handleNextSlideConditionChange(fg);\n        this._handleTriggerCondtionsChange(fg);\n\n        return fg;\n      }),\n      publishReplay(1),\n      refCount()\n    );\n  }\n\n  private _destroyConditionDialog(): void {\n    if (this._editConditionDialogSub != null) {\n      this._editConditionDialogSub.unsubscribe();\n      this._editConditionDialogSub = Subscription.EMPTY;\n    }\n    if (this._editConditionDialog != null) {\n      this._editConditionDialog.close();\n      this._editConditionDialog = null;\n    }\n  }\n\n  private _destroyValidationConditionDialog(): void {\n    if (this._editValidationConditionDialogSub != null) {\n      this._editValidationConditionDialogSub.unsubscribe();\n      this._editValidationConditionDialogSub = Subscription.EMPTY;\n    }\n    if (this._editValidationConditionDialog != null) {\n      this._editValidationConditionDialog.close();\n      this._editValidationConditionDialog = null;\n    }\n  }\n\n  private _destroyWarningConditionDialog(): void {\n    if (this._editWarningConditionDialogSub != null) {\n      this._editWarningConditionDialogSub.unsubscribe();\n      this._editWarningConditionDialogSub = Subscription.EMPTY;\n    }\n    if (this._editWarningConditionDialog != null) {\n      this._editWarningConditionDialog.close();\n      this._editWarningConditionDialog = null;\n    }\n  }\n\n  private _initRemoveTriggerCondition(): void {\n    this._removeTriggerConditionSub = (<Observable<number>>this._removeTriggerConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['triggerConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        if (vcIdx < 0 || vcIdx >= vcs.length) { return; }\n        vcs.splice(vcIdx, 1);\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initAddTriggerCondition(): void {\n    this._addTriggerConditionSub = (<Observable<void>>this._addTriggerConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['triggerConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        vcs.push('');\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initTriggerConditionEdit(): void {\n    this._editTriggerConditionSub = (<Observable<number>>this._editTriggerConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        this._destroyConditionDialog();\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (vcIdx < 0 || vcIdx >= this._triggerConditions.length || fg == null) { return; }\n        this._editConditionDialog = this._dialog\n          .open(AjfFbConditionEditorDialog);\n        const cmp = this._editConditionDialog.componentInstance;\n        cmp.condition = this._triggerConditions[vcIdx];\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              this._triggerConditions[vcIdx] = cond;\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initRemoveWarningCondition(): void {\n    this._removeWarningConditionSub = (<Observable<number>>this._removeWarningConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['warningConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        if (vcIdx < 0 || vcIdx >= vcs.length) { return; }\n        vcs.splice(vcIdx, 1);\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initAddWarningCondition(): void {\n    this._addWarningConditionSub = (<Observable<void>>this._addWarningConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['warningConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        vcs.push({condition: '', errorMessage: ''});\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initWarningConditionEdit(): void {\n    this._editWarningConditionSub = (<Observable<number>>this._editWarningConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        this._destroyWarningConditionDialog();\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (vcIdx < 0 || vcIdx >= this._warningConditions.length || fg == null) { return; }\n        this._editWarningConditionDialog = this._dialog\n          .open(AjfFbWarningConditionEditorDialog);\n        const cmp = this._editWarningConditionDialog.componentInstance;\n        const w = this._warningConditions[vcIdx];\n        cmp.condition = w.condition;\n        cmp.warningMessage = w.warningMessage;\n        this._editWarningConditionDialogSub = this._editWarningConditionDialog.afterClosed()\n          .subscribe((cond: WarningCondition) => {\n            if (cond !== void 0) {\n              this._warningConditions[vcIdx] = cond;\n            }\n            this._editWarningConditionDialogSub.unsubscribe();\n            this._editWarningConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initRemoveValidationCondition(): void {\n    this._removeValidationConditionSub = (<Observable<number>>this._removeValidationConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['validationConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        if (vcIdx < 0 || vcIdx >= vcs.length) { return; }\n        vcs.splice(vcIdx, 1);\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initAddValidationCondition(): void {\n    this._addValidationConditionSub = (<Observable<void>>this._addValidationConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['validationConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        vcs.push({condition: '', errorMessage: ''});\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initValidationConditionEdit(): void {\n    this._editValidationConditionSub = (<Observable<number>>this._editValidationConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        this._destroyValidationConditionDialog();\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (vcIdx < 0 || vcIdx >= this._validationConditions.length || fg == null) { return; }\n        this._editValidationConditionDialog = this._dialog\n          .open(AjfFbValidationConditionEditorDialog);\n        const cmp = this._editValidationConditionDialog.componentInstance;\n        const v = this._validationConditions[vcIdx];\n        cmp.condition = v.condition;\n        cmp.errorMessage = v.errorMessage;\n        this._editValidationConditionDialogSub = this._editValidationConditionDialog.afterClosed()\n          .subscribe((cond: ValidationCondition) => {\n            if (cond !== void 0) {\n              this._validationConditions[vcIdx] = cond;\n            }\n            this._editValidationConditionDialogSub.unsubscribe();\n            this._editValidationConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initForceValueEdit(): void {\n    this._editForceValueSub = (<Observable<void>>this._editForceValueEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['forceValue'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initNextSlideConditionEdit(): void {\n    this._editNextSlideConditionSub = (<Observable<void>>this._editNextSlideConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['nextSlideCondition'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initFormulaEdit(): void {\n    this._editFormulaSub = (<Observable<void>>this._editFormulaEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['formula'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initFormulaRepsEdit(): void {\n    this._editFormulaRepsSub = (<Observable<void>>this._editFormulaRepsEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['formulaReps'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initChoicesFilterEdit(): void {\n    this._editChoicesFilterSub = (<Observable<void>>this._editChoicesFilterEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['choicesFilter'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initConditionalBranchEdit(): void {\n    this._editConditionalBranchSub = (<Observable<number>>this._editConditionalBranchEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        this._destroyConditionDialog();\n        const cbIdx = r[0];\n        const fg = r[1];\n        if (cbIdx < 0 || cbIdx >= this._conditionalBranches.length || fg == null) { return; }\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = this._conditionalBranches[cbIdx];\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              this._conditionalBranches[cbIdx] = cond;\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initVisibilityEdit(): void {\n    this._editVisibilitySub = (<Observable<void>>this._editVisibilityEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['visibility'];\n        const condition = ctrl.value;\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = condition;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _handleTriggerCondtionsChange(fg: FormGroup): void {\n    this._triggerConditionsSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) =>\n        JSON.stringify(v1.triggerConditions) === JSON.stringify(v2.triggerConditions)))\n      .subscribe((v: any) => {\n        this._triggerConditions = v.triggerConditions;\n      });\n  }\n\n  private _handleWarningCondtionsChange(fg: FormGroup): void {\n    this._warningConditionsSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) =>\n        JSON.stringify(v1.warningConditions) === JSON.stringify(v2.warningConditions)))\n      .subscribe((v: any) => {\n        this._warningConditions = v.warningConditions;\n      });\n  }\n\n  private _handleValidationCondtionsChange(fg: FormGroup): void {\n    this._validationConditionsSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) =>\n        JSON.stringify(v1.validationConditions) === JSON.stringify(v2.validationConditions)))\n      .subscribe((v: any) => {\n        this._validationConditions = v.validationConditions;\n      });\n  }\n\n  private _handleForceValueChange(fg: FormGroup): void {\n    this._forceValueSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.forceValue === v2.forceValue))\n      .subscribe((v: any) => {\n        this._curForceValue = v.forceValue;\n      });\n  }\n\n  private _handleNextSlideConditionChange(fg: FormGroup): void {\n    this._formulaSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.nextSlideCondition === v2.nextSlideCondition))\n      .subscribe((v: any) => {\n        this._nextSlideCondition = v.nextSlideCondition;\n      });\n  }\n\n  private _handleFormulaChange(fg: FormGroup): void {\n    this._formulaSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.formula === v2.formula))\n      .subscribe((v: any) => {\n        this._curFormula = v.formula;\n      });\n  }\n\n  private _handleFormulaRepsChange(fg: FormGroup): void {\n    this._formulaRepsSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.formulaReps === v2.formulaReps))\n      .subscribe((v: any) => {\n        this._curFormulaReps = v.formulaReps;\n      });\n  }\n\n  private _handleChoicesFilterChange(fg: FormGroup): void {\n    this._choicesFilterSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.choicesFilter === v2.choicesFilter))\n      .subscribe((v: any) => {\n        this._curChoicesFilter = v.choicesFilter;\n      });\n  }\n\n  private _handleConditionalBranchesChange(fg: FormGroup): void {\n    this._conditionalBranchesSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) =>\n          v1.conditionalBranchesNum === v2.conditionalBranchesNum))\n      .subscribe((v: any) => {\n        const cbNum: number = v.conditionalBranchesNum;\n        const curCbNum = this._conditionalBranches.length;\n        if (curCbNum < cbNum) {\n          let newCbs: string[] = [];\n          for (let i = curCbNum ; i < cbNum ; i++) {\n            newCbs.push(alwaysCondition().condition);\n          }\n          this._conditionalBranches = this._conditionalBranches.concat(newCbs);\n        } else if (curCbNum > cbNum) {\n          this._conditionalBranches.splice(0, curCbNum - cbNum);\n        }\n      });\n  }\n\n  private _handleVisibilityChange(fg: FormGroup): void {\n    this._visibilitySub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.visibilityOpt === v2.visibilityOpt))\n      .subscribe((v) => {\n        const visibilityOpt = v.visibilityOpt;\n        let newCondition: string | null;\n        switch (visibilityOpt) {\n          case 'always':\n            newCondition = alwaysCondition().condition;\n            break;\n          case 'never':\n            newCondition = neverCondition().condition;\n            break;\n          default:\n          newCondition = null;\n        }\n        this._curVisibility = newCondition;\n        fg.controls['visibility'].setValue(newCondition);\n      });\n  }\n\n  private _guessVisibilityOpt(condition: AjfCondition): string {\n    if (condition.condition.localeCompare(alwaysCondition().condition) === 0) {\n      return 'always';\n    }\n    if (condition.condition.localeCompare(neverCondition().condition) === 0) {\n      return 'never';\n    }\n    return 'condition';\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation\n} from '@angular/core';\n\nimport {AjfFormBuilderNodeTypeEntry} from './form-builder-service';\n\n\n@Component({\n  selector: 'ajf-fb-node-type-entry',\n  templateUrl: 'node-type-entry.html',\n  styleUrls: ['node-type-entry.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbNodeTypeEntry {\n  private _nodeType: AjfFormBuilderNodeTypeEntry;\n  get nodeType(): AjfFormBuilderNodeTypeEntry { return this._nodeType; }\n  @Input()\n  set nodeType(nodeType: AjfFormBuilderNodeTypeEntry) {\n    this._nodeType = nodeType;\n    this._cdr.markForCheck();\n  }\n\n  constructor(private _cdr: ChangeDetectorRef) { }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\nimport {TranslateModule} from '@ngx-translate/core';\n\nimport {AjfMonacoEditorModule} from '@ajf/material/monaco-editor';\nimport {AjfNodeIconModule} from '@ajf/material/node-icon';\n\nimport {AjfFbBranchLine} from './branch-line';\nimport {AjfFbChoicesOriginEditorDialog} from './choices-origin-editor-dialog';\nimport {AjfFbChoicesOriginEditor} from './choices-origin-editor';\nimport {AjfFbConditionEditorDialog} from './condition-editor-dialog';\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilder} from './form-builder';\nimport {AjfFormBuilderService} from './form-builder-service';\nimport {AjfFbNodeEntry} from './node-entry';\nimport {AjfFbNodeProperties} from './node-properties';\nimport {AjfFbNodeTypeEntry} from './node-type-entry';\nimport {AjfFbStringIdentifierDialogComponent} from './string-identifier-dialog';\nimport {AjfFbValidationConditionEditorDialog} from './validation-condition-editor-dialog';\nimport {AjfFbWarningConditionEditorDialog} from './warning-condition-editor-dialog';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatTableModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    TranslateModule,\n    AjfMonacoEditorModule,\n    AjfNodeIconModule,\n  ],\n  declarations: [\n    AjfFbBranchLine,\n    AjfFbChoicesOriginEditorDialog,\n    AjfFbChoicesOriginEditor,\n    AjfFbConditionEditorDialog,\n    AjfFbConditionEditor,\n    AjfFbNodeEntry,\n    AjfFbNodeProperties,\n    AjfFbNodeTypeEntry,\n    AjfFbStringIdentifierDialogComponent,\n    AjfFbValidationConditionEditorDialog,\n    AjfFbWarningConditionEditorDialog,\n    AjfFormBuilder,\n  ],\n  exports: [\n    AjfFormBuilder,\n  ],\n  providers: [\n    AjfFormBuilderService\n  ]\n})\nexport class AjfFormBuilderModule { }\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport * from './form-builder-module';\nexport * from './form-builder-service';\nexport * from './form-builder';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {AjfFbBranchLine as ɵajf_src_material_form_builder_form_builder_a} from './branch-line';\nexport {AjfFbChoicesOriginEditor as ɵajf_src_material_form_builder_form_builder_c} from './choices-origin-editor';\nexport {AjfFbChoicesOriginEditorDialog as ɵajf_src_material_form_builder_form_builder_b} from './choices-origin-editor-dialog';\nexport {AjfFbConditionEditor as ɵajf_src_material_form_builder_form_builder_e} from './condition-editor';\nexport {AjfFbConditionEditorDialog as ɵajf_src_material_form_builder_form_builder_d} from './condition-editor-dialog';\nexport {AjfFbNodeEntry as ɵajf_src_material_form_builder_form_builder_f} from './node-entry';\nexport {AjfFbNodeProperties as ɵajf_src_material_form_builder_form_builder_g} from './node-properties';\nexport {AjfFbNodeTypeEntry as ɵajf_src_material_form_builder_form_builder_h} from './node-type-entry';\nexport {AjfFbStringIdentifierDialogComponent as ɵajf_src_material_form_builder_form_builder_i} from './string-identifier-dialog';\nexport {AjfFbValidationConditionEditorDialog as ɵajf_src_material_form_builder_form_builder_j} from './validation-condition-editor-dialog';\nexport {AjfFbWarningConditionEditorDialog as ɵajf_src_material_form_builder_form_builder_k} from './warning-condition-editor-dialog';"],"names":[],"mappings":"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"}