{"version":3,"file":"monaco-editor.js","sources":["../../../../../../src/material/monaco-editor/auto-complete-item-model.ts","../../../../../../src/material/monaco-editor/editor-language-model.ts","../../../../../../src/material/monaco-editor/autocomplete-singleton-model.ts","../../../../../../src/material/monaco-editor/editor-options-model.ts","../../../../../../src/material/monaco-editor/editor-theme.ts","../../../../../../src/material/monaco-editor/monaco-editor.ts","../../../../../../src/material/monaco-editor/monaco-editor-module.ts","../../../../../../src/material/monaco-editor/public-api.ts","../../../../../../src/material/monaco-editor/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\n/**\n * Representation of AutoCompleteItem\n */\nexport class AutoCompleteItem {\n    label: string;\n    kind: number;\n    documentation: string;\n    insertText: string;\n\n    constructor() {\n\n    }\n\n    setLabel(label: string): AutoCompleteItem {\n        this.label = label;\n        return this;\n    }\n\n    setKind(kind: number): AutoCompleteItem {\n        this.kind = kind;\n        return this;\n    }\n\n    setDocumentation(documentation: string): AutoCompleteItem {\n        this.documentation = documentation;\n        return this;\n    }\n\n    setInsertText(insertText: string): AutoCompleteItem {\n        this.insertText = insertText;\n        return this;\n    }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\n/**\n * List of dev language avalaible in Monaco Editor\n */\nexport class IEditorLanguage {\n    static readonly BAT = 'bat';\n    static readonly C = 'c';\n    static readonly CPP = 'cpp';\n    static readonly CSHARP = 'csharp';\n    static readonly CSS = 'css';\n    static readonly DOCKERFILE = 'dockerfile';\n    static readonly FSHARP = 'fsharp';\n    static readonly GO = 'go';\n    static readonly HANDLEBARS = 'handlebars';\n    static readonly HTML = 'html';\n    static readonly INI = 'ini';\n    static readonly JADE = 'jade';\n    static readonly JAVASCRIPT = 'javascript';\n    static readonly JSON = 'json';\n    static readonly LESS = 'less';\n    static readonly LUA = 'lua';\n    static readonly MARKDOWN = 'markdown';\n    static readonly OBJECTIVEC = 'objective-c';\n    static readonly PHP = 'php';\n    static readonly PLAINTEXT = 'plaintext';\n    static readonly POSTIATS = 'postiats';\n    static readonly POWERSHELL = 'powershell';\n    static readonly PYTHON = 'python';\n    static readonly R = 'r';\n    static readonly RAZOR = 'razor';\n    static readonly RUBY = 'ruby';\n    static readonly SCSS = 'scss';\n    static readonly SQL = 'sql';\n    static readonly SWIFT = 'swift';\n    static readonly TYPESCRIPT = 'typescript';\n    static readonly VB = 'vb';\n    static readonly XML = 'xml';\n    static readonly YAML = 'yaml';\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AutoCompleteItem} from './auto-complete-item-model';\nimport {IEditorLanguage} from './editor-language-model';\n\ndeclare const monaco: any;\n\n/**\n * Manage the autoCompletion for all instances of the editors\n */\nexport class AutoCompleteSingleton {\n    /**\n     * We use a singleton, because this class can be call from all the Monaco Editor Components\n     */\n    static getInstance() {\n        if (!AutoCompleteSingleton._instance) {\n            AutoCompleteSingleton._instance = new AutoCompleteSingleton();\n        }\n        return AutoCompleteSingleton._instance;\n    }\n\n    get autoCompleteValues(): {[p: string]: AutoCompleteItem[]} {\n        return this._autoCompleteValues;\n    }\n\n    private static _instance: AutoCompleteSingleton | null = null;\n    private _autoCompleteValues: { [key: string]: AutoCompleteItem[]; } = {};\n\n    private constructor() {\n\n    }\n\n    /**\n     * Init autoComplete for language passed in param if is not already done.\n     * @param language\n     */\n    initAutoComplete(language: IEditorLanguage) {\n        if (this._autoCompleteValues[language.toString()]) {\n            return;\n        }\n\n        this._autoCompleteValues[language.toString()] = [];\n\n        // This event is fired when the user press Ctrl + Space, to show Intelissense (Autocomplete)\n        monaco.languages.registerCompletionItemProvider(language, {\n            provideCompletionItems: function (model: any) {\n                // Get new autoComplete list for the current content\n                AutoCompleteSingleton.getInstance()\n                  .parseAutoCompleteValues(language, model.getValue());\n                return AutoCompleteSingleton.getInstance().autoCompleteValues[language.toString()];\n            },\n        });\n    }\n\n    /**\n     * Parse the content passed in param for the language passed in param\n     * @param language\n     * @param content\n     */\n    parseAutoCompleteValues(language: IEditorLanguage, content: string): AutoCompleteItem[] {\n        switch (language) {\n            case IEditorLanguage.XML:\n                return this._parseXmlAutoComplete(content);\n            case IEditorLanguage.JSON:\n                return this._parseJsonAutoComplete(content);\n            default:\n                return [];\n        }\n    }\n\n    /**\n     * Parse the XML content and add all tags in AutoComplete for XML Language\n     * @param content\n     */\n    private _parseXmlAutoComplete(content: string): AutoCompleteItem[] {\n        let tempList: AutoCompleteItem [] = [];\n        let parser = new DOMParser();\n        let tags = parser.parseFromString(content, 'text/xml').getElementsByTagName('*');\n\n        for (let i = 0; i < tags.length; i++) {\n            // Add TAG only if it not already existing in autoComplete list and in tempList\n            if (\n              !this._autoCompleteValues[IEditorLanguage.XML]\n                .find(obj => obj.label === tags[i].tagName)\n              && !tempList.find(obj => obj.label === tags[i].tagName)\n            ) {\n\n                // Create autoComplete object\n                let obj = new AutoCompleteItem()\n                    .setLabel(tags[i].tagName)\n                    .setKind(monaco.languages.CompletionItemKind.Function)\n                    .setDocumentation('')\n                    .setInsertText(`<${tags[i].tagName}><${tags[i].tagName}>`);\n\n                tempList.push(obj);\n            }\n        }\n\n        // Add tempList list in the _autoCompleteValues, to maintain a list updated\n        if (tempList.length > 0) {\n            this._autoCompleteValues[IEditorLanguage.XML.toString()] =\n              this._autoCompleteValues[IEditorLanguage.XML.toString()].concat(tempList);\n        }\n\n        return tempList;\n    }\n\n    private _parseJsonAutoComplete(content: string): AutoCompleteItem[] {\n        /* tslint:disable-next-line */\n        const regex = /(?:\\'|\\')([^']*)(?:\\'|\\')(?=:)(?:\\:\\s*)(?:\\'|\\')?(true|false|[0-9a-zA-Z\\+\\-\\,\\.\\$]*)/g;\n        let tempList: AutoCompleteItem [] = [];\n        let m: any;\n\n        while ((m = regex.exec(content)) !== null) {\n            // This is necessary to avoid infinite loops with zero-width matches\n            if (m.index === regex.lastIndex) {\n                regex.lastIndex++;\n            }\n\n            // Add Element only if it not already existing in autoComplete list and in tempList\n            if (\n              m[1] && !this._autoCompleteValues[IEditorLanguage.JSON]\n                .find(obj => obj.label === m[1])\n                && !tempList.find(obj => obj.label === m[1])\n            ) {\n\n                let obj = new AutoCompleteItem()\n                    .setLabel(m[1])\n                    .setKind(monaco.languages.CompletionItemKind.Value)\n                    .setDocumentation('')\n                    .setInsertText(`'${m[1]}':`);\n\n                tempList.push(obj);\n            }\n        }\n\n        // Add tempList list in the _autoCompleteValues, to maintain a list updated\n        if (tempList.length > 0) {\n            this._autoCompleteValues[IEditorLanguage.JSON.toString()] =\n              this._autoCompleteValues[IEditorLanguage.JSON.toString()].concat(tempList);\n        }\n\n        return tempList;\n    }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {IEditorLanguage} from './editor-language-model';\nimport {IEditorScrollbarOptions} from './editor-scrollbar-options';\nimport {IEditorTheme} from './editor-theme';\n/**\n * Configuration options for the editor.\n */\nexport class IEditorOptions {\n    /**\n     * Enable experimental screen reader support.\n     * Defaults to `true`.\n     */\n    experimentalScreenReader?: boolean;\n    /**\n     * The aria label for the editor's textarea (when it is focused).\n     */\n    ariaLabel?: string;\n    /**\n     * Render vertical lines at the specified columns.\n     * Defaults to empty array.\n     */\n    rulers?: number[];\n    /**\n     * A string containing the word separators used when doing word navigation.\n     * Defaults to ``~!@#$%^&*()-=+[{]}\\\\|;:\\'',.`<``>`/?\n     */\n    wordSeparators?: string;\n    /**\n     * Enable Linux primary clipboard.\n     * Defaults to true.\n     */\n    selectionClipboard?: boolean;\n    /**\n     * Control the rendering of line numbers.\n     * If it is a function, it will be invoked when rendering a line number\n     * and the return value will be rendered.\n     * Otherwise, if it is a truey, line numbers will be rendered normally\n     * (equivalent of using an identity function).\n     * Otherwise, line numbers will not be rendered.\n     * Defaults to true.\n     */\n    lineNumbers?: boolean;\n    /**\n     * Should the corresponding line be selected when clicking on the line number?\n     * Defaults to true.\n     */\n    selectOnLineNumbers?: boolean;\n    /**\n     * Control the width of line numbers, by reserving horizontal space\n     * for rendering at least an amount of digits.\n     * Defaults to 5.\n     */\n    lineNumbersMinChars?: number;\n    /**\n     * Enable the rendering of the glyph margin.\n     * Defaults to false.\n     */\n    glyphMargin?: boolean;\n    /**\n     * The width reserved for line decorations (in px).\n     * Line decorations are placed between line numbers and the editor content.\n     * Defaults to 10.\n     */\n    lineDecorationsWidth?: number;\n    /**\n     * When revealing the cursor, a virtual padding (px) is added to the cursor,\n     * turning it into a rectangle.\n     * This virtual padding ensures that the cursor gets revealed before\n     * hitting the edge of the viewport.\n     * Defaults to 30 (px).\n     */\n    revealHorizontalRightPadding?: number;\n    /**\n     * Render the editor selection with rounded borders.\n     * Defaults to true.\n     */\n    roundedSelection?: boolean;\n    /**\n     * Theme to be used for rendering. Consists of two parts, the UI theme and the syntax theme,\n     * separated by a space.\n     * The current available UI themes are: 'vs' (default), 'vs-dark', 'hc-black'\n     * The syntax themes are contributed. The default is 'default-theme'\n     */\n    theme?: IEditorTheme;\n    /**\n     * Should the editor be read only.\n     * Defaults to false.\n     */\n    readOnly?: boolean;\n    /**\n     * Control the behavior and rendering of the scrollbars.\n     */\n    scrollbar?: IEditorScrollbarOptions;\n    /**\n     * The number of vertical lanes the overview ruler should render.\n     * Defaults to 2.\n     */\n    overviewRulerLanes?: number;\n    /**\n     * Control the cursor animation style, possible values are\n     * 'blink', 'smooth', 'phase', 'expand' and 'solid'.\n     * Defaults to 'blink'.\n     */\n    cursorBlinking?: string;\n    /**\n     * Zoom the font in the editor when using the mouse wheel in combination with holding Ctrl.\n     * Defaults to false.\n     */\n    mouseWheelZoom?: boolean;\n    /**\n     * Control the cursor style, either 'block' or 'line'.\n     * Defaults to 'line'.\n     */\n    cursorStyle?: string;\n    /**\n     * Enable font ligatures.\n     * Defaults to false.\n     */\n    fontLigatures?: boolean;\n    /**\n     * Disable the use of `translate3d`.\n     * Defaults to false.\n     */\n    disableTranslate3d?: boolean;\n    /**\n     * Should the cursor be hidden in the overview ruler.\n     * Defaults to false.\n     */\n    hideCursorInOverviewRuler?: boolean;\n    /**\n     * Enable that scrolling can go one screen size after the last line.\n     * Defaults to true.\n     */\n    scrollBeyondLastLine?: boolean;\n    /**\n     * Enable that the editor will install an interval to check\n     * if its container dom node size has changed.\n     * Enabling this might have a severe performance impact.\n     * Defaults to false.\n     */\n    automaticLayout?: boolean;\n    /**\n     * Control the wrapping strategy of the editor.\n     * Using -1 means no wrapping whatsoever.\n     * Using 0 means viewport width wrapping (ajusts with the resizing of the editor).\n     * Using a positive number means wrapping after a fixed number of characters.\n     * Defaults to 300.\n     */\n    wrappingColumn?: number;\n    /**\n     * Control the alternate style of viewport wrapping.\n     * When set to true viewport wrapping is used only when the window width\n     * is less than the number of columns specified in the wrappingColumn property.\n     * Has no effect if wrappingColumn is not a positive number.\n     * Defaults to false.\n     */\n    wordWrap?: boolean;\n    /**\n     * Control indentation of wrapped lines. Can be: 'none', 'same' or 'indent'.\n     * Defaults to 'none'.\n     */\n    wrappingIndent?: string;\n    /**\n     * Configure word wrapping characters. A break will be introduced before these characters.\n     * Defaults to '{([+'.\n     */\n    wordWrapBreakBeforeCharacters?: string;\n    /**\n     * Configure word wrapping characters. A break will be introduced after these characters.\n     * Defaults to ' \\t})]?|&,;'.\n     */\n    wordWrapBreakAfterCharacters?: string;\n    /**\n     * Configure word wrapping characters. A break will be introduced after these characters\n     * only if no `wordWrapBreakBeforeCharacters` or `wordWrapBreakAfterCharacters` were found.\n     * Defaults to '.'.\n     */\n    wordWrapBreakObtrusiveCharacters?: string;\n    /**\n     * Performance guard: Stop rendering a line after x characters.\n     * Defaults to 10000 if wrappingColumn is -1. Defaults to -1 if wrappingColumn is `>`= 0.\n     * Use -1 to never stop rendering\n     */\n    stopRenderingLineAfter?: number;\n    /**\n     * Enable hover.\n     * Defaults to true.\n     */\n    hover?: boolean;\n    /**\n     * Enable custom contextmenu.\n     * Defaults to true.\n     */\n    contextmenu?: boolean;\n    /**\n     * A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\n     * Defaults to 1.\n     */\n    mouseWheelScrollSensitivity?: number;\n    /**\n     * Enable quick suggestions (shadow suggestions)\n     * Defaults to true.\n     */\n    quickSuggestions?: boolean;\n    /**\n     * Quick suggestions show delay (in ms)\n     * Defaults to 500 (ms)\n     */\n    quickSuggestionsDelay?: number;\n    /**\n     * Enables parameter hints\n     */\n    parameterHints?: boolean;\n    /**\n     * Render icons in suggestions box.\n     * Defaults to true.\n     */\n    iconsInSuggestions?: boolean;\n    /**\n     * Enable auto closing brackets.\n     * Defaults to true.\n     */\n    autoClosingBrackets?: boolean;\n    /**\n     * Enable format on type.\n     * Defaults to false.\n     */\n    formatOnType?: boolean;\n    /**\n     * Enable the suggestion box to pop-up on trigger characters.\n     * Defaults to true.\n     */\n    suggestOnTriggerCharacters?: boolean;\n    /**\n     * Accept suggestions on ENTER.\n     * Defaults to true.\n     */\n    acceptSuggestionOnEnter?: boolean;\n    /**\n     * Enable snippet suggestions. Default to 'true'.\n     */\n    snippetSuggestions?: 'top' | 'bottom' | 'inline' | 'none';\n    /**\n     * Enable tab completion. Defaults to 'false'\n     */\n    tabCompletion?: boolean;\n    /**\n     * Enable word based suggestions. Defaults to 'true'\n     */\n    wordBasedSuggestions?: boolean;\n    /**\n     * Enable selection highlight.\n     * Defaults to true.\n     */\n    selectionHighlight?: boolean;\n    /**\n     * Show code lens\n     * Defaults to true.\n     */\n    codeLens?: boolean;\n    /**\n     * Enable code folding\n     * Defaults to true.\n     */\n    folding?: boolean;\n    /**\n     * Enable rendering of whitespace.\n     * Defaults to none.\n     */\n    renderWhitespace?: 'none' | 'boundary' | 'all';\n    /**\n     * Enable rendering of control characters.\n     * Defaults to false.\n     */\n    renderControlCharacters?: boolean;\n    /**\n     * Enable rendering of indent guides.\n     * Defaults to false.\n     */\n    renderIndentGuides?: boolean;\n    /**\n     * Enable rendering of current line highlight.\n     * Defaults to true.\n     */\n    renderLineHighlight?: boolean;\n    /**\n     * Inserting and deleting whitespace follows tab stops.\n     */\n    useTabStops?: boolean;\n    /**\n     * The font family\n     */\n    fontFamily?: string;\n    /**\n     * The font weight\n     */\n    fontWeight?: 'normal' | 'bold' | 'bolder' | 'lighter' | 'initial' | 'inherit' |\n      '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\n    /**\n     * The font size\n     */\n    fontSize?: number;\n    /**\n     * The line height\n     */\n    lineHeight?: number;\n\n    /**\n     * Content to show\n     */\n    value: string;\n    /**\n     * Language of content to show\n     */\n    language: IEditorLanguage;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\n/**\n * List of theme available for Monaco Editor\n */\nexport class IEditorTheme {\n    static readonly VISUAL_STUDIO = 'vs';\n    static readonly VISUAL_STUDIO_DARK = 'vs-dark';\n    static readonly HIGH_CONTRAST_DARK = 'hc-black';\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input,\n  OnChanges, OnDestroy, Output, SimpleChange, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport {AutoCompleteSingleton} from './autocomplete-singleton-model';\nimport {IEditorLanguage} from './editor-language-model';\nimport {IEditorOptions} from './editor-options-model';\nimport {IEditorScrollbarOptions} from './editor-scrollbar-options';\nimport {IEditorTheme} from './editor-theme';\n\ndeclare const monaco: any;\n\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'ajf-monaco-editor',\n  styleUrls: ['monaco-editor.css'],\n  templateUrl: 'monaco-editor.html',\n  host: {\n    '(window:resize)': 'onResize($event)'\n  }\n})\nexport class AjfMonacoEditor implements OnDestroy, AfterViewInit, OnChanges {\n  @Input() experimentalScreenReader?: boolean;\n  @Input() ariaLabel?: string;\n  @Input() rulers?: number[];\n  @Input() wordSeparators?: string;\n  @Input() selectionClipboard?: boolean;\n  @Input() lineNumbers?: boolean;\n  @Input() selectOnLineNumbers?: boolean;\n  @Input() lineNumbersMinChars?: number;\n  @Input() glyphMargin?: boolean;\n  @Input() lineDecorationsWidth?: number;\n  @Input() revealHorizontalRightPadding?: number;\n  @Input() roundedSelection?: boolean;\n  @Input() theme?: IEditorTheme;\n  @Input() readOnly?: boolean;\n  @Input() scrollbar?: IEditorScrollbarOptions;\n  @Input() overviewRulerLanes?: number;\n  @Input() cursorBlinking?: string;\n  @Input() mouseWheelZoom?: boolean;\n  @Input() cursorStyle?: string;\n  @Input() fontLigatures?: boolean;\n  @Input() disableTranslate3d?: boolean;\n  @Input() hideCursorInOverviewRuler?: boolean;\n  @Input() scrollBeyondLastLine?: boolean;\n  @Input() automaticLayout?: boolean;\n  @Input() wrappingColumn?: number;\n  @Input() wordWrap?: boolean;\n  @Input() wrappingIndent?: string;\n  @Input() wordWrapBreakBeforeCharacters?: string;\n  @Input() wordWrapBreakAfterCharacters?: string;\n  @Input() wordWrapBreakObtrusiveCharacters?: string;\n  @Input() stopRenderingLineAfter?: number;\n  @Input() hover?: boolean;\n  @Input() contextmenu?: boolean;\n  @Input() mouseWheelScrollSensitivity?: number;\n  @Input() quickSuggestions?: boolean;\n  @Input() quickSuggestionsDelay?: number;\n  @Input() parameterHints?: boolean;\n  @Input() iconsInSuggestions?: boolean;\n  @Input() autoClosingBrackets?: boolean;\n  @Input() formatOnType?: boolean;\n  @Input() suggestOnTriggerCharacters?: boolean;\n  @Input() acceptSuggestionOnEnter?: boolean;\n  @Input() snippetSuggestions?: 'top' | 'bottom' | 'inline' | 'none';\n  @Input() tabCompletion?: boolean;\n  @Input() wordBasedSuggestions?: boolean;\n  @Input() selectionHighlight?: boolean;\n  @Input() codeLens?: boolean;\n  @Input() folding?: boolean;\n  @Input() renderWhitespace?: 'none' | 'boundary' | 'all';\n  @Input() renderControlCharacters?: boolean;\n  @Input() renderIndentGuides?: boolean;\n  @Input() renderLineHighlight?: boolean;\n  @Input() useTabStops?: boolean;\n  @Input() fontFamily?: string;\n  @Input() fontWeight?: 'normal' | 'bold' | 'bolder' | 'lighter' | 'initial' | 'inherit'\n    | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\n  @Input() fontSize?: number;\n  @Input() lineHeight?: number;\n\n  @Input() language: IEditorLanguage;\n\n  @Input() disableAutocomplete: boolean;\n  @Input() autoFormatOnLoad = true;\n  @Input() monacoLibPath = 'vs/loader.js';\n\n  @Input() set valueToCompare(v: string) {\n    if (v !== this._valueToCompare) {\n      this._valueToCompare = v;\n\n      if (this._valueToCompare === void 0 || !this._valueToCompare || !this._editor) {\n        if (this._editor && this._editor.getEditorType() !== 'vs.editor.ICodeEditor') {\n          this._initEditor();\n          return;\n        }\n\n        return;\n      }\n\n      if (!this._value) {\n        this._value = '';\n      }\n\n      if (this._editor.getEditorType() === 'vs.editor.ICodeEditor') {\n        this._initEditor();\n        return;\n      }\n    }\n  }\n\n    @Input() set value(v: string) {\n      if (v !== this._value) {\n        this._value = v;\n\n        if (this._value === void 0 || !this._editor) {\n          return;\n        }\n\n        if (this._editor.getEditorType() !== 'vs.editor.ICodeEditor') {\n          this._initEditor();\n          return;\n        }\n\n        this._editor.setValue(this._value);\n      }\n    }\n\n    @Output() valueChange = new EventEmitter();\n    @Output() valueToCompareChange = new EventEmitter();\n    @Output() init = new EventEmitter();\n\n    @ViewChild('editor', {static: true}) editorContent: ElementRef;\n\n    private _editor: any;\n    get editor(): any { return this._editor; }\n\n    private _value = '';\n    private _valueToCompare = '';\n\n    constructor() {\n    }\n\n    /**\n     * load Monaco lib\n     */\n    ngAfterViewInit() {\n        let onGotAmdLoader = () => {\n            // Load monaco\n            (<any>window).require(['vs/editor/editor.main'], () => {\n                this._initMonaco();\n            });\n        };\n\n        // Load AMD loader if necessary\n        if (!(<any>window).require) {\n            let loaderScript = document.createElement('script');\n            loaderScript.type = 'text/javascript';\n            loaderScript.src = this.monacoLibPath;\n            loaderScript.addEventListener('load', onGotAmdLoader);\n            document.body.appendChild(loaderScript);\n        } else {\n            onGotAmdLoader();\n        }\n    }\n\n    /**\n     * Upon destruction of the component we make sure to dispose both the editor and\n     * the extra libs that we might've loaded\n     */\n    ngOnDestroy() {\n        this.dispose();\n    }\n\n    ngOnChanges(_changes: {[propKey: string]: SimpleChange}) {\n        if (this._editor) {\n            this._editor.updateOptions(this._getOptions());\n        }\n    }\n\n    /**\n     * Destroy the monaco componenent\n     */\n    dispose() {\n        let myDiv: HTMLDivElement = this.editorContent.nativeElement;\n        if (this._editor) {\n            this._editor.dispose();\n            while (myDiv.hasChildNodes()) {\n              if (myDiv.firstChild != null) {\n                myDiv.removeChild(myDiv.firstChild);\n              }\n            }\n            this._editor = null;\n        }\n    }\n\n    /**\n     * Triggered when windows is resized\n     * @param event\n     */\n    onResize(_event: any) {\n        // Manually set monaco size because MonacoEditor doesn't work with Flexbox css\n        let myDiv: HTMLDivElement = this.editorContent.nativeElement;\n        if (myDiv == null || myDiv.parentElement == null) { return; }\n        myDiv.setAttribute('style', `height: ${myDiv.parentElement.offsetHeight}px; width:100%;`);\n    }\n\n    /**\n     * Init editor\n     * Is called once monaco library is available\n     */\n    private _initMonaco() {\n        this._initEditor();\n        this.init.emit();\n    }\n\n    private _initEditor() {\n        let myDiv: HTMLDivElement = this.editorContent.nativeElement;\n        let options = this._getOptions();\n        this.dispose();\n\n        if (!this._valueToCompare) {\n            this._editor = this._initSimpleEditor(myDiv, options);\n        } else {\n            this._editor = this._initDiffEditor(myDiv, options);\n        }\n\n        // Manually set monaco size because MonacoEditor doesn't work with Flexbox css\n        if (myDiv != null && myDiv.parentElement != null) {\n          myDiv.setAttribute('style', `height: ${myDiv.parentElement.offsetHeight}px; width:100%;`);\n        }\n\n        // Init Autocomplete if not disabled\n        if (!this.disableAutocomplete) {\n            AutoCompleteSingleton.getInstance().initAutoComplete(this.language);\n        }\n\n        // When content is loaded, scrollChange is trigerred,\n        // We can only force auto format at this moment, because editor\n        // doesn't have onReady event ...\n        //  this._editor.onDidScrollChange(() => {\n        //     if (this.autoFormatOnLoad && !this._isCodeFormatted) {\n        //         this._editor.getAction('editor.action.format').run();\n        //         this._isCodeFormatted = true;\n        //     }\n        // });\n\n        // Trigger on change event for simple editor\n        this._getOriginalModel().onDidChangeContent((_e: any) => {\n            let newVal: string = this._getOriginalModel().getValue();\n            if (this._value !== newVal) {\n                this._updateValue(newVal);\n            }\n        });\n\n        // Trigger on change event for diff editor\n        if (this._getModifiedModel()) {\n            this._getModifiedModel().onDidChangeContent((_e: any) => {\n                let newVal: string = this._getModifiedModel().getValue();\n                if (this._valueToCompare !== newVal) {\n                    this._updateValueToCompare(newVal);\n                }\n            });\n        }\n    }\n\n    /**\n     * Create a simple editor text\n     * @param div\n     * @param options\n     */\n    private _initSimpleEditor(div: HTMLDivElement, options: any) {\n        return monaco.editor.create(div, options);\n    }\n\n    /**\n     * Create a diff editor to compare two string (_value and _valueToCompare)\n     * @param div\n     */\n    private _initDiffEditor(div: HTMLDivElement, options: any) {\n        let originalModel = monaco.editor.createModel(this._value, this.language);\n        let modifiedModel = monaco.editor.createModel(this._valueToCompare, this.language);\n\n        let diffEditor = monaco.editor.createDiffEditor(div, options);\n        diffEditor.setModel({\n            modified: modifiedModel,\n            original: originalModel,\n        });\n\n        return diffEditor;\n    }\n\n    private _getOptions(): IEditorOptions {\n        let options: IEditorOptions = new IEditorOptions();\n        options.experimentalScreenReader = this.experimentalScreenReader;\n        options.ariaLabel = this.ariaLabel;\n        options.rulers = this.rulers;\n        options.wordSeparators = this.wordSeparators;\n        options.selectionClipboard = this.selectionClipboard;\n        options.lineNumbers = this.lineNumbers;\n        options.selectOnLineNumbers = this.selectOnLineNumbers;\n        options.lineNumbersMinChars = this.lineNumbersMinChars;\n        options.glyphMargin = this.glyphMargin;\n        options.lineDecorationsWidth = this.lineDecorationsWidth;\n        options.revealHorizontalRightPadding = this.revealHorizontalRightPadding;\n        options.roundedSelection = this.roundedSelection;\n        options.theme = this.theme;\n        options.readOnly = this.readOnly;\n        options.scrollbar = this.scrollbar;\n        options.overviewRulerLanes = this.overviewRulerLanes;\n        options.cursorBlinking = this.cursorBlinking;\n        options.mouseWheelZoom = this.mouseWheelZoom;\n        options.cursorStyle = this.cursorStyle;\n        options.mouseWheelZoom = this.mouseWheelZoom;\n        options.fontLigatures = this.fontLigatures;\n        options.disableTranslate3d = this.disableTranslate3d;\n        options.hideCursorInOverviewRuler = this.hideCursorInOverviewRuler;\n        options.scrollBeyondLastLine = this.scrollBeyondLastLine;\n        options.automaticLayout = this.automaticLayout;\n        options.wrappingColumn = this.wrappingColumn;\n        options.wordWrap = this.wordWrap;\n        options.wrappingIndent = this.wrappingIndent;\n        options.wordWrapBreakBeforeCharacters = this.wordWrapBreakBeforeCharacters;\n        options.wordWrapBreakAfterCharacters = this.wordWrapBreakAfterCharacters;\n        options.wordWrapBreakObtrusiveCharacters = this.wordWrapBreakObtrusiveCharacters;\n        options.stopRenderingLineAfter = this.stopRenderingLineAfter;\n        options.hover = this.hover;\n        options.contextmenu = this.contextmenu;\n        options.mouseWheelScrollSensitivity = this.mouseWheelScrollSensitivity;\n        options.quickSuggestions = this.quickSuggestions;\n        options.quickSuggestionsDelay = this.quickSuggestionsDelay;\n        options.parameterHints = this.parameterHints;\n        options.iconsInSuggestions = this.iconsInSuggestions;\n        options.autoClosingBrackets = this.autoClosingBrackets;\n        options.formatOnType = this.formatOnType;\n        options.suggestOnTriggerCharacters = this.suggestOnTriggerCharacters;\n        options.acceptSuggestionOnEnter = this.acceptSuggestionOnEnter;\n        options.snippetSuggestions = this.snippetSuggestions;\n        options.tabCompletion = this.tabCompletion;\n        options.wordBasedSuggestions = this.wordBasedSuggestions;\n        options.selectionHighlight = this.selectionHighlight;\n        options.codeLens = this.codeLens;\n        options.folding = this.folding;\n        options.renderWhitespace = this.renderWhitespace;\n        options.renderControlCharacters = this.renderControlCharacters;\n        options.renderIndentGuides = this.renderIndentGuides;\n        options.renderLineHighlight = this.renderLineHighlight;\n        options.useTabStops = this.useTabStops;\n        options.fontFamily = this.fontFamily;\n        options.fontWeight = this.fontWeight;\n        options.fontSize = this.fontSize;\n        options.lineHeight = this.lineHeight;\n        options.value = this._value;\n        options.language = this.language;\n\n        Object.keys(options)\n          .forEach((key) => {\n            if ((<any>options)[key] === undefined) {\n              delete (<any>options)[key]; // Remove all undefined properties\n            }\n          });\n        return options;\n    }\n\n    /**\n     * UpdateValue\n     *\n     * @param value\n     */\n    private _updateValue(value: string) {\n        this.value = value;\n        this._value = value;\n        this.valueChange.emit(value);\n    }\n\n    /**\n     * UpdateValue\n     *\n     * @param value\n     */\n    private _updateValueToCompare(value: string) {\n        this.valueToCompare = value;\n        this._valueToCompare = value;\n        this.valueToCompareChange.emit(value);\n    }\n\n    private _getOriginalModel() {\n        if (this._editor) {\n            let model = this._editor.getModel();\n            return model.original ? model.original : model;\n        }\n    }\n\n    private _getModifiedModel() {\n        if (this._editor) {\n            let model = this._editor.getModel();\n            return model.modified ? model.modified : null;\n        }\n    }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {AjfMonacoEditor} from './monaco-editor';\n\n@NgModule({\n  declarations: [\n    AjfMonacoEditor,\n  ],\n  exports: [\n    AjfMonacoEditor,\n  ]\n})\nexport class AjfMonacoEditorModule { }\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport * from './monaco-editor-module';\nexport * from './monaco-editor';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;AAsBA;;;AAGA;IAMI;KAEC;IAED,mCAAQ,GAAR,UAAS,KAAa;QAClB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,OAAO,IAAI,CAAC;KACf;IAED,kCAAO,GAAP,UAAQ,IAAY;QAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,OAAO,IAAI,CAAC;KACf;IAED,2CAAgB,GAAhB,UAAiB,aAAqB;QAClC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,OAAO,IAAI,CAAC;KACf;IAED,wCAAa,GAAb,UAAc,UAAkB;QAC5B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,OAAO,IAAI,CAAC;KACf;IACL,uBAAC;AAAD,CAAC;;ACtDD;;;;;;;;;;;;;;;;;;;;;AAsBA;;;AAGA;IAAA;KAkCC;IAjCmB,mBAAG,GAAG,KAAK,CAAC;IACZ,iBAAC,GAAG,GAAG,CAAC;IACR,mBAAG,GAAG,KAAK,CAAC;IACZ,sBAAM,GAAG,QAAQ,CAAC;IAClB,mBAAG,GAAG,KAAK,CAAC;IACZ,0BAAU,GAAG,YAAY,CAAC;IAC1B,sBAAM,GAAG,QAAQ,CAAC;IAClB,kBAAE,GAAG,IAAI,CAAC;IACV,0BAAU,GAAG,YAAY,CAAC;IAC1B,oBAAI,GAAG,MAAM,CAAC;IACd,mBAAG,GAAG,KAAK,CAAC;IACZ,oBAAI,GAAG,MAAM,CAAC;IACd,0BAAU,GAAG,YAAY,CAAC;IAC1B,oBAAI,GAAG,MAAM,CAAC;IACd,oBAAI,GAAG,MAAM,CAAC;IACd,mBAAG,GAAG,KAAK,CAAC;IACZ,wBAAQ,GAAG,UAAU,CAAC;IACtB,0BAAU,GAAG,aAAa,CAAC;IAC3B,mBAAG,GAAG,KAAK,CAAC;IACZ,yBAAS,GAAG,WAAW,CAAC;IACxB,wBAAQ,GAAG,UAAU,CAAC;IACtB,0BAAU,GAAG,YAAY,CAAC;IAC1B,sBAAM,GAAG,QAAQ,CAAC;IAClB,iBAAC,GAAG,GAAG,CAAC;IACR,qBAAK,GAAG,OAAO,CAAC;IAChB,oBAAI,GAAG,MAAM,CAAC;IACd,oBAAI,GAAG,MAAM,CAAC;IACd,mBAAG,GAAG,KAAK,CAAC;IACZ,qBAAK,GAAG,OAAO,CAAC;IAChB,0BAAU,GAAG,YAAY,CAAC;IAC1B,kBAAE,GAAG,IAAI,CAAC;IACV,mBAAG,GAAG,KAAK,CAAC;IACZ,oBAAI,GAAG,MAAM,CAAC;IAClC,sBAAC;CAlCD,IAkCC;;AC3DD;;;;;;;;;;;;;;;;;;;;;AAsBA,AAKA;;;AAGA;IAkBI;QAFQ,wBAAmB,GAA2C,EAAE,CAAC;KAIxE;;;;IAhBM,iCAAW,GAAlB;QACI,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE;YAClC,qBAAqB,CAAC,SAAS,GAAG,IAAI,qBAAqB,EAAE,CAAC;SACjE;QACD,OAAO,qBAAqB,CAAC,SAAS,CAAC;KAC1C;IAED,sBAAI,qDAAkB;aAAtB;YACI,OAAO,IAAI,CAAC,mBAAmB,CAAC;SACnC;;;OAAA;;;;;IAaD,gDAAgB,GAAhB,UAAiB,QAAyB;QACtC,IAAI,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,EAAE;YAC/C,OAAO;SACV;QAED,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC;;QAGnD,MAAM,CAAC,SAAS,CAAC,8BAA8B,CAAC,QAAQ,EAAE;YACtD,sBAAsB,EAAE,UAAU,KAAU;;gBAExC,qBAAqB,CAAC,WAAW,EAAE;qBAChC,uBAAuB,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;gBACvD,OAAO,qBAAqB,CAAC,WAAW,EAAE,CAAC,kBAAkB,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;aACtF;SACJ,CAAC,CAAC;KACN;;;;;;IAOD,uDAAuB,GAAvB,UAAwB,QAAyB,EAAE,OAAe;QAC9D,QAAQ,QAAQ;YACZ,KAAK,eAAe,CAAC,GAAG;gBACpB,OAAO,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;YAC/C,KAAK,eAAe,CAAC,IAAI;gBACrB,OAAO,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;YAChD;gBACI,OAAO,EAAE,CAAC;SACjB;KACJ;;;;;IAMO,qDAAqB,GAA7B,UAA8B,OAAe;QACzC,IAAI,QAAQ,GAAwB,EAAE,CAAC;QACvC,IAAI,MAAM,GAAG,IAAI,SAAS,EAAE,CAAC;QAC7B,IAAI,IAAI,GAAG,MAAM,CAAC,eAAe,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;gCAExE,CAAC;;YAEN,IACE,CAAC,OAAK,mBAAmB,CAAC,eAAe,CAAC,GAAG,CAAC;iBAC3C,IAAI,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,GAAA,CAAC;mBAC1C,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,GAAA,CAAC,EACvD;;gBAGE,IAAI,GAAG,GAAG,IAAI,gBAAgB,EAAE;qBAC3B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;qBACzB,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,QAAQ,CAAC;qBACrD,gBAAgB,CAAC,EAAE,CAAC;qBACpB,aAAa,CAAC,MAAI,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,UAAK,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,MAAG,CAAC,CAAC;gBAE/D,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACtB;;;QAhBL,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;oBAA3B,CAAC;SAiBT;;QAGD,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACrB,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;gBACtD,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SAC/E;QAED,OAAO,QAAQ,CAAC;KACnB;IAEO,sDAAsB,GAA9B,UAA+B,OAAe;;QAE1C,IAAM,KAAK,GAAG,uFAAuF,CAAC;QACtG,IAAI,QAAQ,GAAwB,EAAE,CAAC;QACvC,IAAI,CAAM,CAAC;QAEX,OAAO,CAAC,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE;;YAEvC,IAAI,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,SAAS,EAAE;gBAC7B,KAAK,CAAC,SAAS,EAAE,CAAC;aACrB;;YAGD,IACE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,IAAI,CAAC;iBACpD,IAAI,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,GAAA,CAAC;mBAC7B,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,GAAA,CAAC,EAC9C;gBAEE,IAAI,GAAG,GAAG,IAAI,gBAAgB,EAAE;qBAC3B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBACd,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,KAAK,CAAC;qBAClD,gBAAgB,CAAC,EAAE,CAAC;qBACpB,aAAa,CAAC,MAAI,CAAC,CAAC,CAAC,CAAC,OAAI,CAAC,CAAC;gBAEjC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACtB;SACJ;;QAGD,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACrB,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACvD,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SAChF;QAED,OAAO,QAAQ,CAAC;KACnB;IAtHc,+BAAS,GAAiC,IAAI,CAAC;IAuHlE,4BAAC;CAtID,IAsIC;;ACpKD;;;;;;;;;;;;;;;;;;;;;AAyBA;;;AAGA;IAAA;KAoTC;IAAD,qBAAC;AAAD,CAAC,IAAA;;AChVD;;;;;;;;;;;;;;;;;;;;;AAsBA;;;AAGA;IAAA;KAIC;IAHmB,0BAAa,GAAG,IAAI,CAAC;IACrB,+BAAkB,GAAG,SAAS,CAAC;IAC/B,+BAAkB,GAAG,UAAU,CAAC;IACpD,mBAAC;CAJD,IAIC;;AC7BD;;;;;;;;;;;;;;;;;;;;;AAsBA;IA8II;QAxDO,qBAAgB,GAAG,IAAI,CAAC;QACxB,kBAAa,GAAG,cAAc,CAAC;QA2C5B,gBAAW,GAAG,IAAI,YAAY,EAAE,CAAC;QACjC,yBAAoB,GAAG,IAAI,YAAY,EAAE,CAAC;QAC1C,SAAI,GAAG,IAAI,YAAY,EAAE,CAAC;QAO5B,WAAM,GAAG,EAAE,CAAC;QACZ,oBAAe,GAAG,EAAE,CAAC;KAG5B;IAtDH,sBAAa,2CAAc;aAA3B,UAA4B,CAAS;YACnC,IAAI,CAAC,KAAK,IAAI,CAAC,eAAe,EAAE;gBAC9B,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;gBAEzB,IAAI,IAAI,CAAC,eAAe,KAAK,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oBAC7E,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,KAAK,uBAAuB,EAAE;wBAC5E,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,OAAO;qBACR;oBAED,OAAO;iBACR;gBAED,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBAChB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;iBAClB;gBAED,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,KAAK,uBAAuB,EAAE;oBAC5D,IAAI,CAAC,WAAW,EAAE,CAAC;oBACnB,OAAO;iBACR;aACF;SACF;;;OAAA;IAEC,sBAAa,kCAAK;aAAlB,UAAmB,CAAS;YAC1B,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,EAAE;gBACrB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAEhB,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oBAC3C,OAAO;iBACR;gBAED,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,KAAK,uBAAuB,EAAE;oBAC5D,IAAI,CAAC,WAAW,EAAE,CAAC;oBACnB,OAAO;iBACR;gBAED,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACpC;SACF;;;OAAA;IASD,sBAAI,mCAAM;aAAV,cAAoB,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;;;OAAA;;;;IAW1C,yCAAe,GAAf;QAAA,iBAkBC;QAjBG,IAAI,cAAc,GAAG;;YAEX,MAAO,CAAC,OAAO,CAAC,CAAC,uBAAuB,CAAC,EAAE;gBAC7C,KAAI,CAAC,WAAW,EAAE,CAAC;aACtB,CAAC,CAAC;SACN,CAAC;;QAGF,IAAI,CAAO,MAAO,CAAC,OAAO,EAAE;YACxB,IAAI,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACpD,YAAY,CAAC,IAAI,GAAG,iBAAiB,CAAC;YACtC,YAAY,CAAC,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC;YACtC,YAAY,CAAC,gBAAgB,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;YACtD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;SAC3C;aAAM;YACH,cAAc,EAAE,CAAC;SACpB;KACJ;;;;;IAMD,qCAAW,GAAX;QACI,IAAI,CAAC,OAAO,EAAE,CAAC;KAClB;IAED,qCAAW,GAAX,UAAY,QAA2C;QACnD,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;SAClD;KACJ;;;;IAKD,iCAAO,GAAP;QACI,IAAI,KAAK,GAAmB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;QAC7D,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACvB,OAAO,KAAK,CAAC,aAAa,EAAE,EAAE;gBAC5B,IAAI,KAAK,CAAC,UAAU,IAAI,IAAI,EAAE;oBAC5B,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;iBACrC;aACF;YACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACvB;KACJ;;;;;IAMD,kCAAQ,GAAR,UAAS,MAAW;;QAEhB,IAAI,KAAK,GAAmB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;QAC7D,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,CAAC,aAAa,IAAI,IAAI,EAAE;YAAE,OAAO;SAAE;QAC7D,KAAK,CAAC,YAAY,CAAC,OAAO,EAAE,aAAW,KAAK,CAAC,aAAa,CAAC,YAAY,oBAAiB,CAAC,CAAC;KAC7F;;;;;IAMO,qCAAW,GAAnB;QACI,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;KACpB;IAEO,qCAAW,GAAnB;QAAA,iBAgDC;QA/CG,IAAI,KAAK,GAAmB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;QAC7D,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,OAAO,EAAE,CAAC;QAEf,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;SACzD;aAAM;YACH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;SACvD;;QAGD,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,CAAC,aAAa,IAAI,IAAI,EAAE;YAChD,KAAK,CAAC,YAAY,CAAC,OAAO,EAAE,aAAW,KAAK,CAAC,aAAa,CAAC,YAAY,oBAAiB,CAAC,CAAC;SAC3F;;QAGD,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;YAC3B,qBAAqB,CAAC,WAAW,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACvE;;;;;;;;;;;QAaD,IAAI,CAAC,iBAAiB,EAAE,CAAC,kBAAkB,CAAC,UAAC,EAAO;YAChD,IAAI,MAAM,GAAW,KAAI,CAAC,iBAAiB,EAAE,CAAC,QAAQ,EAAE,CAAC;YACzD,IAAI,KAAI,CAAC,MAAM,KAAK,MAAM,EAAE;gBACxB,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;aAC7B;SACJ,CAAC,CAAC;;QAGH,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;YAC1B,IAAI,CAAC,iBAAiB,EAAE,CAAC,kBAAkB,CAAC,UAAC,EAAO;gBAChD,IAAI,MAAM,GAAW,KAAI,CAAC,iBAAiB,EAAE,CAAC,QAAQ,EAAE,CAAC;gBACzD,IAAI,KAAI,CAAC,eAAe,KAAK,MAAM,EAAE;oBACjC,KAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;iBACtC;aACJ,CAAC,CAAC;SACN;KACJ;;;;;;IAOO,2CAAiB,GAAzB,UAA0B,GAAmB,EAAE,OAAY;QACvD,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;KAC7C;;;;;IAMO,yCAAe,GAAvB,UAAwB,GAAmB,EAAE,OAAY;QACrD,IAAI,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC1E,IAAI,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEnF,IAAI,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QAC9D,UAAU,CAAC,QAAQ,CAAC;YAChB,QAAQ,EAAE,aAAa;YACvB,QAAQ,EAAE,aAAa;SAC1B,CAAC,CAAC;QAEH,OAAO,UAAU,CAAC;KACrB;IAEO,qCAAW,GAAnB;QACI,IAAI,OAAO,GAAmB,IAAI,cAAc,EAAE,CAAC;QACnD,OAAO,CAAC,wBAAwB,GAAG,IAAI,CAAC,wBAAwB,CAAC;QACjE,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACnC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC7B,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAC7C,OAAO,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACrD,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACvC,OAAO,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QACvD,OAAO,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QACvD,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACvC,OAAO,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC;QACzD,OAAO,CAAC,4BAA4B,GAAG,IAAI,CAAC,4BAA4B,CAAC;QACzE,OAAO,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACjD,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3B,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACnC,OAAO,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACrD,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAC7C,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAC7C,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACvC,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAC7C,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QAC3C,OAAO,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACrD,OAAO,CAAC,yBAAyB,GAAG,IAAI,CAAC,yBAAyB,CAAC;QACnE,OAAO,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC;QACzD,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAC/C,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAC7C,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAC7C,OAAO,CAAC,6BAA6B,GAAG,IAAI,CAAC,6BAA6B,CAAC;QAC3E,OAAO,CAAC,4BAA4B,GAAG,IAAI,CAAC,4BAA4B,CAAC;QACzE,OAAO,CAAC,gCAAgC,GAAG,IAAI,CAAC,gCAAgC,CAAC;QACjF,OAAO,CAAC,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC;QAC7D,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3B,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACvC,OAAO,CAAC,2BAA2B,GAAG,IAAI,CAAC,2BAA2B,CAAC;QACvE,OAAO,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACjD,OAAO,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;QAC3D,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAC7C,OAAO,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACrD,OAAO,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QACvD,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACzC,OAAO,CAAC,0BAA0B,GAAG,IAAI,CAAC,0BAA0B,CAAC;QACrE,OAAO,CAAC,uBAAuB,GAAG,IAAI,CAAC,uBAAuB,CAAC;QAC/D,OAAO,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACrD,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QAC3C,OAAO,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC;QACzD,OAAO,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACrD,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC/B,OAAO,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACjD,OAAO,CAAC,uBAAuB,GAAG,IAAI,CAAC,uBAAuB,CAAC;QAC/D,OAAO,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACrD,OAAO,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QACvD,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACvC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACrC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACrC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACrC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QAC5B,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEjC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;aACjB,OAAO,CAAC,UAAC,GAAG;YACX,IAAU,OAAQ,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;gBACrC,OAAa,OAAQ,CAAC,GAAG,CAAC,CAAC;aAC5B;SACF,CAAC,CAAC;QACL,OAAO,OAAO,CAAC;KAClB;;;;;;IAOO,sCAAY,GAApB,UAAqB,KAAa;QAC9B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAChC;;;;;;IAOO,+CAAqB,GAA7B,UAA8B,KAAa;QACvC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACzC;IAEO,2CAAiB,GAAzB;QACI,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;YACpC,OAAO,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC;SAClD;KACJ;IAEO,2CAAiB,GAAzB;QACI,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;YACpC,OAAO,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;SACjD;KACJ;;gBAnYJ,SAAS,SAAC;oBACT,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,QAAQ,EAAE,mBAAmB;oBAE7B,6DAAiC;oBACjC,IAAI,EAAE;wBACJ,iBAAiB,EAAE,kBAAkB;qBACtC;;iBACF;;;;;2CAEE,KAAK;4BACL,KAAK;yBACL,KAAK;iCACL,KAAK;qCACL,KAAK;8BACL,KAAK;sCACL,KAAK;sCACL,KAAK;8BACL,KAAK;uCACL,KAAK;+CACL,KAAK;mCACL,KAAK;wBACL,KAAK;2BACL,KAAK;4BACL,KAAK;qCACL,KAAK;iCACL,KAAK;iCACL,KAAK;8BACL,KAAK;gCACL,KAAK;qCACL,KAAK;4CACL,KAAK;uCACL,KAAK;kCACL,KAAK;iCACL,KAAK;2BACL,KAAK;iCACL,KAAK;gDACL,KAAK;+CACL,KAAK;mDACL,KAAK;yCACL,KAAK;wBACL,KAAK;8BACL,KAAK;8CACL,KAAK;mCACL,KAAK;wCACL,KAAK;iCACL,KAAK;qCACL,KAAK;sCACL,KAAK;+BACL,KAAK;6CACL,KAAK;0CACL,KAAK;qCACL,KAAK;gCACL,KAAK;uCACL,KAAK;qCACL,KAAK;2BACL,KAAK;0BACL,KAAK;mCACL,KAAK;0CACL,KAAK;qCACL,KAAK;sCACL,KAAK;8BACL,KAAK;6BACL,KAAK;6BACL,KAAK;2BAEL,KAAK;6BACL,KAAK;2BAEL,KAAK;sCAEL,KAAK;mCACL,KAAK;gCACL,KAAK;iCAEL,KAAK;wBAwBH,KAAK;8BAiBL,MAAM;uCACN,MAAM;uBACN,MAAM;gCAEN,SAAS,SAAC,QAAQ,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;IA2QvC,sBAAC;CApYD;;ACnCA;;;;;;;;;;;;;;;;;;;;;AAsBA;IAIA;KAQsC;;gBARrC,QAAQ,SAAC;oBACR,YAAY,EAAE;wBACZ,eAAe;qBAChB;oBACD,OAAO,EAAE;wBACP,eAAe;qBAChB;iBACF;;IACoC,4BAAC;CARtC;;AC1BA;;;;;;;;;;;;;;;;;;;;GAoBG;;ACpBH;;GAEG;;;;"}