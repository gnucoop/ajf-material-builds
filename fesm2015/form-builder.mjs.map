{"version":3,"file":"form-builder.mjs","sources":["../../../../../../src/material/form-builder/branch-line.ts","../../../../../../src/material/form-builder/branch-line.html","../../../../../../src/material/form-builder/choices-origin-data-source.ts","../../../../../../src/material/form-builder/choices-origin-editor.ts","../../../../../../src/material/form-builder/choices-origin-editor.html","../../../../../../src/material/form-builder/form-builder-service.ts","../../../../../../src/material/form-builder/choices-origin-editor-dialog.ts","../../../../../../src/material/form-builder/choices-origin-editor-dialog.html","../../../../../../src/material/form-builder/condition-editor.ts","../../../../../../src/material/form-builder/fb-condition-editor.html","../../../../../../src/material/form-builder/condition-editor-dialog.ts","../../../../../../src/material/form-builder/condition-editor-dialog.html","../../../../../../src/material/form-builder/form-builder-utils.ts","../../../../../../src/material/form-builder/string-identifier-dialog.ts","../../../../../../src/material/form-builder/string-identifier-dialog.html","../../../../../../src/material/form-builder/node-type-entry.ts","../../../../../../src/material/form-builder/node-type-entry.html","../../../../../../src/material/form-builder/validation-condition-editor-dialog.ts","../../../../../../src/material/form-builder/validation-condition-editor-dialog.html","../../../../../../src/material/form-builder/warning-condition-editor-dialog.ts","../../../../../../src/material/form-builder/warning-condition-editor-dialog.html","../../../../../../src/material/form-builder/node-properties.ts","../../../../../../src/material/form-builder/node-properties.html","../../../../../../src/material/form-builder/node-entry.ts","../../../../../../src/material/form-builder/node-entry.html","../../../../../../src/material/form-builder/form-builder.ts","../../../../../../src/material/form-builder/form-builder.html","../../../../../../src/material/form-builder/form-builder-module.ts","../../../../../../src/material/form-builder/public-api.ts","../../../../../../src/material/form-builder/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  Renderer2,\n  ViewEncapsulation\n} from '@angular/core';\n\n@Component({\n  selector: 'ajf-fb-branch-line',\n  templateUrl: 'branch-line.html',\n  styleUrls: ['branch-line.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbBranchLine {\n  private _offset = 0;\n  @Input()\n  set offset(offset: number) {\n    this._offset = offset;\n    this._updateOffset();\n  }\n\n  private _color: string;\n  @Input()\n  set color(color: string) {\n    this._color = color;\n    this._updateColor();\n  }\n\n  private _height = 0;\n  @Input()\n  set height(height: number) {\n    this._height = height;\n    this._updateHeight();\n  }\n\n  constructor(private _el: ElementRef, private _renderer: Renderer2) {}\n\n  private _updateHeight(): void {\n    const height = `${Math.max(0, this._height - 25)}px`;\n    this._renderer.setStyle(this._el.nativeElement, 'height', height);\n  }\n\n  private _updateOffset(): void {\n    const margin = `${this._offset * 4}px`;\n    this._renderer.setStyle(this._el.nativeElement, 'margin-top', margin);\n    this._renderer.setStyle(this._el.nativeElement, 'margin-left', margin);\n  }\n\n  private _updateColor(): void {\n    this._renderer.setStyle(this._el.nativeElement, 'border-color', this._color);\n  }\n}\n","","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {DataSource} from '@angular/cdk/collections';\n\nimport {BehaviorSubject, Observable} from 'rxjs';\n\n\nexport type ChoicesOriginChoiceEntry = {\n  label: string,\n  value: string\n};\n\nexport class ChoicesOriginDataSource extends DataSource<ChoicesOriginChoiceEntry> {\n  private _choices: BehaviorSubject<ChoicesOriginChoiceEntry[]> =\n      new BehaviorSubject<ChoicesOriginChoiceEntry[]>([]);\n  private _choicesObs: Observable<ChoicesOriginChoiceEntry[]>;\n\n  constructor() {\n    super();\n    this._choicesObs = this._choices as Observable<ChoicesOriginChoiceEntry[]>;\n  }\n\n  connect(): Observable<ChoicesOriginChoiceEntry[]> {\n    return this._choicesObs;\n  }\n\n  disconnect() {}\n\n  updateChoices(choices: ChoicesOriginChoiceEntry[]) {\n    this._choices.next(choices);\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin, isChoicesFixedOrigin} from '@ajf/core/forms';\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\n\nimport {ChoicesOriginChoiceEntry, ChoicesOriginDataSource} from './choices-origin-data-source';\n\n\n@Component({\n  selector: 'ajf-fb-choices-origin-editor',\n  templateUrl: 'choices-origin-editor.html',\n  styleUrls: ['choices-origin-editor.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbChoicesOriginEditor {\n  private _displayedColumns: string[] = ['label', 'value', 'delete'];\n  get displayedColumns(): string[] {\n    return this._displayedColumns;\n  }\n\n  private _choicesOrigin: AjfChoicesOrigin<any>;\n  get choicesOrigin(): AjfChoicesOrigin<any> {\n    return this._choicesOrigin;\n  }\n  @Input()\n  set choicesOrigin(choicesOrigin: AjfChoicesOrigin<any>) {\n    this._choicesOrigin = choicesOrigin;\n    this.name = choicesOrigin.name;\n    this.label = choicesOrigin.label;\n\n    this.canEditChoices = isChoicesFixedOrigin(choicesOrigin);\n    this._choicesArr = choicesOrigin.choices;\n    this._choices.updateChoices(this._choicesArr);\n  }\n\n  editing: {[key: string]: boolean} = {};\n  name: string;\n  label: string;\n  canEditChoices: boolean;\n\n  private _choices: ChoicesOriginDataSource = new ChoicesOriginDataSource();\n  get choices(): ChoicesOriginDataSource {\n    return this._choices;\n  }\n\n  private _choicesArr: ChoicesOriginChoiceEntry[] = [];\n  get choicesArr(): ChoicesOriginChoiceEntry[] {\n    return this._choicesArr;\n  }\n\n  updateValue(evt: any, cell: string, _value: any, rowIdx: number): void {\n    this.editing[rowIdx + '-' + cell] = false;\n    (this._choicesArr[rowIdx] as any)[cell] = evt.target.value;\n    this._choices.updateChoices(this._choicesArr);\n  }\n\n  deleteRow(rowIdx: number): void {\n    this._choicesArr.splice(rowIdx, 1);\n    this._choices.updateChoices(this._choicesArr);\n  }\n\n  addRow(): void {\n    this._choicesArr.push({label: '', value: ''});\n    this._choices.updateChoices(this._choicesArr);\n  }\n}\n","<div>\n  <mat-form-field>\n    <input matInput [(ngModel)]=\"name\" [placeholder]=\"'Name' | transloco\" />\n  </mat-form-field>\n  <mat-form-field>\n    <input matInput [(ngModel)]=\"label\" [placeholder]=\"'Label' | transloco\" />\n  </mat-form-field>\n  <ng-template [ngIf]=\"canEditChoices\">\n    <button (click)=\"addRow()\" mat-button>\n      <mat-icon>add</mat-icon>\n      <span>{{'Add value'|transloco}}</span>\n    </button>\n    <mat-table [dataSource]=\"choices\">\n      <ng-container matColumnDef=\"label\">\n        <mat-header-cell *matHeaderCellDef\n          >{{'Label'|transloco}}</mat-header-cell\n        >\n        <mat-cell *matCellDef=\"let row; let idx = index\">\n          <input matInput [(ngModel)]=\"row.label\" type=\"text\" />\n        </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"value\">\n        <mat-header-cell *matHeaderCellDef\n          >{{'Value'|transloco}}</mat-header-cell\n        >\n        <mat-cell *matCellDef=\"let row; let idx = index\">\n          <input matInput [(ngModel)]=\"row.value\" type=\"text\" />\n        </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"delete\">\n        <mat-header-cell *matHeaderCellDef\n          >{{'Delete'|transloco}}</mat-header-cell\n        >\n        <mat-cell *matCellDef=\"let row; let idx = index\">\n          <mat-icon (click)=\"deleteRow(idx)\">{{'delete'|transloco}}</mat-icon>\n        </mat-cell>\n      </ng-container>\n\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n    </mat-table>\n  </ng-template>\n</div>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfAttachmentsOrigin,\n  AjfChoicesOrigin,\n  AjfField,\n  AjfFieldType,\n  AjfFieldWithChoices,\n  AjfForm,\n  AjfFormStringIdentifier,\n  AjfNode,\n  AjfNodeGroup,\n  AjfNodesOperation,\n  AjfNodeType,\n  AjfRepeatingContainerNode,\n  AjfRepeatingSlide,\n  AjfSlide,\n  createChoicesFixedOrigin,\n  createContainerNode,\n  createField,\n  createForm,\n  createValidation,\n  createValidationGroup,\n  createWarning,\n  createWarningGroup,\n  isChoicesFixedOrigin,\n  isContainerNode,\n  isField,\n  isFieldWithChoices,\n  isRepeatingContainerNode,\n  isSlidesNode,\n  maxDigitsValidation,\n  maxValidation,\n  minDigitsValidation,\n  minValidation,\n  notEmptyValidation,\n  notEmptyWarning\n} from '@ajf/core/forms';\nimport {AjfCondition, alwaysCondition, createCondition, createFormula} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\nimport {moveItemInArray} from '@angular/cdk/drag-drop';\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject, Subscription} from 'rxjs';\nimport {filter, map, publishReplay, refCount, scan, withLatestFrom} from 'rxjs/operators';\n\nimport {\n  AjfAttachmentsOriginsOperation,\n  AjfChoicesOriginsOperation,\n  AjfFormStringIdentifierOperation\n} from './operations';\n\n\nexport interface AjfFormBuilderNodeTypeEntry {\n  label: string;\n  icon: {fontSet: string, fontIcon: string};\n  nodeType: {\n    node: AjfNodeType;\n    field?: AjfFieldType,\n  };\n  isSlide?: boolean;\n}\n\n\nexport interface AjfFormBuilderNodeEntry {\n  node: AjfNode;\n  container: AjfContainerNode|null;\n  children: AjfFormBuilderNodeEntry[];\n  content: AjfFormBuilderNodeEntry[];\n}\n\n\nexport interface AjfFormBuilderEmptySlot {\n  parent: AjfNode;\n  parentNode: number;\n}\n\n/**\n * Represents a node's position change in the formbuilder.\n */\nexport interface AjfFormBuilderMoveEvent {\n  /**\n   * The node being moved.\n   */\n  nodeEntry: AjfFormBuilderNode;\n\n  /**\n   * The index of the node previous position.\n   */\n  fromIndex: number;\n\n  /**\n   * The index of the node new position.\n   */\n  toIndex: number;\n}\n\n\nexport type AjfFormBuilderNode = AjfFormBuilderNodeEntry|AjfFormBuilderEmptySlot;\nexport type AjfContainerNode = AjfSlide|AjfRepeatingSlide|AjfNodeGroup;\n\nfunction getNodeContainer(c: {nodes: AjfNode[]}, node: AjfNode): {nodes: AjfNode[]}|null {\n  if (c.nodes.indexOf(node) > -1) {\n    return c;\n  }\n  const cns = c.nodes.filter(n => isContainerNode(n));\n  const len = cns.length;\n  for (let i = 0; i < len; i++) {\n    const cn = getNodeContainer(<AjfContainerNode>cns[i], node);\n    if (cn != null) {\n      return cn;\n    }\n  }\n  return null;\n}\n\nfunction buildFormBuilderNodesSubtree(\n    nodes: AjfNode[], parent: AjfNode, ignoreConditionalBranches = false): AjfFormBuilderNode[] {\n  const entries: AjfFormBuilderNode[] = nodes.filter(n => n.parent === parent.id)\n                                            .sort((n1, n2) => n1.parentNode - n2.parentNode)\n                                            .map(n => {\n                                              const children =\n                                                  buildFormBuilderNodesSubtree(nodes, n);\n                                              if (children.length === 0) {\n                                                children.push({parent: n, parentNode: 0});\n                                              }\n                                              return <AjfFormBuilderNodeEntry>{\n                                                node: n,\n                                                children,\n                                                content: buildFormBuilderNodesContent(nodes, n)\n                                              };\n                                            });\n  if (!ignoreConditionalBranches) {\n    const entriesNum = entries.length;\n    const cbs = parent.conditionalBranches.length;\n    for (let i = entriesNum; i < cbs; i++) {\n      entries.push({parent: parent, parentNode: i});\n    }\n  }\n  return entries;\n}\n\nfunction buildFormBuilderNodesContent(_nodes: AjfNode[], node: AjfNode): AjfFormBuilderNode[] {\n  if (isContainerNode(node)) {\n    return buildFormBuilderNodesSubtree((<AjfContainerNode>node).nodes, node, true);\n  }\n  return [];\n}\n\nexport function flattenNodes(nodes: AjfNode[]): AjfNode[] {\n  let flatNodes: AjfNode[] = [];\n\n  nodes.forEach((node: AjfNode) => {\n    if (isContainerNode(node)) {\n      flatNodes = flatNodes.concat(flattenNodes((<AjfContainerNode>node).nodes));\n    }\n    flatNodes.push(node);\n  });\n\n  return flatNodes;\n}\n\nfunction getDescendants(\n    flatNodes: AjfNode[], parentNode: AjfNode, branch: number|null = null): AjfNode[] {\n  return branch != null ?\n      flatNodes.filter(n => n.parent === parentNode.id && n.parentNode === branch) :\n      flatNodes.filter(n => n.parent === parentNode.id);\n}\n\nfunction removeNodes(nodes: AjfNode[], ids: number[]): AjfNode[] {\n  const len = nodes.length;\n  for (let i = 0; i < len; i++) {\n    const node = nodes[i];\n    if (isContainerNode(node)) {\n      const container = (<AjfContainerNode>node);\n      container.nodes = removeNodes(container.nodes, ids);\n    }\n  }\n  return nodes.filter(n => ids.indexOf(n.id) === -1);\n}\n\nfunction deleteNodeSubtree(\n    nodes: AjfNode[], parentNode: AjfNode, branch: number|null = null): AjfNode[] {\n  const flatNodes = flattenNodes(nodes);\n  let delNodes: AjfNode[] = [];\n  let descendants = getDescendants(flatNodes, parentNode, branch);\n  const len = descendants.length;\n  for (let i = 0; i < len; i++) {\n    delNodes = delNodes.concat(getDescendants(flatNodes, descendants[i]));\n  }\n  delNodes = delNodes.concat(descendants);\n  return removeNodes(nodes, delNodes.map(n => n.id));\n}\n\nlet nodeUniqueId = 0;\n\n\n@Injectable()\nexport class AjfFormBuilderService {\n  private _availableNodeTypes: AjfFormBuilderNodeTypeEntry[] = [\n    {\n      label: 'Slide',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-slide'},\n      nodeType: {node: AjfNodeType.AjfSlide},\n      isSlide: true\n    },\n    {\n      label: 'Repeating slide',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-repeatingslide'},\n      nodeType: {node: AjfNodeType.AjfRepeatingSlide},\n      isSlide: true\n    },\n    {\n      label: 'String',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-string'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.String}\n    },\n    {\n      label: 'Text',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-text'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Text}\n    },\n    {\n      label: 'Number',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-number'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Number}\n    },\n    {\n      label: 'Boolean',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-boolean'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Boolean}\n    },\n    {\n      label: 'Single choice',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-singlechoice'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.SingleChoice}\n    },\n    {\n      label: 'Multiple choice',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-multiplechoice'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.MultipleChoice}\n    },\n    {\n      label: 'Formula',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-formula'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Formula}\n    },\n    {\n      label: 'Date',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-date'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Date}\n    },\n    {\n      label: 'Date input',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-dateinput'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.DateInput}\n    },\n    {\n      label: 'Time',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-time'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Time}\n    },\n    {\n      label: 'Table',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-table'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Table}\n    },\n    {\n      label: 'Range',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-range'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Range}\n    }\n  ];\n  /**\n   * Available node types\n   *\n   * @readonly\n   * @memberOf AjfFormBuilderService\n   */\n  get availableNodeTypes(): AjfFormBuilderNodeTypeEntry[] {\n    return this._availableNodeTypes;\n  }\n\n  private _form: BehaviorSubject<AjfForm|null> = new BehaviorSubject<AjfForm|null>(null);\n  private _formObs: Observable<AjfForm|null> = this._form as Observable<AjfForm|null>;\n\n  /**\n   * Current edited form stream\n   *\n   * @readonly\n   * @memberOf AjfFormBuilderService\n   */\n  get form(): Observable<AjfForm|null> {\n    return this._formObs;\n  }\n\n  private _attachmentsOrigins: Observable<AjfAttachmentsOrigin<any>[]>;\n  get attachmentsOrigins(): Observable<AjfAttachmentsOrigin<any>[]> {\n    return this._attachmentsOrigins;\n  }\n\n  private _choicesOrigins: Observable<AjfChoicesOrigin<any>[]>;\n  get choicesOrigins(): Observable<AjfChoicesOrigin<any>[]> {\n    return this._choicesOrigins;\n  }\n\n  private _stringIdentifier: Observable<AjfFormStringIdentifier[]>;\n  get stringIdentifier(): Observable<AjfFormStringIdentifier[]> {\n    return this._stringIdentifier;\n  }\n\n  private _nodesWithoutChoiceOrigins: Observable<AjfSlide[]>;\n  private _nodes: Observable<AjfNode[]>;\n  get nodes(): Observable<AjfNode[]> {\n    return this._nodes;\n  }\n\n  private _flatNodes: Observable<AjfNode[]>;\n  get flatNodes(): Observable<AjfNode[]> {\n    return this._flatNodes;\n  }\n\n  private _flatFields: Observable<AjfField[]>;\n  get flatFields(): Observable<AjfField[]> {\n    return this._flatFields;\n  }\n\n  private _nodeEntriesTree: Observable<AjfFormBuilderNodeEntry[]>;\n  get nodeEntriesTree(): Observable<AjfFormBuilderNodeEntry[]> {\n    return this._nodeEntriesTree;\n  }\n\n  /**\n   * A list of the ids of the dropLists connected to the source list.\n   */\n  private _connectedDropLists: BehaviorSubject<string[]> = new BehaviorSubject<string[]>([]);\n  get connectedDropLists(): BehaviorSubject<string[]> {\n    return this._connectedDropLists;\n  }\n\n  private _editedNodeEntry: BehaviorSubject<AjfFormBuilderNodeEntry|null> =\n      new BehaviorSubject<AjfFormBuilderNodeEntry|null>(null);\n  private _editedNodeEntryObs: Observable<AjfFormBuilderNodeEntry|null> =\n      this._editedNodeEntry as Observable<AjfFormBuilderNodeEntry|null>;\n  get editedNodeEntry(): Observable<AjfFormBuilderNodeEntry|null> {\n    return this._editedNodeEntryObs;\n  }\n\n  private _editedCondition: BehaviorSubject<AjfCondition|null> =\n      new BehaviorSubject<AjfCondition|null>(null);\n  private _editedConditionObs: Observable<AjfCondition|null> =\n      this._editedCondition as Observable<AjfCondition|null>;\n  get editedCondition(): Observable<AjfCondition|null> {\n    return this._editedConditionObs;\n  }\n\n  private _editedChoicesOrigin: BehaviorSubject<AjfChoicesOrigin<any>|null> =\n      new BehaviorSubject<AjfChoicesOrigin<any>|null>(null);\n  private _editedChoicesOriginObs: Observable<AjfChoicesOrigin<any>|null> =\n      this._editedChoicesOrigin as Observable<AjfChoicesOrigin<any>|null>;\n  get editedChoicesOrigin(): Observable<AjfChoicesOrigin<any>|null> {\n    return this._editedChoicesOriginObs;\n  }\n\n  private _beforeNodesUpdate: EventEmitter<void> = new EventEmitter<void>();\n  private _beforeNodesUpdateObs: Observable<void> = this._beforeNodesUpdate as Observable<void>;\n  get beforeNodesUpdate(): Observable<void> {\n    return this._beforeNodesUpdateObs;\n  }\n  private _afterNodeUpdate: EventEmitter<void> = new EventEmitter<void>();\n  private _afterNodeUpdateObs: Observable<void> = this._afterNodeUpdate as Observable<void>;\n  get afterNodeUpdate(): Observable<void> {\n    return this._afterNodeUpdateObs;\n  }\n\n  private _nodesUpdates: Subject<AjfNodesOperation> = new Subject<AjfNodesOperation>();\n  private _attachmentsOriginsUpdates: Subject<AjfAttachmentsOriginsOperation> =\n      new Subject<AjfAttachmentsOriginsOperation>();\n  private _choicesOriginsUpdates: Subject<AjfChoicesOriginsOperation> =\n      new Subject<AjfChoicesOriginsOperation>();\n  private _stringIdentifierUpdates: Subject<AjfFormStringIdentifierOperation> =\n      new Subject<AjfFormStringIdentifierOperation>();\n\n  private _saveNodeEntryEvent: EventEmitter<any> = new EventEmitter<any>();\n  private _deleteNodeEntryEvent: EventEmitter<AjfFormBuilderNodeEntry> =\n      new EventEmitter<AjfFormBuilderNodeEntry>();\n  /**\n   * Event fired when the position of a node in a tree changes.\n   */\n  private _moveNodeEntryEvent: EventEmitter<AjfFormBuilderMoveEvent> =\n      new EventEmitter<AjfFormBuilderMoveEvent>();\n\n  /**\n   * Subscribes to the moveNodeEntryEvent event emitter;\n   */\n  private _moveNodeSub: Subscription = Subscription.EMPTY;\n\n  constructor() {\n    this._initChoicesOriginsStreams();\n    this._initAttachmentsOriginsStreams();\n    this._initStringIdentifierStreams();\n    this._initNodesStreams();\n    this._initFormStreams();\n    this._initSaveNode();\n    this._initMoveNode();\n    this._initDeleteNode();\n  }\n\n  /**\n   * Sets the current edited form\n   *\n   * @param form\n   *\n   * @memberOf AjfFormBuilderService\n   */\n  setForm(form: AjfForm|null): void {\n    if (form !== this._form.getValue()) {\n      this._form.next(form);\n    }\n  }\n\n  editNodeEntry(nodeEntry: AjfFormBuilderNodeEntry): void {\n    this._editedNodeEntry.next(nodeEntry);\n  }\n\n  editCondition(condition: AjfCondition): void {\n    this._editedCondition.next(condition);\n  }\n\n  saveCurrentCondition(condition: string): void {\n    let c = this._editedCondition.getValue();\n    if (c == null) {\n      return;\n    }\n    c.condition = condition;\n    this._editedCondition.next(null);\n  }\n\n  cancelConditionEdit(): void {\n    this._editedChoicesOrigin.next(null);\n  }\n\n  assignListId(node: AjfNode, empty: boolean = false): string {\n    if (node.nodeType === AjfNodeType.AjfSlide || node.nodeType === AjfNodeType.AjfRepeatingSlide) {\n      const listId = empty ? `empty_fields_list_${node.id}` : `fields_list_${node.id}`;\n      if (this._connectedDropLists.value.indexOf(listId) == -1) {\n        this._connectDropList(listId);\n      }\n      return listId;\n    }\n    return '';\n  }\n\n  insertNode(\n      nodeType: AjfFormBuilderNodeTypeEntry, parent: AjfNode, parentNode: number, inContent = false,\n      insertInIndex = 0): void {\n    let node: AjfNode|AjfField;\n    const id = ++nodeUniqueId;\n    const isFieldNode = nodeType.nodeType?.field != null;\n    if (isFieldNode) {\n      node = createField({\n        id,\n        nodeType: AjfNodeType.AjfField,\n        fieldType: nodeType.nodeType.field!,\n        parent: parent.id,\n        parentNode,\n        name: '',\n      });\n    } else {\n      node = createContainerNode({\n        id,\n        nodeType: nodeType.nodeType.node,\n        parent: 0,\n        parentNode,\n        name: '',\n        nodes: [],\n      });\n    }\n    this._beforeNodesUpdate.emit();\n    this._nodesUpdates.next((nodes: AjfNode[]): AjfNode[] => {\n      const cn = isContainerNode(parent) && inContent ?\n          (<AjfContainerNode>parent) :\n          getNodeContainer({nodes}, parent) as AjfContainerNode;\n      if (!isFieldNode) {\n        let newNodes = nodes.slice(0);\n        newNodes.splice(insertInIndex, 0, node);\n        newNodes = this._updateNodesList(0, newNodes);\n        return newNodes;\n      } else {\n        let newNodes = cn.nodes.slice(0);\n        newNodes.splice(insertInIndex, 0, node);\n        newNodes = this._updateNodesList(cn.id, newNodes);\n        cn.nodes = newNodes;\n      }\n      return nodes;\n    });\n  }\n\n  saveNodeEntry(properties: any): void {\n    this._saveNodeEntryEvent.emit(properties);\n  }\n\n  cancelNodeEntryEdit(): void {\n    this._editedNodeEntry.next(null);\n  }\n\n  deleteNodeEntry(nodeEntry: AjfFormBuilderNodeEntry): void {\n    this._deleteNodeEntryEvent.next(nodeEntry);\n  }\n\n  /**\n   * Triggers the moveNode event when a node is moved in the formbuilder.\n   * @param nodeEntry The node to be moved.\n   */\n  moveNodeEntry(nodeEntry: AjfFormBuilderNodeEntry, from: number, to: number): void {\n    const moveEvent: AjfFormBuilderMoveEvent = {nodeEntry: nodeEntry, fromIndex: from, toIndex: to};\n    this._moveNodeEntryEvent.next(moveEvent);\n  }\n\n  getCurrentForm(): Observable<AjfForm> {\n    return combineLatest([\n             this.form, this._nodesWithoutChoiceOrigins, this.attachmentsOrigins,\n             this.choicesOrigins, this.stringIdentifier\n           ])\n        .pipe(\n            filter(([form]) => form != null),\n            map(([form, nodes, attachmentsOrigins, choicesOrigins, stringIdentifier]) => {\n              return createForm({\n                choicesOrigins: (choicesOrigins as AjfChoicesOrigin<any>[]).slice(0),\n                attachmentsOrigins: (attachmentsOrigins as AjfAttachmentsOrigin<any>[]).slice(0),\n                stringIdentifier: ((stringIdentifier || []) as AjfFormStringIdentifier[]).slice(0),\n                nodes: (nodes as AjfSlide[]).slice(0),\n                supplementaryInformations: (form as AjfForm).supplementaryInformations,\n              });\n            }));\n  }\n\n  editChoicesOrigin(choicesOrigin: AjfChoicesOrigin<any>): void {\n    this._editedChoicesOrigin.next(choicesOrigin);\n  }\n\n  createChoicesOrigin(): void {\n    this._editedChoicesOrigin.next(createChoicesFixedOrigin<any>({name: ''}));\n  }\n\n  cancelChoicesOriginEdit(): void {\n    this._editedChoicesOrigin.next(null);\n  }\n\n  saveChoicesOrigin(params: {label: string, name: string, choices: any[]}): void {\n    const choicesOrigin = this._editedChoicesOrigin.getValue();\n    if (choicesOrigin != null) {\n      choicesOrigin.label = params.label;\n      choicesOrigin.name = params.name;\n      if (isChoicesFixedOrigin(choicesOrigin)) {\n        choicesOrigin.choices = params.choices;\n      }\n      this._choicesOriginsUpdates.next((choicesOrigins) => {\n        const idx = choicesOrigins.indexOf(choicesOrigin);\n        if (idx > -1) {\n          choicesOrigins = [\n            ...choicesOrigins.slice(0, idx),\n            choicesOrigin,\n            ...choicesOrigins.slice(idx + 1),\n          ];\n        } else {\n          choicesOrigins = [...choicesOrigins, choicesOrigin];\n        }\n        return choicesOrigins;\n      });\n    }\n    this._editedChoicesOrigin.next(null);\n  }\n\n  saveStringIdentifier(identifier: AjfFormStringIdentifier[]): void {\n    this._stringIdentifierUpdates.next(() => [...identifier]);\n  }\n\n  private _buildFormBuilderNodesTree(nodes: AjfNode[]): (AjfFormBuilderNode|null)[] {\n    this._updateNodesList(0, nodes);\n    const rootNodes = nodes.filter(\n        n => n.nodeType == AjfNodeType.AjfSlide || n.nodeType == AjfNodeType.AjfRepeatingSlide);\n    if (rootNodes.length === 0) {\n      return [null];\n    }\n    const rootNode = rootNodes[0];\n    if (isSlidesNode(rootNode)) {\n      const tree: AjfFormBuilderNode[] = [];\n      tree.push(<AjfFormBuilderNodeEntry>{\n        node: rootNode,\n        container: null,\n        children: buildFormBuilderNodesSubtree(nodes, rootNode),\n        content: buildFormBuilderNodesContent(nodes, rootNode)\n      });\n      return tree;\n    }\n    throw new Error('Invalid form definition');\n  }\n\n  /**\n   * Adds the id of a dropList to be connected with the FormBuilder source list.\n   * @param listId The id of the list to connect.\n   */\n  private _connectDropList(listId: string) {\n    let connectedLists = this._connectedDropLists.value.slice(0);\n    this._connectedDropLists.next([...connectedLists, listId]);\n  }\n\n  private _findMaxNodeId(nodes: AjfNode[], _curMaxId = 0): number {\n    let maxId = 0;\n    nodes.forEach((n) => {\n      maxId = Math.max(maxId, n.id);\n      if (isContainerNode(n)) {\n        maxId = Math.max(maxId, this._findMaxNodeId((<AjfContainerNode>n).nodes));\n      }\n    });\n    return maxId;\n  }\n\n  private _initFormStreams(): void {\n    this._form.subscribe((form: AjfForm|null) => {\n      nodeUniqueId = 0;\n      if (form != null && form.nodes != null && form.nodes.length > 0) {\n        nodeUniqueId = this._findMaxNodeId(form.nodes);\n      }\n      this._nodesUpdates.next((_nodes: AjfNode[]): AjfNode[] => {\n        return form != null && form.nodes != null ? form.nodes.slice(0) : [];\n      });\n      this._attachmentsOriginsUpdates.next(\n          (_attachmentsOrigins: AjfAttachmentsOrigin<any>[]): AjfAttachmentsOrigin<any>[] => {\n            return form != null && form.attachmentsOrigins != null ?\n                form.attachmentsOrigins.slice(0) :\n                [];\n          });\n      this._choicesOriginsUpdates.next(\n          (_choicesOrigins: AjfChoicesOrigin<any>[]): AjfChoicesOrigin<any>[] => {\n            return form != null && form.choicesOrigins != null ? form.choicesOrigins.slice(0) : [];\n          });\n      this._stringIdentifierUpdates.next(\n          (_: AjfFormStringIdentifier[]): AjfFormStringIdentifier[] => {\n            return form != null && form.stringIdentifier != null ? form.stringIdentifier.slice(0) :\n                                                                   [];\n          });\n    });\n  }\n\n  private _initChoicesOriginsStreams(): void {\n    this._choicesOrigins =\n        (<Observable<AjfChoicesOriginsOperation>>this._choicesOriginsUpdates)\n            .pipe(\n                scan((choicesOrigins: AjfChoicesOrigin<any>[], op: AjfChoicesOriginsOperation) => {\n                  return op(choicesOrigins);\n                }, []), publishReplay(1), refCount());\n  }\n\n  private _initAttachmentsOriginsStreams(): void {\n    this._attachmentsOrigins = this._attachmentsOriginsUpdates.pipe(\n        scan(\n            (attachmentsOrigins: AjfAttachmentsOrigin<any>[],\n             op: AjfAttachmentsOriginsOperation) => {\n              return op(attachmentsOrigins);\n            },\n            []),\n        publishReplay(1),\n        refCount(),\n    );\n  }\n\n  private _initStringIdentifierStreams(): void {\n    this._stringIdentifier = this._stringIdentifierUpdates.pipe(\n        scan(\n            (stringIdentifier: AjfFormStringIdentifier[], op: AjfFormStringIdentifierOperation) => {\n              return op(stringIdentifier);\n            },\n            []),\n        publishReplay(1),\n        refCount(),\n    );\n  }\n\n  private _initNodesStreams(): void {\n    this._nodes = (<Observable<AjfNodesOperation>>this._nodesUpdates)\n                      .pipe(\n                          scan(\n                              (nodes: AjfNode[], op: AjfNodesOperation) => {\n                                return op(nodes);\n                              },\n                              []),\n                          publishReplay(1),\n                          refCount(),\n                      );\n\n    this._nodesWithoutChoiceOrigins =\n        (this._nodes as Observable<AjfSlide[]>).pipe(map(slides => slides.map(slide => {\n          slide.nodes = (slide.nodes as AjfField[]).map((node: AjfField) => {\n            if (isFieldWithChoices(node)) {\n              const fwc = deepCopy(node);\n              if (fwc && fwc.choices) {\n                delete fwc.choices;\n              }\n              if (fwc && fwc.choicesOrigin) {\n                delete fwc.choicesOrigin;\n              }\n              return fwc;\n            }\n            return node;\n          });\n          return slide;\n        })));\n\n    this._flatNodes = this._nodes.pipe(\n        map((nodes: AjfNode[]) => flattenNodes(nodes)), publishReplay(1), refCount());\n\n    this._flatFields = this._flatNodes.pipe(\n        map((nodes: AjfNode[]) => <AjfField[]>nodes.filter(n => !isContainerNode(n))),\n        publishReplay(1), refCount());\n\n    this._nodeEntriesTree = this._nodes.pipe(\n        map(nodes => <AjfFormBuilderNodeEntry[]>this._buildFormBuilderNodesTree(nodes)),\n        publishReplay(1),\n        refCount(),\n    );\n  }\n\n  private _initSaveNode(): void {\n    this._saveNodeEntryEvent\n        .pipe(\n            withLatestFrom(this.editedNodeEntry, this.choicesOrigins, this.attachmentsOrigins),\n            filter(([_, nodeEntry]) => nodeEntry != null),\n            map(([properties, ne]) => {\n              this._beforeNodesUpdate.emit();\n              const nodeEntry = ne as AjfFormBuilderNodeEntry;\n              const origNode = nodeEntry.node;\n              const node = deepCopy(origNode);\n              node.id = nodeEntry.node.id;\n              node.name = properties.name;\n              node.label = properties.label;\n              node.visibility = properties.visibility != null ?\n                  createCondition({condition: properties.visibility}) :\n                  null;\n\n              const oldConditionalBranches = node.conditionalBranches.length;\n              node.conditionalBranches = properties.conditionalBranches != null ?\n                  properties.conditionalBranches.map(\n                      (condition: string) => createCondition({condition})) :\n                  [alwaysCondition()];\n              const newConditionalBranches = node.conditionalBranches.length;\n\n              if (isRepeatingContainerNode(node)) {\n                const repNode = <AjfRepeatingContainerNode>node;\n                repNode.formulaReps = properties.formulaReps != null ?\n                    createFormula({formula: properties.formulaReps}) :\n                    undefined;\n                repNode.minReps = properties.minReps;\n                repNode.maxReps = properties.maxReps;\n              }\n\n              if (isField(node)) {\n                const field = node as AjfField;\n                field.description = properties.description;\n                field.defaultValue = properties.defaultValue;\n                field.formula = properties.formula != null ?\n                    createFormula({formula: properties.formula}) :\n                    undefined;\n                const forceValue = properties.value;\n                const notEmpty = properties.notEmpty;\n                const validationConditions = properties.validationConditions;\n                let minValue: number|null = parseInt(properties.minValue, 10);\n                let maxValue: number|null = parseInt(properties.maxValue, 10);\n                let minDigits: number|null = parseInt(properties.minDigits, 10);\n                let maxDigits: number|null = parseInt(properties.maxDigits, 10);\n                if (isNaN(minValue)) {\n                  minValue = null;\n                }\n                if (isNaN(maxValue)) {\n                  maxValue = null;\n                }\n                if (isNaN(minDigits)) {\n                  minDigits = null;\n                }\n                if (isNaN(maxDigits)) {\n                  maxDigits = null;\n                }\n                if (forceValue != null || notEmpty != null ||\n                    (validationConditions != null && validationConditions.length > 0) ||\n                    minValue != null || maxValue != null || minDigits != null ||\n                    maxDigits != null) {\n                  const validation = field.validation || createValidationGroup({});\n                  validation.forceValue = forceValue;\n                  validation.notEmpty = notEmpty ? notEmptyValidation() : undefined;\n                  validation.minValue = minValue != null ? minValidation(minValue) : undefined;\n                  validation.maxValue = maxValue != null ? maxValidation(maxValue) : undefined;\n                  validation.minDigits =\n                      minDigits != null ? minDigitsValidation(minDigits) : undefined;\n                  validation.maxDigits =\n                      maxDigits != null ? maxDigitsValidation(maxDigits) : undefined;\n                  validation.conditions =\n                      (validationConditions ||\n                       []).map((c: {condition: string, errorMessage: string}) => createValidation({\n                                 condition: c.condition,\n                                 errorMessage: c.errorMessage\n                               }));\n                  field.validation = validation;\n                } else {\n                  field.validation = undefined;\n                }\n                const notEmptyWarn = properties.notEmptyWarning;\n                const warningConditions = properties.warningConditions;\n                if (notEmptyWarn != null ||\n                    (warningConditions != null && warningConditions.length > 0)) {\n                  const warning = field.warning || createWarningGroup({});\n                  warning.notEmpty = notEmptyWarn ? notEmptyWarning() : undefined;\n                  warning.conditions =\n                      (warningConditions ||\n                       []).map((w: {condition: string, warningMessage: string}) => createWarning({\n                                 condition: w.condition,\n                                 warningMessage: w.warningMessage\n                               }));\n                  field.warning = warning;\n                } else {\n                  field.warning = undefined;\n                }\n                field.nextSlideCondition = properties.nextSlideCondition != null ?\n                    createCondition({condition: properties.nextSlideCondition}) :\n                    undefined;\n                field.size = properties.size;\n                field.defaultValue = properties.defaultValue;\n\n                if (isFieldWithChoices(field)) {\n                  const fwc = <AjfFieldWithChoices<any>>field;\n                  (fwc as any).choicesOriginRef = properties.choicesOriginRef;\n                  fwc.forceExpanded = properties.forceExpanded;\n                  fwc.forceNarrow = properties.forceNarrow;\n                  fwc.triggerConditions = (properties.triggerConditions ||\n                                           []).map((t: string) => createCondition({condition: t}));\n                }\n              }\n\n              this._editedNodeEntry.next(null);\n\n              return (nodes: AjfNode[]): AjfNode[] => {\n                let cn = getNodeContainer({nodes}, origNode);\n                if (cn != null) {\n                  // TODO: @trik check this, was always true?\n                  // if (cn instanceof AjfNode) {\n                  const replaceNodes = cn.nodes === nodes;\n                  const idx = cn.nodes.indexOf(origNode);\n                  let newNodes = cn.nodes.slice(0, idx);\n                  newNodes.push(node);\n                  newNodes = newNodes.concat(cn.nodes.slice(idx + 1));\n                  cn.nodes = newNodes;\n                  if (replaceNodes) {\n                    nodes = newNodes;\n                  } else {\n                    nodes = nodes.slice(0);\n                  }\n                  // } else {\n                  //   const idx = nodes.indexOf(origNode);\n                  //   nodes = nodes.slice(0, idx).concat([node]).concat(nodes.slice(idx + 1));\n                  // }\n                  if (newConditionalBranches < oldConditionalBranches) {\n                    for (let i = newConditionalBranches; i < oldConditionalBranches; i++) {\n                      nodes = deleteNodeSubtree(nodes, node, i);\n                    }\n                  }\n                }\n                return nodes;\n              };\n            }),\n            )\n        .subscribe(this._nodesUpdates);\n  }\n\n  private _initDeleteNode(): void {\n    (<Observable<AjfFormBuilderNodeEntry>>this._deleteNodeEntryEvent)\n        .pipe(map((nodeEntry: AjfFormBuilderNodeEntry) => {\n          this._beforeNodesUpdate.emit();\n          return (nodes: AjfNode[]): AjfNode[] => {\n            const node = nodeEntry.node;\n            let cn = getNodeContainer({nodes}, node);\n            if (cn != null) {\n              const replaceNodes = cn.nodes === nodes;\n              const idx = cn.nodes.indexOf(node);\n              let newNodes = cn.nodes.slice(0, idx);\n              newNodes = newNodes.concat(cn.nodes.slice(idx + 1));\n              cn.nodes = newNodes;\n              if (replaceNodes) {\n                nodes = newNodes;\n              } else {\n                nodes = nodes.slice(0);\n              }\n            }\n            return nodes;\n          };\n        }))\n        .subscribe(this._nodesUpdates);\n  }\n\n  /**\n   * Initializes the subscription to the moveNodeEntryEvent.\n   */\n  private _initMoveNode(): void {\n    this._moveNodeSub.unsubscribe();\n    this._moveNodeSub =\n        this._moveNodeEntryEvent\n            .pipe(\n                map((moveEvent: AjfFormBuilderMoveEvent) => {\n                  this._beforeNodesUpdate.emit();\n                  return (nodes: AjfNode[]): AjfNode[] => {\n                    const nodeEntry = moveEvent.nodeEntry as AjfFormBuilderNodeEntry;\n                    const node = nodeEntry.node;\n                    let cn = getNodeContainer({nodes}, node) as AjfContainerNode;\n                    let newNodes: AjfNode[] = nodes;\n                    if (cn != null) {\n                      const replaceNodes = cn.nodes === nodes;\n                      newNodes = cn.nodes;\n                      moveItemInArray(newNodes, moveEvent.fromIndex, moveEvent.toIndex);\n                      newNodes = this._updateNodesList(cn.id, newNodes);\n                      cn.nodes = newNodes;\n                      if (replaceNodes) {\n                        nodes = newNodes;\n                      } else {\n                        nodes = nodes.slice(0);\n                      }\n                    }\n                    return nodes;\n                  };\n                }),\n                )\n            .subscribe(this._nodesUpdates);\n  }\n\n  /**\n   * Updates the \"id\" and \"parent\" fields of a modified or rearranged list of nodes.\n   * @param containerId The id of the parent container of the list.\n   * @param nodesList The list of nodes to be updated.\n   */\n  private _updateNodesList(containerId: number, nodesList: AjfNode[]): AjfNode[] {\n    if (!nodesList.length) {\n      return [];\n    }\n    const contId = containerId != undefined ? containerId : 0;\n    for (let idx = 0; idx < nodesList.length; idx++) {\n      let currentNode = nodesList[idx];\n      currentNode.id = (contId * 1000) + idx + 1;\n      currentNode.parent = idx == 0 ? contId : (contId * 1000) + idx;\n      if (currentNode.nodeType == AjfNodeType.AjfSlide ||\n          currentNode.nodeType == AjfNodeType.AjfRepeatingSlide) {\n        const currentSlide = currentNode as AjfSlide;\n        if (currentSlide.nodes) {\n          this._updateNodesList(currentSlide.id, currentSlide.nodes);\n        }\n      }\n    }\n    return nodesList;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin} from '@ajf/core/forms';\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {AjfFbChoicesOriginEditor} from './choices-origin-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  selector: 'ajf-fb-choices-origin-editor-dialog',\n  templateUrl: 'choices-origin-editor-dialog.html',\n  styleUrls: ['choices-origin-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbChoicesOriginEditorDialog {\n  @ViewChild(AjfFbChoicesOriginEditor, {static: false}) editor: AjfFbChoicesOriginEditor;\n\n  private _choicesOrigin: Observable<AjfChoicesOrigin<any>>;\n  get choicesOrigin(): Observable<AjfChoicesOrigin<any>> {\n    return this._choicesOrigin;\n  }\n\n  constructor(private _service: AjfFormBuilderService) {\n    this._choicesOrigin =\n        this._service.editedChoicesOrigin.pipe(filter(c => c != null), map(c => c!));\n  }\n\n  saveChoicesOrigin(): void {\n    this._service.saveChoicesOrigin(\n        {label: this.editor.label, name: this.editor.name, choices: this.editor.choicesArr});\n  }\n\n  cancelChoicesOriginEdit(): void {\n    this._service.cancelChoicesOriginEdit();\n  }\n}\n","<h3 matDialogTitle>{{'Edit choices origin'|transloco}}</h3>\n<mat-dialog-content>\n  <ajf-fb-choices-origin-editor\n    *ngIf=\"choicesOrigin|async as co\"\n    [choicesOrigin]=\"co!\"\n  ></ajf-fb-choices-origin-editor>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button (click)=\"saveChoicesOrigin()\">{{'Save'|transloco}}</button>\n  <button mat-button (click)=\"cancelChoicesOriginEdit()\">\n    {{'Close'|transloco}}\n  </button>\n</mat-dialog-actions>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField, AjfFieldType, AjfValidationService} from '@ajf/core/forms';\nimport {AjfExpressionUtils} from '@ajf/core/models';\nimport {AjfMonacoEditor} from '@ajf/material/monaco-editor';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\n\ndeclare var monaco: any;\n\n@Component({\n  selector: 'ajf-condition-editor',\n  templateUrl: 'fb-condition-editor.html',\n  styleUrls: ['fb-condition-editor.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class AjfFbConditionEditor {\n  @ViewChild(AjfMonacoEditor, {static: true}) monacoEditor: AjfMonacoEditor;\n\n  private _fields: AjfField[];\n  get fields(): AjfField[] {\n    return this._fields;\n  }\n  @Input()\n  set fields(fields: AjfField[]) {\n    this._fields = fields;\n    this._updateVariables();\n  }\n  @Input() condition: string;\n\n  editedValue: string;\n\n  constructor(_: AjfValidationService) {}\n\n  insertVariable(variable: string): void {\n    if (this.monacoEditor != null && this.monacoEditor.editor != null) {\n      const editor = this.monacoEditor.editor;\n      let value: string[] = editor.getValue().split('\\n');\n      let position: {column: number, lineNumber: number} = editor.getPosition();\n      const ln = position.lineNumber - 1;\n      let line = value[ln];\n      let col = position.column - 1;\n      line = line.substring(0, col) + variable + line.substring(col);\n      value[ln] = line;\n      position.column += variable.length;\n      this.monacoEditor.value = value.join('\\n');\n      editor.setPosition(position);\n      editor.focus();\n      this.editedValue = editor.getValue();\n    }\n  }\n\n  onEditorInit(): void {\n    monaco.languages.typescript.javascriptDefaults.setDiagnosticsOptions(\n        {noSemanticValidation: false, noSyntaxValidation: false});\n\n    monaco.languages.typescript.javascriptDefaults.setCompilerOptions({\n      target: monaco.languages.typescript.ScriptTarget.ES2015,\n      allowNonTsExtensions: true,\n      allowJs: true,\n      module: monaco.languages.typescript.ModuleKind.None\n    });\n\n    try {\n      monaco.languages.typescript.javascriptDefaults.addExtraLib(\n          '', 'condition-editor-variables.d.ts');\n    } catch (e) {\n      monaco.languages.typescript.javascriptDefaults._extraLibs['condition-editor-variables.d.ts'] =\n          '';\n    }\n\n    try {\n      monaco.languages.typescript.javascriptDefaults.addExtraLib(\n          '', 'condition-editor-functions.d.ts');\n    } catch (e) {\n      monaco.languages.typescript.javascriptDefaults._extraLibs['condition-editor-functions.d.ts'] =\n          '';\n    }\n\n    this._updateVariables();\n    this._updateFunctions();\n  }\n\n  private _updateVariables(): void {\n    if (this._fields == null) {\n      return;\n    }\n    try {\n      monaco.languages.typescript.javascriptDefaults._extraLibs['condition-editor-variables.d.ts'] =\n          this._fields\n              .map((field: AjfField) => {\n                return `declare const ${field.name}: ${this._fieldVarType(field.fieldType)};`;\n              })\n              .join('\\n');\n    } catch (e) {\n    }\n  }\n\n  private _updateFunctions(): void {\n    try {\n      monaco.languages.typescript.javascriptDefaults._extraLibs['condition-editor-functions.d.ts'] =\n          AjfExpressionUtils.UTIL_FUNCTIONS;\n    } catch (e) {\n    }\n  }\n\n  private _fieldVarType(fieldType: AjfFieldType): string|null {\n    switch (fieldType) {\n      case AjfFieldType.Boolean:\n        return 'boolean';\n      case AjfFieldType.Date:\n      case AjfFieldType.DateInput:\n      case AjfFieldType.Time:\n        return 'Date';\n      case AjfFieldType.Empty:\n        return 'void';\n      case AjfFieldType.Formula:\n        return 'number';\n      case AjfFieldType.MultipleChoice:\n      case AjfFieldType.SingleChoice:\n        return 'any';\n      case AjfFieldType.Number:\n        return 'number';\n      case AjfFieldType.Table:\n        return 'Array';\n      case AjfFieldType.String:\n      case AjfFieldType.Text:\n        return 'string';\n    }\n    return null;\n  }\n}\n","<div class=\"ajf-editor\">\n  <ajf-monaco-editor\n      (init)=\"onEditorInit()\"\n      (valueChange)=\"editedValue = $event\"\n      [value]=\"condition\" language=\"javascript\"></ajf-monaco-editor>\n</div>\n<div class=\"ajf-editor-panel\">\n  <ng-container *ngIf=\"fields as curFields\">\n    <mat-nav-list dense *ngIf=\"curFields!.length > 0\">\n      <a mat-list-item\n          (click)=\"insertVariable(field.name)\"\n          [matTooltip]=\"field.label\"\n          *ngFor=\"let field of curFields!\">\n        <ajf-node-icon [node]=\"field\"></ajf-node-icon>\n        {{ field.name }}\n      </a>\n    </mat-nav-list>\n  </ng-container>\n</div>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '@ajf/core/forms';\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  selector: 'ajf-condition-editor-dialog',\n  templateUrl: 'condition-editor-dialog.html',\n  styleUrls: ['condition-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbConditionEditorDialog {\n  @ViewChild(AjfFbConditionEditor, {static: false}) editor: AjfFbConditionEditor;\n\n  private _fields: Observable<AjfField[]>;\n  get fields(): Observable<AjfField[]> {\n    return this._fields;\n  }\n\n  condition: string;\n\n  constructor(\n      service: AjfFormBuilderService, public dialogRef: MatDialogRef<AjfFbConditionEditorDialog>) {\n    this._fields = service.flatFields.pipe(\n        map((fields: AjfField[]) => fields.sort((f1, f2) => f1.name.localeCompare(f2.name))));\n  }\n\n  saveCondition(): void {\n    if (this.editor == null) {\n      return;\n    }\n    const newValue = this.editor.editedValue;\n    this.dialogRef.close(newValue);\n  }\n}\n","<h3 matDialogTitle>{{'Edit condition'|transloco}}</h3>\n<mat-dialog-content>\n  <ajf-condition-editor\n    *ngIf=\"fields|async as curFields\"\n    [fields]=\"curFields!\"\n    [condition]=\"condition\"\n  ></ajf-condition-editor>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button (click)=\"saveCondition()\">{{'Save'|transloco}}</button>\n  <button mat-button matDialogClose>{{'Close'|transloco}}</button>\n</mat-dialog-actions>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {CdkDrag, CdkDragDrop} from '@angular/cdk/drag-drop';\nimport {\n  AjfFormBuilderEmptySlot,\n  AjfFormBuilderNode,\n  AjfFormBuilderNodeEntry,\n  AjfFormBuilderNodeTypeEntry,\n  AjfFormBuilderService,\n} from './form-builder-service';\n\n/**\n * Triggers when a field or slide node is moved or inserted by drag&dropping in the formbuilder.\n * @param event The drop event.\n * @param fbService The AjfFormBuilderService.\n * @param nodeEntry The current nodeEntry, if present.\n * @param content True if the current nodeEntry contains other nodeEntries.\n */\nexport function onDropProcess(\n    event: CdkDragDrop<AjfFormBuilderNodeEntry>|CdkDragDrop<AjfFormBuilderNodeTypeEntry>,\n    fbService: AjfFormBuilderService,\n    nodeEntry: AjfFormBuilderNode|null,\n    content = false,\n    ): void {\n  const itemData = event.item.data;\n  const containerId = event.container.id;\n  if (!itemData.node) {\n    if (nodeEntry == null && containerId === 'slides-list') {\n      fbService.insertNode(\n          itemData,\n          null as any,\n          0,\n          content,\n          event.currentIndex,\n      );\n      return;\n    }\n    const emptySlot = content ? {parent: (<AjfFormBuilderNodeEntry>nodeEntry).node, parentNode: 0} :\n                                <AjfFormBuilderEmptySlot>nodeEntry;\n    fbService.insertNode(\n        itemData as AjfFormBuilderNodeTypeEntry,\n        emptySlot.parent,\n        emptySlot.parentNode,\n        content,\n        event.currentIndex,\n    );\n    return;\n  }\n  const previousIndex = event.previousIndex;\n  const currentIndex = event.currentIndex;\n  fbService.moveNodeEntry(<AjfFormBuilderNodeEntry>event.item.data, previousIndex, currentIndex);\n}\n\n/**\n * Disables the drag&drop of Slide items.\n * @param item The dragged item.\n */\nexport function disableSlideDropPredicate(item: CdkDrag<AjfFormBuilderNodeTypeEntry>): boolean {\n  return !item.data.isSlide;\n}\n\n/**\n * Disables the drag&drop of Field items.\n * @param item The dragged item.\n */\nexport function disableFieldDropPredicate(item: CdkDrag<AjfFormBuilderNodeTypeEntry>): boolean {\n  if (!item.data.isSlide) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormStringIdentifier} from '@ajf/core/forms';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  ViewEncapsulation\n} from '@angular/core';\nimport {MatAutocompleteSelectedEvent} from '@angular/material/autocomplete';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Observable, Subscription} from 'rxjs';\nimport {map, shareReplay} from 'rxjs/operators';\n\nimport {AjfFormBuilderService} from './form-builder-service';\n\n@Component({\n  selector: 'ajf-fb-string-identifier-dialog',\n  templateUrl: 'string-identifier-dialog.html',\n  styleUrls: ['./string-identifier-dialog.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfFbStringIdentifierDialogComponent implements OnDestroy {\n  readonly dataSource: MatTableDataSource<AjfFormStringIdentifier> =\n      new MatTableDataSource<AjfFormStringIdentifier>();\n  readonly displayedColumns = ['label', 'value', 'show', 'delete'];\n  readonly fields$: Observable<string[]>;\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  private _stringIdentifierSub: Subscription = Subscription.EMPTY;\n\n  constructor(private _service: AjfFormBuilderService, private _cdr: ChangeDetectorRef) {\n    this._stringIdentifierSub = _service.stringIdentifier.subscribe(identifier => {\n      this.dataSource.data = [...identifier];\n    });\n    this.fields$ = _service.flatFields.pipe(\n        map(fields => fields.sort((f1, f2) => f1.name.localeCompare(f2.name))\n                          .map(f => f.name)\n                          .filter(f => f.length > 0)),\n        shareReplay(1),\n    );\n  }\n\n  addRow(): void {\n    this.dataSource.data = [...this.dataSource.data, {label: '', value: [], show: undefined}];\n  }\n\n  deleteRow(rowIdx: number): void {\n    this.dataSource.data = [\n      ...this.dataSource.data.slice(0, rowIdx),\n      ...this.dataSource.data.slice(rowIdx + 1),\n    ];\n  }\n\n  addValue(row: AjfFormStringIdentifier, evt: MatChipInputEvent, valueInput: HTMLInputElement):\n      void {\n    if (evt.value.length === 0) {\n      return;\n    }\n    row.value = [...row.value, evt.value];\n    valueInput.value = '';\n    this._cdr.markForCheck();\n  }\n\n  removeValue(row: AjfFormStringIdentifier, value: string): void {\n    const idx = row.value.indexOf(value);\n    if (idx > -1) {\n      row.value = [\n        ...row.value.slice(0, idx),\n        ...row.value.slice(idx + 1),\n      ];\n      this._cdr.markForCheck();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._stringIdentifierSub.unsubscribe();\n  }\n\n  saveStringIdentifier(): void {\n    this._service.saveStringIdentifier(this.dataSource.data);\n  }\n\n  selected(row: AjfFormStringIdentifier, evt: MatAutocompleteSelectedEvent): void {\n    row.value = [...row.value, evt.option.value];\n    this._cdr.markForCheck();\n  }\n}\n","<h3 matDialogTitle>{{'Edit identifier'|transloco}}</h3>\n<mat-dialog-content>\n  <button (click)=\"addRow()\" mat-button>\n    <mat-icon>add</mat-icon>\n    <span>{{'Add value'|transloco}}</span>\n  </button>\n  <mat-table [dataSource]=\"dataSource\">\n    <ng-container matColumnDef=\"label\">\n      <mat-header-cell *matHeaderCellDef>{{'Label'|transloco}}</mat-header-cell>\n      <mat-cell *matCellDef=\"let row; let idx = index\">\n        <mat-form-field>\n          <input\n            matInput\n            [placeholder]=\"'Label'|transloco\"\n            autofocus\n            [(ngModel)]=\"row.label\"\n          />\n        </mat-form-field>\n      </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"value\">\n      <mat-header-cell *matHeaderCellDef>{{'Value'|transloco}}</mat-header-cell>\n      <mat-cell *matCellDef=\"let row; let idx = index\">\n        <mat-form-field>\n          <mat-chip-list #chipList>\n            <mat-chip\n              *ngFor=\"let field of row.value\"\n              (removed)=\"removeValue(row, field)\"\n            >\n              {{ field }}\n              <mat-icon matChipRemove>cancel</mat-icon>\n            </mat-chip>\n          </mat-chip-list>\n          <input\n            #valueInput\n            [ngModel]=\"row.value\"\n            [matAutocomplete]=\"valueAc\"\n            [matChipInputFor]=\"chipList\"\n            [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n            [matChipInputAddOnBlur]=\"true\"\n            (matChipInputTokenEnd)=\"addValue(row, $event, valueInput)\"\n            [placeholder]=\"'Value'|transloco\"\n          />\n          <mat-autocomplete\n            #valueAc=\"matAutocomplete\"\n            (optionSelected)=\"selected(row, $event)\"\n          >\n            <mat-option *ngFor=\"let field of fields$ | async\" [value]=\"field\"\n              >{{field}}</mat-option\n            >\n          </mat-autocomplete>\n        </mat-form-field>\n      </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"show\">\n      <mat-header-cell *matHeaderCellDef>{{'Show'|transloco}}</mat-header-cell>\n      <mat-cell *matCellDef=\"let row; let idx = index\">\n        <mat-form-field>\n          <mat-select matNativeControl [(ngModel)]=\"row.show\">\n            <mat-option value=\"all\">{{'All'|transloco}}</mat-option>\n            <mat-option value=\"first\">{{'First'|transloco}}</mat-option>\n            <mat-option value=\"last\">{{'Last'|transloco}}</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"delete\">\n      <mat-header-cell *matHeaderCellDef\n        >{{'Delete'|transloco}}</mat-header-cell\n      >\n      <mat-cell *matCellDef=\"let row; let idx = index\">\n        <mat-icon (click)=\"deleteRow(idx)\">delete</mat-icon>\n      </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n  </mat-table>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button matDialogClose (click)=\"saveStringIdentifier()\">\n    {{'Save'|transloco}}\n  </button>\n</mat-dialog-actions>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {AjfFormBuilderNodeTypeEntry} from './form-builder-service';\n\n\n@Component({\n  selector: 'ajf-fb-node-type-entry',\n  templateUrl: 'node-type-entry.html',\n  styleUrls: ['node-type-entry.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbNodeTypeEntry {\n  private _nodeType: AjfFormBuilderNodeTypeEntry;\n  get nodeType(): AjfFormBuilderNodeTypeEntry {\n    return this._nodeType;\n  }\n  @Input()\n  set nodeType(nodeType: AjfFormBuilderNodeTypeEntry) {\n    this._nodeType = nodeType;\n    this._cdr.markForCheck();\n  }\n\n  constructor(private _cdr: ChangeDetectorRef) {}\n}\n","<ng-container *ngIf=\"nodeType\">\n  <mat-icon\n    [fontSet]=\"nodeType.icon.fontSet\" [fontIcon]=\"nodeType.icon.fontIcon\"></mat-icon>\n  {{ nodeType.label }}\n</ng-container>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '@ajf/core/forms';\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  selector: 'ajf-fb-validation-condition-editor-dialog',\n  templateUrl: 'validation-condition-editor-dialog.html',\n  styleUrls: ['validation-condition-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbValidationConditionEditorDialog {\n  @ViewChild(AjfFbConditionEditor, {static: false}) editor: AjfFbConditionEditor;\n\n  private _fields: Observable<AjfField[]>;\n  get fields(): Observable<AjfField[]> {\n    return this._fields;\n  }\n\n  condition: string;\n  errorMessage: string;\n\n  constructor(\n      service: AjfFormBuilderService,\n      public dialogRef: MatDialogRef<AjfFbValidationConditionEditorDialog>) {\n    this._fields = service.flatFields.pipe(\n        map((fields: AjfField[]) => fields.sort((f1, f2) => f1.name.localeCompare(f2.name))));\n  }\n\n  saveCondition(): void {\n    if (this.editor == null) {\n      return;\n    }\n    const newValue = this.editor.editedValue;\n    this.dialogRef.close({condition: newValue, errorMessage: this.errorMessage});\n  }\n}\n","<h3 matDialogTitle>{{'Edit condition'|transloco}}</h3>\n<mat-dialog-content>\n  <mat-form-field>\n    <input\n      matInput\n      [(ngModel)]=\"errorMessage\"\n      [placeholder]=\"'Error message'|transloco\"\n    />\n  </mat-form-field>\n  <ajf-condition-editor\n    *ngIf=\"fields|async as curFields\"\n    [fields]=\"curFields!\"\n    [condition]=\"condition\"\n  ></ajf-condition-editor>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button (click)=\"saveCondition()\">{{'Save'|transloco}}</button>\n  <button mat-button matDialogClose>{{'Close'|transloco}}</button>\n</mat-dialog-actions>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField} from '@ajf/core/forms';\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  selector: 'ajf-fb-warning-condition-editor-dialog',\n  templateUrl: 'warning-condition-editor-dialog.html',\n  styleUrls: ['warning-condition-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbWarningConditionEditorDialog {\n  @ViewChild(AjfFbConditionEditor, {static: false}) editor: AjfFbConditionEditor;\n\n  private _fields: Observable<AjfField[]>;\n  get fields(): Observable<AjfField[]> {\n    return this._fields;\n  }\n\n  condition: string;\n  warningMessage: string;\n\n  constructor(\n      service: AjfFormBuilderService,\n      public dialogRef: MatDialogRef<AjfFbWarningConditionEditorDialog>) {\n    this._fields = service.flatFields.pipe(\n        map((fields: AjfField[]) => fields.sort((f1, f2) => f1.name.localeCompare(f2.name))));\n  }\n\n  saveCondition(): void {\n    if (this.editor == null) {\n      return;\n    }\n    const newValue = this.editor.editedValue;\n    this.dialogRef.close({condition: newValue, warningMessage: this.warningMessage});\n  }\n}\n","<h3 matDialogTitle>{{'Edit condition'|transloco}}</h3>\n<mat-dialog-content>\n  <mat-form-field>\n    <input\n      matInput\n      [(ngModel)]=\"warningMessage\"\n      [placeholder]=\"'Warning message' | transloco\"\n    />\n  </mat-form-field>\n  <ajf-condition-editor\n    *ngIf=\"fields|async as curFields\"\n    [fields]=\"curFields!\"\n    [condition]=\"condition\"\n  ></ajf-condition-editor>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button (click)=\"saveCondition()\">{{'Save'|transloco}}</button>\n  <button mat-button matDialogClose>{{'Close'|transloco}}</button>\n</mat-dialog-actions>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfChoicesOrigin,\n  AjfField,\n  AjfFieldWithChoices,\n  AjfNode,\n  AjfNumberField,\n  AjfRepeatingContainerNode,\n  isField,\n  isFieldWithChoices,\n  isNumberField,\n  isRepeatingContainerNode\n} from '@ajf/core/forms';\nimport {AjfCondition, alwaysCondition, neverCondition} from '@ajf/core/models';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  OnDestroy,\n  ViewEncapsulation\n} from '@angular/core';\nimport {AbstractControl, FormBuilder, FormGroup, ValidatorFn, Validators} from '@angular/forms';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {Observable, Subscription} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  publishReplay,\n  refCount,\n  withLatestFrom\n} from 'rxjs/operators';\n\nimport {AjfFbConditionEditorDialog} from './condition-editor-dialog';\nimport {AjfFormBuilderNodeEntry, AjfFormBuilderService} from './form-builder-service';\nimport {AjfFbValidationConditionEditorDialog} from './validation-condition-editor-dialog';\nimport {AjfFbWarningConditionEditorDialog} from './warning-condition-editor-dialog';\n\n\nfunction checkRepsValidity(c: AbstractControl): {[key: string]: any}|null {\n  const minReps = c.value.minReps;\n  const maxReps = c.value.maxReps;\n  if (minReps != null && maxReps != null && minReps > maxReps) {\n    return {reps: 'Min repetions cannot be greater than max repetitions'};\n  }\n  return null;\n}\n\nfunction checkValueLimitsValidity(c: AbstractControl): {[key: string]: any}|null {\n  const minValue = c.value.minValue;\n  const maxValue = c.value.maxValue;\n  if (minValue != null && maxValue != null && minValue > maxValue) {\n    return {valueLimit: 'Min value cannot be greater than max value'};\n  }\n  return null;\n}\n\nfunction checkDigitsValidity(c: AbstractControl): {[key: string]: any}|null {\n  const minDigits = c.value.minDigits;\n  const maxDigits = c.value.maxDigits;\n  if (minDigits != null && maxDigits != null && minDigits > maxDigits) {\n    return {digits: 'Min digits cannot be greater than max digits'};\n  }\n  return null;\n}\n\nexport interface ValidationCondition {\n  condition: string;\n  errorMessage: string;\n}\n\nexport interface WarningCondition {\n  condition: string;\n  warningMessage: string;\n}\n\n\n@Component({\n  selector: 'ajf-fb-node-properties',\n  templateUrl: 'node-properties.html',\n  styleUrls: ['node-properties.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbNodeProperties implements OnDestroy {\n  private _fieldSizes: {label: string, value: string}[] = [\n    {label: 'Normal', value: 'normal'}, {label: 'Small', value: 'small'},\n    {label: 'Smaller', value: 'smaller'}, {label: 'Tiny', value: 'tiny'},\n    {label: 'Mini', value: 'mini'}\n  ];\n  get fieldSizes(): {label: string, value: string}[] {\n    return this._fieldSizes;\n  }\n\n  private _nodeEntry: Observable<AjfFormBuilderNodeEntry|null>;\n  get nodeEntry(): Observable<AjfFormBuilderNodeEntry|null> {\n    return this._nodeEntry;\n  }\n\n  private _choicesOrigins: AjfChoicesOrigin<any>[] = [];\n  get choicesOrigins(): AjfChoicesOrigin<any>[] {\n    return this._choicesOrigins;\n  }\n\n  private _enabled: Observable<boolean>;\n  get enabled(): Observable<boolean> {\n    return this._enabled;\n  }\n\n  private _propertiesForm: Observable<FormGroup>;\n  get propertiesForm(): Observable<FormGroup> {\n    return this._propertiesForm;\n  }\n\n  private _hasChoices: Observable<boolean>;\n  get hasChoices(): Observable<boolean> {\n    return this._hasChoices;\n  }\n\n  private _curVisibility: string|null;\n  get curVisibility(): string|null {\n    return this._curVisibility;\n  }\n\n  private _curFormulaReps: string|null;\n  get curFormulaReps(): string|null {\n    return this._curFormulaReps;\n  }\n\n  private _curChoicesFilter: string;\n  get curChoicesFilter(): string {\n    return this._curChoicesFilter;\n  }\n\n  private _curForceValue: string|null;\n  get curForceValue(): string|null {\n    return this._curForceValue;\n  }\n\n  private _curFormula: string|null;\n  get curFormula(): string|null {\n    return this._curFormula;\n  }\n\n  private _conditionalBranches: string[] = [];\n  get conditionalBranches(): string[] {\n    return this._conditionalBranches;\n  }\n\n  private _validationConditions: ValidationCondition[] = [];\n  get validationConditions(): ValidationCondition[] {\n    return this._validationConditions;\n  }\n\n  private _warningConditions: WarningCondition[] = [];\n  get warningConditions(): WarningCondition[] {\n    return this._warningConditions;\n  }\n\n  private _nextSlideCondition: string;\n  get nextSlideCondition(): string {\n    return this._nextSlideCondition;\n  }\n\n  private _triggerConditions: string[];\n  get triggerConditions(): string[] {\n    return this._triggerConditions;\n  }\n\n  isRepeatingContainerNode: (nodeEntry: AjfFormBuilderNodeEntry|null) => boolean =\n      (nodeEntry) => {\n        return nodeEntry != null && isRepeatingContainerNode(nodeEntry.node);\n      }\n\n  private _visibilityOptSub: Subscription = Subscription.EMPTY;\n  private _visibilitySub: Subscription = Subscription.EMPTY;\n  private _conditionalBranchesSub = Subscription.EMPTY;\n  private _formulaRepsSub = Subscription.EMPTY;\n  private _choicesFilterSub = Subscription.EMPTY;\n  private _formulaSub = Subscription.EMPTY;\n  private _forceValueSub = Subscription.EMPTY;\n  private _validationConditionsSub = Subscription.EMPTY;\n  private _warningConditionsSub = Subscription.EMPTY;\n  private _nextSlideConditionSub = Subscription.EMPTY;\n  private _choicesOriginsSub = Subscription.EMPTY;\n  private _triggerConditionsSub = Subscription.EMPTY;\n\n  private _editConditionDialog: MatDialogRef<AjfFbConditionEditorDialog>|null;\n  private _editConditionDialogSub: Subscription = Subscription.EMPTY;\n  private _editValidationConditionDialog: MatDialogRef<AjfFbValidationConditionEditorDialog>|null;\n  private _editValidationConditionDialogSub: Subscription = Subscription.EMPTY;\n  private _editWarningConditionDialog: MatDialogRef<AjfFbWarningConditionEditorDialog>|null;\n  private _editWarningConditionDialogSub: Subscription = Subscription.EMPTY;\n\n  private _editVisibilityEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editVisibilitySub = Subscription.EMPTY;\n\n  private _editConditionalBranchEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editConditionalBranchSub = Subscription.EMPTY;\n\n  private _editFormulaRepsEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editFormulaRepsSub = Subscription.EMPTY;\n\n  private _editChoicesFilterEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editChoicesFilterSub = Subscription.EMPTY;\n\n  private _editFormulaEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editFormulaSub = Subscription.EMPTY;\n\n  private _editForceValueEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editForceValueSub = Subscription.EMPTY;\n\n  private _editValidationConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editValidationConditionSub = Subscription.EMPTY;\n\n  private _addValidationConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _addValidationConditionSub = Subscription.EMPTY;\n\n  private _removeValidationConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _removeValidationConditionSub = Subscription.EMPTY;\n\n  private _editWarningConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editWarningConditionSub = Subscription.EMPTY;\n\n  private _addWarningConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _addWarningConditionSub = Subscription.EMPTY;\n\n  private _removeWarningConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _removeWarningConditionSub = Subscription.EMPTY;\n\n  private _editNextSlideConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editNextSlideConditionSub = Subscription.EMPTY;\n\n  private _editTriggerConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editTriggerConditionSub = Subscription.EMPTY;\n\n  private _addTriggerConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _addTriggerConditionSub = Subscription.EMPTY;\n\n  private _removeTriggerConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _removeTriggerConditionSub = Subscription.EMPTY;\n\n  private _saveEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _saveSub = Subscription.EMPTY;\n\n  constructor(\n      private _cdr: ChangeDetectorRef,\n      private _service: AjfFormBuilderService,\n      private _dialog: MatDialog,\n      private _fb: FormBuilder,\n  ) {\n    this._nodeEntry = _service.editedNodeEntry;\n    this._choicesOriginsSub =\n        _service.choicesOrigins.subscribe((c) => this._choicesOrigins = c || []);\n\n    this._enabled = this._nodeEntry.pipe(map((n) => n != null));\n\n    this._initForm();\n    this._initVisibilityEdit();\n    this._initConditionalBranchEdit();\n    this._initFormulaRepsEdit();\n    this._initChoicesFilterEdit();\n    this._initFormulaEdit();\n    this._initForceValueEdit();\n    this._initValidationConditionEdit();\n    this._initAddValidationCondition();\n    this._initRemoveValidationCondition();\n    this._initWarningConditionEdit();\n    this._initAddWarningCondition();\n    this._initRemoveWarningCondition();\n    this._initNextSlideConditionEdit();\n    this._initTriggerConditionEdit();\n    this._initAddTriggerCondition();\n    this._initRemoveTriggerCondition();\n    this._initSave();\n  }\n\n  editVisibility(): void {\n    this._editVisibilityEvt.emit();\n  }\n\n  editConditionalBranch(idx: number): void {\n    if (idx < 0 || idx >= this._conditionalBranches.length) {\n      return;\n    }\n    this._editConditionalBranchEvt.emit(idx);\n  }\n\n  editFormulaReps(): void {\n    this._editFormulaRepsEvt.emit();\n  }\n\n  editChoicesFilter(): void {\n    this._editChoicesFilterEvt.emit();\n  }\n\n  editFormula(): void {\n    this._editFormulaEvt.emit();\n  }\n\n  editForceValue(): void {\n    this._editForceValueEvt.emit();\n  }\n\n  editValidationCondition(idx: number): void {\n    if (idx < 0 || idx >= this._validationConditions.length) {\n      return;\n    }\n    this._editValidationConditionEvt.emit(idx);\n  }\n\n  addValidationCondition(): void {\n    this._addValidationConditionEvt.emit();\n  }\n\n  removeValidationCondition(idx: number): void {\n    if (idx < 0 || idx >= this._validationConditions.length) {\n      return;\n    }\n    this._removeValidationConditionEvt.emit(idx);\n  }\n\n  editWarningCondition(idx: number): void {\n    if (idx < 0 || idx >= this._warningConditions.length) {\n      return;\n    }\n    this._editWarningConditionEvt.emit(idx);\n  }\n\n  addWarningCondition(): void {\n    this._addWarningConditionEvt.emit();\n  }\n\n  removeWarningCondition(idx: number): void {\n    if (idx < 0 || idx >= this._warningConditions.length) {\n      return;\n    }\n    this._removeWarningConditionEvt.emit(idx);\n  }\n\n  editNextSlideCondition(): void {\n    this._editNextSlideConditionEvt.emit();\n  }\n\n  editTriggerCondition(idx: number): void {\n    if (idx < 0 || idx >= this._triggerConditions.length) {\n      return;\n    }\n    this._editTriggerConditionEvt.emit(idx);\n  }\n\n  addTriggerCondition(): void {\n    this._addTriggerConditionEvt.emit();\n  }\n\n  removeTriggerCondition(idx: number): void {\n    if (idx < 0 || idx >= this._triggerConditions.length) {\n      return;\n    }\n    this._removeTriggerConditionEvt.emit(idx);\n  }\n\n  isField(nodeEntry: AjfFormBuilderNodeEntry|null): boolean {\n    return nodeEntry != null && isField(nodeEntry.node);\n  }\n\n  isNumericField(node: AjfNode): boolean {\n    return isField(node) && isNumberField(node as AjfField);\n  }\n\n  isFieldWithChoices(node: AjfNode): boolean {\n    return isField(node) && isFieldWithChoices(node as AjfField);\n  }\n\n  save(): void {\n    this._saveEvt.emit();\n  }\n\n  cancel(): void {\n    this._service.cancelNodeEntryEdit();\n  }\n\n  ngOnDestroy(): void {\n    this._choicesOriginsSub.unsubscribe();\n\n    this._visibilityOptSub.unsubscribe();\n    this._visibilitySub.unsubscribe();\n    this._formulaRepsSub.unsubscribe();\n    this._choicesFilterSub.unsubscribe();\n    this._formulaSub.unsubscribe();\n    this._forceValueSub.unsubscribe();\n    this._validationConditionsSub.unsubscribe();\n    this._warningConditionsSub.unsubscribe();\n    this._triggerConditionsSub.unsubscribe();\n\n    this._editConditionDialogSub.unsubscribe();\n    this._editValidationConditionDialogSub.unsubscribe();\n    this._editWarningConditionDialogSub.unsubscribe();\n\n    this._editChoicesFilterSub.unsubscribe();\n    this._editConditionalBranchSub.unsubscribe();\n    this._editVisibilitySub.unsubscribe();\n    this._editFormulaRepsSub.unsubscribe();\n    this._editFormulaSub.unsubscribe();\n    this._editForceValueSub.unsubscribe();\n    this._editValidationConditionSub.unsubscribe();\n    this._editWarningConditionSub.unsubscribe();\n    this._nextSlideConditionSub.unsubscribe();\n\n    this._addTriggerConditionSub.unsubscribe();\n    this._addValidationConditionSub.unsubscribe();\n    this._addWarningConditionSub.unsubscribe();\n    this._editNextSlideConditionSub.unsubscribe();\n    this._editTriggerConditionSub.unsubscribe();\n    this._removeTriggerConditionSub.unsubscribe();\n    this._removeValidationConditionSub.unsubscribe();\n    this._removeWarningConditionSub.unsubscribe();\n\n    this._saveSub.unsubscribe();\n  }\n\n  private _initSave(): void {\n    this._saveSub = this._saveEvt\n                        .pipe(\n                            withLatestFrom(this.propertiesForm),\n                            )\n                        .subscribe(([_, formGroup]) => {\n                          const fg = formGroup as FormGroup;\n                          const val = {...fg.value, conditionalBranches: this._conditionalBranches};\n                          this._service.saveNodeEntry(val);\n                        });\n  }\n\n  private _initForm(): void {\n    this._propertiesForm = this._nodeEntry.pipe(\n        filter((n) => n != null), map((n) => {\n          if (this._visibilityOptSub != null) {\n            this._visibilityOptSub.unsubscribe();\n          }\n          if (this._visibilitySub != null) {\n            this._visibilitySub.unsubscribe();\n          }\n          if (this._conditionalBranchesSub != null) {\n            this._conditionalBranchesSub.unsubscribe();\n          }\n          n = n!;\n\n          const visibility = n.node.visibility != null ? n.node.visibility.condition : null;\n          const visibilityOpt =\n              n.node.visibility != null ? this._guessVisibilityOpt(n.node.visibility) : null;\n          let controls: any = {\n            name: [n.node.name, Validators.required],\n            label: n.node.label,\n            visibilityOpt: [visibilityOpt, Validators.required],\n            visibility: [visibility, Validators.required],\n            conditionalBranchesNum: n.node.conditionalBranches.length\n          };\n          const validators: ValidatorFn[] = [];\n\n          if (isRepeatingContainerNode(n.node)) {\n            const rn = <AjfRepeatingContainerNode>n.node;\n\n            const formulaReps = rn.formulaReps != null ? rn.formulaReps.formula : null;\n\n            controls.formulaReps = [formulaReps, Validators.required];\n            controls.minReps = rn.minReps;\n            controls.maxReps = rn.maxReps;\n\n            this._curFormulaReps = formulaReps;\n\n            validators.push(checkRepsValidity);\n          }\n\n          if (this.isField(n)) {\n            const field = <AjfField>n.node;\n\n            let forceValue: string|null = null;\n            let notEmpty: boolean = false;\n            let validationConditions: ValidationCondition[] = [];\n            if (field.validation != null) {\n              if (field.validation.forceValue != null) {\n                forceValue = field.validation.forceValue.condition;\n              }\n              notEmpty = field.validation.notEmpty != null;\n              validationConditions = (field.validation.conditions || []).map(c => {\n                return {condition: c.condition, errorMessage: c.errorMessage};\n              });\n            }\n\n            let notEmptyW: boolean = false;\n            let warningConditions: WarningCondition[] = [];\n            if (field.warning != null) {\n              notEmptyW = field.warning.notEmpty != null;\n              warningConditions = (field.warning.conditions || []).map(w => {\n                return {condition: w.condition, warningMessage: w.warningMessage};\n              });\n            }\n            const formula = field.formula != null ? field.formula.formula : null;\n\n            controls.description = field.description;\n            controls.defaultValue = field.defaultValue;\n            controls.hint = field.hint;\n            controls.size = field.size;\n            controls.formula = formula;\n            controls.forceValue = forceValue;\n            controls.notEmpty = notEmpty;\n            controls.validationConditions = [validationConditions, []];\n            controls.notEmptyWarning = notEmptyW;\n            controls.warningConditions = [warningConditions, []];\n            controls.nextSlideCondition = [field.nextSlideCondition];\n\n            this._curForceValue = forceValue;\n            this._curFormula = formula;\n            this._validationConditions = validationConditions;\n            this._warningConditions = warningConditions;\n          }\n\n          if (this.isNumericField(n.node)) {\n            const numField = <AjfNumberField>n.node;\n\n            let minValue: any;\n            let maxValue: any;\n            let minDigits: any;\n            let maxDigits: any;\n            if (numField.validation != null) {\n              if (numField.validation.minValue != null) {\n                minValue = (numField.validation.minValue.condition || '').replace('$value >= ', '');\n              }\n              if (numField.validation.maxValue != null) {\n                maxValue = (numField.validation.maxValue.condition || '').replace('$value <= ', '');\n              }\n              if (numField.validation.minDigits != null) {\n                minDigits = (numField.validation.minDigits.condition ||\n                             '').replace('$value.toString().length >= ', '');\n              }\n              if (numField.validation.maxDigits != null) {\n                maxDigits = (numField.validation.maxDigits.condition ||\n                             '').replace('$value.toString().length <= ', '');\n              }\n            }\n\n            controls.minValue = minValue;\n            controls.maxValue = maxValue;\n            controls.minDigits = minDigits;\n            controls.maxDigits = maxDigits;\n\n            validators.push(checkValueLimitsValidity);\n            validators.push(checkDigitsValidity);\n          }\n\n          if (this.isFieldWithChoices(n.node)) {\n            const fieldWithChoices = <AjfFieldWithChoices<any>>n.node;\n\n            let triggerConditions: string[] =\n                (fieldWithChoices.triggerConditions || []).map((c) => c.condition);\n\n            controls.choicesOriginRef = (fieldWithChoices as any).choicesOriginRef;\n            controls.choicesFilter = fieldWithChoices.choicesFilter != null ?\n                fieldWithChoices.choicesFilter.formula :\n                null;\n            controls.forceExpanded = fieldWithChoices.forceExpanded;\n            controls.forceNarrow = fieldWithChoices.forceNarrow;\n            controls.triggerConditions = triggerConditions;\n\n            this._triggerConditions = triggerConditions;\n          }\n\n          const fg = this._fb.group(controls);\n          fg.setValidators(validators);\n\n          this._conditionalBranches = n.node.conditionalBranches.map(c => c.condition);\n          this._curVisibility = n.node.visibility != null ? n.node.visibility.condition : null;\n\n          this._handleConditionalBranchesChange(fg);\n          this._handleVisibilityChange(fg);\n          this._handleFormulaRepsChange(fg);\n          this._handleChoicesFilterChange(fg);\n          this._handleFormulaChange(fg);\n          this._handleForceValueChange(fg);\n          this._handleValidationCondtionsChange(fg);\n          this._handleWarningCondtionsChange(fg);\n          this._handleNextSlideConditionChange(fg);\n          this._handleTriggerCondtionsChange(fg);\n\n          return fg;\n        }),\n        publishReplay(1), refCount());\n  }\n\n  private _destroyConditionDialog(): void {\n    if (this._editConditionDialogSub != null) {\n      this._editConditionDialogSub.unsubscribe();\n      this._editConditionDialogSub = Subscription.EMPTY;\n    }\n    if (this._editConditionDialog != null) {\n      this._editConditionDialog.close();\n      this._editConditionDialog = null;\n    }\n  }\n\n  private _destroyValidationConditionDialog(): void {\n    if (this._editValidationConditionDialogSub != null) {\n      this._editValidationConditionDialogSub.unsubscribe();\n      this._editValidationConditionDialogSub = Subscription.EMPTY;\n    }\n    if (this._editValidationConditionDialog != null) {\n      this._editValidationConditionDialog.close();\n      this._editValidationConditionDialog = null;\n    }\n  }\n\n  private _destroyWarningConditionDialog(): void {\n    if (this._editWarningConditionDialogSub != null) {\n      this._editWarningConditionDialogSub.unsubscribe();\n      this._editWarningConditionDialogSub = Subscription.EMPTY;\n    }\n    if (this._editWarningConditionDialog != null) {\n      this._editWarningConditionDialog.close();\n      this._editWarningConditionDialog = null;\n    }\n  }\n\n  private _initRemoveTriggerCondition(): void {\n    this._removeTriggerConditionSub = this._removeTriggerConditionEvt\n                                          .pipe(\n                                              withLatestFrom(this._propertiesForm),\n                                              )\n                                          .subscribe(([vcIdx, formGroup]) => {\n                                            if (formGroup == null) {\n                                              return;\n                                            }\n                                            const fg = formGroup as FormGroup;\n                                            const ctrl = fg.controls['triggerConditions'];\n                                            let vcs = (ctrl.value || []).slice(0);\n                                            if (vcIdx < 0 || vcIdx >= vcs.length) {\n                                              return;\n                                            }\n                                            vcs.splice(vcIdx, 1);\n                                            ctrl.setValue(vcs);\n                                          });\n  }\n\n  private _initAddTriggerCondition(): void {\n    this._addTriggerConditionSub = this._addTriggerConditionEvt\n                                       .pipe(\n                                           withLatestFrom(this._propertiesForm),\n                                           )\n                                       .subscribe(([_, formGroup]) => {\n                                         if (formGroup == null) {\n                                           return;\n                                         }\n                                         const fg = formGroup as FormGroup;\n                                         const ctrl = fg.controls['triggerConditions'];\n                                         let vcs = (ctrl.value || []).slice(0);\n                                         vcs.push('');\n                                         ctrl.setValue(vcs);\n                                       });\n  }\n\n  private _initTriggerConditionEdit(): void {\n    this._editConditionDialogSub = Subscription.EMPTY;\n    this._cdr.markForCheck();\n    this._editTriggerConditionSub =\n        this._editTriggerConditionEvt\n            .pipe(\n                withLatestFrom(this._propertiesForm),\n                )\n            .subscribe(([vcIdx, fg]) => {\n              this._destroyConditionDialog();\n              if (vcIdx < 0 || vcIdx >= this._triggerConditions.length || fg == null) {\n                return;\n              }\n              this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n              const cmp = this._editConditionDialog.componentInstance;\n              cmp.condition = this._triggerConditions[vcIdx];\n              this._editConditionDialogSub =\n                  this._editConditionDialog.afterClosed().subscribe((cond: string) => {\n                    if (cond !== void 0) {\n                      this._triggerConditions[vcIdx] = cond;\n                    }\n                    this._editConditionDialogSub.unsubscribe();\n                    this._editConditionDialogSub = Subscription.EMPTY;\n                    this._cdr.markForCheck();\n                  });\n            });\n  }\n\n  private _initRemoveWarningCondition(): void {\n    this._removeWarningConditionSub = this._removeWarningConditionEvt\n                                          .pipe(\n                                              withLatestFrom(this._propertiesForm),\n                                              )\n                                          .subscribe(([vcIdx, formGroup]) => {\n                                            if (formGroup == null) {\n                                              return;\n                                            }\n                                            const fg = formGroup as FormGroup;\n                                            const ctrl = fg.controls['warningConditions'];\n                                            let vcs = (ctrl.value || []).slice(0);\n                                            if (vcIdx < 0 || vcIdx >= vcs.length) {\n                                              return;\n                                            }\n                                            vcs.splice(vcIdx, 1);\n                                            ctrl.setValue(vcs);\n                                          });\n  }\n\n  private _initAddWarningCondition(): void {\n    this._addWarningConditionSub = this._addWarningConditionEvt\n                                       .pipe(\n                                           withLatestFrom(this._propertiesForm),\n                                           )\n                                       .subscribe(([_, formGroup]) => {\n                                         if (formGroup == null) {\n                                           return;\n                                         }\n                                         const fg = formGroup as FormGroup;\n                                         const ctrl = fg.controls['warningConditions'];\n                                         let vcs = (ctrl.value || []).slice(0);\n                                         vcs.push({condition: '', errorMessage: ''});\n                                         ctrl.setValue(vcs);\n                                       });\n  }\n\n  private _initWarningConditionEdit(): void {\n    this._editWarningConditionSub =\n        this._editWarningConditionEvt\n            .pipe(\n                withLatestFrom(this._propertiesForm),\n                )\n            .subscribe(([vcIdx, fg]) => {\n              this._destroyWarningConditionDialog();\n              if (vcIdx < 0 || vcIdx >= this._warningConditions.length || fg == null) {\n                return;\n              }\n              this._editWarningConditionDialog =\n                  this._dialog.open(AjfFbWarningConditionEditorDialog);\n              const cmp = this._editWarningConditionDialog.componentInstance;\n              const w = this._warningConditions[vcIdx];\n              cmp.condition = w.condition;\n              cmp.warningMessage = w.warningMessage;\n              this._editWarningConditionDialogSub =\n                  this._editWarningConditionDialog.afterClosed().subscribe(\n                      (cond: WarningCondition) => {\n                        if (cond !== void 0) {\n                          this._warningConditions[vcIdx] = cond;\n                        }\n                        this._editWarningConditionDialogSub.unsubscribe();\n                        this._editWarningConditionDialogSub = Subscription.EMPTY;\n                        this._cdr.markForCheck();\n                      });\n            });\n  }\n\n  private _initRemoveValidationCondition(): void {\n    this._removeValidationConditionSub = this._removeValidationConditionEvt\n                                             .pipe(\n                                                 withLatestFrom(this._propertiesForm),\n                                                 )\n                                             .subscribe(([vcIdx, formGroup]) => {\n                                               if (formGroup == null) {\n                                                 return;\n                                               }\n                                               const fg = formGroup as FormGroup;\n                                               const ctrl = fg.controls['validationConditions'];\n                                               let vcs = (ctrl.value || []).slice(0);\n                                               if (vcIdx < 0 || vcIdx >= vcs.length) {\n                                                 return;\n                                               }\n                                               vcs.splice(vcIdx, 1);\n                                               ctrl.setValue(vcs);\n                                             });\n  }\n\n  private _initAddValidationCondition(): void {\n    this._addValidationConditionSub = this._addValidationConditionEvt\n                                          .pipe(\n                                              withLatestFrom(this._propertiesForm),\n                                              )\n                                          .subscribe(([_, formGroup]) => {\n                                            if (formGroup == null) {\n                                              return;\n                                            }\n                                            const fg = formGroup as FormGroup;\n                                            const ctrl = fg.controls['validationConditions'];\n                                            let vcs = (ctrl.value || []).slice(0);\n                                            vcs.push({condition: '', errorMessage: ''});\n                                            ctrl.setValue(vcs);\n                                          });\n  }\n\n  private _initValidationConditionEdit(): void {\n    this._editValidationConditionSub =\n        this._editValidationConditionEvt\n            .pipe(\n                withLatestFrom(this._propertiesForm),\n                )\n            .subscribe(([vcIdx, fg]) => {\n              this._destroyValidationConditionDialog();\n              if (vcIdx < 0 || vcIdx >= this._validationConditions.length || fg == null) {\n                return;\n              }\n              this._editValidationConditionDialog =\n                  this._dialog.open(AjfFbValidationConditionEditorDialog);\n              const cmp = this._editValidationConditionDialog.componentInstance;\n              const v = this._validationConditions[vcIdx];\n              cmp.condition = v.condition;\n              cmp.errorMessage = v.errorMessage;\n              this._editValidationConditionDialogSub =\n                  this._editValidationConditionDialog.afterClosed().subscribe(\n                      (cond: ValidationCondition) => {\n                        if (cond !== void 0) {\n                          this._validationConditions[vcIdx] = cond;\n                        }\n                        this._editValidationConditionDialogSub.unsubscribe();\n                        this._editValidationConditionDialogSub = Subscription.EMPTY;\n                        this._cdr.markForCheck();\n                      });\n            });\n  }\n\n  private _initForceValueEdit(): void {\n    this._editForceValueSub =\n        this._editForceValueEvt\n            .pipe(\n                withLatestFrom(this._propertiesForm),\n                )\n            .subscribe(([_, formGroup]) => {\n              this._destroyConditionDialog();\n              if (formGroup == null) {\n                return;\n              }\n              const fg = formGroup as FormGroup;\n              const ctrl = fg.controls['forceValue'];\n              this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n              this._editConditionDialog.componentInstance.condition = ctrl.value;\n              this._editConditionDialogSub =\n                  this._editConditionDialog.afterClosed().subscribe((cond: string) => {\n                    if (cond !== void 0) {\n                      ctrl.setValue(cond);\n                    }\n                    this._editConditionDialogSub.unsubscribe();\n                    this._editConditionDialogSub = Subscription.EMPTY;\n                    this._cdr.markForCheck();\n                  });\n            });\n  }\n\n  private _initNextSlideConditionEdit(): void {\n    this._editNextSlideConditionSub =\n        this._editNextSlideConditionEvt\n            .pipe(\n                withLatestFrom(this._propertiesForm),\n                )\n            .subscribe(([_, formGroup]) => {\n              this._destroyConditionDialog();\n              if (formGroup == null) {\n                return;\n              }\n              const fg = formGroup as FormGroup;\n              const ctrl = fg.controls['nextSlideCondition'];\n              this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n              this._editConditionDialog.componentInstance.condition = ctrl.value;\n              this._editConditionDialogSub =\n                  this._editConditionDialog.afterClosed().subscribe((cond: string) => {\n                    if (cond !== void 0) {\n                      ctrl.setValue(cond);\n                    }\n                    this._editConditionDialogSub.unsubscribe();\n                    this._editConditionDialogSub = Subscription.EMPTY;\n                    this._cdr.markForCheck();\n                  });\n            });\n  }\n\n  private _initFormulaEdit(): void {\n    this._editConditionDialogSub = Subscription.EMPTY;\n    this._cdr.markForCheck();\n    this._editFormulaSub =\n        this._editFormulaEvt\n            .pipe(\n                withLatestFrom(this._propertiesForm),\n                )\n            .subscribe(([_, formGroup]) => {\n              this._destroyConditionDialog();\n              if (formGroup == null) {\n                return;\n              }\n              const fg = formGroup as FormGroup;\n              const ctrl = fg.controls['formula'];\n              this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n              this._editConditionDialog.componentInstance.condition = ctrl.value;\n              this._editConditionDialogSub =\n                  this._editConditionDialog.afterClosed().subscribe((cond: string) => {\n                    if (cond !== void 0) {\n                      ctrl.setValue(cond);\n                    }\n                    this._editConditionDialogSub.unsubscribe();\n                    this._editConditionDialogSub = Subscription.EMPTY;\n                    this._cdr.markForCheck();\n                  });\n            });\n  }\n\n  private _initFormulaRepsEdit(): void {\n    this._editFormulaRepsSub =\n        this._editFormulaRepsEvt\n            .pipe(\n                withLatestFrom(this._propertiesForm),\n                )\n            .subscribe(([_, formGroup]) => {\n              this._destroyConditionDialog();\n              if (formGroup == null) {\n                return;\n              }\n              const fg = formGroup as FormGroup;\n              const ctrl = fg.controls['formulaReps'];\n              this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n              this._editConditionDialog.componentInstance.condition = ctrl.value;\n              this._editConditionDialogSub =\n                  this._editConditionDialog.afterClosed().subscribe((cond: string) => {\n                    if (cond !== void 0) {\n                      ctrl.setValue(cond);\n                    }\n                    this._editConditionDialogSub.unsubscribe();\n                    this._editConditionDialogSub = Subscription.EMPTY;\n                    this._cdr.markForCheck();\n                  });\n            });\n  }\n\n  private _initChoicesFilterEdit(): void {\n    this._editChoicesFilterSub =\n        this._editChoicesFilterEvt\n            .pipe(\n                withLatestFrom(this._propertiesForm),\n                )\n            .subscribe(([_, formGroup]) => {\n              this._destroyConditionDialog();\n              if (formGroup == null) {\n                return;\n              }\n              const fg = formGroup as FormGroup;\n              const ctrl = fg.controls['choicesFilter'];\n              this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n              this._editConditionDialog.componentInstance.condition = ctrl.value;\n              this._editConditionDialogSub =\n                  this._editConditionDialog.afterClosed().subscribe((cond: string) => {\n                    if (cond !== void 0) {\n                      ctrl.setValue(cond);\n                    }\n                    this._editConditionDialogSub.unsubscribe();\n                    this._editConditionDialogSub = Subscription.EMPTY;\n                    this._cdr.markForCheck();\n                  });\n            });\n  }\n\n  private _initConditionalBranchEdit(): void {\n    this._editConditionalBranchSub =\n        this._editConditionalBranchEvt\n            .pipe(\n                withLatestFrom(this._propertiesForm),\n                )\n            .subscribe(([cbIdx, fg]) => {\n              this._destroyConditionDialog();\n              if (cbIdx < 0 || cbIdx >= this._conditionalBranches.length || fg == null) {\n                return;\n              }\n              this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n              this._editConditionDialog.componentInstance.condition =\n                  this._conditionalBranches[cbIdx];\n              this._editConditionDialogSub =\n                  this._editConditionDialog.afterClosed().subscribe((cond: string) => {\n                    if (cond !== void 0) {\n                      this._conditionalBranches[cbIdx] = cond;\n                    }\n                    this._editConditionDialogSub.unsubscribe();\n                    this._editConditionDialogSub = Subscription.EMPTY;\n                    this._cdr.markForCheck();\n                  });\n            });\n  }\n\n  private _initVisibilityEdit(): void {\n    this._editVisibilitySub =\n        this._editVisibilityEvt\n            .pipe(\n                withLatestFrom(this._propertiesForm),\n                )\n            .subscribe(([_, formGroup]) => {\n              this._destroyConditionDialog();\n              if (formGroup == null) {\n                return;\n              }\n              const fg = formGroup as FormGroup;\n              const ctrl = fg.controls['visibility'];\n              const condition = ctrl.value;\n              this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n              this._editConditionDialog.componentInstance.condition = condition;\n              this._editConditionDialogSub =\n                  this._editConditionDialog.afterClosed().subscribe((cond: string) => {\n                    if (cond !== void 0) {\n                      ctrl.setValue(cond);\n                    }\n                    this._editConditionDialogSub.unsubscribe();\n                    this._editConditionDialogSub = Subscription.EMPTY;\n                    this._cdr.markForCheck();\n                  });\n            });\n  }\n\n  private _handleTriggerCondtionsChange(fg: FormGroup): void {\n    this._triggerConditionsSub = fg.valueChanges\n                                     .pipe(\n                                         distinctUntilChanged(\n                                             (v1, v2) => JSON.stringify(v1.triggerConditions) ===\n                                                 JSON.stringify(v2.triggerConditions)),\n                                         )\n                                     .subscribe((v: any) => {\n                                       this._triggerConditions = v.triggerConditions;\n                                       this._cdr.markForCheck();\n                                     });\n  }\n\n  private _handleWarningCondtionsChange(fg: FormGroup): void {\n    this._warningConditionsSub = fg.valueChanges\n                                     .pipe(\n                                         distinctUntilChanged(\n                                             (v1, v2) => JSON.stringify(v1.warningConditions) ===\n                                                 JSON.stringify(v2.warningConditions)),\n                                         )\n                                     .subscribe((v: any) => {\n                                       this._warningConditions = v.warningConditions;\n                                       this._cdr.markForCheck();\n                                     });\n  }\n\n  private _handleValidationCondtionsChange(fg: FormGroup): void {\n    this._validationConditionsSub =\n        fg.valueChanges\n            .pipe(\n                distinctUntilChanged(\n                    (v1, v2) => JSON.stringify(v1.validationConditions) ===\n                        JSON.stringify(v2.validationConditions)),\n                )\n            .subscribe((v: any) => {\n              this._validationConditions = v.validationConditions;\n              this._cdr.markForCheck();\n            });\n  }\n\n  private _handleForceValueChange(fg: FormGroup): void {\n    this._forceValueSub =\n        fg.valueChanges.pipe(distinctUntilChanged((v1, v2) => v1.forceValue === v2.forceValue))\n            .subscribe((v: any) => {\n              this._curForceValue = v.forceValue;\n              this._cdr.markForCheck();\n            });\n  }\n\n  private _handleNextSlideConditionChange(fg: FormGroup): void {\n    this._formulaSub =\n        fg.valueChanges\n            .pipe(distinctUntilChanged((v1, v2) => v1.nextSlideCondition === v2.nextSlideCondition))\n            .subscribe((v: any) => {\n              this._nextSlideCondition = v.nextSlideCondition;\n              this._cdr.markForCheck();\n            });\n    this._formulaSub =\n        fg.valueChanges\n            .pipe(distinctUntilChanged((v1, v2) => v1.nextSlideCondition === v2.nextSlideCondition))\n            .subscribe((v: any) => {\n              this._nextSlideCondition = v.nextSlideCondition;\n              this._cdr.markForCheck();\n            });\n  }\n\n  private _handleFormulaChange(fg: FormGroup): void {\n    this._formulaSub =\n        fg.valueChanges.pipe(distinctUntilChanged((v1, v2) => v1.formula === v2.formula))\n            .subscribe((v: any) => {\n              this._curFormula = v.formula;\n              this._cdr.markForCheck();\n            });\n  }\n\n  private _handleFormulaRepsChange(fg: FormGroup): void {\n    this._formulaRepsSub =\n        fg.valueChanges.pipe(distinctUntilChanged((v1, v2) => v1.formulaReps === v2.formulaReps))\n            .subscribe((v: any) => {\n              this._curFormulaReps = v.formulaReps;\n              this._cdr.markForCheck();\n            });\n  }\n\n  private _handleChoicesFilterChange(fg: FormGroup): void {\n    this._choicesFilterSub =\n        fg.valueChanges\n            .pipe(distinctUntilChanged((v1, v2) => v1.choicesFilter === v2.choicesFilter))\n            .subscribe((v: any) => {\n              this._curChoicesFilter = v.choicesFilter;\n              this._cdr.markForCheck();\n            });\n  }\n\n  private _handleConditionalBranchesChange(fg: FormGroup): void {\n    this._conditionalBranchesSub =\n        fg.valueChanges\n            .pipe(distinctUntilChanged(\n                (v1, v2) => v1.conditionalBranchesNum === v2.conditionalBranchesNum))\n            .subscribe((v: any) => {\n              const cbNum: number = v.conditionalBranchesNum;\n              const curCbNum = this._conditionalBranches.length;\n              if (curCbNum < cbNum) {\n                let newCbs: string[] = [];\n                for (let i = curCbNum; i < cbNum; i++) {\n                  newCbs.push(alwaysCondition().condition);\n                }\n                this._conditionalBranches = this._conditionalBranches.concat(newCbs);\n              } else if (curCbNum > cbNum) {\n                this._conditionalBranches.splice(0, curCbNum - cbNum);\n              }\n              this._cdr.markForCheck();\n            });\n  }\n\n  private _handleVisibilityChange(fg: FormGroup): void {\n    this._visibilitySub =\n        fg.valueChanges\n            .pipe(distinctUntilChanged((v1, v2) => v1.visibilityOpt === v2.visibilityOpt))\n            .subscribe((v) => {\n              const visibilityOpt = v.visibilityOpt;\n              let newCondition: string|null;\n              switch (visibilityOpt) {\n                case 'always':\n                  newCondition = alwaysCondition().condition;\n                  break;\n                case 'never':\n                  newCondition = neverCondition().condition;\n                  break;\n                default:\n                  newCondition = null;\n              }\n              this._curVisibility = newCondition;\n              fg.controls['visibility'].setValue(newCondition);\n            });\n    this._visibilitySub = fg.valueChanges\n                              .pipe(\n                                  filter(v => v.visibilityOpt === 'condition'),\n                                  distinctUntilChanged((v1, v2) => v1.visibility === v2.visibility),\n                                  )\n                              .subscribe(v => {\n                                this._curVisibility = v.visibility;\n                                this._cdr.markForCheck();\n                              });\n  }\n\n  private _guessVisibilityOpt(condition: AjfCondition): string {\n    if (condition.condition.localeCompare(alwaysCondition().condition) === 0) {\n      return 'always';\n    }\n    if (condition.condition.localeCompare(neverCondition().condition) === 0) {\n      return 'never';\n    }\n    return 'condition';\n  }\n}\n","<div\n  [style.display]=\"(enabled|async) ? 'none' : 'block'\"\n  class=\"ajf-disabled-overlay\"\n></div>\n<div class=\"ajf-header\">\n  <h3>{{'Properties'|transloco}}</h3>\n  <mat-icon (click)=\"save()\">save</mat-icon>\n  <mat-icon (click)=\"cancel()\">cancel</mat-icon>\n</div>\n<ng-container *ngIf=\"nodeEntry|async as ne\">\n  <ng-container *ngIf=\"propertiesForm|async as pf\">\n    <form [formGroup]=\"pf!\" novalidate>\n      <div class=\"ajf-prop\">\n        <mat-form-field>\n          <input\n            matInput\n            formControlName=\"name\"\n            [placeholder]=\"'Name' | transloco\"\n          />\n        </mat-form-field>\n      </div>\n      <div class=\"ajf-prop\">\n        <mat-form-field>\n          <input\n            matInput\n            formControlName=\"label\"\n            [placeholder]=\"'Label' | transloco\"\n          />\n        </mat-form-field>\n      </div>\n      <div class=\"ajf-prop\">\n        <mat-form-field>\n          <mat-label>{{'Visibility'|transloco}}</mat-label>\n          <mat-select\n            formControlName=\"visibilityOpt\"\n            [placeholder]=\"'Visible' | transloco\"\n          >\n            <mat-option value=\"always\">{{'Always'|transloco}}</mat-option>\n            <mat-option value=\"never\">{{'Never'|transloco}}</mat-option>\n            <mat-option value=\"condition\"\n              >{{'Condition...'|transloco}}</mat-option\n            >\n          </mat-select>\n        </mat-form-field>\n        <button\n          (click)=\"editVisibility()\"\n          [disabled]=\"pf!.value.visibilityOpt != 'condition'\"\n          mat-raised-button\n          [matTooltip]=\"curVisibility || ''\"\n        >\n          <div class=\"ajf-icon-cont\">\n            <mat-icon>edit</mat-icon>\n            <span>{{ curVisibility }}</span>\n          </div>\n        </button>\n      </div>\n      <div class=\"ajf-prop\">\n        <div><label>{{'Branches'|transloco}}</label></div>\n        <div>\n          <mat-slider\n            formControlName=\"conditionalBranchesNum\"\n            thumbLabel\n            tickInterval=\"auto\"\n            min=\"1\"\n            max=\"5\"\n            step=\"1\"\n          ></mat-slider>\n        </div>\n        <div *ngFor=\"let branch of conditionalBranches; let idx = index\">\n          <button\n            (click)=\"editConditionalBranch(idx)\"\n            mat-raised-button\n            [matTooltip]=\"branch\"\n          >\n            <div class=\"ajf-icon-cont\">\n              <mat-icon>edit</mat-icon>\n              <span>{{ branch }}</span>\n            </div>\n          </button>\n        </div>\n      </div>\n      <ng-template [ngIf]=\"isRepeatingContainerNode(ne)\">\n        <div class=\"ajf-prop\">\n          <div><label>{{'Repetitions'|transloco}}</label></div>\n          <div>\n            <button\n              (click)=\"editFormulaReps()\"\n              mat-raised-button\n              [matTooltip]=\"curFormulaReps || ''\"\n            >\n              <div class=\"ajf-icon-cont\">\n                <mat-icon>edit</mat-icon>\n                <span>{{ curFormulaReps }}</span>\n              </div>\n            </button>\n          </div>\n          <div><label>{{'Min repetitions'|transloco}}</label></div>\n          <div>\n            <mat-slider\n              formControlName=\"minReps\"\n              thumbLabel\n              tickInterval=\"auto\"\n              min=\"1\"\n              max=\"5\"\n              step=\"1\"\n            ></mat-slider>\n          </div>\n          <div><label>{{'Max repetitions'|transloco}}</label></div>\n          <div>\n            <mat-slider\n              formControlName=\"maxReps\"\n              thumbLabel\n              tickInterval=\"auto\"\n              min=\"1\"\n              max=\"5\"\n              step=\"1\"\n            ></mat-slider>\n          </div>\n        </div>\n      </ng-template>\n      <ng-template [ngIf]=\"isField(ne)\">\n        <div class=\"ajf-prop\">\n          <mat-form-field>\n            <mat-label>{{'Field size'|transloco}}</mat-label>\n            <mat-select\n              formControlName=\"size\"\n              [placeholder]=\"'Size' | transloco\"\n            >\n              <mat-option\n                *ngFor=\"let fieldSize of fieldSizes\"\n                [value]=\"fieldSize.value\"\n              >\n                {{ fieldSize.label|transloco }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div class=\"ajf-prop\">\n          <mat-form-field>\n            <input\n              matInput\n              formControlName=\"hint\"\n              [placeholder]=\"'Hint' | transloco\"\n            />\n          </mat-form-field>\n        </div>\n        <div class=\"ajf-prop\">\n          <mat-form-field>\n            <textarea\n              matInput\n              formControlName=\"description\"\n              [placeholder]=\"'Description' | transloco\"\n            ></textarea>\n          </mat-form-field>\n        </div>\n        <div class=\"ajf-prop\">\n          <mat-form-field>\n            <input\n              matInput\n              formControlName=\"defaultValue\"\n              [placeholder]=\"'Default value' | transloco\"\n            />\n          </mat-form-field>\n        </div>\n        <div class=\"ajf-prop\">\n          <div><label>{{'Formula'|transloco}}</label></div>\n          <div>\n            <button\n              (click)=\"editFormula()\"\n              mat-raised-button\n              [matTooltip]=\"curFormula || ''\"\n            >\n              <div class=\"ajf-icon-cont\">\n                <mat-icon>edit</mat-icon>\n                <span>{{ curFormula }}</span>\n              </div>\n            </button>\n          </div>\n        </div>\n        <!-- <div class=\"ajf-prop\">\n          <div><label>{{'Force value'|translco}}</label></div>\n          <div>\n            <button (click)=\"editForceValue()\" mat-raised-button [matTooltip]=\"curForceValue\">\n              <div class=\"ajf-icon-cont\">\n                <mat-icon>edit</mat-icon>\n                <span>{{ curForceValue }}</span>\n              </div>\n            </button>\n          </div>\n        </div> -->\n        <div class=\"ajf-prop\">\n          <mat-checkbox formControlName=\"notEmpty\"\n            >{{'Not empty'|transloco}}</mat-checkbox\n          >\n        </div>\n        <ng-template [ngIf]=\"isNumericField(ne!.node)\">\n          <div class=\"ajf-prop\">\n            <mat-form-field>\n              <input\n                matInput\n                formControlName=\"minValue\"\n                [placeholder]=\"'Min value' | transloco\"\n              />\n            </mat-form-field>\n          </div>\n          <div class=\"ajf-prop\">\n            <mat-form-field>\n              <input\n                matInput\n                formControlName=\"maxValue\"\n                [placeholder]=\"'Max value' | transloco\"\n              />\n            </mat-form-field>\n          </div>\n          <div class=\"ajf-prop\">\n            <mat-form-field>\n              <input\n                matInput\n                formControlName=\"minDigits\"\n                [placeholder]=\"'Min digits' | transloco\"\n              />\n            </mat-form-field>\n          </div>\n          <div class=\"ajf-prop\">\n            <mat-form-field>\n              <input\n                matInput\n                formControlName=\"maxDigits\"\n                [placeholder]=\"'Max digits' | transloco\"\n              />\n            </mat-form-field>\n          </div>\n        </ng-template>\n        <div class=\"ajf-prop\">\n          <div class=\"ajf-header\">\n            <label>{{ 'Validation' | transloco }}</label>\n            <mat-icon class=\"ajf-pointer\" (click)=\"addValidationCondition()\"\n              >add_circle_outline</mat-icon\n            >\n          </div>\n          <div\n            *ngIf=\"validationConditions == null || validationConditions.length == 0\"\n            class=\"ajf-validation-row ajf-emph\"\n          >\n            {{'No conditions'|transloco}}\n          </div>\n          <div\n            class=\"ajf-validation-row\"\n            *ngFor=\"let validationCondition of validationConditions; let idx = index\"\n          >\n            <button\n              (click)=\"editValidationCondition(idx)\"\n              mat-raised-button\n              [matTooltip]=\"validationCondition.condition\"\n            >\n              <div class=\"ajf-icon-cont\">\n                <mat-icon>edit</mat-icon>\n                <span>{{ validationCondition.condition }}</span>\n              </div>\n            </button>\n            <mat-icon\n              class=\"ajf-pointer\"\n              (click)=\"removeValidationCondition(idx)\"\n              >remove_circle_outline</mat-icon\n            >\n          </div>\n        </div>\n        <div class=\"ajf-prop\">\n          <mat-checkbox formControlName=\"notEmptyWarning\"\n            >{{'Not empty warning'|transloco}}</mat-checkbox\n          >\n        </div>\n        <div class=\"ajf-prop\">\n          <div class=\"ajf-header\">\n            <label>{{'Warnings'|transloco}}</label>\n            <mat-icon class=\"ajf-pointer\" (click)=\"addWarningCondition()\"\n              >add_circle_outline</mat-icon\n            >\n          </div>\n          <div\n            *ngIf=\"warningConditions == null || warningConditions.length == 0\"\n            class=\"ajf-validation-row ajf-emph\"\n          >\n            {{'No warnings'|transloco}}\n          </div>\n          <div\n            class=\"ajf-validation-row\"\n            *ngFor=\"let warningCondition of warningConditions; let idx = index\"\n          >\n            <button\n              (click)=\"editWarningCondition(idx)\"\n              mat-raised-button\n              [matTooltip]=\"warningCondition.condition\"\n            >\n              <div class=\"ajf-icon-cont\">\n                <mat-icon>edit</mat-icon>\n                <span>{{ warningCondition.condition }}</span>\n              </div>\n            </button>\n            <mat-icon class=\"ajf-pointer\" (click)=\"removeWarningCondition(idx)\"\n              >remove_circle_outline</mat-icon\n            >\n          </div>\n        </div>\n        <div class=\"ajf-prop\">\n          <div><label>{{'Go to next slide condition'|transloco}}</label></div>\n          <div>\n            <button\n              (click)=\"editNextSlideCondition()\"\n              mat-raised-button\n              [matTooltip]=\"nextSlideCondition\"\n            >\n              <div class=\"ajf-icon-cont\">\n                <mat-icon>edit</mat-icon>\n                <span>{{ nextSlideCondition }}</span>\n              </div>\n            </button>\n          </div>\n        </div>\n        <ng-template [ngIf]=\"isFieldWithChoices(ne!.node)\">\n          <div class=\"ajf-prop\">\n            <mat-form-field>\n              <mat-label>{{'Choices origins'|transloco}}</mat-label>\n              <mat-select\n                formControlName=\"choicesOriginRef\"\n                [placeholder]=\"'Choices' | transloco\"\n              >\n                <mat-option\n                  *ngFor=\"let choicesOrigin of choicesOrigins\"\n                  [value]=\"choicesOrigin.name\"\n                >\n                  {{ (choicesOrigin.label || choicesOrigin.name)|transloco }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n          <div class=\"ajf-prop\">\n            <div><label>{{'Choices filter'|transloco}}</label></div>\n            <div>\n              <button\n                (click)=\"editChoicesFilter()\"\n                mat-raised-button\n                [matTooltip]=\"curChoicesFilter\"\n              >\n                <div class=\"ajf-icon-cont\">\n                  <mat-icon>edit</mat-icon>\n                  <span>{{ curChoicesFilter }}</span>\n                </div>\n              </button>\n            </div>\n          </div>\n          <div class=\"ajf-prop\">\n            <mat-checkbox formControlName=\"forceExpanded\"\n              >{{'Force expanded selection'|transloco}}</mat-checkbox\n            >\n          </div>\n          <div class=\"ajf-prop\">\n            <mat-checkbox formControlName=\"forceNarrow\"\n              >{{'Force narrow selection'|transloco}}</mat-checkbox\n            >\n          </div>\n          <div class=\"ajf-prop\">\n            <div class=\"ajf-header\">\n              <label>{{'Trigger selection'|transloco}}</label>\n              <mat-icon class=\"ajf-pointer\" (click)=\"addTriggerCondition()\"\n                >add_circle_outline</mat-icon\n              >\n            </div>\n            <div\n              *ngIf=\"triggerConditions == null || triggerConditions.length == 0\"\n              class=\"ajf-validation-row ajf-emph\"\n            >\n              {{'No trigger condition'|transloco}}\n            </div>\n            <div\n              class=\"ajf-validation-row\"\n              *ngFor=\"let triggerCondition of triggerConditions; let idx = index\"\n            >\n              <button\n                (click)=\"editTriggerCondition(idx)\"\n                mat-raised-button\n                [matTooltip]=\"triggerCondition\"\n              >\n                <div class=\"ajf-icon-cont\">\n                  <mat-icon>edit</mat-icon>\n                  <span>{{ triggerCondition }}</span>\n                </div>\n              </button>\n              <mat-icon class=\"pointer\" (click)=\"removeTriggerCondition(idx)\"\n                >remove_circle_outline</mat-icon\n              >\n            </div>\n          </div>\n        </ng-template>\n      </ng-template>\n    </form>\n  </ng-container>\n</ng-container>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfNode, isContainerNode, isSlidesNode} from '@ajf/core/forms';\nimport {CdkDrag, CdkDragDrop, CdkDropList} from '@angular/cdk/drag-drop';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  QueryList,\n  ViewChildren,\n  ViewEncapsulation\n} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\n\nimport {AjfFbBranchLine} from './branch-line';\nimport {\n  AjfFormBuilderNode,\n  AjfFormBuilderNodeEntry,\n  AjfFormBuilderNodeTypeEntry,\n  AjfFormBuilderService\n} from './form-builder-service';\nimport {\n  disableFieldDropPredicate,\n  disableSlideDropPredicate,\n  onDropProcess\n} from './form-builder-utils';\n\nconst branchColors: string[] = [\n  '#F44336',  // RED\n  '#4CAF50',  // GREEN\n  '#3F51B5',  // INDIGO\n  '#FFC107',  // AMBER\n  '#795548',  // BROWN\n];\n\n\n@Component({\n  selector: 'ajf-fb-node-entry',\n  templateUrl: 'node-entry.html',\n  styleUrls: ['node-entry.css'],\n  host: {'(window.resize)': 'onResize()'},\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbNodeEntry implements AfterViewInit, OnDestroy {\n  @ViewChildren(AjfFbBranchLine) branchLines: QueryList<AjfFbBranchLine>;\n  @ViewChildren(AjfFbNodeEntry, {read: ElementRef}) childEntries: QueryList<ElementRef>;\n\n  private _hasContent = false;\n  get hasContent(): boolean {\n    return this._hasContent;\n  }\n\n  private _isFirst = false;\n  get isFirst(): boolean {\n    return this._isFirst;\n  }\n  @Input()\n  set isFirst(isFirst: boolean) {\n    this._isFirst = isFirst;\n  }\n\n  private _isNodeEntry = false;\n  get isNodeEntry(): boolean {\n    return this._isNodeEntry;\n  }\n\n  private _isExpanded = false;\n  get isExpanded(): boolean {\n    return this._isExpanded;\n  }\n  @Input()\n  set isExpanded(exp: boolean) {\n    this._isExpanded = exp;\n    setTimeout(() => this._updateBranchHeights(), 400);\n  }\n\n  private _nodeEntry: AjfFormBuilderNode;\n  get nodeEntry(): AjfFormBuilderNode {\n    return this._nodeEntry;\n  }\n  @Input()\n  set nodeEntry(nodeEntry: AjfFormBuilderNode) {\n    this._nodeEntry = nodeEntry;\n    if (nodeEntry != null && (<AjfFormBuilderNodeEntry>nodeEntry).node !== void 0) {\n      const ne = <AjfFormBuilderNodeEntry>nodeEntry;\n      this._isNodeEntry = true;\n      const node = ne.node;\n      this._hasContent = node != null && isContainerNode(node);\n    } else {\n      this._isNodeEntry = false;\n      this._hasContent = false;\n    }\n  }\n\n  private _level = 0;\n  get level(): number {\n    return this._level;\n  }\n  @Input()\n  set level(value: number) {\n    this._level = value;\n  }\n  private _isDraggable: boolean = true;\n  get isDraggable(): boolean {\n    return this._isDraggable;\n  }\n  @Input()\n  set isDraggable(draggable: boolean) {\n    this._isDraggable = draggable;\n  }\n\n  get realNodeEntry(): AjfFormBuilderNodeEntry {\n    return this._nodeEntry as AjfFormBuilderNodeEntry;\n  }\n\n  private _branchColors: string[] = branchColors.slice(0);\n  get branchColors(): string[] {\n    return this._branchColors;\n  }\n\n  private _dropZones: string[] = ['fbdz-node'];\n  get dropZones(): string[] {\n    return this._dropZones;\n  }\n\n  private _slideDropZones: string[] = ['fbdz-slide'];\n  get slideDropZones(): string[] {\n    return this._slideDropZones;\n  }\n\n  private _originOffset = 0;\n  get originOffset(): number {\n    return this._originOffset;\n  }\n  @Input()\n  set originOffset(originOffset: number) {\n    this._originOffset = originOffset;\n    this._originLeftMargin = `${this._originOffset * 4}px`;\n  }\n  private _originLeftMargin = '0';\n  get originLeftMargin(): string {\n    return this._originLeftMargin;\n  }\n\n  private _firstBranchColor = branchColors[0];\n  get firstBranchColor(): string {\n    return this._firstBranchColor;\n  }\n  @Input()\n  set firstBranchColor(firstBranchColor: string) {\n    const idx = branchColors.indexOf(firstBranchColor);\n    if (idx > 0) {\n      this._firstBranchColor = firstBranchColor;\n      this._branchColors = branchColors.slice(idx).concat(branchColors.slice(0, idx));\n    } else {\n      this._firstBranchColor = branchColors[0];\n      this._branchColors = branchColors.slice(0);\n    }\n  }\n\n  private _currentEditedNode: Observable<AjfFormBuilderNodeEntry|null>;\n  get currentEditedNode(): Observable<AjfFormBuilderNodeEntry|null> {\n    return this._currentEditedNode;\n  }\n\n  private _branchLinesSubscription: Subscription = Subscription.EMPTY;\n  private _childEntriesSubscription: Subscription = Subscription.EMPTY;\n\n  constructor(private _service: AjfFormBuilderService) {\n    this._currentEditedNode = this._service.editedNodeEntry;\n  }\n\n  onResize(): void {}\n\n  edit(evt: Event): void {\n    evt.stopPropagation();\n    if (this.nodeEntry == null || !this.isNodeEntry) {\n      return;\n    }\n    this._service.editNodeEntry(<AjfFormBuilderNodeEntry>this.nodeEntry);\n  }\n\n  delete(evt: Event): void {\n    evt.stopPropagation();\n    if (this.nodeEntry == null || !this.isNodeEntry) {\n      return;\n    }\n    this._service.deleteNodeEntry(<AjfFormBuilderNodeEntry>this.nodeEntry);\n  }\n\n  isLastNode(): boolean {\n    if (!this.realNodeEntry || !this.realNodeEntry.children) {\n      return false;\n    }\n    return !this.realNodeEntry.children[0].children;\n  }\n\n  isSlide(node: AjfNode): boolean {\n    return isSlidesNode(node);\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this._updateBranchHeights());\n    this._childEntriesSubscription = this.childEntries.changes.subscribe(() => {\n      this._updateBranchHeights();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._branchLinesSubscription.unsubscribe();\n    this._childEntriesSubscription.unsubscribe();\n  }\n\n  /**\n   * Triggers when a field or slide node is moved or inserted by drag&dropping in the formbuilder.\n   * @param event The drop event.\n   * @param content True if the current nodeEntry contains other nodeEntries.\n   */\n  onDrop(\n      event: CdkDragDrop<AjfFormBuilderNodeEntry>|CdkDragDrop<AjfFormBuilderNodeTypeEntry>,\n      content = false): void {\n    onDropProcess(event, this._service, this._nodeEntry, content);\n  }\n\n  /**\n   * Assigns a progressive id to the dropList, to connect it to the FormBuilder source list.\n   * @param empty True if the list is marked as empty.\n   */\n  assignId(empty: boolean = false): string {\n    return this._service.assignListId(this.realNodeEntry.node, empty);\n  }\n\n  disableSlideDrop(item: CdkDrag<AjfFormBuilderNodeTypeEntry>): boolean {\n    return disableSlideDropPredicate(item);\n  }\n\n  disableFieldDrop(item: CdkDrag<AjfFormBuilderNodeTypeEntry>): boolean {\n    return disableFieldDropPredicate(item);\n  }\n\n  emptyAreaDropPredicate(): (item: CdkDrag, _drop: CdkDropList) => boolean {\n    return (item: CdkDrag, _drop: CdkDropList): boolean => {\n      if (this._level > 0) {\n        return !item.data.isSlide;\n      }\n      return item.data.isSlide || false;\n    };\n  }\n\n  private _updateBranchHeights(): void {\n    if (this.nodeEntry == null || !this.isNodeEntry || this.branchLines == null ||\n        this.childEntries == null) {\n      return;\n    }\n    const nodeEntry = <AjfFormBuilderNodeEntry>this.nodeEntry;\n    const branchLines: AjfFbBranchLine[] = this.branchLines.toArray();\n    const sliceIdx = nodeEntry.content != null ? nodeEntry.content.length : 0;\n    const childEntries: ElementRef[] = this.childEntries.toArray().slice(sliceIdx);\n\n    if (branchLines.length != childEntries.length) {\n      return;\n    }\n\n    branchLines.forEach((bl: AjfFbBranchLine, idx: number) => {\n      const ce: ElementRef = childEntries[idx];\n      bl.height = ce.nativeElement.offsetTop;\n    });\n  }\n}\n","<ng-container *ngIf=\"nodeEntry != null ; else rootEmpty\">\n  <ng-template [ngIf]=\"isNodeEntry && !isLastNode()\">\n    <ajf-fb-branch-line\n      *ngFor=\"let childNodeEntry of realNodeEntry.children; let idx = index\"\n      [offset]=\"idx\"\n      [color]=\"branchColors[idx]\"\n    ></ajf-fb-branch-line>\n  </ng-template>\n\n  <div\n    class=\"mat-card-container\"\n    [class.ajf-highlight]=\"(currentEditedNode|async) == nodeEntry\"\n  >\n    <div\n      *ngIf=\"!isFirst\"\n      class=\"ajf-origin-line\"\n      [style.margin-left]=\"originLeftMargin\"\n      [style.border-color]=\"firstBranchColor\"\n    ></div>\n    <ng-template [ngIf]=\"isNodeEntry\">\n      <ng-container *ngIf=\"!isDraggable; else draggable\">\n        <mat-card>\n          <ng-container *ngTemplateOutlet=\"cardTitle\"></ng-container>\n          <ng-container *ngTemplateOutlet=\"cardContent\"></ng-container>\n        </mat-card>\n      </ng-container>\n\n      <ng-template #draggable>\n        <mat-card cdkDrag [cdkDragData]=\"realNodeEntry\" class=\"ajf-draggable-box\">\n          <ng-container\n            *ngIf=\"isSlide(realNodeEntry.node); else fieldPanel\"\n          >\n            <ng-container *ngTemplateOutlet=\"slidePanel\"></ng-container>\n          </ng-container>\n        </mat-card>\n      </ng-template>\n\n      <ng-template #slidePanel>\n        <mat-expansion-panel\n          [expanded]=\"isExpanded\"\n          (opened)=\"isExpanded = true\"\n          (closed)=\"isExpanded = false\"\n          class=\"mat-elevation-z\"\n        >\n          <mat-expansion-panel-header>\n            <ng-container *ngTemplateOutlet=\"cardTitle\"></ng-container>\n          </mat-expansion-panel-header>\n          <ng-container *ngTemplateOutlet=\"cardContent\"></ng-container>\n        </mat-expansion-panel>\n      </ng-template>\n\n      <ng-template #fieldPanel>\n        <ng-container *ngTemplateOutlet=\"cardTitle\"></ng-container>\n        <ng-container *ngTemplateOutlet=\"cardContent\"></ng-container>\n      </ng-template>\n\n      <ng-template #cardTitle>\n        <div class=\"ajf-title-row\">\n          <ajf-node-icon [node]=\"realNodeEntry.node\"></ajf-node-icon>\n          <span\n            class=\"ajf-title\"\n            [innerHTML]=\"(realNodeEntry.node.label || realNodeEntry.node.name)  | transloco\"\n          ></span>\n          <span\n            *ngIf=\"realNodeEntry.node.visibility && realNodeEntry.node.visibility?.condition !== 'true'\"\n            class=\"ajf-visibility-condition\"\n            [innerHTML]=\"'Condition: (' + realNodeEntry.node.visibility?.condition + ')'\"\n          >\n          </span>\n          <span class=\"ajf-actions\">\n            <button\n              [disabled]=\"(currentEditedNode|async) == nodeEntry\"\n              (click)=\"edit($event)\"\n              mat-icon-button\n            >\n              <mat-icon>edit</mat-icon>\n            </button>\n            <button\n              [disabled]=\"(currentEditedNode|async) == null\"\n              (click)=\"delete($event)\"\n              mat-icon-button\n            >\n              <mat-icon>delete</mat-icon>\n            </button>\n          </span>\n        </div>\n      </ng-template>\n\n      <ng-template #cardContent>\n        <div *ngIf=\"hasContent\">\n          <ajf-fb-node-entry\n            cdkDropList\n            class=\"ajf-fields-list\"\n            *ngFor=\"let contentEntry of realNodeEntry.content; let isFirstChild = first; let idx = index\"\n            [id]=\"assignId()\"\n            [level]=\"level + 1\"\n            [isFirst]=\"isFirstChild\"\n            [firstBranchColor]=\"branchColors[idx]\"\n            [nodeEntry]=\"contentEntry\"\n            [cdkDropListEnterPredicate]=\"disableSlideDrop\"\n            (cdkDropListDropped)=\"onDrop($event, true)\"\n            [isExpanded]=\"isExpanded\"\n          ></ajf-fb-node-entry>\n          <mat-card\n            class=\"ajf-empty\"\n            *ngIf=\"realNodeEntry.content.length === 0\"\n            cdkDropList\n            [id]=\"assignId(true)\"\n            [cdkDropListEnterPredicate]=\"disableSlideDrop\"\n            (cdkDropListDropped)=\"onDrop($event, true)\"\n            ><mat-card-title>Drop your fields here</mat-card-title></mat-card\n          >\n        </div>\n      </ng-template>\n    </ng-template>\n  </div>\n\n  <ng-template [ngIf]=\"isNodeEntry\">\n    <ng-container\n      *ngFor=\"let childNodeEntry of realNodeEntry.children; let idx = index\"\n    >\n      <ajf-fb-node-entry\n        *ngIf=\"!isLastNode()\"\n        [level]=\"level\"\n        [originOffset]=\"idx\"\n        [firstBranchColor]=\"branchColors[idx]\"\n        [nodeEntry]=\"childNodeEntry\"\n        [isExpanded]=\"isExpanded\"\n      ></ajf-fb-node-entry>\n    </ng-container>\n  </ng-template>\n</ng-container>\n\n<ng-template #rootEmpty>\n  <div class=\"mat-card-container\">\n    <mat-card\n      class=\"ajf-empty\"\n      cdkDropList\n      [cdkDropListEnterPredicate]=\"emptyAreaDropPredicate()\"\n      (cdkDropListDropped)=\"onDrop($event)\"\n      ><mat-card-title>Drop your slides here</mat-card-title>\n    </mat-card>\n  </div>\n</ng-template>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin, AjfForm} from '@ajf/core/forms';\nimport {AjfCondition} from '@ajf/core/models';\nimport {CdkDrag, CdkDragDrop} from '@angular/cdk/drag-drop';\nimport {\n  AfterContentInit,\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {MatSlideToggleChange} from '@angular/material/slide-toggle';\nimport {Observable, Subscription} from 'rxjs';\nimport {sample} from 'rxjs/operators';\n\nimport {AjfFbChoicesOriginEditorDialog} from './choices-origin-editor-dialog';\nimport {AjfFbConditionEditorDialog} from './condition-editor-dialog';\nimport {\n  AjfFormBuilderNodeEntry,\n  AjfFormBuilderNodeTypeEntry,\n  AjfFormBuilderService\n} from './form-builder-service';\nimport {disableFieldDropPredicate, onDropProcess} from './form-builder-utils';\nimport {AjfFbStringIdentifierDialogComponent} from './string-identifier-dialog';\n\n@Component({\n  selector: 'ajf-form-builder',\n  templateUrl: 'form-builder.html',\n  styleUrls: ['form-builder.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class AjfFormBuilder implements AfterViewChecked, AfterContentInit, OnDestroy {\n  @ViewChild('designer', {static: true}) designerCont: ElementRef;\n\n  private _form: AjfForm;\n  get form(): AjfForm {\n    return this._form;\n  }\n  @Input()\n  set form(form: AjfForm) {\n    if (this._form !== form) {\n      this._form = form;\n      if (this._init) {\n        this._setCurrentForm();\n      }\n    }\n  }\n\n  private _nodeTypes: AjfFormBuilderNodeTypeEntry[];\n  get nodeTypes(): AjfFormBuilderNodeTypeEntry[] {\n    return this._nodeTypes;\n  }\n\n  private _nodeEntriesTree: Observable<AjfFormBuilderNodeEntry[]>;\n  get nodeEntriesTree(): Observable<AjfFormBuilderNodeEntry[]> {\n    return this._nodeEntriesTree;\n  }\n\n  private _choicesOrigins: Observable<AjfChoicesOrigin<any>[]>;\n  get choicesOrigins(): Observable<AjfChoicesOrigin<any>[]> {\n    return this._choicesOrigins;\n  }\n\n  private _globalExpanded = false;\n  get isGlobalExpanded(): boolean {\n    return this._globalExpanded;\n  }\n\n  /**\n   * The list of the ids of all the dropLists connected to the formbuilder source list.\n   */\n  private _connectedDropLists: Observable<string[]> = this._service.connectedDropLists;\n  get connectedDropLists(): Observable<string[]> {\n    return this._connectedDropLists;\n  }\n\n  private _vc: EventEmitter<void> = new EventEmitter<void>();\n\n  private _init = false;\n  private _editConditionSub: Subscription = Subscription.EMPTY;\n  private _editConditionDialog: MatDialogRef<AjfFbConditionEditorDialog>|null;\n  private _beforeNodesUpdateSub: Subscription = Subscription.EMPTY;\n  private _editChoicesOriginSub: Subscription = Subscription.EMPTY;\n  private _editChoicesOriginDialog: MatDialogRef<AjfFbChoicesOriginEditorDialog>|null;\n  private _stringIdentifierDialog: MatDialogRef<AjfFbStringIdentifierDialogComponent>|null;\n  private _stringIdentifierSub: Subscription = Subscription.EMPTY;\n\n  private _lastScrollTop: number;\n\n  constructor(private _service: AjfFormBuilderService, private _dialog: MatDialog) {\n    this._nodeTypes = _service.availableNodeTypes;\n    this._nodeEntriesTree = _service.nodeEntriesTree;\n    this._choicesOrigins = _service.choicesOrigins;\n    this._editConditionSub =\n        this._service.editedCondition.subscribe((condition: AjfCondition|null) => {\n          if (this._editConditionDialog != null) {\n            this._editConditionDialog.close();\n            this._editConditionDialog = null;\n          }\n          if (condition != null) {\n            this._editConditionDialog =\n                this._dialog.open(AjfFbConditionEditorDialog, {disableClose: true});\n          }\n        });\n    this._editChoicesOriginSub =\n        this._service.editedChoicesOrigin.subscribe((choicesOrigin: AjfChoicesOrigin<any>|null) => {\n          if (this._editChoicesOriginDialog != null) {\n            this._editChoicesOriginDialog.close();\n            this._editChoicesOriginDialog = null;\n          }\n          if (choicesOrigin != null) {\n            this._editChoicesOriginDialog =\n                this._dialog.open(AjfFbChoicesOriginEditorDialog, {disableClose: true});\n          }\n        });\n\n    this._beforeNodesUpdateSub = this._service.beforeNodesUpdate.subscribe(() => {\n      if (this.designerCont == null) {\n        return;\n      }\n      this._lastScrollTop = this.designerCont.nativeElement.scrollTop;\n    });\n\n    this.nodeEntriesTree.pipe(sample((<Observable<void>>this._vc))).subscribe(() => {\n      if (this.designerCont == null) {\n        return;\n      }\n      this.designerCont.nativeElement.scrollTop = this._lastScrollTop;\n    });\n\n    this._stringIdentifierSub = this._service.stringIdentifier.subscribe(() => {});\n  }\n\n  ngAfterViewChecked(): void {\n    this._vc.emit();\n  }\n\n  ngAfterContentInit(): void {\n    this._setCurrentForm();\n    this._init = true;\n  }\n\n  ngOnDestroy(): void {\n    this._editConditionSub.unsubscribe();\n    this._beforeNodesUpdateSub.unsubscribe();\n    this._editChoicesOriginSub.unsubscribe();\n    this._stringIdentifierSub.unsubscribe();\n    this._service.setForm(null);\n  }\n\n  createChoicesOrigin(): void {\n    this._service.createChoicesOrigin();\n  }\n\n  disableDrop(): boolean {\n    return false;\n  }\n\n  disableFieldDrop(item: CdkDrag<AjfFormBuilderNodeTypeEntry>): boolean {\n    return disableFieldDropPredicate(item);\n  }\n\n  /**\n   * Triggers when a field or slide node is moved or inserted by drag&dropping in the formbuilder.\n   * @param event The drop event.\n   * @param content True if the current nodeEntry contains other nodeEntries.\n   */\n  onDrop(\n      event: CdkDragDrop<AjfFormBuilderNodeEntry>|CdkDragDrop<AjfFormBuilderNodeTypeEntry>,\n      content = false): void {\n    onDropProcess(event, this._service, null, content);\n  }\n\n  editChoicesOrigin(choicesOrigin: AjfChoicesOrigin<any>): void {\n    this._service.editChoicesOrigin(choicesOrigin);\n  }\n\n  editStringIdentifier(): void {\n    if (this._stringIdentifierDialog != null) {\n      this._stringIdentifierDialog.close();\n      this._stringIdentifierDialog = null;\n    }\n    this._stringIdentifierDialog = this._dialog.open(\n        AjfFbStringIdentifierDialogComponent, {disableClose: true, width: '60%', height: '60%'});\n  }\n\n  expandAll() {\n    this._globalExpanded = true;\n  }\n\n  collapseAll() {\n    this._globalExpanded = false;\n  }\n\n  expandToggle(evt: MatSlideToggleChange) {\n    if (evt.checked) {\n      this.expandAll();\n    } else {\n      this.collapseAll();\n    }\n  }\n\n  private _setCurrentForm(): void {\n    this._service.setForm(this._form);\n  }\n}\n","<mat-toolbar>\n  <button mat-icon-button (click)=\"leftSidenav.toggle()\">\n    <mat-icon>add_box</mat-icon>\n  </button>\n  <button mat-button [matMenuTriggerFor]=\"choicesMenu\">\n    {{'Choices'|transloco}}\n  </button>\n  <button mat-button (click)=\"editStringIdentifier()\">\n    {{'Identifier'|transloco}}\n  </button>\n  <button\n    mat-icon-button\n    aria-label=\"Collapsed\"\n    matTooltip=\"Keep slides collapsed\"\n  >\n    <mat-icon>unfold_less</mat-icon>\n  </button>\n  <mat-slide-toggle\n    color=\"primary\"\n    (change)=\"expandToggle($event)\"\n  ></mat-slide-toggle>\n  <button\n    mat-icon-button\n    aria-label=\"Expanded\"\n    matTooltip=\"Keep slides expanded\"\n  >\n    <mat-icon>unfold_more</mat-icon>\n  </button>\n  <mat-menu #choicesMenu>\n    <button (click)=\"createChoicesOrigin()\" mat-menu-item>\n      {{'New..'|transloco}}\n    </button>\n    <ng-container *ngIf=\"choicesOrigins|async as cos\">\n      <button\n        *ngFor=\"let choicesOrigin of cos\"\n        (click)=\"editChoicesOrigin(choicesOrigin)\"\n        mat-menu-item\n      >\n        {{ (choicesOrigin.label || choicesOrigin.name)| transloco }}\n      </button>\n    </ng-container>\n  </mat-menu>\n  <span class=\"ajf-spacer\"></span>\n  <button mat-icon-button (click)=\"rightSidenav.toggle()\">\n    <mat-icon>settings</mat-icon>\n  </button>\n</mat-toolbar>\n<mat-drawer-container cdkDropListGroup>\n  <mat-drawer #leftSidenav position=\"start\" mode=\"over\">\n    <div\n      #sourceDropList\n      cdkDropList\n      [cdkDropListConnectedTo]=\"(connectedDropLists|async)!\"\n      [cdkDropListEnterPredicate]=\"disableDrop\"\n      [cdkDropListData]=\"nodeTypes\"\n    >\n      <ajf-fb-node-type-entry\n        *ngFor=\"let nodeType of nodeTypes\"\n        cdkDrag\n        [cdkDragData]=\"nodeType\"\n        (cdkDragStarted)=\"leftSidenav.close()\"\n        [nodeType]=\"nodeType\"\n      ></ajf-fb-node-type-entry>\n    </div>\n  </mat-drawer>\n  <mat-drawer #rightSidenav position=\"end\" mode=\"side\" [opened]=\"true\">\n    <ajf-fb-node-properties></ajf-fb-node-properties>\n  </mat-drawer>\n  <div #designer class=\"ajf-designer\">\n    <ajf-fb-node-entry\n      id=\"slides-list\"\n      cdkDropList\n      (cdkDropListDropped)=\"onDrop($event)\"\n      [cdkDropListEnterPredicate]=\"disableFieldDrop\"\n      *ngFor=\"let nodeEntry of (nodeEntriesTree|async); let isFirst = first\"\n      [isExpanded]=\"isGlobalExpanded\"\n      [isFirst]=\"isFirst\"\n      [nodeEntry]=\"nodeEntry\"\n    ></ajf-fb-node-entry>\n  </div>\n</mat-drawer-container>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfTranslocoModule} from '@ajf/core/transloco';\nimport {AjfMonacoEditorModule} from '@ajf/material/monaco-editor';\nimport {AjfNodeIconModule} from '@ajf/material/node-icon';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\nimport {AjfFbBranchLine} from './branch-line';\nimport {AjfFbChoicesOriginEditor} from './choices-origin-editor';\nimport {AjfFbChoicesOriginEditorDialog} from './choices-origin-editor-dialog';\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFbConditionEditorDialog} from './condition-editor-dialog';\nimport {AjfFormBuilder} from './form-builder';\nimport {AjfFormBuilderService} from './form-builder-service';\nimport {AjfFbNodeEntry} from './node-entry';\nimport {AjfFbNodeProperties} from './node-properties';\nimport {AjfFbNodeTypeEntry} from './node-type-entry';\nimport {AjfFbStringIdentifierDialogComponent} from './string-identifier-dialog';\nimport {AjfFbValidationConditionEditorDialog} from './validation-condition-editor-dialog';\nimport {AjfFbWarningConditionEditorDialog} from './warning-condition-editor-dialog';\n\n@NgModule({\n  imports: [\n    AjfMonacoEditorModule, AjfNodeIconModule,     CommonModule,        DragDropModule,\n    FormsModule,           MatAutocompleteModule, MatButtonModule,     MatCardModule,\n    MatCheckboxModule,     MatChipsModule,        MatDialogModule,     MatFormFieldModule,\n    MatIconModule,         MatInputModule,        MatListModule,       MatMenuModule,\n    MatSelectModule,       MatSidenavModule,      MatSliderModule,     MatTableModule,\n    MatToolbarModule,      MatTooltipModule,      ReactiveFormsModule, AjfTranslocoModule,\n    MatExpansionModule,    MatSlideToggleModule,\n\n  ],\n  declarations: [\n    AjfFbBranchLine,\n    AjfFbChoicesOriginEditor,\n    AjfFbChoicesOriginEditorDialog,\n    AjfFbConditionEditor,\n    AjfFbConditionEditorDialog,\n    AjfFbNodeEntry,\n    AjfFbNodeProperties,\n    AjfFbNodeTypeEntry,\n    AjfFbStringIdentifierDialogComponent,\n    AjfFbValidationConditionEditorDialog,\n    AjfFbWarningConditionEditorDialog,\n    AjfFormBuilder,\n  ],\n  exports: [\n    AjfFormBuilder,\n  ],\n  providers: [\n    AjfFormBuilderService,\n  ],\n})\nexport class AjfFormBuilderModule {\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport * from './form-builder-module';\nexport * from './form-builder-service';\nexport * from './form-builder-utils';\nexport * from './form-builder';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}