{"version":3,"file":"report-builder.mjs","sources":["../../../../../../src/material/report-builder/tokens.ts","../../../../../../src/material/report-builder/report-builder-service.ts","../../../../../../src/material/report-builder/utils.ts","../../../../../../src/material/report-builder/widgets-row-buttons.ts","../../../../../../src/material/report-builder/widgets-row-buttons.html","../../../../../../src/material/report-builder/renderer-widget.ts","../../../../../../src/material/report-builder/renderer-widget.html","../../../../../../src/material/report-builder/column.ts","../../../../../../src/material/report-builder/column.html","../../../../../../src/material/report-builder/condition-editor.ts","../../../../../../src/material/report-builder/condition-editor.html","../../../../../../src/material/report-builder/content.ts","../../../../../../src/material/report-builder/content.html","../../../../../../src/material/report-builder/custom-widget-dialog.ts","../../../../../../src/material/report-builder/custom-widget-dialog.html","../../../../../../src/material/report-builder/custom-widget-toolbar-button.ts","../../../../../../src/material/report-builder/custom-widget-toolbar-button.html","../../../../../../src/material/report-builder/custom-widgets-toolbar.ts","../../../../../../src/material/report-builder/custom-widgets-toolbar.html","../../../../../../src/material/report-builder/forms-analyzer-dialog.ts","../../../../../../src/material/report-builder/forms-analyzer-dialog.html","../../../../../../src/material/report-builder/forms-analyzer.ts","../../../../../../src/material/report-builder/forms-analyzer.html","../../../../../../src/material/report-builder/image-filter.ts","../../../../../../src/material/report-builder/image-group.ts","../../../../../../src/material/report-builder/image-group.html","../../../../../../src/material/report-builder/theme-color-dialog.ts","../../../../../../src/material/report-builder/theme-color-dialog.html","../../../../../../src/material/report-builder/theme-color.ts","../../../../../../src/material/report-builder/theme-color.html","../../../../../../src/material/report-builder/quill-editor.ts","../../../../../../src/material/report-builder/properties.ts","../../../../../../src/material/report-builder/properties.html","../../../../../../src/material/report-builder/toolbar-dialog.ts","../../../../../../src/material/report-builder/toolbar-dialog.html","../../../../../../src/material/report-builder/toolbar.ts","../../../../../../src/material/report-builder/toolbar.html","../../../../../../src/material/report-builder/widget-toolbar-button.ts","../../../../../../src/material/report-builder/widget-toolbar-button.html","../../../../../../src/material/report-builder/widgets-toolbar.ts","../../../../../../src/material/report-builder/widgets-toolbar.html","../../../../../../src/material/report-builder/report-builder.ts","../../../../../../src/material/report-builder/report-builder.html","../../../../../../src/material/report-builder/report-builder-module.ts","../../../../../../src/material/report-builder/public-api.ts","../../../../../../src/material/report-builder/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {InjectionToken} from '@angular/core';\n\nimport {AjfReportsConfig} from './models';\n\nexport const AJF_REPORTS_CONFIG = new InjectionToken<AjfReportsConfig>('AJF_REPORTS_CONFIG');\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField, AjfFieldType, AjfForm, AjfNode, AjfNodeType, flattenNodes} from '@ajf/core/forms';\nimport {AjfFormula, createFormula} from '@ajf/core/models';\nimport {\n  AjfAggregation,\n  AjfChartWidget,\n  AjfColumnWidget,\n  AjfCustomWidget,\n  AjfDataWidget,\n  AjfImageWidget,\n  AjfLayoutWidget,\n  AjfReport,\n  AjfReportContainer,\n  AjfStyles,\n  AjfTableWidget,\n  AjfTextWidget,\n  AjfWidget,\n  AjfWidgetType,\n  createAggregation,\n  createWidget\n} from '@ajf/core/reports';\nimport {deepCopy} from '@ajf/core/utils';\nimport {EventEmitter, Inject, Injectable, Optional} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {\n  combineLatest,\n  filter,\n  map,\n  publishReplay,\n  refCount,\n  scan,\n  share,\n  startWith\n} from 'rxjs/operators';\n\nimport {AjfFormVariables, AjfReportIcons, AjfReportsConfig, AjfWidgetsContainer} from './models';\nimport {\n  AjfColorOperation,\n  AjfCustomWidgetsOperation,\n  AjfFormVariablesOperation,\n  AjfReportFormsOperation,\n  AjfStylesOperation,\n  AjfWidgetOperation,\n  AjfWidgetsOperation\n} from './operations';\nimport {AJF_REPORTS_CONFIG} from './tokens';\n\n/**\n * This service contains all the logic to model the report widget.\n *\n * @export\n */\n@Injectable()\nexport class AjfReportBuilderService {\n  /**\n   *  this Observable observe the customWidgets obj\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _customWidgets: Observable<AjfCustomWidget[]>;\n  private _customWidgetsUpdate: Subject<AjfCustomWidgetsOperation> =\n      new Subject<AjfCustomWidgetsOperation>();\n\n  /**\n   * this Observable observe the name of the section that contains the current widget.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _origin: Observable<string>;\n  private _originUpdate: Subject<string> = new Subject<string>();\n\n  /**\n   * this Observable observe the exported json\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _savedReport: Observable<AjfReport>;\n  private _savedReportUpdate: Subject<AjfReport> = new Subject<AjfReport>();\n\n  private _jsonStack: BehaviorSubject<string[]> = new BehaviorSubject<string[]>([]);\n\n  private _lastDeletedJson: string|undefined;\n\n  private _emptyContent: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n\n  /**\n   *  this Observable observe if is fired drag mouse event.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _onDragged: Observable<boolean>;\n  private _onDraggedUpdate: Subject<boolean> = new Subject<boolean>();\n\n\n  private _onOver: Observable<boolean>;\n  private _onOverUpdate: Subject<boolean> = new Subject<boolean>();\n\n\n  /**\n   * this Observable observe the status of permanent zoom\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _fixedZoom: Observable<boolean>;\n  private _fixedZoomUpdate: Subject<boolean> = new Subject<boolean>();\n\n\n  /**\n   *  this Observable observe if is fired drag mouse event.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _onDragEnter: Observable<any>;\n  private _onDragEnterUpdate: Subject<any> = new Subject<any>();\n\n  /**\n   * Observe the header widget array.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _headerWidgets: Observable<AjfWidgetsContainer>;\n  private _headerWidgetsUpdate: Subject<AjfWidgetsOperation> = new Subject<AjfWidgetsOperation>();\n\n  /**\n   * observe the header styles.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _headerStyles: Observable<AjfStyles>;\n\n  /**\n   * Observe the content widget array\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _contentWidgets: Observable<AjfWidgetsContainer>;\n  private _contentWidgetsUpdate: Subject<AjfWidgetsOperation> = new Subject<AjfWidgetsOperation>();\n\n  /**\n   * this Observable observe the content styles.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _contentStyles: Observable<AjfStyles>;\n\n  /**\n   * this Observable observe the footer widget array.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _footerWidgets: Observable<AjfWidgetsContainer>;\n  private _footerWidgetsUpdate: Subject<AjfWidgetsOperation> = new Subject<AjfWidgetsOperation>();\n\n\n  private _color: Observable<string[]>;\n  private _colorUpdate: Subject<AjfColorOperation> = new Subject<AjfColorOperation>();\n  private _defaultColor: string[] = [\n    'rgba(0, 0, 0, 1)',       'rgba(51, 153, 255, 1)',  'rgba(153, 204, 0, 1)',\n    'rgba(255, 102, 0, 1)',   'rgba(0, 204, 204, 1)',   'rgba(204, 204, 153, 1)',\n    'rgba(255, 153, 0, 1)',   'rgba(230, 0, 0, 1)',     'rgba(255, 153, 0, 1)',\n    'rgba(255, 255, 0, 1)',   'rgba(0, 138, 0, 1)',     'rgba(0, 102, 204, 1)',\n    'rgba(153, 51, 255, 1)',  'rgba(255, 255, 255, 1)', 'rgba(250, 204, 204, 1)',\n    'rgba(255, 235, 204, 1)', 'rgba(255, 255, 204, 1)', 'rgba(204, 232, 204, 1)',\n    'rgba(204, 224, 245, 1)', 'rgba(235, 214, 255, 1)', 'rgba(187, 187, 187, 1)',\n    'rgba(240, 102, 102, 1)', 'rgba(255, 194, 102, 1)', 'rgba(255, 255, 102, 1)',\n    'rgba(102, 185, 102, 1)', 'rgba(102, 163, 224, 1)', 'rgba(194, 133, 255, 1)',\n    'rgba(136, 136, 136, 1)', 'rgba(161, 0, 0, 1)',     'rgba(178, 107, 0, 1)',\n    'rgba(178, 178, 0, 1)',   'rgba(0, 97, 0, 1)',      'rgba(0, 71, 178, 1)',\n    'rgba(107, 36, 178, 1)',  'rgba(68, 68, 68, 1)',    'rgba(92, 0, 0, 1)',\n    'rgba(102, 61, 0, 1)',    'rgba(102, 102, 0, 1)',   'rgba(0, 55, 0, 1)',\n    'rgba(0, 41, 102, 1)',    'rgba(61, 20, 102, 1)'\n  ];\n\n\n  /**\n   * this Observable observe the footer styles.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _footerStyles: Observable<AjfStyles>;\n\n  /**\n   *  this Observable observe the current widget which holds the focus.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _currentWidget: Observable<AjfWidget|null>;\n  private _currentWidgetUpdate: BehaviorSubject<AjfWidgetOperation|null> =\n      new BehaviorSubject<AjfWidgetOperation|null>(null);\n\n\n  /**\n   * Observe the AjfFormVariables exploit for field selecting from forms\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _formsVariables: Observable<AjfFormVariables[]>;\n  private _formsVariablesUpdate: BehaviorSubject<AjfFormVariablesOperation|null> =\n      new BehaviorSubject<AjfFormVariablesOperation|null>(null);\n\n  /**\n   * Observe the AjfFormVariables exploit for field selecting from forms\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _conditionNames: Observable<AjfFormVariables[]>;\n  private _conditionNamesUpdate: BehaviorSubject<AjfFormVariablesOperation|null> =\n      new BehaviorSubject<AjfFormVariablesOperation|null>(null);\n\n  /**\n   * this BehaviorSubject update export report.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _saveReport: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\n  /**\n   * this BehaviorSubject contains the AjfReport.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _report: BehaviorSubject<AjfReport|null> = new BehaviorSubject<AjfReport|null>(null);\n\n  /**\n   *  this Observable observe the styles of report.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _reportStyles: Observable<AjfStyles>;\n  private _reportStylesUpdate: Subject<AjfStylesOperation> = new Subject<AjfStylesOperation>();\n\n  /**\n   * observe the forms fetched\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _reportForms: Observable<AjfForm[]>;\n  private _reportFormsUpdate: Subject<AjfReportFormsOperation> =\n      new Subject<AjfReportFormsOperation>();\n\n  /**\n   * dictionary for  widgetsUpdate\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _updates: any = {\n    header: this._headerWidgetsUpdate,\n    content: this._contentWidgetsUpdate,\n    footer: this._footerWidgetsUpdate,\n    color: this._colorUpdate,\n    customWidgets: this._customWidgetsUpdate\n  };\n\n  /**\n   * event emitter that notify when wont to save report\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _saveReportEvent: EventEmitter<void> = new EventEmitter<void>();\n\n  private _saveFormulaTOHtml: EventEmitter<any> = new EventEmitter<any>();\n\n  getFormulaToHtmlEvent(): Observable<string> {\n    return this._saveFormulaTOHtml as Observable<string>;\n  }\n\n  /**\n   * event emitter that notify when column width changed\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  columnWidthChangedEmitter: EventEmitter<void> = new EventEmitter<void>();\n\n  private _iconSets: AjfReportIcons = {'ajf-icon': []};\n  get iconSets(): AjfReportIcons {\n    return this._iconSets;\n  }\n\n  /**\n   * Creates an instance of AjfReportBuilderService.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  constructor(@Optional() @Inject(AJF_REPORTS_CONFIG) reportsConfig: AjfReportsConfig) {\n    this._lastDeletedJson = '';\n\n    if (reportsConfig != null) {\n      if (reportsConfig.icons != null) {\n        this._iconSets = {...this._iconSets, ...reportsConfig.icons};\n      }\n    }\n\n    this._origin = (<Observable<string>>this._originUpdate).pipe(startWith('header'), share());\n\n    this._savedReport = (<Observable<AjfReport>>this._savedReportUpdate).pipe(share());\n\n    this._onDragged = (<Observable<boolean>>this._onDraggedUpdate).pipe(startWith(false), share());\n\n    this._onOver = (<Observable<boolean>>this._onOverUpdate).pipe(startWith(false), share());\n\n    this._fixedZoom = (<Observable<boolean>>this._fixedZoomUpdate).pipe(startWith(false), share());\n\n    this._onDragEnter = this._onDragEnterUpdate.pipe(share());\n\n    this._reportStyles = (<Observable<AjfStylesOperation>>this._reportStylesUpdate)\n                             .pipe(scan((styles: AjfStyles, op: AjfStylesOperation) => {\n                                     return op(styles);\n                                   }, <AjfStyles>{}), share(), startWith(<AjfStyles>{}));\n\n    this._reportForms = (<Observable<AjfReportFormsOperation>>this._reportFormsUpdate)\n                            .pipe(scan((forms: AjfForm[], op: AjfReportFormsOperation) => {\n                                    return op(forms);\n                                  }, []), share(), startWith([]));\n\n    this._customWidgets =\n        (<Observable<AjfCustomWidgetsOperation>>this._customWidgetsUpdate)\n            .pipe(scan((widgets: AjfCustomWidget[], op: AjfCustomWidgetsOperation) => {\n                    return op(widgets);\n                  }, []), share(), startWith([]));\n\n    this._formsVariables =\n        (<Observable<AjfFormVariablesOperation>>this._formsVariablesUpdate)\n            .pipe(\n                filter(s => s != null),\n                scan((variables: AjfFormVariables[], op: AjfFormVariablesOperation) => {\n                  return op(variables);\n                }, []), publishReplay(1), refCount());\n\n    this._conditionNames =\n        (<Observable<AjfFormVariablesOperation>>this._conditionNamesUpdate)\n            .pipe(\n                filter(s => s != null),\n                scan((variables: AjfFormVariables[], op: AjfFormVariablesOperation) => {\n                  return op(variables);\n                }, []), share(), startWith([]));\n\n    this._headerWidgets = (<Observable<AjfWidgetsOperation>>this._headerWidgetsUpdate)\n                              .pipe(\n                                  scan(\n                                      (widgets: AjfWidgetsContainer, op: AjfWidgetsOperation) => {\n                                        return op(widgets);\n                                      },\n                                      <AjfWidgetsContainer>{widgets: [], styles: {}}),\n                                  startWith(<AjfWidgetsContainer>{widgets: [], styles: {}}),\n                                  publishReplay(1), refCount());\n\n    this._headerStyles = this._headerWidgets.pipe(map((widgets: AjfWidgetsContainer) => {\n      return widgets != null ? widgets.styles : {};\n    }));\n\n    this._contentWidgets = (<Observable<AjfWidgetsOperation>>this._contentWidgetsUpdate)\n                               .pipe(\n                                   scan(\n                                       (widgets: AjfWidgetsContainer, op: AjfWidgetsOperation) => {\n                                         return op(widgets);\n                                       },\n                                       <AjfWidgetsContainer>{widgets: [], styles: {}}),\n                                   startWith(<AjfWidgetsContainer>{widgets: [], styles: {}}),\n                                   publishReplay(1), refCount());\n\n    this._contentStyles = this._contentWidgets.pipe(map((widgets: AjfWidgetsContainer) => {\n      return widgets != null ? widgets.styles : {};\n    }));\n\n    this._footerWidgets = (<Observable<AjfWidgetsOperation>>this._footerWidgetsUpdate)\n                              .pipe(\n                                  scan(\n                                      (widgets: AjfWidgetsContainer, op: AjfWidgetsOperation) => {\n                                        return op(widgets);\n                                      },\n                                      <AjfWidgetsContainer>{widgets: [], styles: {}}),\n                                  startWith(<AjfWidgetsContainer>{widgets: [], styles: {}}),\n                                  publishReplay(1), refCount());\n\n    this._footerStyles = this._footerWidgets.pipe(map((widgets: AjfWidgetsContainer) => {\n      return widgets != null ? widgets.styles : {};\n    }));\n\n    this._color = (<Observable<AjfColorOperation>>this._colorUpdate)\n                      .pipe(scan((color: string[], op: AjfColorOperation) => {\n                              return op(color);\n                            }, this._defaultColor), share(), startWith(this._defaultColor));\n\n    this._currentWidget = this._currentWidgetUpdate.pipe(\n        filter(s => s != null),\n        map(s => s!),\n        scan(\n            (widget: AjfWidget|null, op: AjfWidgetOperation) => {\n              return op(widget);\n            },\n            null as unknown as AjfWidget),\n        publishReplay(1),\n        refCount(),\n    );\n\n    this._reportForms\n        .pipe(filter(f => f.length != 0), map((forms: AjfForm[]) => {\n                return (_c: AjfFormVariables[]): AjfFormVariables[] => {\n                  return this.fillFormsVariables(forms);\n                };\n              }))\n        .subscribe(this._formsVariablesUpdate);\n\n    this._reportForms\n        .pipe(filter(f => f.length != 0), map((forms: AjfForm[]) => {\n                return (_c: AjfFormVariables[]): AjfFormVariables[] => {\n                  return this.fillFormsVariables(forms);\n                };\n              }))\n        .subscribe(this._conditionNamesUpdate);\n\n    const reportObs = this._report;\n\n    reportObs\n        .pipe(map((r: AjfReport|null) => {\n          return (_colors: string[]): string[] => {\n            let tempColors: string[] = this._defaultColor;\n            if (r == null) {\n              return [];\n            } else {\n              this.parseColor(r.styles, tempColors);\n              if (r.content) {\n                this.parseColor(r.content.styles, tempColors);\n              }\n              if (r.footer) {\n                this.parseColor(r.footer.styles, tempColors);\n              }\n              if (r.header) {\n                this.parseColor(r.header.styles, tempColors);\n                for (let i = 0; i < r.header.content.length; i++) {\n                  let obj = r.header.content[i];\n                  this.parseColor(obj.styles, tempColors);\n                  if (obj.widgetType === AjfWidgetType.Layout) {\n                    let layoutObj = obj as AjfLayoutWidget;\n                    for (let j = 0; j < layoutObj.content.length; j++) {\n                      let columnObj = layoutObj.content[j] as AjfColumnWidget;\n                      this.parseColor(columnObj.styles, tempColors);\n                      for (let z = 0; z < columnObj.content.length; z++) {\n                        let widgetObj = columnObj.content[z];\n                        this.parseColor(widgetObj.styles, tempColors);\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            return <string[]>tempColors;\n          };\n        }))\n        .subscribe(this._colorUpdate);\n\n    reportObs\n        .pipe(map((r: AjfReport|null) => {\n          return (_styles: AjfStyles): AjfStyles => {\n            if (r == null || r.styles == null) {\n              return <AjfStyles>{};\n            } else {\n              return <AjfStyles>r.styles;\n            }\n          };\n        }))\n        .subscribe(this._reportStylesUpdate);\n\n    reportObs\n        .pipe(map((r: AjfReport|null) => {\n          return (_widgets: AjfWidgetsContainer): AjfWidgetsContainer => {\n            if (r == null || r.header == null) {\n              return <AjfWidgetsContainer>{widgets: [], styles: {}};\n            } else {\n              return <AjfWidgetsContainer>{\n                widgets: r.header.content || [],\n                styles: r.header.styles || {}\n              };\n            }\n          };\n        }))\n        .subscribe(this._headerWidgetsUpdate);\n\n    reportObs\n        .pipe(map((r: AjfReport|null) => {\n          return (_widgets: AjfWidgetsContainer): AjfWidgetsContainer => {\n            if (r == null || r.content == null) {\n              return <AjfWidgetsContainer>{widgets: [], styles: {}};\n            } else {\n              return <AjfWidgetsContainer>{\n                widgets: r.content.content || [],\n                styles: r.content.styles || {}\n              };\n            }\n          };\n        }))\n        .subscribe(this._contentWidgetsUpdate);\n\n    reportObs\n        .pipe(map((r: AjfReport|null) => {\n          return (_widgets: AjfWidgetsContainer): AjfWidgetsContainer => {\n            if (r == null || r.footer == null) {\n              return <AjfWidgetsContainer>{widgets: [], styles: {}};\n            } else {\n              return <AjfWidgetsContainer>{\n                widgets: r.footer.content || [],\n                styles: r.footer.styles || {}\n              };\n            }\n          };\n        }))\n        .subscribe(this._footerWidgetsUpdate);\n\n    this._saveReport.pipe(map((json: any) => {\n      return (_r: any): any => {\n        if (json = null) {\n          return {};\n        }\n        return json;\n      };\n    }));\n\n    this._saveReportEvent\n        .pipe(\n            combineLatest(this.report, this.reportForms),\n            combineLatest(\n                this._headerWidgets.pipe(filter(w => w != null)),\n                this._contentWidgets.pipe(filter(w => w != null)),\n                this._footerWidgets.pipe(filter(w => w != null)),\n                this._reportStyles.pipe(filter(w => w != null)),\n                ))\n        .subscribe(r => {\n          let obj: any = {};\n          // const curRo = r[0][1];\n          // const forms = r[0][2] != null ? r[0][2] || []\n          //     : (curRo != null ? curRo.forms || [] : []);\n\n          const [hco, cco, fco] = [r[1], r[2], r[3]] as AjfWidgetsContainer[];\n\n          obj.header = {content: hco.widgets.map(w => deepCopy(w)), styles: hco.styles} as\n              AjfReportContainer;\n          obj.content = {content: cco.widgets.map(w => deepCopy(w)), styles: cco.styles} as\n              AjfReportContainer;\n          obj.footer = {content: fco.widgets.map(w => deepCopy(w)), styles: fco.styles} as\n              AjfReportContainer;\n          obj.styles = r[4];\n\n          const ro = {\n            header: {content: hco.widgets, styles: hco.styles},\n            content: {content: cco.widgets, styles: cco.styles},\n            footer: {content: fco.widgets, styles: fco.styles},\n            styles: r[4]\n          } as AjfReport;\n\n          this.setSaveReport(obj);\n          this._savedReportUpdate.next(ro);\n          this.pushJsonStack(JSON.stringify(obj));\n        });\n  }\n\n  /**\n   *\n   *  functions\n   *\n   */\n\n  /**\n   * utils:\n   * remove AjfNodeGroup, AjfSlide, AjfRepeatingSlide, AjfStringField from ajfnode array\n   *\n   * @param nodes\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  filterNodes(nodes: AjfNode[]): AjfNode[] {\n    for (let i = 0; i < nodes.length; i++) {\n      const node = nodes[i];\n      if (node.nodeType === AjfNodeType.AjfNodeGroup || node.nodeType === AjfNodeType.AjfSlide ||\n          node.nodeType === AjfNodeType.AjfRepeatingSlide ||\n          (node.nodeType === AjfNodeType.AjfField &&\n           (node as AjfField).fieldType === AjfFieldType.String)) {\n        nodes.splice(i, 1);\n        i--;\n      }\n    }\n    return nodes;\n  }\n\n  parseColor(cssStyles: any, colors: string[]): void {\n    const styleKeys = ['background-color', 'backgroundColor', 'color'];\n    styleKeys.forEach((k) => {\n      if (cssStyles[k] && colors.indexOf(cssStyles[k]) == -1) {\n        colors.push(cssStyles[k]);\n      }\n    });\n  }\n\n  fillFormsVariables(forms: AjfForm[]) {\n    let variables: AjfFormVariables[] = [];\n    for (let i = 0; i < forms.length; i++) {\n      variables[i] = {nodes: [], labels: [], names: [], types: []};\n\n      if (forms[i].nodes != null && forms[i].nodes.length > 0) {\n        variables[i].nodes = this.filterNodes(flattenNodes(forms[i].nodes));\n      }\n      variables[i].labels = this.extractLabelsNodes(variables[i].nodes);\n      variables[i].names = this.extractNamesNodes(variables[i].nodes);\n      variables[i].types = this.extractTypesNodes(variables[i].nodes);\n    }\n    return variables;\n  }\n  /**\n   * utils:\n   *  the obj returned contains the label field of ajfNode\n   * @param nodes\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  extractLabelsNodes(nodes: AjfNode[]): any {\n    let obj: string[] = [];\n    for (let i = 0; i < nodes.length; i++) {\n      obj.push(nodes[i].label);\n    }\n    return obj;\n  }\n\n  extractNamesNodes(nodes: AjfNode[]): any {\n    let obj: string[] = [];\n    for (let i = 0; i < nodes.length; i++) {\n      obj.push(nodes[i].name);\n    }\n    return obj;\n  }\n  extractTypesNodes(nodes: AjfNode[]): any {\n    let obj: AjfFieldType[] = [];\n    for (let i = 0; i < nodes.length; i++) {\n      let p: AjfField = <AjfField>nodes[i];\n      obj.push(p.fieldType);\n    }\n    return obj;\n  }\n\n  setOrigin(origin: string): void {\n    this._originUpdate.next(origin);\n  }\n\n  /**\n   * utils:\n   * This method round the value to the decimal position\n   *\n   * @param value\n   * @param decimalpositions\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  roundTo(value: number, decimalPositions: number) {\n    let i = value * Math.pow(10, decimalPositions);\n\n    i = Math.floor(i);\n\n    return i / Math.pow(10, decimalPositions);\n  }\n\n  /**\n   * utils:\n   * This validator check if the value is a number.\n   *\n   * @param value\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  isNumber(value: any): boolean {\n    return /^\\d+(\\.\\d+)?/.test(value);\n  }\n\n  isNumberArray(value: any[]): boolean {\n    for (let i = 0; i < value.length; i++) {\n      if (!this.isNumber(value[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * get _onDragged Observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get onDragged(): Observable<any> {\n    return this._onDragged;\n  }\n\n  /**\n   * get _onOver Observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get onOver(): Observable<any> {\n    return this._onOver;\n  }\n\n  /**\n   * get _fixedZoom Observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get fixedZoom(): Observable<boolean> {\n    return this._fixedZoom;\n  }\n\n  /**\n   *  change status of _fixedZoom in true\n   *\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  fixedZoomIn(): void {\n    this._fixedZoomUpdate.next(true);\n  }\n\n  /**\n   *  change status of _fixedZoom in false\n   *\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  fixedZoomOut(): void {\n    this._fixedZoomUpdate.next(false);\n  }\n\n  /**\n   * get _onDragEnter observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get onDragEnter(): Observable<any> {\n    return this._onDragEnter;\n  }\n\n  /**\n   *  update _onDragEnter with  section(header,content,footer) and index\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  dragEnter(array: string, index: number): void {\n    this._onDragEnterUpdate.next({array, index});\n  }\n\n  /**\n   *  update _ondragged with true\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  dragStarted(): void {\n    this._onDraggedUpdate.next(true);\n  }\n\n  /**\n   *  update _onDragged with false\n   *\n   * @memberOf AjfReportBuilderService\n   */\n\n  dragEnded(): void {\n    this._onDraggedUpdate.next(false);\n  }\n\n\n  /**\n   *  update _onOver with true\n   *\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  overStarted(): void {\n    this._onOverUpdate.next(true);\n  }\n\n\n  /**\n   * update _onOver with false\n   *\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  overEnded(): void {\n    this._onOverUpdate.next(false);\n  }\n\n  /**\n   *\n   *  update _onDragged with false\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  dragLeave(): void {\n    this._onDragEnterUpdate.next({});\n  }\n\n  /**\n   * Get the report\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get report(): Observable<AjfReport|null> {\n    return this._report as Observable<AjfReport|null>;\n  }\n\n  /**\n   * emit save report event\n   *\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  saveReport() {\n    if (this._saveReportEvent != null) {\n      this._saveReportEvent.emit();\n    }\n  }\n\n  saveImageFormula(formula: AjfFormula) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      if (widget == null) {\n        return widget;\n      }\n      const w = widget as AjfImageWidget;\n      w.flag = formula;\n      w.icon = formula;\n      return w;\n    });\n  }\n\n  saveFormulaToHtml(htmlFormula: string, reference: any) {\n    if (this._saveFormulaTOHtml != null) {\n      const obj = {'formula': htmlFormula, 'reference': reference};\n      this._saveFormulaTOHtml.emit(obj);\n    }\n  }\n\n  setEmptyContent(val: boolean): void {\n    this._emptyContent.next(val);\n  }\n\n\n  pushJsonStack(json: string): void {\n    let currentStack = this._jsonStack.getValue();\n\n    if (currentStack.indexOf(json) === -1 && json !== this._lastDeletedJson) {\n      currentStack.push(json);\n    }\n\n    this._jsonStack.next(currentStack);\n  }\n\n  popJsonStack(): string|undefined {\n    let emptyJson = '{\"header\":{\"content\":[],\"styles\":{}},' +\n        '\"content\":{\"content\":[],\"styles\":{}},\"' +\n        'footer\":{\"content\":[],\"styles\":{}},\"styles\":{}}';\n    let currentStack = this._jsonStack.getValue();\n    currentStack.pop();\n    this._lastDeletedJson = currentStack.pop();\n\n    if (currentStack.length <= 0) {\n      this._lastDeletedJson = '';\n      this._jsonStack.next([]);\n      this.updateCurrentWidget(null);\n      this.setEmptyContent(true);\n      return emptyJson;\n    }\n    this._jsonStack.next(currentStack);\n\n    return this._lastDeletedJson;\n  }\n\n\n  /**\n   * get the emitter\n   *\n   * @readonly\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  get columnWidthChanged() {\n    return this.columnWidthChangedEmitter;\n  }\n\n  /**\n   * get _customWidgets Observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get customWidgets(): Observable<AjfCustomWidget[]> {\n    return this._customWidgets;\n  }\n\n  /**\n   * Get the header widget\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get headerWidgets(): Observable<AjfWidgetsContainer> {\n    return this._headerWidgets;\n  }\n\n  /**\n   * Get the header styles\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get headerStyles(): Observable<AjfStyles> {\n    return this._headerStyles;\n  }\n\n  /**\n   * Get the Content widget\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get contentWidgets(): Observable<AjfWidgetsContainer> {\n    return this._contentWidgets;\n  }\n\n  /**\n   * Get the content styles\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get contentStyles(): Observable<AjfStyles> {\n    return this._contentStyles;\n  }\n\n  /**\n   * Get the footer widget\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get footerWidgets(): Observable<AjfWidgetsContainer> {\n    return this._footerWidgets;\n  }\n\n  /**\n   * Get the footer styles\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get footerStyles(): Observable<AjfStyles> {\n    return this._footerStyles;\n  }\n\n  /**\n   * Get the colors of report\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get colors(): Observable<string[]> {\n    return this._color;\n  }\n\n  get emptyContent(): Observable<boolean> {\n    return <Observable<boolean>>this._emptyContent;\n  }\n\n  /**\n   *\n   * @param type\n   * @param newWidget\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  updateArrayWidgets(type: string, newWidget: AjfWidgetsContainer) {\n    if ((type !== 'header') && (type !== 'content') && (type !== 'footer')) {\n      throw new Error('Unknown type ' + type);\n    }\n    this._updates[type].next((_widgets: AjfWidgetsContainer): AjfWidgetsContainer => {\n      return newWidget;\n    });\n  }\n\n  /**\n   * get _formsVariables Observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get formsVariables(): Observable<AjfFormVariables[]> {\n    return this._formsVariables;\n  }\n\n  get conditionNames(): Observable<AjfFormVariables[]> {\n    return this._conditionNames;\n  }\n  /**\n   * Get the current widget\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get currentWidget(): Observable<AjfWidget|null> {\n    return this._currentWidget;\n  }\n\n  /**\n   * This method Update _currentWidgetUpdate with newWidget.\n   *\n   * @param newWidget\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  updateCurrentWidget(newWidget: AjfWidget|null) {\n    this._currentWidgetUpdate.next((_widget: AjfWidget|null): AjfWidget|null => {\n      this._saveReportEvent.emit();\n      return newWidget;\n    });\n  }\n\n  /**\n   * Get the report\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get getSaveReport(): Observable<any> {\n    return this._saveReport as Observable<any>;\n  }\n\n  /**\n   * get _jsonSavedReport obeservable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get reportSaved(): Observable<AjfReport> {\n    return this._savedReport;\n  }\n\n\n  /**\n   * get _reportStyles observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get reportStyles(): Observable<AjfStyles> {\n    return this._reportStyles;\n  }\n\n  /**\n   * get _reportForms observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get reportForms(): Observable<AjfForm[]> {\n    return this._reportForms;\n  }\n\n  /**\n   * get the _origin Observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get origin(): Observable<string> {\n    return this._origin;\n  }\n\n  /**\n   * This method assigns the new width to the idx column\n   * and recalculates the width of the remaining columns of the layout.\n   * The range value are from 0,1 to 1.\n   *\n   * RULES:\n   * The min value for column is 0,1.\n   * The sum of all columns width is always 1.\n   * The method round the values.\n   * If is present only one column the width is always 1.\n   *\n   * When the new value `>` old value:\n   * the width of the remaining columns decreases.\n   * When the new value `<` old value:\n   * the width of the remaining columns increases.\n   *\n   * When values ​​are periodic, rounding assigns the gap to the current value.\n   * For example: 3 columns with 0,33 believe 1 column 0,34 and 2 columns 0,33.\n   *\n   * @param newValue\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  instantColumnValue(newValue: number, idx: number) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      if (widget == null) {\n        return widget;\n      }\n      let myObj = <AjfLayoutWidget>widget;\n\n      let size = myObj.columns.length;\n\n      let spreadValue = 0;\n      let objNum = 0;\n      let sum = 0;\n      let idxFirstNoObj = -1;\n\n      let add = false;\n      let foundFirstNoObj = false;\n\n      let re1 = new RegExp('(^[0]\\.\\[1-9][0-9]$)');\n      let re2 = new RegExp('(^[0]\\.\\[1-9]$)');\n      let re3 = new RegExp('^[1]$');\n\n      let oldValue = myObj.columns[idx];\n\n      newValue = Number(this.roundTo(newValue, 2).toFixed(2));\n\n      if (myObj.columns[idx] == null) {\n        throw new Error('invalid value');\n      }\n\n      for (let j = 0; j < size; j++) {\n        if (myObj.columns[j] === -1) {\n          objNum++;\n        }\n      }\n\n      if (oldValue == -1) {\n        oldValue = 0.1;\n        objNum--;\n        newValue = Number(this.roundTo(1 / (size - objNum), 2).toFixed(2));\n        myObj.columns[idx] = 0.1;\n      } else if (oldValue < 0.1) {\n        oldValue = 0.1;\n      }\n\n\n      if (newValue !== -1) {\n        if (myObj.columns.length === 1) {\n          myObj.columns[0] = 1;\n          return myObj;\n        }\n\n        if (newValue < 0.1) {\n          newValue = 0.1;\n        } else if (newValue + 0.1 * (size - objNum - 1) > 1) {\n          newValue = 1 - (0.1 * (size - objNum - 1));\n        }\n\n        if ((oldValue === newValue) && (oldValue === 0.1)) {\n          myObj.columns[idx] = newValue;\n          return myObj;\n        }\n\n        if (oldValue > newValue) {\n          add = true;\n          spreadValue = (oldValue - newValue) / (size - objNum - 1);\n        } else {\n          add = false;\n          spreadValue = (newValue - oldValue) / (size - objNum - 1);\n        }\n\n        spreadValue = Number(this.roundTo(spreadValue, 2).toFixed(2));\n\n        if (spreadValue < 0.01) {\n          spreadValue = 0.1;\n        }\n\n      } else {\n        myObj.columns[idx] = -1;\n        objNum++;\n        add = true;\n        if (myObj.columns.length == 1) {\n          spreadValue = 1;\n        } else {\n          spreadValue = (oldValue) / (size - objNum);\n        }\n      }\n\n      for (let i = 0; i < size; i++) {\n        if (myObj.columns[i] !== -1) {\n          if ((i == idx)) {\n            myObj.columns[idx] = newValue;\n          } else {\n            if (add) {\n              myObj.columns[i] += spreadValue;\n              if ((myObj.columns[i] > 0.9) && (myObj.columns.length - objNum != 1)) {\n                myObj.columns[i] = 0.90;\n              }\n\n            } else {\n              myObj.columns[i] -= spreadValue;\n              if (myObj.columns[i] < 0.1) {\n                myObj.columns[i] = 0.10;\n              }\n            }\n\n            myObj.columns[i] = Number(this.roundTo(myObj.columns[i], 2).toFixed(2));\n            sum += myObj.columns[i];\n          }\n\n          sum = Number(this.roundTo(sum, 2).toFixed(2));\n\n          if (foundFirstNoObj == false) {\n            idxFirstNoObj = i;\n            foundFirstNoObj = true;\n          }\n        }\n      }\n\n      if (newValue === -1) {\n        myObj.columns[idx] = -1;\n        if (foundFirstNoObj) {\n          myObj.columns[idxFirstNoObj] += Number(this.roundTo(1 - sum, 2).toFixed(2));\n        }\n      } else {\n        myObj.columns[idx] = Number(this.roundTo(1 - sum, 2).toFixed(2));\n      }\n\n      for (let j = 0; j < myObj.columns.length; j++) {\n        if (myObj.columns[j] !== -1 && !re1.test(String(myObj.columns[j])) &&\n            !re2.test(String(myObj.columns[j])) && !re3.test(String(myObj.columns[j]))) {\n          this.instantColumnValue(0.10, j);\n        }\n      }\n      this.columnWidthChangedEmitter.emit();\n      this._saveReportEvent.emit();\n      return myObj;\n    });\n  }\n\n  /**\n   * This method set the imageUrl on the current AjfImageWidget.\n   *\n   * @param imageUrl\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setImageUrl(imageUrl: string) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      if (widget == null) {\n        return null;\n      }\n      const myObj = widget as AjfImageWidget;\n      myObj.url = createFormula({formula: `\"${imageUrl}\"`});\n      return myObj;\n    });\n  }\n\n  setIcon(icon: {fontSet: string, fontIcon: string}) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      if (widget == null) {\n        return null;\n      }\n      const myObj = widget as AjfImageWidget;\n      myObj.icon = createFormula({formula: `\"${icon}\"`});\n      return myObj;\n    });\n  }\n\n  setFlag(value: string) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      if (widget == null) {\n        return null;\n      }\n      const myObj = widget as AjfImageWidget;\n      myObj.flag = createFormula({formula: `\"${value}\"`});\n      return myObj;\n    });\n  }\n\n  saveCondition(conditionText: string) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      if (widget == null) {\n        return null;\n      }\n      if (widget.visibility != null) {\n        widget.visibility.condition = conditionText;\n      }\n      return widget;\n    });\n  }\n\n  saveChartFormula(\n      _label: string, _level: number, _mainIndex: number, _index: number, formulaText: string,\n      aggregationType: number) {\n    this._currentWidgetUpdate.next((w: AjfWidget|null): AjfWidget|null => {\n      if (w == null) {\n        return null;\n      }\n      const widget = w as AjfChartWidget;\n      if (widget != null && widget.dataset != null) {\n        let formula: AjfFormula = createFormula({});\n        let aggregation: AjfAggregation = createAggregation({});\n        // let obj: any;\n\n        formula.formula = formulaText;\n        aggregation.aggregation = aggregationType;\n\n        // obj = {\n        //   'formula': formula.toJson(),\n        //   'aggregation': aggregation.toJson(),\n        //   'label': label\n        // };\n\n        // dataset = AjfDataset.fromJson(obj);\n        // check if the row that contains main data is defined\n        /* if (widget.dataset[0] == null) {\n          widget.dataset[0] = [];\n        }\n\n        if (level == 0 && mainIndex == -1 && index == -1) {\n\n          widget.dataset[0].push(dataset);\n        } else if (level == 1 && mainIndex == -1 && index == -1) {\n\n          widget.dataset[widget.dataset.length] = [];\n          widget.dataset[widget.dataset.length - 1].push(dataset);\n        } else if (index === - 1) {\n          widget.dataset[mainIndex + 1].push(dataset);\n        } else {\n          widget.dataset[mainIndex].splice(index, 1, dataset);\n        } */\n      }\n      return widget;\n    });\n  }\n\n  saveTableFormula(\n      _label: string, aggregationType: number, formulaText: string, _mainIndex: number,\n      _index: number) {\n    this._currentWidgetUpdate.next((w: AjfWidget|null): AjfWidget|null => {\n      if (w == null) {\n        return null;\n      }\n      const widget = w as AjfTableWidget;\n      if (widget.dataset != null) {\n        let formula: AjfFormula = createFormula({});\n        let aggregation: AjfAggregation = createAggregation({});\n        // let dataset: AjfDataset = new AjfDataset();\n        // let rowDataset: AjfDataset[] = [];\n        // let obj: any;\n\n        formula.formula = formulaText;\n        aggregation.aggregation = aggregationType;\n\n        // obj = {\n        //   'formula': formula.toJson(),\n        //   'aggregation': aggregation.toJson(),\n        //   'label': label\n        // };\n\n        // dataset = AjfDataset.fromJson(obj);\n        /* if (mainIndex === - 1) {\n          widget.dataset[widget.dataset.length] = [];\n          widget.dataset[widget.dataset.length - 1].push(dataset);\n        } else {\n          if (index === -1) {\n            widget.dataset[mainIndex].push(dataset);\n          } else {\n            widget.dataset[mainIndex].splice(index, 1, dataset);\n          }\n        } */\n      }\n      return widget;\n    });\n  }\n\n  removeTableMainData(index: number) {\n    this._removeFromCurrentWidgetArrayProperty('dataset', index);\n  }\n\n  removeData(_mainIndex: number, _index: number) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      let myObj = <AjfDataWidget>widget;\n\n      /* if (index === -1) {\n        myObj.dataset.splice(mainIndex, 1);\n      } else {\n        myObj.dataset[mainIndex].splice(index, 1);\n      } */\n\n      return myObj;\n    });\n  }\n\n  /**\n   * update type field of AjfChartWidget current widget\n   *\n   * @param type\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setChartType(type: number) {\n    this._setCurrentWidgetProperty('type', type);\n  }\n\n  /**\n   * remove  idx element of xLabels field of AjfChartWidget current widget\n   *\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  removeMainData(_idx: number) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      let myObj = <AjfChartWidget>widget;\n      // myObj.dataset[0].splice(idx, 1);\n\n      return myObj;\n    });\n  }\n\n  removeRelatedData(_mainIdx: number, _idx: number) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      let myObj = <AjfChartWidget>widget;\n      /* if (idx == -1) {\n        myObj.dataset.splice(mainIdx + 1, 1);\n      } else {\n        myObj.dataset[mainIdx + 1].splice(idx, 1);\n      } */\n\n      return myObj;\n    });\n  }\n\n\n  /**\n   * update backgroundColor field of AjfChartWidget current widget\n   *\n   * @param colors\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setChartBackgroundColor(colors: string[]) {\n    this._setCurrentWidgetProperty('backgroundColor', colors);\n  }\n\n  addChartBackgroundColor(color: string) {\n    this._addToCurrentWidgetArrayProperty('backgroundColor', color);\n  }\n\n  removeChartBackgroundColor(idx: number) {\n    this._removeFromCurrentWidgetArrayProperty('backgroundColor', idx);\n  }\n\n  /**\n   * update borderColor field of AjfChartWidget current widget\n   *\n   * @param colors\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setChartBorderColor(colors: string[]) {\n    this._setCurrentWidgetProperty('borderColor', colors);\n  }\n\n  setChartBorderWidth(value: number) {\n    this._setCurrentWidgetProperty('borderWidth', value);\n  }\n\n  addChartBorderColor(color: string) {\n    this._addToCurrentWidgetArrayProperty('borderColor', color);\n  }\n\n  removeChartBorderColor(idx: number) {\n    this._removeFromCurrentWidgetArrayProperty('borderColor', idx);\n  }\n\n  /**\n   * This method set the AjfReport.\n   *\n   * @param report\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setReport(report: AjfReport): void {\n    this._report.next(report);\n  }\n\n  /**\n   * This method set the export report.\n   *\n   * @param report\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setSaveReport(json: any): void {\n    this._saveReport.next(json);\n  }\n\n  /**\n   * This method set the font attribute on the current AjfWidget.\n   *\n   * There is a check on font-size attribute,\n   * if is no specificate the type of size font set 'pt' as default.\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setWidgetStyles(label: string, value: string|string[]) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      let myObj = <AjfTextWidget>widget;\n\n      const pxStyles =\n          ['font-size', 'height', 'width', 'border-width', 'border-radius', 'padding', 'margin'];\n      const isPxStyle = pxStyles.indexOf(label) > -1;\n      if (isPxStyle && !(value instanceof Array) && this.isNumber(value)) {\n        value += 'px';\n      } else if (isPxStyle && value instanceof Array && this.isNumberArray(value)) {\n        value = `${value.join('px ')}px`;\n      }\n\n      myObj.styles[label] = value;\n\n      return myObj;\n    });\n  }\n\n  /**\n   * this method update the styles of origin widget array\n   *\n   * @param origin can be header content or footer\n   * @param label for example background-color\n   * @param value for example rgb(255,255,255,1)\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setSectionStyles(origin: string, label: string, value: string) {\n    if ((origin !== 'header') && (origin !== 'content') && (origin !== 'footer')) {\n      throw new Error('uncknow origin ' + origin);\n    }\n\n    this._updates[origin].next((widget: AjfWidgetsContainer): AjfWidgetsContainer => {\n      widget.styles[label] = value;\n\n      widget.styles = <AjfStyles>{...widget.styles};\n\n      return widget;\n    });\n  }\n\n  /**\n   * this method set the style of the whole report.\n   *\n   * @param label for example background-color\n   * @param value for example rgb(255,255,255,1)\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setReportStyles(label: string, value: string) {\n    this._reportStylesUpdate.next((styles: AjfStyles): AjfStyles => {\n      if (styles == null) {\n        styles = {};\n      } else {\n        styles[label] = value;\n        styles = <AjfStyles>{...styles};\n      }\n      return styles;\n    });\n  }\n\n  /**\n   *  update forms\n   *\n   * @param forms\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setReportForms(forms: AjfForm[]) {\n    this._reportFormsUpdate.next((_form: AjfForm[]): AjfForm[] => {\n      return forms || [];\n    });\n  }\n\n  /**\n   * update customWidgets\n   *\n   * @param widget\n   * @param [position]\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  addCustomWidgets(widget: AjfCustomWidget, position?: number) {\n    this._customWidgetsUpdate.next((customWidgets: AjfCustomWidget[]): AjfCustomWidget[] => {\n      customWidgets = customWidgets || [];\n      if (position != null && position >= 0) {\n        customWidgets.splice(position, 0, widget);\n      } else {\n        customWidgets.push(widget);\n      }\n      return customWidgets;\n    });\n  }\n\n  /**\n   * reset customWidgets\n   *\n   * @param widget\n   * @param [position]\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  resetCustomWidgets() {\n    this._customWidgetsUpdate.next((customWidgets: AjfCustomWidget[]): AjfCustomWidget[] => {\n      customWidgets.length = 0;\n      return customWidgets;\n    });\n  }\n\n  /**\n   * update label of widget\n   *\n   * @param label\n   * @param position\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  changeLabelCustomWidget(label: string, position: number) {\n    this._customWidgetsUpdate.next((customWidgets: AjfCustomWidget[]): AjfCustomWidget[] => {\n      customWidgets[position].type = label;\n      return customWidgets;\n    });\n  }\n\n  /**\n   * Add an AjfWidget on _headerWidgetsUpdate\n   *\n   * @param widget\n   * @param [position]\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  addHeaderWidget(widget: AjfWidget, position?: number) {\n    this._addWidgetToContainer(this._headerWidgetsUpdate, widget, position);\n  }\n\n  /**\n   * Add an AjfWidget on _contentWidgetsUpdate\n   *\n   * @param widget\n   * @param [position]\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  addContentWidget(widget: AjfWidget, position?: number) {\n    this._addWidgetToContainer(this._contentWidgetsUpdate, widget, position);\n  }\n\n  /**\n   * Add an AjfWidget on _footerWidgetsUpdate\n   *\n   * @param widget\n   * @param [position]\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  addfooterWidget(widget: AjfWidget, position?: number) {\n    this._addWidgetToContainer(this._footerWidgetsUpdate, widget, position);\n  }\n\n  unfixedColumn(idx: number) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      if (widget == null) {\n        return widget;\n      }\n      let myObj = <AjfLayoutWidget>widget;\n      let num = myObj.columns.length;\n      let checkSum = 0;\n      let objNum = 0;\n      let value = 1;\n      let spreadValue: any;\n      myObj.columns[idx] = 0;\n\n      for (let j = 0; j < num; j++) {\n        if (myObj.columns[j] === -1) {\n          objNum++;\n        }\n      }\n\n      value = Number(this.roundTo(1 / (num - objNum), 2).toFixed(2));\n\n      for (let i = 0; i < num; i++) {\n        if (myObj.columns[i] !== -1) {\n          myObj.columns[i] = value;\n          checkSum = Number(this.roundTo(checkSum + value, 2).toFixed(2));\n        }\n      }\n\n      checkSum = Number(this.roundTo(checkSum, 2).toFixed(2));\n\n      if (checkSum > 1) {\n        spreadValue = parseFloat(this.roundTo(((checkSum - 1) % 1), 2).toFixed(2));\n        myObj.columns[idx] -= spreadValue;\n        myObj.columns[idx] = this.roundTo(myObj.columns[idx], 2);\n      } else if (checkSum < 1) {\n        myObj.columns[idx] += (1 - (checkSum % 1));\n        myObj.columns[idx] = Number(this.roundTo(myObj.columns[idx], 2).toFixed(2));\n      }\n\n      return myObj;\n    });\n  }\n\n  /**\n   * Add column on the current AjfLayoutWidget.\n   *\n   * When adding a column the width of the other columns is recalculated\n   * by dividing it by the number of column\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  addColumn() {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      if (widget == null) {\n        return null;\n      }\n      let myObj = <AjfLayoutWidget>widget;\n      let tempObj: number[] = [];\n      let num = myObj.columns.length + 1;\n      let checkSum = 0;\n      let objNum = 0;\n      let value = 1;\n      let tmpValue: any;\n\n      if (num > 10) {\n        throw new Error('exceed max columns');\n      }\n\n      for (let j = 0; j < num; j++) {\n        if (myObj.columns[j] === -1) {\n          objNum++;\n        }\n      }\n      value = Number(this.roundTo(1 / (num - objNum), 2).toFixed(2));\n\n      for (let i = 0; i < num; i++) {\n        if (myObj.columns[i] === -1) {\n          tempObj.push(-1);\n        } else {\n          tempObj.push(value);\n          checkSum = Number(this.roundTo(checkSum + value, 2).toFixed(2));\n        }\n      }\n      checkSum = Number(this.roundTo(checkSum, 2).toFixed(2));\n\n      if (checkSum > 1) {\n        tmpValue = parseFloat(this.roundTo(((checkSum - 1) % 1), 2).toFixed(2));\n        tempObj[0] -= tmpValue;\n        tempObj[0] = this.roundTo(tempObj[0], 2);\n      } else if (checkSum < 1) {\n        tempObj[0] += (1 - (checkSum % 1));\n        tempObj[0] = Number(this.roundTo(tempObj[0], 2).toFixed(2));\n      }\n\n      myObj.columns = tempObj;\n\n      // TODO: @trik what's value?!?\n      const columnObj = createWidget({\n        widgetType: 7,\n        // value: myObj.columns[myObj.columns.length - 1],\n      });\n\n      myObj.content.push(columnObj);\n      this._saveReportEvent.emit();\n      return myObj;\n    });\n  }\n\n  removeWidgetToColumn(column: AjfColumnWidget, index: number) {\n    column.content.splice(index, 1);\n  }\n\n  /**\n   * This method remove a widget on the current AjfReport.\n   *\n   * @param node\n   * the position array:\n   *\n   * header -`>` headerWidgets\n   * content -`>` contentWidgets\n   * footer -`>` footerWidgets\n   * column -`>` column of layout\n   * layoutContent -`>` content of layout\n   * obj -`>` obj of layout\n   * customWidget -`>` custom widget\n   *\n   * @param idx the position array\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  remove(node: string, idx: number) {\n    switch (node) {\n      case 'header':\n      case 'content':\n      case 'footer':\n        this._updates[node].next((widgets: AjfWidgetsContainer): AjfWidgetsContainer => {\n          if (widgets.widgets.length === 0) {\n            throw new Error('you can not remove from empty array');\n          }\n          if (widgets.widgets[idx] == null) {\n            throw new Error('invalid index');\n          }\n          widgets.widgets.splice(idx, 1);\n          this.updateCurrentWidget(null);\n          return widgets;\n        });\n        break;\n      case 'layout':\n        this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n          if (widget == null) {\n            return null;\n          }\n          const myObj = widget as AjfLayoutWidget;\n\n          if (myObj.columns.length === 1) {\n            (myObj.content[0] as AjfColumnWidget).content.length = 0;\n            return myObj;\n          }\n\n          if (myObj.columns[idx] == null) {\n            throw new Error('this content is undefined');\n          } else {\n            let spread = myObj.columns[idx] / (myObj.columns.length - 1);\n\n            if (myObj.columns.length > 1) {\n              myObj.columns.splice(idx, 1);\n              myObj.content.splice(idx, 1);\n            }\n\n            for (let i = 0; i < myObj.columns.length; i++) {\n              myObj.columns[i] += spread;\n            }\n            this.instantColumnValue(myObj.columns[0], 0);\n          }\n          return myObj;\n        });\n        break;\n      case 'column':\n      case 'layoutContent':\n      case 'unfixedColumn':\n        this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n          if (widget == null) {\n            return null;\n          }\n          let myObj = <AjfLayoutWidget>widget;\n\n          if (node === 'column') {\n            let clm = <AjfColumnWidget>widget;\n            clm.content.splice(idx, 1);\n          } else if (node === 'layoutContent') {\n            if (myObj.columns.length === 0) {\n              throw new Error('the column length is 0');\n            }\n            if (myObj.content.length === 0) {\n              throw new Error('can not remove any widget from empty content');\n            }\n            if (myObj.columns[idx] != null && myObj.content[idx] == null) {\n              throw new Error('this content is undefined');\n            }\n          } else if (node === 'unfixedColumn') {\n            if (myObj.columns[idx] !== -1) {\n              throw new Error('the column position value  isnt -1');\n            }\n            this.unfixedColumn(idx);\n          }\n          // if (node !== 'obj') {\n          //   let spread = myObj.columns[idx] / (myObj.columns.length - 1);\n          //   myObj.content.splice(idx, 1);\n          //   if (myObj.columns.length > 1) {\n          //     myObj.columns.splice(idx, 1);\n          //   }\n          //   for (let i = 0; i < myObj.columns.length; i++) {\n          //     myObj.columns[i] += spread;\n          //   }\n          //   this.instantColumnValue(myObj.columns[0], 0);\n          // }\n          return myObj;\n        });\n        break;\n      case 'customWidgets': {\n        this._updates[node].next((widgets: AjfCustomWidget[]): AjfCustomWidget[] => {\n          if (widgets.length === 0) {\n            throw new Error('you can not remove from empty array');\n          }\n          if (widgets[idx] == null) {\n            throw new Error('invalid index');\n          }\n          widgets.splice(idx, 1);\n          return widgets;\n        });\n      } break;\n      default:\n        throw new Error('unknown node ' + node);\n    }\n  }\n\n  /**\n   * This method add a AjfWidget on the current AjfLayoutWidget.\n   *\n   * @param newWidget\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  addToContent(newWidget: AjfWidget, idx: number) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      if (widget == null) {\n        return null;\n      }\n      let myObj = <AjfLayoutWidget>widget;\n\n      if (myObj.content[idx] != null) {\n        myObj.content.splice(idx, 1);\n      }\n      myObj.content.splice(idx, 0, newWidget);\n      return myObj;\n    });\n  }\n\n  addToColumn(event: any, toColumn: AjfColumnWidget, position?: number) {\n    if (event.dragData && event.dragData.fromColumn != null) {\n      let fromColumn: AjfColumnWidget = event.dragData.fromColumn;\n      let widget: AjfWidget = event.dragData.widget;\n      let fromIndex: number = event.dragData.fromIndex;\n\n      fromColumn.content.splice(fromIndex, 1);\n      toColumn.content.push(widget);\n\n    } else if (event.dragData && event.dragData.arrayFrom) {\n      this.remove(event.dragData.arrayFrom, event.dragData.fromIndex);\n      toColumn.content.push(event.dragData.widget);\n    } else if (event.dragData && event.dragData.json) {\n      let obj = JSON.parse(event.dragData.json);\n      let newWidget = deepCopy(obj);\n\n      if (position != null) {\n        toColumn.content.splice(position, 0, newWidget);\n      } else {\n        toColumn.content.push(newWidget);\n      }\n    } else {\n      let obj = {'widgetType': AjfWidgetType[event.dragData]};\n      let newWidget = deepCopy(obj);\n\n      if (position != null) {\n        toColumn.content.splice(position, 0, newWidget);\n      } else {\n        toColumn.content.push(newWidget);\n      }\n    }\n  }\n  changePositionOnColumn(event: any, toColumn: AjfColumnWidget, toIndex: number) {\n    let fromColumn: AjfColumnWidget = event.dragData.fromColumn;\n    let fromIndex: number = event.dragData.fromIndex;\n    let fromWidget: AjfWidget = fromColumn.content[fromIndex];\n    let toWidget: AjfWidget = fromColumn.content[toIndex];\n\n    if (fromColumn == toColumn) {\n      fromColumn.content[fromIndex] = toWidget;\n      fromColumn.content[toIndex] = fromWidget;\n    } else {\n      fromColumn.content.splice(fromIndex, 1);\n      toColumn.content.splice(toIndex, 0, fromWidget);\n    }\n  }\n\n  /**\n   * This method add the obj on the idx position.\n   * Obj have a no specificate width and is not calculate as columns\n   *\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  fixedColumn(idx: number) {\n    this.instantColumnValue(-1, idx);\n  }\n\n  changeColumn(from: number, to: number, layoutWidget: AjfLayoutWidget) {\n    if (to < 0 || to >= layoutWidget.content.length) {\n      return;\n    }\n    if (from > layoutWidget.content.length - 1 && to > from) {\n      return;\n    }\n\n    let fromColumn: AjfColumnWidget = <AjfColumnWidget>layoutWidget.content[from];\n    let fromColumnValue: number = layoutWidget.columns[from];\n    let toColumn: AjfColumnWidget = <AjfColumnWidget>layoutWidget.content[to];\n    let toColumnValue: number = layoutWidget.columns[to];\n\n    layoutWidget.content[from] = toColumn;\n    layoutWidget.columns[from] = toColumnValue;\n    layoutWidget.content[to] = fromColumn;\n    layoutWidget.columns[to] = fromColumnValue;\n\n    this.updateCurrentWidget(layoutWidget);\n  }\n\n  addCustomColor(color: string) {\n    this._updates['color'].next((colors: string[]): string[] => {\n      if (colors.indexOf(color) < 0) {\n        colors.push(color);\n      }\n      return colors;\n    });\n  }\n\n  private _addWidgetToContainer(\n      subj: Subject<AjfWidgetsOperation>, widget: AjfWidget, position?: number) {\n    subj.next((widgets: AjfWidgetsContainer): AjfWidgetsContainer => {\n      if (position != null && position >= 0) {\n        widgets.widgets.splice(position, 0, widget);\n      } else {\n        widgets.widgets.push(widget);\n      }\n      return widgets;\n    });\n    this.updateCurrentWidget(widget);\n    this.setEmptyContent(false);\n  }\n\n  private _setCurrentWidgetProperty(propName: string, value: any) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      if (widget == null) {\n        return null;\n      }\n      (widget as any)[propName] = value;\n      return widget;\n    });\n  }\n\n  private _addToCurrentWidgetArrayProperty(propName: string, value: any) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      if (widget == null) {\n        return null;\n      }\n      const arr = (widget as any)[propName] as any[];\n      arr.push(value);\n      (widget as any)[propName] = arr;\n      return widget;\n    });\n  }\n\n  private _removeFromCurrentWidgetArrayProperty(propName: string, idx: number) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      ((widget as any)[propName] as any[]).splice(idx, 1);\n      return widget;\n    });\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWidgetType} from '@ajf/core/reports';\n\nexport function ajfReportBuilderWidgetToString(widgetType: string): string {\n  return `reportbuilder-${widgetType.toLowerCase()}`;\n}\n\nexport function ajfWidgetTypeStringToIcon(widgetType: string): string {\n  return `widget-${widgetType.toLowerCase()}`;\n}\n\nexport function ajfWidgetTypeToIcon(widgetType: AjfWidgetType): string {\n  return ajfWidgetTypeStringToIcon(AjfWidgetType[widgetType]);\n}\n\nexport function ajfWidgetTypeStringToLabel(widgetType: string): string {\n  return `widgetType.${widgetType}`;\n}\n\nexport function ajfWidgetTypeToLabel(type: AjfWidgetType): string {\n  return ajfWidgetTypeStringToLabel(AjfWidgetType[type]);\n}\n\nexport function widgetReportBuilderIconName(type: AjfWidgetType): string {\n  return `reportbuilder-${AjfWidgetType[type].toLowerCase()}`;\n}\n\nexport function sanitizeConditionString(str: string): string {\n  str = str.trim();\n  while (str.indexOf('  ') > 0) {\n    str = str.replace('  ', ' ');\n  }\n  return str;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfLayoutWidget, AjfWidget, AjfWidgetType} from '@ajf/core/reports';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\nimport {AjfReportBuilderService} from './report-builder-service';\nimport {ajfWidgetTypeToLabel, widgetReportBuilderIconName} from './utils';\n\n@Component({\n  selector: 'ajf-report-builder-widgets-row-buttons',\n  templateUrl: 'widgets-row-buttons.html',\n  styleUrls: ['widgets-row-buttons.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderWidgetsRowButtons implements OnDestroy, OnInit {\n  @Input() from: string;\n  @Input() fromWidget: AjfWidget;\n  @Input() position: number;\n  @Input() widget: AjfWidget;\n  @Input() child: boolean;\n  @Input() isOver = false;\n  currentWidget: AjfWidget|null = null;\n  isClicked = false;\n  color: string[] = [];\n\n  widgetIcon: string;\n  widgetLabel: string;\n  label: string;\n\n  // this boolean sign if is dragged a widget\n  onDragged = false;\n\n  // this boolean sign if is on over a widget\n  onOver = false;\n\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n  private _onDraggedSub: Subscription = Subscription.EMPTY;\n  private _onOverSub: Subscription = Subscription.EMPTY;\n\n\n  /**\n   *\n   * @param private _afjBuilderService: AjfBuilderService\n   */\n  constructor(private _service: AjfReportBuilderService) {}\n\n  selectedWidget() {\n    this.isClicked = !this.isClicked;\n    this._service.setOrigin(this.from);\n    this._service.updateCurrentWidget(this.widget);\n  }\n\n  remove() {\n    if (this.fromWidget != null) {\n      this._service.updateCurrentWidget(this.fromWidget);\n    }\n    this._service.remove(this.from, this.position);\n  }\n\n  onFocus(): boolean {\n    if (this.widget === this.currentWidget) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  changeColumn(direction: string) {\n    if (direction == 'back') {\n      this._service.changeColumn(\n          this.position, this.position - 1, <AjfLayoutWidget>this.fromWidget);\n    } else {\n      this._service.changeColumn(\n          this.position, this.position + 1, <AjfLayoutWidget>this.fromWidget);\n    }\n  }\n  isColumn(): boolean {\n    if (this.label === 'Column') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isOneColumn(): boolean {\n    let rootObj = <AjfLayoutWidget>this.fromWidget;\n    if (rootObj.columns.length > 1) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  ngOnInit() {\n    this.label = AjfWidgetType[this.widget.widgetType];\n    this.widgetIcon = widgetReportBuilderIconName(this.widget.widgetType);\n    this.widgetLabel = ajfWidgetTypeToLabel(this.widget.widgetType);\n\n    this._onDraggedSub = this._service.onDragged.subscribe(x => {\n      this.onDragged = x;\n    });\n\n    this._onOverSub = this._service.onOver.subscribe(x => {\n      this.onOver = x;\n    });\n\n    this._currentWidgetSub = this._service.currentWidget.subscribe(x => {\n      this.currentWidget = x;\n      if (x !== this.widget) {\n        this.isClicked = false;\n      }\n    });\n  }\n  ngOnDestroy(): void {\n    this._onDraggedSub.unsubscribe();\n    this._onOverSub.unsubscribe();\n    this._currentWidgetSub.unsubscribe();\n  }\n}\n","<div class=\"ajf-container\" *ngIf=\"onOver || onDragged\">\n  <div class=\"ajf-button-row\">\n    <ng-template [ngIf]=\"isColumn() && onDragged == false\">\n      <span\n        (click)=\"changeColumn('forward')\"\n        matTooltip=\"move right\"\n        [matTooltipPosition]=\"'above'\">\n        <i class=\"material-icons\">arrow_forward</i>\n      </span>\n    </ng-template>\n    <ng-template [ngIf]=\"(isColumn()== false && onDragged == true) || true\">\n      <span mat-button\n        [ngClass]=\"{'ajf-selected': onFocus()}\"\n        matTooltip=\"{{label}}\"\n        [matTooltipPosition]=\"'above'\"\n        (click)=\"selectedWidget()\">\n        <ng-template [ngIf]=\"isColumn()\">\n        <i class=\"material-icons\" >settings</i>\n        </ng-template>\n        <ng-template [ngIf]=\"(isColumn()) ? false : true\">\n          <mat-icon\n            fontSet=\"ajf-icon\"\n            fontIcon=\"{{ widgetIcon }}\">\n          </mat-icon>\n        </ng-template>\n      </span>\n      <span\n        mat-button\n        matTooltip=\"remove\"\n        (click)=\"remove()\"\n        [matTooltipPosition]=\"'above'\">\n        <mat-icon>remove_circle_outline</mat-icon>\n      </span>\n    </ng-template>\n    <ng-template [ngIf]=\"isColumn() && onDragged == false\">\n      <span\n        (click)=\"changeColumn('back')\"\n        matTooltip=\"move left\"\n        [matTooltipPosition]=\"'above'\">\n        <i class=\"material-icons\">arrow_back</i>\n      </span>\n    </ng-template>\n  </div>\n</div>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfImageType} from '@ajf/core/image';\nimport {evaluateExpression} from '@ajf/core/models';\nimport {\n  AjfChartWidget,\n  AjfColumnWidget,\n  AjfDataset,\n  AjfImageWidget,\n  AjfLayoutWidget,\n  AjfMapWidget,\n  AjfTableWidget,\n  AjfTextWidget,\n  AjfWidget,\n  AjfWidgetType\n} from '@ajf/core/reports';\nimport {CdkDrag, CdkDragDrop} from '@angular/cdk/drag-drop';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {Observable, Subscription, timer} from 'rxjs';\nimport {distinctUntilChanged, map, startWith} from 'rxjs/operators';\n\nimport {AjfReportBuilderDragData} from './report-builder-drag-data';\nimport {AjfReportBuilderService} from './report-builder-service';\n\n@Component({\n  selector: 'ajf-report-builder-renderer-widget',\n  templateUrl: 'renderer-widget.html',\n  styleUrls: ['renderer-widget.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderRendererWidget implements OnInit, OnDestroy, OnChanges {\n  get widgetTypes() {\n    return AjfWidgetType;\n  }\n\n  @Input() widget: AjfWidget;\n\n  get layoutWidget(): AjfLayoutWidget {\n    return this.widget as AjfLayoutWidget;\n  }\n\n  @Input() position: number;\n\n  @Input() section: string;\n\n  // this boolean sign if is dragged a widget\n  onDragged = false;\n\n  currentContentWidget: AjfWidget|null = null;\n  obj: any;\n  fixedZoom: any;\n\n  getTableTitles: Observable<string[]>;\n  getTableContent: Observable<string[][]|undefined>;\n\n  getChartType: Observable<number>;\n  getDataset: Observable<AjfDataset[][]>;\n  getChartBackgroundColor: Observable<string[]>;\n  getChartBorderColor: Observable<string[]>;\n  getChartBorderWidth: Observable<number>;\n\n  layoutShow: boolean;\n\n  private _onDraggedSub: Subscription = Subscription.EMPTY;\n\n  constructor(private _service: AjfReportBuilderService) {}\n\n  canDropPredicate(item: CdkDrag<AjfReportBuilderDragData>): boolean {\n    for (let i = 0; i < item.data.dropZones.length; i++) {\n      if (['header', 'widget'].indexOf(item.data.dropZones[i]) > -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   *  sign the start of mouse drag with 200 ms of delay\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragStartHandler(): void {\n    let s = timer(200).subscribe(() => {\n      s.unsubscribe();\n      this._service.dragStarted();\n    });\n  }\n\n  /**\n   * sign the end of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEndHandler(): void {\n    this._service.dragEnded();\n  }\n\n  getColumnContent(): AjfColumnWidget[] {\n    const myObj: AjfLayoutWidget = <AjfLayoutWidget>this.widget;\n\n    return <AjfColumnWidget[]>myObj.content;\n  }\n\n  getIcon(): {fontSet: string, fontIcon: string}|null {\n    const defVal = {fontSet: '', fontIcon: ''};\n    const myObj: AjfImageWidget = <AjfImageWidget>this.widget;\n    if (myObj.icon == null) {\n      return null;\n    }\n    return evaluateExpression(myObj.icon.formula) || defVal;\n  }\n\n  getFlag(): string|null {\n    const defVal = 'ch';\n    const myObj: AjfImageWidget = <AjfImageWidget>this.widget;\n    if (myObj.flag == null) {\n      return null;\n    }\n    return evaluateExpression(myObj.flag.formula) || defVal;\n  }\n\n  getPercent(index: number): string {\n    const myObj: AjfLayoutWidget = <AjfLayoutWidget>this.widget;\n    const percent = myObj.columns[index] * 100;\n\n    return `${percent.toString()}%`;\n  }\n\n  getImageUrl(): string|null {\n    const defVal = '';\n    const myObj: AjfImageWidget = <AjfImageWidget>this.widget;\n    if (myObj.url == null) {\n      return null;\n    }\n    return evaluateExpression(myObj.url.formula) || defVal;\n  }\n\n  getImageType() {\n    return this.widget != null ? (<AjfImageWidget>this.widget).imageType : AjfImageType.Image;\n  }\n\n  getHtmlText(): string {\n    const myObj: AjfTextWidget = this.widget as AjfTextWidget;\n    if (myObj.htmlText === '') {\n      return '...';\n    } else {\n      return myObj.htmlText;\n    }\n  }\n\n  getCoordinate(): number[] {\n    const myObj: AjfMapWidget = this.widget as AjfMapWidget;\n    if (myObj.coordinate == null) {\n      return [51.505, -0.09, 13];\n    } else {\n      return myObj.coordinate as any;\n    }\n  }\n\n  getTileLayer(): string {\n    const myObj: AjfMapWidget = this.widget as AjfMapWidget;\n    if (myObj.tileLayer === '') {\n      return 'http://{s}.tile.osm.org/{z}/{x}/{y}.png';\n    } else {\n      return myObj.tileLayer;\n    }\n  }\n\n  getAttribution(): string {\n    let myObj: AjfMapWidget;\n    myObj = <AjfMapWidget>this.widget;\n    if (myObj.attribution === '') {\n      return '&copy; <a href=\\'http://osm.org/copyright\\'>O</a> contributors';\n    } else {\n      return myObj.attribution;\n    }\n  }\n\n  addToList(event: CdkDragDrop<AjfReportBuilderDragData>, toColumn: AjfColumnWidget): void {\n    this.onDragEndHandler();\n    this._service.addToColumn(event, toColumn);\n  }\n\n  ngOnInit(): void {\n    this._onDraggedSub = this._service.onDragged.subscribe(x => {\n      this.onDragged = x;\n    });\n\n    this.getChartType = this._service.currentWidget.pipe(\n        map((widget: AjfWidget|null) => {\n          if (widget == null) {\n            return 0;\n          }\n          const myObj = <AjfChartWidget>this.widget;\n          return <number>(myObj.chartType);\n        }),\n        distinctUntilChanged(), startWith(0));\n\n    this.getDataset = this._service.currentWidget.pipe(\n        map((widget: AjfWidget|null) => {\n          if (widget != null && (widget as AjfChartWidget).dataset != null) {\n            const myObj = <AjfChartWidget>this.widget;\n            return <any>myObj.dataset;\n          } else {\n            return [];\n          }\n        }),\n        distinctUntilChanged());\n\n    this.getTableTitles = this._service.currentWidget.pipe(map((widget: AjfWidget|null) => {\n      if (widget == null) {\n        return [];\n      }\n\n      const myObj = this.widget as AjfTableWidget;\n\n      if (myObj.dataset != null) {\n        let tableTitle: string[] = [];\n\n        for (let i = 0; i < myObj.dataset.length; i++) {\n          if (myObj.dataset[i][0] != null) {\n            tableTitle.push(myObj.dataset[i][0].label || '');\n          }\n        }\n        return tableTitle;\n      } else {\n        return [];\n      }\n    }));\n\n    this.getTableContent = this._service.currentWidget.pipe(map((widget: AjfWidget|null) => {\n      if (widget == null) {\n        return [];\n      }\n\n      const myObj = <AjfTableWidget>this.widget;\n\n      if (myObj.dataset != null) {\n        let tableContent: string[][] = [];\n\n        for (let i = 0; i < myObj.dataset.length; i++) {\n          for (let j = 0; j < myObj.dataset[i].length; j++) {\n            if ((myObj.dataset[i] != null) && (myObj.dataset[i][j + 1] != null)) {\n              if (tableContent[j] == null) {\n                tableContent[j] = [];\n              }\n              if (tableContent[j][i] == null) {\n                tableContent[j][i] = ' ';\n              }\n              tableContent[j].splice(i, 1, myObj.dataset[i][j + 1].label || '');\n            }\n          }\n        }\n        return tableContent;\n      }\n      return [];\n    }));\n\n    this._service.updateCurrentWidget(this.widget);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const widget = changes['widget'];\n    if (widget && widget.currentValue != null) {\n      this.widget = widget.currentValue;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._onDraggedSub.unsubscribe();\n  }\n}\n","<div class=\"ajf-container\"\n    [ngSwitch]=\"widget?.widgetType\"\n    [ngClass]=\"{'ajf-drag-mode': (onDragged || fixedZoom)}\">\n  <div *ngSwitchCase=\"widgetTypes.Layout\" class=\"ajf-row ajf-layout\"\n    [applyStyles]=\"widget.styles\">\n      <div class=\"ajf-columns\">\n        <ng-template ngFor let-clm [ngForOf]=\"getColumnContent()\" let-idx=\"index\">\n          <div class=\"ajf-column\"\n            [ngClass]=\"{'ajf-fixed': layoutWidget.columns[idx] == -1}\"\n            [style.width]=getPercent(idx)\n            [applyStyles]=\"layoutWidget.content[idx].styles\">\n            <ajf-report-builder-widgets-row-buttons\n              [from]=\"'layout'\"\n              [fromWidget]=\"widget\"\n              [widget]=\"clm\"\n              [position]=\"idx\"\n              (onDragStart)=\"onDragStartHandler();\"\n              (onDragEnd)=\"onDragEndHandler();\"\n              [child]=\"true\">\n            </ajf-report-builder-widgets-row-buttons>\n            <!-- temporarily disabled for ivy partial build -->\n            <!-- <ajf-column\n              [column]=\"clm\"\n              [applyStyles]=\"widget.styles\">\n            </ajf-column> -->\n            <ng-template [ngIf]=\"onDragged === true\">\n              <div cdkDropList\n                [cdkDropListEnterPredicate]=\"canDropPredicate\"\n                [style.display]=\"onDragged ? 'block' : 'none'\"\n                (cdkDropListDropped)=\"addToList($event, clm)\"\n                class=\"ajf-column-drop-zone\"\n                (dragover)=\"layoutShow = true;\"\n                (dragleave)=\"layoutShow = false;\">\n              </div>\n            </ng-template>\n          </div>\n        </ng-template>\n      </div>\n  </div>\n  <div *ngSwitchCase=\"widgetTypes.Image\" class=\"ajf-row\">\n    <ajf-image\n      [applyStyles]=\"widget.styles\"\n      [type]=\"getImageType()\"\n      [imageUrl]=\"getImageUrl()\"\n      [icon]=\"getIcon()\"\n      [flag]=\"getFlag()\">\n    </ajf-image>\n  </div>\n  <div *ngSwitchCase=\"widgetTypes.Text\" class=\"ajf-row ajf-text\">\n    <ajf-text [htmlText]=\"getHtmlText() | transloco\"  [applyStyles]=\"widget.styles\"></ajf-text>\n  </div>\n  <div *ngSwitchCase=\"widgetTypes.Chart\" class=\"ajf-row\" [applyStyles]=\"widget.styles\">\n  </div>\n  <!-- <div *ngSwitchCase=\"widgetTypes.Table\" class=\"ajf-row\" [applyStyles]=\"widget.styles\">\n    <ajf-table *ngIf=\"getTableContent|async as tc\" [data]=\"tc!\" ></ajf-table>\n  </div> -->\n  <div *ngSwitchCase=\"widgetTypes.Map\" class=\"ajf-row\" [applyStyles]=\"widget.styles\">\n    <ajf-map [coordinate]=\"getCoordinate()\" [tileLayer]=\"getTileLayer()\" [attribution]=\"getAttribution()\">\n    </ajf-map>\n  </div>\n</div>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfColumnWidget} from '@ajf/core/reports';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation\n} from '@angular/core';\nimport {Subscription, timer} from 'rxjs';\n\nimport {AjfReportBuilderService} from './report-builder-service';\n\n/**\n * this component manages the report text\n *\n * @export\n */\n@Component({\n  selector: 'ajf-column',\n  templateUrl: 'column.html',\n  styleUrls: ['column.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderColumn implements OnDestroy, OnInit {\n  /**\n   * if true mouse event is on dragged status\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  showActions = false;\n\n  layoutShow = false;\n\n  // this boolean sign if is dragged a widget\n  onDragged = false;\n\n\n  /**\n   * is the array of values\n   *\n   * @memberOf TableComponent\n   */\n  @Input() column: AjfColumnWidget;\n\n  private _onDraggedSub: Subscription = Subscription.EMPTY;\n\n  addToList(event: any, idx: number, toColumn: AjfColumnWidget) {\n    this.onDragEndHandler();\n    if (event.dragData.fromColumn) {\n      this._service.changePositionOnColumn(event, toColumn, idx);\n    } else {\n      this._service.addToColumn(event, toColumn, idx);\n    }\n  }\n\n  /**\n   *  sign the start of mouse drag with 200 ms of delay\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragStartHandler(): void {\n    let s = timer(200).subscribe(() => {\n      s.unsubscribe();\n      this._service.dragStarted();\n    });\n  }\n\n  /**\n   * sign the end of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEndHandler(): void {\n    this._service.dragEnded();\n  }\n  constructor(private _service: AjfReportBuilderService) {}\n\n  ngOnInit() {\n    // this.widget = changes.widget.currentValue;\n\n    this._onDraggedSub = this._service.onDragged.subscribe(x => {\n      this.onDragged = x;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._onDraggedSub.unsubscribe();\n  }\n}\n","<ng-template [ngIf]=\"column.content != null\">\n  <div class=\"ajf-column\"\n    [ngClass]=\"{'ajf-is-on-over': showActions}\"\n    (mouseenter)=\"showActions = true\"\n    (mouseleave)=\"showActions = false\">\n    <mat-list>\n      <ng-template ngFor let-widget let-idx=\"index\" [ngForOf]=\"column.content\">\n\n        <ng-template [ngIf]=\"!onDragged\">\n          <ajf-report-builder-widgets-row-buttons\n              cdkDrag\n              [cdkDragData]=\"{fromColumn: column, fromIndex: idx, widget: widget, dropZones: ['widget']}\"\n              [from]=\"'column'\"\n              [fromWidget]=\"column\"\n              [widget]=\"widget\"\n              [position]=\"idx\"\n              [child]=\"true\"\n              (cdkDragStarted)=\"onDragStartHandler()\"\n              (cdkDragEnded)=\"onDragEndHandler()\">\n          </ajf-report-builder-widgets-row-buttons>\n        </ng-template>\n        <ajf-report-builder-renderer-widget [widget]=\"widget\"></ajf-report-builder-renderer-widget>\n      </ng-template>\n    </mat-list>\n  </div>\n</ng-template>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, validateExpression} from '@ajf/core/models';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {Subscription, timer} from 'rxjs';\n\nimport {AjfFormVariables} from './models';\nimport {AjfReportBuilderService} from './report-builder-service';\nimport {sanitizeConditionString} from './utils';\n\n\n@Component({\n  selector: 'ajf-report-builder-condition-editor',\n  templateUrl: 'condition-editor.html',\n  styleUrls: ['condition-editor.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an ajf builder builder condition editor\n * @implements : OnDestroy\n * @implements : AfterViewInit\n */\nexport class AjfReportBuilderConditionEditor implements OnInit, OnDestroy {\n  @Input() visibility: AjfCondition;\n\n  formsVariables: AjfFormVariables[];\n  isValid = false;\n  names: string[] = [];\n  currentId: number;\n\n  // conditionText is a string\n  conditionText = 'true';\n\n  a: any;\n  b: any;\n\n\n  @ViewChild('conditionTextArea', {static: false}) conditionTextArea: any;\n\n  //  operators is an array of any type that contains all allow operators\n  operators: string[] = [\n    '( )', '\\' \\'', '<', '<=', '==', '>=', '>', '!=', '!', '&&', '||', '+', '-', '*', '/', '%',\n    'true', 'false'\n  ];\n\n  private _conditionNamesSub: Subscription = Subscription.EMPTY;\n\n  /**\n   * this constructor will init current condition by ajfBuilderservice\n   * and init condition and availableFieldNames subscriptions\n   */\n  constructor(private _service: AjfReportBuilderService) {}\n  extractNames(formsVariables: AjfFormVariables[]) {\n    this.names.length = 0;\n    for (let i = 0; i < formsVariables.length; i++) {\n      this.names = this.names.concat(formsVariables[i].names);\n    }\n  }\n\n  setCurrent(id: number, index: number) {\n    this.currentId = id;\n    this.appendText(this.formsVariables[id].names[index]);\n    this.checkValidation();\n  }\n\n  /**\n   * this method will return success if the current condtion is valid\n   * @return boolean\n   */\n  validateCondition(): boolean {\n    return validateExpression(this.conditionText, this.names);\n  }\n\n  // TODO complete the comment\n  /**\n   * this method will append text to json\n   * @param text      : string -\n   * @param goBackNum : number -\n   */\n  appendText(text: string, _goBackNum?: number): void {\n    if (text == null || this.conditionTextArea == null) {\n      return;\n    }\n\n    let el = this.conditionTextArea.nativeElement;\n    let sStart: number = Math.min(el.selectionStart, el.selectionEnd);\n    let sEnd: number = Math.max(el.selectionStart, el.selectionEnd);\n    let startingString: string = this.conditionText.substr(0, sStart);\n    let endingString: string = this.conditionText.substr(sEnd);\n    let initialLenght: number = startingString.length;\n    let newStr = '';\n\n    startingString = sanitizeConditionString(startingString);\n    endingString = sanitizeConditionString(endingString);\n    sStart +=\n        startingString.length - initialLenght + text.length + (startingString.length > 0 ? 2 : 1);\n    newStr = startingString.length > 0 ? `${startingString} ` : '';\n    this.conditionText = `${newStr}${text} ${endingString}`;\n\n    const s = timer(0).subscribe(() => {\n      if (s && !s.closed) {\n        s.unsubscribe();\n      }\n      if (el.createTextRange) {\n        let range = el.createTextRange();\n        range.move('character', sStart);\n        range.select();\n      } else {\n        if (el.selectionStart) {\n          el.focus();\n          el.setSelectionRange(sStart, sStart);\n        } else {\n          el.focus();\n        }\n      }\n    });\n  }\n\n  checkValidation() {\n    this.isValid = this.validateCondition();\n    if (this.isValid) {\n      this.saveCondition();\n    }\n  }\n\n  /**\n   * this method will save current condition\n   */\n  saveCondition(): void {\n    this._service.saveCondition(this.conditionText);\n  }\n\n  ngOnInit(): void {\n    this.conditionText = this.visibility.condition;\n    this.isValid = true;\n\n    if (this.conditionText == 'true') {\n      this.conditionText = '';\n    }\n\n    this._conditionNamesSub = this._service.conditionNames.subscribe((x) => {\n      this.formsVariables = x;\n      if (x != null) {\n        this.extractNames(this.formsVariables);\n      }\n    });\n  }\n  /**\n   * this method will destroy a conditionSubscriptions\n   */\n  ngOnDestroy(): void {\n    this._conditionNamesSub.unsubscribe();\n  }\n}\n","<ng-template [ngIf]=\"formsVariables != null && visibility != null\">\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>condition of visibility</mat-card-title>\n      <mat-card-subtitle>\n        <ng-template [ngIf]=\"visibility\">\n          {{visibility.condition}}\n        </ng-template>\n      </mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <br />\n      <form>\n        <mat-select\n          [(ngModel)]=\"a\"\n          [ngModelOptions]=\"{standalone: true}\"\n          placeholder=\"Select condition\"\n        >\n          <ng-template ngFor let-form let-id=\"index\" [ngForOf]=\"formsVariables\">\n            <mat-option\n              *ngFor=\"let label of form.labels;let i = index;\"\n              [value]=\"label\"\n              (click)=\"setCurrent(id, i)\"\n            >\n              {{ id}}: {{ label }}\n            </mat-option>\n          </ng-template>\n        </mat-select>\n        <mat-select\n          [(ngModel)]=\"b\"\n          [ngModelOptions]=\"{standalone: true}\"\n          placeholder=\"Select operator\"\n        >\n          <mat-option\n            *ngFor=\"let operator of operators\"\n            (click)=\"appendText(operator);\"\n          >\n            {{ operator }}\n          </mat-option>\n        </mat-select>\n      </form>\n    </mat-card-content>\n    <mat-card-actions>\n      <ng-template [ngIf]=\"!isValid\">\n        <ng-container\n          >{{'Invalid condition! Please check syntax.'|transloco}}</ng-container\n        >\n      </ng-template>\n      <textarea\n        #conditionTextArea\n        [(ngModel)]=\"conditionText\"\n        (keyup)=\"checkValidation()\"\n      >\n      </textarea>\n    </mat-card-actions>\n  </mat-card>\n</ng-template>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfStyles, AjfWidget, AjfWidgetType} from '@ajf/core/reports';\nimport {deepCopy} from '@ajf/core/utils';\nimport {CdkDrag, CdkDragDrop} from '@angular/cdk/drag-drop';\nimport {\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation\n} from '@angular/core';\nimport {Observable, Subscription, timer} from 'rxjs';\n\nimport {AjfReportBuilderDragData} from './report-builder-drag-data';\nimport {AjfReportBuilderService} from './report-builder-service';\n\n/**\n *  manage the content page\n *\n * @export\n */\n@Component({\n  selector: 'ajf-report-builder-content',\n  templateUrl: 'content.html',\n  styleUrls: ['content.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'(mouseover)': 'onMouseOver()', '(mouseleave)': 'onMouseLeave()'}\n})\nexport class AjfReportBuilderContent implements OnInit, AfterViewChecked, OnDestroy {\n  onMouseOver(): void {\n    this.showActions = true;\n    this._service.overStarted();\n  }\n\n  onMouseLeave(): void {\n    this.showActions = false;\n    this._service.overEnded();\n  }\n\n  canDropPredicate(dropZones: string[]): (item: CdkDrag<AjfReportBuilderDragData>) => boolean {\n    return item => {\n      for (let i = 0; i < item.data.dropZones.length; i++) {\n        if (dropZones.indexOf(item.data.dropZones[i]) > -1) {\n          return true;\n        }\n      }\n      return false;\n    };\n  }\n\n  reportStyles: Observable<AjfStyles>;\n\n  // this boolean sign if is dragged a widget\n  onDragged = false;\n\n\n  /**\n   *  observe the status of the fixed zoom\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  fixedZoom = false;\n\n  // this boolean sign if widget is in drag enter status\n  onDragEnter: any = {};\n\n\n  show = false;\n\n\n  // this array contains all widget locate in header zone\n  headerWidgets: AjfWidget[] = [];\n  /**\n   * observe the css style of header\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  headerStyles: Observable<AjfStyles>;\n\n  // this array contains all widget locate in content zone\n  contentWidgets: AjfWidget[] = [];\n\n  /**\n   * observe the css style of content\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  contentStyles: Observable<AjfStyles>;\n\n  // this array contains all widget locate in footer zone\n  footerWidgets: AjfWidget[] = [];\n\n\n  onOver: boolean = false;\n  /**\n   * observe the css style of footer\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  footerStyles: Observable<AjfStyles>;\n\n\n  // this is the current widget\n  currentWidget: AjfWidget|null = null;\n\n\n  /**\n   * if true mouse event is on dragged status\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  showActions = false;\n\n  private _onDraggedSub: Subscription = Subscription.EMPTY;\n  private _fixedZoomSub: Subscription = Subscription.EMPTY;\n  private _onDragEnterSub: Subscription = Subscription.EMPTY;\n  private _headerWidgetsSub: Subscription = Subscription.EMPTY;\n  private _contentWidgetsSub: Subscription = Subscription.EMPTY;\n  private _footerWidgetsSub: Subscription = Subscription.EMPTY;\n  private _onOverSub: Subscription = Subscription.EMPTY;\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n\n  constructor(private _service: AjfReportBuilderService, private _cdRef: ChangeDetectorRef) {\n    this.headerStyles = this._service.headerStyles;\n    this.contentStyles = this._service.contentStyles;\n    this.footerStyles = this._service.footerStyles;\n  }\n\n  isLayout(widget: AjfWidget): boolean {\n    return widget.widgetType === AjfWidgetType.Layout;\n  }\n\n  /**\n   *  sign the start of mouse drag with 200 ms of delay\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragStartHandler(): void {\n    let s = timer(200).subscribe(() => {\n      if (s != null) {\n        s.unsubscribe();\n      }\n      this._service.dragStarted();\n    });\n  }\n\n  /**\n   * sign the end of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEndHandler(): void {\n    this._service.dragEnded();\n  }\n\n  /**\n   *  sign the enter of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEnterHandler(array: string, index: number|undefined): void {\n    if (index == null) {\n      return;\n    }\n    this._service.dragEnter(array, index);\n  }\n\n  /**\n   * sign the leave of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragLeaveHandler(): void {\n    this._service.dragLeave();\n  }\n\n\n  /**\n   *  return true if array and index is === with array and index of onDragEnter\n   *\n   * @param array\n   * @param index\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEnterCheck(array: string, index: number): boolean {\n    if ((array === this.onDragEnter.array) &&\n        ((index === this.onDragEnter.index) || (index === -1))) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * remove widget element from type array in idx position\n   *\n   * @param type can be header content or footer\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  remove(type: string, idx: number) {\n    this._service.remove(type, idx);\n  }\n\n  /**\n   * add widget element into type array in idx position\n   *\n   * @param type\n   * @param event\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  addToList(arrayTo: string, event: CdkDragDrop<AjfReportBuilderDragData>, to?: number) {\n    this.onDragEndHandler();\n    this._service.setOrigin(arrayTo);\n    const itemData = event.item.data as AjfReportBuilderDragData;\n    if (itemData.fromColumn != null) {\n      this._service.removeWidgetToColumn(itemData.fromColumn, itemData.fromIndex!);\n      this.currentWidget = itemData.widget!;\n    } else if (itemData.widget != null) {\n      this.remove(itemData.arrayFrom!, itemData.from!);\n      this.currentWidget = itemData.widget;\n    } else if (itemData.json != null && itemData.json !== '') {\n      this.currentWidget = deepCopy(itemData.json);\n    } else {\n      let obj = {'widgetType': (AjfWidgetType as any)[itemData.widgetType!]};\n      this.currentWidget = deepCopy(obj);\n    }\n    this.onDragEndHandler();\n    if (this.currentWidget != null) {\n      switch (arrayTo) {\n        case 'header':\n          this._service.addHeaderWidget(this.currentWidget, to);\n          break;\n        case 'content':\n          this._service.addContentWidget(this.currentWidget, to);\n          break;\n        case 'footer':\n          this._service.addfooterWidget(this.currentWidget, to);\n          break;\n      }\n    }\n    this.onDragLeaveHandler();\n  }\n\n  ngOnInit(): void {\n    this._headerWidgetsSub = this._service.headerWidgets.subscribe(x => {\n      this.headerWidgets = x.widgets;\n    });\n    this._contentWidgetsSub = this._service.contentWidgets.subscribe(x => {\n      this.contentWidgets = x.widgets;\n    });\n    this._footerWidgetsSub = this._service.footerWidgets.subscribe(x => {\n      this.footerWidgets = x.widgets;\n    });\n    this._onDraggedSub = this._service.onDragged.subscribe(x => {\n      this.onDragged = x;\n    });\n    this._fixedZoomSub = this._service.fixedZoom.subscribe(bool => {\n      this.fixedZoom = bool;\n    });\n    this._onDragEnterSub = this._service.onDragEnter.subscribe(x => {\n      this.onDragEnter = x;\n    });\n    this._onOverSub = this._service.onOver.subscribe(x => {\n      this.onOver = x;\n    });\n  }\n\n  ngAfterViewChecked() {\n    this._cdRef.detectChanges();\n  }\n\n  ngOnDestroy(): void {\n    [this._headerWidgetsSub, this._contentWidgetsSub, this._footerWidgetsSub,\n     this._currentWidgetSub, this._onDraggedSub, this._fixedZoomSub, this._onOverSub,\n     this._onDragEnterSub]\n        .forEach(s => {\n          s.unsubscribe();\n        });\n  }\n}\n","<div\n  class=\"ajf-overlay\"\n  [ngClass]=\"{'ajf-drag-mode': onDragged, 'ajf-zoom-mode': fixedZoom}\"\n  [applyStyles]=\"reportStyles|async\"\n  (mouseenter)=\"show = true\"\n  (mouseleave)=\"show = false\"\n>\n  <div\n    class=\"ajf-header\"\n    [ngClass]=\"{'ajf-is-on-over': onDragged || show}\"\n    [applyStyles]=\"(headerStyles|async)\"\n  >\n    <mat-list *ngFor=\"let t of headerWidgets; let i = index\">\n      <div\n        cdkDropList\n        class=\"ajf-drop-zone\"\n        [ngClass]=\"{'ajf-show': true}\"\n        [cdkDropListEnterPredicate]=\"canDropPredicate(['widget','column'])\"\n        (cdkDropListDropped)=\"addToList('header', $event, i);\"\n        (dragenter)=\"onDragEnterHandler('header', i)\"\n        (dragleave)=\"onDragLeaveHandler()\"\n      ></div>\n      <ajf-report-builder-widgets-row-buttons\n        cdkDrag\n        [cdkDragData]=\"{widget: t,fromIndex: i,arrayFrom: 'header', dropZones: ['widget','column']}\"\n        [style.display]=\"(showActions || onDragged)? 'block' : 'none'\"\n        [from]=\"'header'\"\n        [widget]=\"t\"\n        [position]=\"i\"\n        (cdkDragStarted)=\"onDragStartHandler();\"\n        (cdkDragEnded)=\"onDragEndHandler()\"\n      >\n      </ajf-report-builder-widgets-row-buttons>\n      <ajf-report-builder-renderer-widget\n        [widget]=\"t\"\n        [position]=\"i\"\n        [section]=\"'header'\"\n        (currentWidget)=\"currentWidget\"\n      ></ajf-report-builder-renderer-widget>\n    </mat-list>\n    <div\n      cdkDropList\n      class=\"ajf-drop-zone-container\"\n      [ngClass]=\"{'ajf-show': true}\"\n      [cdkDropListEnterPredicate]=\"canDropPredicate(['header','widget','column'])\"\n      (cdkDropListDropped)=\"addToList('header', $event)\"\n      (dragenter)=\"onDragEnterHandler('header', headerWidgets?.length)\"\n      (dragleave)=\"onDragLeaveHandler()\"\n    ></div>\n  </div>\n  <div\n    class=\"ajf-content\"\n    [ngClass]=\"{'ajf-is-on-over': onDragged || show}\"\n    [applyStyles]=\"contentStyles|async\"\n  >\n    <mat-list *ngFor=\"let t of contentWidgets; let i = index\">\n      <div\n        cdkDropList\n        class=\"ajf-drop-zone\"\n        [ngClass]=\"{'ajf-show': true}\"\n        [cdkDropListEnterPredicate]=\"canDropPredicate(['widget','column'])\"\n        (cdkDropListDropped)=\"addToList('content', $event, i)\"\n        (dragenter)=\"onDragEnterHandler('content', i)\"\n        (dragleave)=\"onDragLeaveHandler()\"\n      ></div>\n      <ajf-report-builder-widgets-row-buttons\n        cdkDrag\n        [cdkDragData]=\"{widget: t, fromIndex: i, arrayFrom: 'content', dropZones: ['widget','column']}\"\n        [style.display]=\"showActions ? 'block' : 'none'\"\n        [from]=\"'content'\"\n        [widget]=\"t\"\n        [position]=\"i\"\n        (cdkDragStarted)=\"onDragStartHandler()\"\n        (cdkDragEnded)=\"onDragEndHandler();\"\n      >\n      </ajf-report-builder-widgets-row-buttons>\n      <ajf-report-builder-renderer-widget\n        [widget]=\"t\"\n        [position]=\"i\"\n        [section]=\"'content'\"\n        (currentWidget)=\"currentWidget\"\n      ></ajf-report-builder-renderer-widget>\n    </mat-list>\n    <div\n      cdkDropList\n      class=\"ajf-drop-zone-container\"\n      [ngClass]=\"{'ajf-show': onDragged}\"\n      [cdkDropListEnterPredicate]=\"canDropPredicate(['content','widget','column'])\"\n      (cdkDropListDropped)=\"addToList('content', $event)\"\n      (dragenter)=\"onDragEnterHandler('content', contentWidgets?.length)\"\n      (dragleave)=\"onDragLeaveHandler()\"\n    >\n      <label>{{'Drop here'|transloco}}</label>\n    </div>\n  </div>\n  <div\n    class=\"ajf-footer\"\n    [ngClass]=\"{'ajf-is-on-over': onDragged || show}\"\n    [applyStyles]=\"footerStyles|async\"\n  >\n    <mat-list *ngFor=\"let t of footerWidgets; let i = index\">\n      <div\n        cdkDropList\n        class=\"ajf-drop-zone\"\n        [ngClass]=\"{'ajf-show': true}\"\n        [cdkDropListEnterPredicate]=\"canDropPredicate(['widget','column'])\"\n        (cdkDropListDropped)=\"addToList('footer', $event, i)\"\n        (dragenter)=\"onDragEnterHandler('footer', i)\"\n        (dragleave)=\"onDragLeaveHandler()\"\n      ></div>\n      <ajf-report-builder-widgets-row-buttons\n        cdkDrag\n        [cdkDragData]=\"{widget: t, fromIndex: i, arrayFrom: 'footer', dropZones: ['widget','column']}\"\n        [style.display]=\"showActions ? 'block' : 'none'\"\n        [from]=\"'footer'\"\n        [widget]=\"t\"\n        [position]=\"i\"\n        (cdkDragStarted)=\"onDragStartHandler()\"\n        (cdkDragEnded)=\"onDragEndHandler()\"\n      >\n      </ajf-report-builder-widgets-row-buttons>\n      <ajf-report-builder-renderer-widget\n        [widget]=\"t\"\n        [position]=\"i\"\n        [section]=\"'footer'\"\n        (currentWidget)=\"currentWidget\"\n      ></ajf-report-builder-renderer-widget>\n    </mat-list>\n    <div\n      cdkDropList\n      class=\"ajf-drop-zone-container\"\n      [ngClass]=\"{'ajf-show': onDragged}\"\n      [cdkDropListEnterPredicate]=\"canDropPredicate(['footer','widget','column'])\"\n      (cdkDropListDropped)=\"addToList('footer', $event)\"\n      (dragenter)=\"onDragEnterHandler('footer', headerWidgets?.length)\"\n      (dragleave)=\"onDragLeaveHandler()\"\n    >\n      <label>{{'Drop here'|transloco}}</label>\n    </div>\n  </div>\n</div>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {AjfReportBuilderService} from './report-builder-service';\n\n@Component({\n  selector: 'custom-widget-dialog',\n  templateUrl: 'custom-widget-dialog.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderCustomWidgetDialog {\n  @Input() label: string;\n  @Input() position: number;\n\n  constructor(\n      private _service: AjfReportBuilderService,\n      private _dialogRef: MatDialogRef<AjfReportBuilderCustomWidgetDialog>) {}\n\n  changeLabel() {\n    this._service.changeLabelCustomWidget(this.label, this.position);\n    this._dialogRef.close();\n  }\n}\n","<h3 matDialogTitle> set the label widget</h3>\n<mat-form-field>\n  <input matInput placeholder=\"add the label of this custom widget\" [(ngModel)]=\"label\"/>\n</mat-form-field>\n<button matDialogClose (click)=\"changeLabel()\"> Ok </button>\n\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation} from '@angular/core';\n\nimport {AjfReportBuilderService} from './report-builder-service';\nimport {ajfWidgetTypeStringToIcon, ajfWidgetTypeStringToLabel} from './utils';\n\n@Component({\n  selector: 'ajf-report-builder-custom-widget-toolbar-button',\n  templateUrl: 'custom-widget-toolbar-button.html',\n  styleUrls: ['custom-widget-toolbar-button.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an ajf builder field toolbar button\n * @implements : OnInit\n */\nexport class AjfReportBuilderCustomWidgetToolbarButton implements OnInit {\n  @Input() widgetType: string;\n  @Input() position: number;\n  widgetIcon: string;\n  widgetLabel: string;\n  customWidgets: any[] = [];\n\n  // {...t, dropZones: ['header','content','footer','column','widget']}\n\n  /**\n   * this constructor will init icon registry\n   */\n  constructor(private _service: AjfReportBuilderService) {}\n\n  /**\n   * this method call a service method for remove custom widget\n   *\n   * @memberOf AjfReportBuilderCustomWidgetToolbarButton\n   */\n  remove() {\n    this._service.remove('customWidgets', this.position);\n  }\n  /**\n   * this method will init  fieldIcon and fieldLabel\n   */\n  ngOnInit(): void {\n    this.widgetIcon = ajfWidgetTypeStringToIcon(this.widgetType);\n    this.widgetLabel = ajfWidgetTypeStringToLabel(this.widgetType);\n  }\n}\n","<a mat-button>\n  {{ widgetType}}\n  <i class=\"material-icons\"(click)=\"remove()\">remove_circle_outline</i>\n</a>\n\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation\n} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\n\nimport {Subscription, timer} from 'rxjs';\n\nimport {AjfReportBuilderCustomWidgetDialog} from './custom-widget-dialog';\nimport {AjfReportBuilderService} from './report-builder-service';\n\nexport interface AjfStyles {\n  [style: string]: any;\n}\n\nexport interface CustomWidget {\n  json: string;\n  type: string;\n}\n\nexport interface CustomWidgets {\n  widgets: CustomWidget[];\n}\n\n\n@Component({\n  selector: 'ajf-report-builder-custom-widgets-toolbar',\n  styleUrls: ['custom-widgets-toolbar.css'],\n  templateUrl: 'custom-widgets-toolbar.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an ajf builder toolbar\n * @implements : OnDestroy\n */\nexport class AjfReportBuilderCustomWidgetsToolbar implements OnDestroy, OnInit {\n  customWidgets: CustomWidget[] = [];\n\n  private _customWidgetsSub: Subscription = Subscription.EMPTY;\n\n  private _dialogRef: MatDialogRef<AjfReportBuilderCustomWidgetDialog>;\n\n  private _threeColumnsLayout: string = '{\"widgetType\":0,' +\n      '\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"columns\":[0.34,0.33,0.33],' +\n      '\"content\":' +\n      '[{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]},' +\n      '{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]},' +\n      '{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]}]}';\n  private _fourColumnsLayout: string =\n      '{\"widgetType\":0,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},' +\n      '\"columns\":[0.25,0.25,0.25,0.25],\"content\":' +\n      '[{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]},' +\n      '{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]},' +\n      '{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]},' +\n      '{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]}]}';\n\n  constructor(private _service: AjfReportBuilderService, public dialog: MatDialog) {}\n\n  openDialog(idx: number) {\n    this._dialogRef = this.dialog.open(AjfReportBuilderCustomWidgetDialog);\n    this._dialogRef.componentInstance.label = this.customWidgets[idx].type;\n    this._dialogRef.componentInstance.position = idx;\n  }\n\n\n  /**\n   *  sign the start of mouse drag with 200 ms of delay\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragStartHandler(): void {\n    let s = timer(200).subscribe(() => {\n      if (s != null) {\n        s.unsubscribe();\n      }\n      this._service.dragStarted();\n    });\n  }\n\n  /**\n   * sign the end of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEndHandler(): void {\n    this._service.dragEnded();\n  }\n\n  /**\n   *  sign the enter of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEnterHandler(array: string, index: number): void {\n    this._service.dragEnter(array, index);\n  }\n\n  /**\n   * sign the leave of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragLeaveHandler(): void {\n    this._service.dragLeave();\n  }\n  ngOnInit(): void {\n    this._customWidgetsSub = this._service.customWidgets.subscribe(x => {\n      this.customWidgets = x;\n      if (this.customWidgets.length > 0 &&\n          this.customWidgets[this.customWidgets.length - 1].type == '') {\n        this.openDialog(this.customWidgets.length - 1);\n      }\n    });\n    this._service.addCustomWidgets({\n      json: this._threeColumnsLayout,\n      type: 'LayoutWidgetWith3Columns',\n    });\n    this._service.addCustomWidgets(\n        {json: this._fourColumnsLayout, type: 'LayoutWidgetWith4Columns'});\n  }\n\n  ngOnDestroy(): void {\n    this._customWidgetsSub.unsubscribe();\n    this._service.resetCustomWidgets();\n  }\n}\n","<mat-toolbar>\n  <ng-template ngFor let-t [ngForOf]=\"customWidgets\" let-i=\"index\">\n    <ajf-report-builder-custom-widget-toolbar-button\n          cdkDrag\n          [cdkDragData]=\"t\"\n          [widgetType]=\"t.type\"\n          [position]=\"i\"\n          (cdkDragStarted)=\"onDragStartHandler()\"\n          (cdkDragEnded)=\"onDragEndHandler();\"\n          (click)=\"openDialog(i)\">\n    </ajf-report-builder-custom-widget-toolbar-button>\n   </ng-template>\n</mat-toolbar>\n\n\n\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldType, AjfValidationService} from '@ajf/core/forms';\nimport {AjfImageType} from '@ajf/core/image';\nimport {AjfExpressionUtils, createFormula, validateExpression} from '@ajf/core/models';\nimport {\n  AjfAggregationType,\n  AjfDataset,\n  AjfDataWidget,\n  AjfImageWidget,\n  AjfWidget\n} from '@ajf/core/reports';\nimport {sizedEnumToStringArray} from '@ajf/core/utils';\nimport {AjfMonacoEditor} from '@ajf/material/monaco-editor';\nimport {\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {Subscription} from 'rxjs';\n\nimport {AjfFormVariables} from './models';\nimport {AjfReportBuilderService} from './report-builder-service';\n\nexport const enum AjfDataType {\n  MainData,\n  Dataset,\n  RelatedData,\n  LENGTH\n}\ndeclare var monaco: any;\n\n@Component({\n  selector: 'forms-analyzer-dialog',\n  templateUrl: 'forms-analyzer-dialog.html',\n  styleUrls: ['forms-analyzer-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderFormsAnalyzerDialog implements OnInit, AfterViewChecked, OnDestroy {\n  aggregationTypes: string[] = sizedEnumToStringArray(AjfAggregationType);\n\n  //  operators is an array of any type that contains all allow operators\n  operators: string[] = [\n    'true', 'false', '( )', '\\' \\'', '<', '<=', '>=', '>', '!=', '!', '&&', '||', '+', '-', '*',\n    '/', '%', '=='\n  ];\n\n  formulaText: string = '';\n  formulaDate: string = '';\n  safeFormulaText: string = '';\n  label: string = '';\n  condition: string = '';\n  aggregationType: AjfAggregationType = AjfAggregationType.Sum;\n  dataset: AjfDataset;\n  currentId: number = 0;\n  currentIndex: number = 0;\n  labels: string[] = [];\n  currentWidget: AjfWidget|null = null;\n  formsVariables: AjfFormVariables[];\n  formsVariablesName: string[] = [];\n  formsVariablesType: string[] = [];\n  isValid: boolean;\n\n  @Input() formula: string;\n\n  @Input() isFormula: boolean;\n\n  @Input() labelText: string;\n\n  @Input() aggregation: number;\n\n  @Input() init: boolean;\n\n  @Input() level: number;\n\n  @Input() index: number;\n\n  @Input() mainIndex: number;\n\n  @Input() reference: any;\n\n  @ViewChild(AjfMonacoEditor, {static: false}) monacoEditor: AjfMonacoEditor;\n\n  private _formAnalyzerSub: Subscription = Subscription.EMPTY;\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n  private _first: boolean = true;\n\n  constructor(\n      private _service: AjfReportBuilderService,\n      private _dialogRef: MatDialogRef<AjfReportBuilderFormsAnalyzerDialog>,\n      _: AjfValidationService) {\n    if (this.init == false) {\n      this.formulaText = '';\n      this.aggregationType = AjfAggregationType.Sum;\n    }\n    this._currentWidgetSub = this._service.currentWidget.subscribe(x => {\n      if (x != null) {\n        this.currentWidget = <AjfDataWidget>x;\n\n        if (this.currentWidget.widgetType == 2) {\n          let myObj: AjfImageWidget = <AjfImageWidget>this.currentWidget;\n          if (myObj.imageType == AjfImageType.Flag) {\n            this.formula = (myObj.flag) ? myObj.flag.formula : '';\n          } else {\n            this.formula = (myObj.icon) ? myObj.icon.formula : '';\n          }\n        }\n      }\n    });\n\n    this._formAnalyzerSub = this._service.formsVariables.subscribe((x) => {\n      if (x != null) {\n        this.formsVariables = x;\n      }\n    });\n  }\n\n  onEditorInit(): void {\n    monaco.languages.typescript.javascriptDefaults.setDiagnosticsOptions(\n        {noSemanticValidation: false, noSyntaxValidation: false});\n\n    monaco.languages.typescript.javascriptDefaults.setCompilerOptions({\n      target: monaco.languages.typescript.ScriptTarget.ES2015,\n      allowNonTsExtensions: true,\n      allowJs: true,\n      module: monaco.languages.typescript.ModuleKind.None\n    });\n\n    try {\n      monaco.languages.typescript.javascriptDefaults.addExtraLib(\n          '', 'condition-editor-variables.d.ts');\n    } catch (e) {\n      monaco.languages.typescript.javascriptDefaults._extraLibs['condition-editor-variables.d.ts'] =\n          '';\n    }\n    try {\n      monaco.languages.typescript.javascriptDefaults.addExtraLib(\n          '', 'condition-editor-functions.d.ts');\n    } catch (e) {\n      monaco.languages.typescript.javascriptDefaults._extraLibs['condition-editor-functions.d.ts'] =\n          '';\n    }\n\n    this._initFormsVariablesNames();\n    this._updateVariables();\n    this._updateFunctions();\n  }\n\n\n  private _initFormsVariablesNames(): void {\n    this.formsVariables.forEach((formVar) => {\n      formVar.names.forEach((name) => {\n        this.formsVariablesName.push(name);\n      });\n      formVar.types.forEach((type) => {\n        this.formsVariablesType.push(this._fieldVarType(type) || '');\n      });\n    });\n  }\n\n\n  private _updateVariables(): void {\n    if (this.formsVariables == null) {\n      return;\n    }\n    try {\n      let value: string = '';\n\n      for (let i = 0; i < this.formsVariablesName.length; i++) {\n        value += `declare const ${this.formsVariablesName[i]}: ${this.formsVariablesType[i]};`;\n      }\n\n      value += `\\n`;\n      monaco.languages.typescript.javascriptDefaults._extraLibs['condition-editor-variables.d.ts'] =\n          value;\n    } catch (e) {\n    }\n  }\n\n  private _updateFunctions(): void {\n    try {\n      monaco.languages.typescript.javascriptDefaults._extraLibs['condition-editor-functions.d.ts'] =\n          AjfExpressionUtils.UTIL_FUNCTIONS;\n    } catch (e) {\n    }\n  }\n\n  private _fieldVarType(fieldType: AjfFieldType): string|null {\n    switch (fieldType) {\n      case AjfFieldType.Boolean:\n        return 'boolean';\n      case AjfFieldType.Date:\n      case AjfFieldType.DateInput:\n      case AjfFieldType.Time:\n        return 'Date';\n      case AjfFieldType.Empty:\n        return 'void';\n      case AjfFieldType.Formula:\n        return 'number';\n      case AjfFieldType.MultipleChoice:\n      case AjfFieldType.SingleChoice:\n        return 'any';\n      case AjfFieldType.Number:\n        return 'number';\n      case AjfFieldType.Table:\n        return 'Array';\n      case AjfFieldType.String:\n      case AjfFieldType.Text:\n        return 'string';\n    }\n    return null;\n  }\n\n  setCurrent(id: number, label: string, index: number) {\n    if (!this.init) {\n      this.label = label;\n      this.init = true;\n    }\n    this.insertVariable(this.formsVariables[id].names[index] || '');\n  }\n\n  setCurrentId(id: number) {\n    this.currentId = id;\n    this.labels = this.formsVariables[id].labels;\n    this._updateVariables();\n  }\n\n  setAggregationType(type: AjfAggregationType) {\n    this.aggregationType = type;\n  }\n\n  checkValidation() {\n    if (this.validateFormula()) {\n      this.safeFormulaText = this.formulaText;\n      this.isValid = true;\n    } else {\n      this.isValid = false;\n    }\n    if (this.formulaText == '') {\n      this.isValid = false;\n    }\n  }\n\n  validateFormula(): boolean {\n    if (this.formulaText == '') {\n      this.init = false;\n    }\n    if (this.formsVariables == null) {\n      return false;\n    } else {\n      return validateExpression(this.formulaText, this.formsVariablesName);\n    }\n  }\n\n  saveDataset() {\n    if (this.currentWidget != null) {\n      switch (this.currentWidget.widgetType) {\n        case 2:\n          this.saveImageFormula();\n          break;\n        case 3:\n          this.saveFormulaHtml();\n          break;\n        case 4:\n          this.saveChartFormula();\n          break;\n        case 5:\n          this.saveTableFormula();\n          break;\n      }\n    }\n    this.close();\n  }\n\n  saveImageFormula() {\n    this._service.saveImageFormula(createFormula({formula: this.formulaText}));\n  }\n\n  saveFormulaHtml() {\n    this._service.saveFormulaToHtml(this.formulaText, this.reference);\n  }\n\n  saveChartFormula(): void {\n    this._service.saveChartFormula(\n        this.label, this.level, this.mainIndex, this.index, this.formulaText, this.aggregationType);\n  }\n\n  saveTableFormula(): void {\n    this._service.saveTableFormula(\n        this.label, this.aggregationType, this.formulaText, this.mainIndex, this.index);\n  }\n\n  insertVariable(variable: string): void {\n    if (this.monacoEditor != null && this.monacoEditor.editor != null) {\n      const editor = this.monacoEditor.editor;\n      let value: string[] = editor.getValue().split('\\n');\n      let position: {column: number, lineNumber: number} = editor.getPosition();\n      const ln = position.lineNumber - 1;\n      let line = value[ln];\n      let col = position.column - 1;\n      line = line.substring(0, col) + variable + line.substring(col);\n      value[ln] = line;\n      position.column += variable.length;\n      this.monacoEditor.value = value.join('\\n');\n      editor.setPosition(position);\n      editor.focus();\n      this.formulaText = editor.getValue();\n      this.checkValidation();\n    }\n  }\n\n  setVariable(variable: string): void {\n    if (this.monacoEditor != null && this.monacoEditor.editor != null) {\n      const editor = this.monacoEditor.editor;\n      editor.setValue(variable);\n    }\n  }\n\n  reset() {\n    this.formulaText = '';\n    this.aggregationType = AjfAggregationType.None;\n  }\n\n  close() {\n    this.reset();\n    this._dialogRef.close();\n  }\n\n  ngOnInit() {\n    this.formulaText = this.formula;\n    this.aggregationType = this.aggregation;\n    this.label = this.labelText;\n\n    if (this.formulaText == '' || this.formulaText == null) {\n      this.isValid = false;\n    } else {\n      this.isValid = true;\n    }\n  }\n\n  ngAfterViewChecked() {\n    if (this._first && this.monacoEditor != null && this.monacoEditor.editor != null) {\n      this.insertVariable(this.formulaText || '');\n      this._first = false;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._formAnalyzerSub.unsubscribe();\n    this._currentWidgetSub.unsubscribe();\n  }\n}\n","<h3 matDialogTitle> Formula editor </h3>\n<div mat-dialog-content #elem>\n  <ng-template [ngIf]=\"currentWidget != null && formsVariables != null\">\n    <div class=\"ajf-left\">\n      <mat-list>\n        <mat-list-item *ngFor=\"let operator of operators\">\n          <button mat-button (click)=\"insertVariable(operator)\">\n            <h4 matLine>{{operator}}</h4>\n          </button>\n        </mat-list-item>\n      </mat-list>\n    </div>\n    <div class=\"ajf-main\">\n      <mat-select *ngIf=\"!isFormula\" placeholder=\"Select type of agregation\" [(ngModel)]=\"aggregationType\">\n          <mat-option [value]=\"idx\" *ngFor=\"let ag of aggregationTypes; let idx = index\"> {{ ag }} </mat-option>\n      </mat-select>\n      <mat-form-field *ngIf=\"!isFormula\">\n        <textarea matInput placeholder=\"Name field\" [(ngModel)]=\"label\" ></textarea>\n      </mat-form-field>\n        <ajf-monaco-editor\n          (init)=\"onEditorInit()\"\n          (valueChange)=\"formulaText = $event;checkValidation();\"\n          [value]=\"condition\" language=\"javascript\">\n        </ajf-monaco-editor>\n    </div>\n    <div class=\"ajf-menu\">\n      <form>\n        <mat-select placeholder=\"Select form\" (selectionChange)=\"setCurrentId($event.value)\">\n          <ng-template ngFor let-form let-id=\"index\" [ngForOf]=\"formsVariables\">\n            <mat-option [value]=\"id\"> {{ id }} </mat-option>\n          </ng-template>\n        </mat-select>\n      </form>\n      <mat-list>\n        <h3 matSubheader>Field list</h3>\n        <mat-list-item *ngFor=\"let label of labels;let i = index\">\n          <button mat-button (click)=\"setCurrent(currentId, label, i)\">\n            <h4 matLine>{{label}}</h4>\n          </button>\n        </mat-list-item>\n      </mat-list>\n    </div>\n  </ng-template>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"saveDataset()\" [disabled]=\"!isValid\">Save</button>\n</div>\n\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfForm} from '@ajf/core/forms';\nimport {\n  AjfAggregationType,\n  AjfChartType,\n  AjfChartWidget,\n  AjfDataset,\n  AjfDataWidget,\n  AjfWidget,\n  AjfWidgetType\n} from '@ajf/core/reports';\nimport {ChangeDetectionStrategy, Component, OnDestroy, ViewEncapsulation} from '@angular/core';\nimport {ThemePalette} from '@angular/material/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {Subscription} from 'rxjs';\n\nimport {AjfReportBuilderFormsAnalyzerDialog} from './forms-analyzer-dialog';\nimport {AjfFormVariables} from './models';\nimport {AjfReportBuilderService} from './report-builder-service';\n\n/**\n * this component provides the support for connect the form fields with the report\n *\n * @export\n */\n@Component({\n  selector: 'ajf-report-builder-forms-analyzer',\n  templateUrl: 'forms-analyzer.html',\n  styleUrls: ['forms-analyzer.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderFormsAnalyzer implements OnDestroy {\n  currentWidget: AjfWidget|null = null;\n\n  forms: AjfForm[] = [];\n\n  formsVariables: AjfFormVariables[];\n  choicesOrigins: any = {};\n\n  dialogRef: MatDialogRef<AjfReportBuilderFormsAnalyzerDialog>;\n\n  currentMainDataIndex: number = -1;\n  private _dataset: AjfDataset[][] = [];\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n  private _formAnalyzerSub: Subscription = Subscription.EMPTY;\n\n  constructor(private _service: AjfReportBuilderService, public dialog: MatDialog) {\n    this._currentWidgetSub = this._service.currentWidget.subscribe(x => {\n      if (x != null) {\n        this.currentWidget = x;\n        // this._dataset = myObj.dataset;\n      } else {\n        this.currentWidget = null;\n      }\n    });\n\n\n    this._formAnalyzerSub = this._service.formsVariables.subscribe((x) => {\n      if (x != null) {\n        this.formsVariables = x;\n      }\n    });\n  }\n\n  setCurrentIndex(index: number) {\n    this.currentMainDataIndex = index;\n  }\n\n  isSelected(index: number): ThemePalette {\n    if (index === this.currentMainDataIndex) {\n      return 'primary';\n    } else {\n      return undefined;\n    }\n  }\n\n  /**\n   *  get the X components label of the chart.\n   *  they are contained in the first row of dataset\n   *\n   *\n   * @memberof AjfReportBuilderFormsAnalyzer\n   */\n  getMainData(): string[] {\n    if (this._dataset[0] != null) {\n      let mainData: string[] = [];\n\n      for (let i = 0; i < this._dataset[0].length; i++) {\n        mainData.push(this._dataset[0][i].label || '');\n      }\n      return mainData;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   *  get the Y components label of the chart.\n   *  they are contained in the first column of dataset\n   *\n   *\n   * @memberof AjfReportBuilderFormsAnalyzer\n   */\n  getDataset(): string[] {\n    let dataset: string[] = [];\n    if (this._dataset[0] != null) {\n      for (let i = 1; i < this._dataset.length; i++) {\n        dataset.push(this._dataset[i][0].label || '');\n      }\n      return dataset;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * get the related data label of the chart.\n   * they are contained in the row of the Y component\n   *\n   *\n   * @memberof AjfReportBuilderFormsAnalyzer\n   */\n  getRelatedData(): string[] {\n    if (this._dataset[this.currentMainDataIndex + 1] != null) {\n      let relatedData: string[] = [];\n\n      for (let i = 1; i < this._dataset[this.currentMainDataIndex + 1].length; i++) {\n        relatedData.push(this._dataset[this.currentMainDataIndex + 1][i].label || '');\n      }\n      return relatedData;\n    } else {\n      return [];\n    }\n  }\n\n  getTableHeader(): string[] {\n    let mainData: string[] = [];\n    if (this._dataset != null) {\n      for (let i = 0; i < this._dataset.length; i++) {\n        if (this._dataset[i][0] != null) {\n          mainData.push(this._dataset[i][0].label || '');\n        }\n      }\n    }\n    return mainData;\n  }\n\n  getTableData(): string[] {\n    if (this._dataset[this.currentMainDataIndex] != null) {\n      let tableData: string[] = [];\n\n      for (let i = 1; i < this._dataset[this.currentMainDataIndex].length; i++) {\n        if (this._dataset[this.currentMainDataIndex][i] != null) {\n          tableData.push(this._dataset[this.currentMainDataIndex][i].label || '');\n        }\n      }\n      return tableData;\n    } else {\n      return [];\n    }\n  }\n\n  needMainData(): boolean {\n    let myObj = <AjfChartWidget>this.currentWidget;\n    if (myObj.chartType === AjfChartType.Scatter || myObj.chartType === AjfChartType.Bubble) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  removeMainData(index: number) {\n    this._service.removeMainData(index);\n  }\n\n  removeDataset(index: number) {\n    this.currentMainDataIndex = index;\n    this._service.removeRelatedData(this.currentMainDataIndex, -1);\n  }\n  removeTableMainData(index: number) {\n    this._service.removeTableMainData(index);\n  }\n\n  removeRelatedData(index: number) {\n    this._service.removeRelatedData(this.currentMainDataIndex, index);\n  }\n\n  removeData(mainIndex: number, index: number) {\n    this._service.removeData(mainIndex, index);\n  }\n\n  /**\n   *\n   *\n   *\n   * @param index\n   * @param editMode\n   *\n   * @memberof AjfReportBuilderFormsAnalyzer\n   */\n  openDialog(level: number, mainIndex: number, index: number, editMode: boolean) {\n    this.dialogRef = this.dialog.open(AjfReportBuilderFormsAnalyzerDialog);\n\n    if (editMode) {\n      if (level === 1 && index === -1) {\n        index = 0;\n      }\n      if (level === 1) {\n        if (this.currentWidget != null && this.currentWidget.widgetType == AjfWidgetType.Chart) {\n          mainIndex++;\n        }\n        index++;\n      }\n\n      this.dialogRef.componentInstance.labelText =\n          this._dataset[mainIndex] && this._dataset[mainIndex][index].label || '';\n      /* this.dialogRef.componentInstance.formula =\n        this._dataset[mainIndex] &&\n        this._dataset[mainIndex][index].formula.formula || ''; */\n      this.dialogRef.componentInstance.aggregation =\n          this._dataset[mainIndex] && this._dataset[mainIndex][index].aggregation.aggregation ||\n          AjfAggregationType.None;\n    } else {\n      this.dialogRef.componentInstance.labelText = '';\n      this.dialogRef.componentInstance.formula = '';\n      this.dialogRef.componentInstance.aggregation = 0;\n    }\n\n    // this.dialogRef.componentInstance.formsVariables = this.formsVariables;\n    this.dialogRef.componentInstance.currentWidget = <AjfDataWidget>this.currentWidget;\n    this.dialogRef.componentInstance.level = level;\n    this.dialogRef.componentInstance.mainIndex = mainIndex;\n    this.dialogRef.componentInstance.index = index;\n    this.dialogRef.componentInstance.init = false;\n  }\n\n  openDialogAddMainData() {\n    this.openDialog(0, -1, -1, false);\n  }\n\n  openDialogChartEditMainData() {\n    this.openDialog(0, 0, this.currentMainDataIndex, true);\n  }\n\n  openDialogTableEditMainData() {\n    this.openDialog(0, this.currentMainDataIndex, 0, true);\n  }\n\n  openDialogChartAddDataset() {\n    this.openDialog(1, -1, -1, false);\n  }\n  openDialogTableAddDataset() {\n    this.openDialog(1, this.currentMainDataIndex, -1, false);\n  }\n  openDialogChartAddDataOfDataset() {\n    this.openDialog(1, this.currentMainDataIndex, -1, false);\n  }\n  openDialogChartEditDataset() {\n    this.openDialog(1, this.currentMainDataIndex, -1, true);\n  }\n  openDialogTableEditDataset(index: number) {\n    this.openDialog(1, this.currentMainDataIndex, index, true);\n  }\n  openDialogChartEditDataOfDataset(index: number) {\n    this.openDialog(1, this.currentMainDataIndex, index, true);\n  }\n\n  ngOnDestroy(): void {\n    this._currentWidgetSub.unsubscribe();\n    this._formAnalyzerSub.unsubscribe();\n  }\n}\n","<ng-template [ngIf]=\"currentWidget != null && formsVariables != null\">\n  <ng-template [ngIf]=\"currentWidget.widgetType == 4\">\n    <ng-template [ngIf]=\"needMainData()\">\n      <mat-tab-group>\n        <mat-tab [label]=\"'Main Data' | transloco\">\n          <button\n            mat-button\n            (click)=\"openDialogAddMainData()\"\n            style=\"width: 100%\"\n          >\n            Add Main Data\n          </button>\n          <mat-grid-list rowHeight=\"50px\" cols=\"3\">\n            <ng-template\n              ngFor\n              let-label\n              [ngForOf]=\"getMainData()\"\n              let-idx=\"index\"\n            >\n              <mat-grid-tile> {{ label }} </mat-grid-tile>\n              <mat-grid-tile>\n                <button\n                  mat-button\n                  (click)=\"setCurrentIndex(idx);openDialogChartEditMainData()\"\n                >\n                  {{'Edit'|transloco}}\n                </button>\n              </mat-grid-tile>\n              <mat-grid-tile>\n                <button mat-button (click)=\"removeMainData(idx)\">\n                  {{'Remove'|transloco}}\n                </button>\n              </mat-grid-tile>\n            </ng-template>\n          </mat-grid-list>\n          <div class=\"ajf-ui ajf-divider\"></div>\n        </mat-tab>\n      </mat-tab-group>\n    </ng-template>\n    <mat-tab-group>\n      <mat-tab label=\"dataset\">\n        <button\n          mat-button\n          (click)=\"openDialogChartAddDataset()\"\n          style=\"width: 100%\"\n        >\n          {{'add dataset'|transloco}}\n        </button>\n        <mat-grid-list rowHeight=\"50px\" cols=\"4\">\n          <ng-template ngFor let-label [ngForOf]=\"getDataset()\" let-idx=\"index\">\n            <mat-grid-tile>\n              <button\n                mat-button\n                [color]=\"isSelected(idx)\"\n                (click)=\"setCurrentIndex(idx)\"\n              >\n                {{ label|transloco }}\n              </button>\n            </mat-grid-tile>\n            <mat-grid-tile>\n              <button\n                mat-button\n                (click)=\"setCurrentIndex(idx);openDialogChartAddDataOfDataset()\"\n                style=\"width: 100%\"\n              >\n                {{'add data'|transloco}}\n              </button>\n            </mat-grid-tile>\n            <mat-grid-tile>\n              <button\n                mat-button\n                (click)=\"setCurrentIndex(idx);openDialogChartEditDataset()\"\n              >\n                {{'Edit'|transloco}}\n              </button>\n            </mat-grid-tile>\n            <mat-grid-tile>\n              <button mat-button (click)=\"removeDataset(idx)\">\n                {{'Remove'|transloco}}\n              </button>\n            </mat-grid-tile>\n          </ng-template>\n        </mat-grid-list>\n      </mat-tab>\n      <mat-tab label=\"data\">\n        <mat-grid-list rowHeight=\"50px\" cols=\"3\">\n          <ng-template\n            ngFor\n            let-label\n            [ngForOf]=\"getRelatedData()\"\n            let-idx=\"index\"\n          >\n            <mat-grid-tile> {{ label|transloco }} </mat-grid-tile>\n            <mat-grid-tile>\n              <button\n                mat-button\n                (click)=\"openDialogChartEditDataOfDataset(idx)\"\n              >\n                {{'Edit'|transloco}}\n              </button>\n            </mat-grid-tile>\n            <mat-grid-tile>\n              <button mat-button (click)=\"removeRelatedData(idx)\">\n                {{'Remove'|transloco}}\n              </button>\n            </mat-grid-tile>\n          </ng-template>\n        </mat-grid-list>\n        <div class=\"ajf-ui ajf-divider\"></div>\n      </mat-tab>\n    </mat-tab-group>\n  </ng-template>\n  <ng-template [ngIf]=\"currentWidget.widgetType == 5\">\n    <ng-template [ngIf]=\"needMainData()\">\n      <mat-tab-group>\n        <mat-tab [label]=\"'Main Data' | transloco\">\n          <button\n            mat-button\n            (click)=\"openDialogAddMainData()\"\n            style=\"width: 100%\"\n          >\n            {{'Add Main Data'|transloco}}\n          </button>\n          <mat-grid-list rowHeight=\"50px\" cols=\"4\">\n            <ng-template\n              ngFor\n              let-label\n              [ngForOf]=\"getTableHeader()\"\n              let-idx=\"index\"\n            >\n              <mat-grid-tile>\n                <button\n                  mat-button\n                  [color]=\"isSelected(idx)\"\n                  (click)=\"setCurrentIndex(idx)\"\n                >\n                  {{ label }}\n                </button>\n              </mat-grid-tile>\n              <mat-grid-tile>\n                <button\n                  mat-button\n                  (click)=\"setCurrentIndex(idx);openDialogTableAddDataset()\"\n                  style=\"width: 100%\"\n                >\n                  {{'add data'|transloco}}\n                </button>\n              </mat-grid-tile>\n              <mat-grid-tile>\n                <button\n                  mat-button\n                  (click)=\"setCurrentIndex(idx);openDialogTableEditMainData()\"\n                >\n                  {{'Edit'|transloco}}\n                </button>\n              </mat-grid-tile>\n              <mat-grid-tile>\n                <button mat-button (click)=\"removeTableMainData(idx)\">\n                  {{'Remove'|transloco}}\n                </button>\n              </mat-grid-tile>\n            </ng-template>\n          </mat-grid-list>\n          <div class=\"ajf-ui ajf-divider\"></div>\n        </mat-tab>\n        <mat-tab [label]=\"'data' | transloco\">\n          <mat-grid-list rowHeight=\"50px\" cols=\"3\">\n            <ng-template\n              ngFor\n              let-label\n              [ngForOf]=\"getTableData()\"\n              let-idx=\"index\"\n            >\n              <mat-grid-tile> {{ label|transloco }} </mat-grid-tile>\n              <mat-grid-tile>\n                <button mat-button (click)=\"openDialogTableEditDataset(idx)\">\n                  {{'Edit'|transloco}}\n                </button>\n              </mat-grid-tile>\n              <mat-grid-tile>\n                <button\n                  mat-button\n                  (click)=\"removeData(currentMainDataIndex, idx + 1)\"\n                >\n                  {{'Remove'|transloco}}\n                </button>\n              </mat-grid-tile>\n            </ng-template>\n          </mat-grid-list>\n          <div class=\"ajf-ui ajf-divider\"></div>\n        </mat-tab>\n      </mat-tab-group>\n    </ng-template>\n  </ng-template>\n</ng-template>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Injectable, Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({name: 'ajfImageFilter'})\n@Injectable()\nexport class AjfImageFilterPipe implements PipeTransform {\n  transform(items: any[], args: any): any {\n    return items.filter(\n        item => (args.length === 0) || item.info.toLowerCase().includes(args.toLowerCase()));\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {AjfReportBuilderService} from './report-builder-service';\n\n/**\n * this component handle a group of image object\n * there are 2 types of view\n *  ajf-icon and class\n *\n * take a json in input\n *  'icon': 'false', // if true ajf-icon activated\n *  'class': ['flag-icon'], // add class in object style\n *  'prefixClass': 'flag-icon-', // prefix of class contained on data set\n *  'title': 'flags', title of data set\n *  'data': [\n *    {\n *      'class': 'dz', strind added on prefix\n *      'info': 'Algeria' info related to object (exploit on toolTip)\n *    }\n *  ]\n * };\n *\n * @export\n */\n@Component({\n  selector: 'ajf-image-group',\n  templateUrl: 'image-group.html',\n  styleUrls: ['image-group.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderImageGroup {\n  private _icon: {fontSet: string, fontIcon: string}|null = null;\n  private _classes: string = '';\n\n  get icon(): {fontSet: string, fontIcon: string}|null {\n    return this._icon;\n  }\n  get classes(): string {\n    return this._classes;\n  }\n\n  open: boolean = false;\n  valueToSearch: string = '';\n\n  @Input() data: any;\n\n  /**\n   * this event is fired when the user click on formula button on quill editor rool barƒ\n   *\n   * @memberof QuillEditorComponent\n   */\n  @Output() readonly formulaClick: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private _service: AjfReportBuilderService) {}\n\n\n  setIcon(fontSet: string, fontIcon: string) {\n    this._icon = {fontSet, fontIcon};\n    this._service.setIcon(this._icon);\n  }\n\n  setFlag(value: string) {\n    this._classes = value;\n    this._service.setFlag(value);\n  }\n\n  setSearch(value: any) {\n    this.valueToSearch = value.currentTarget.value;\n  }\n\n  emitFormula() {\n    this.formulaClick.emit();\n  }\n\n  getFlag(value: string) {\n    let returnValue = '';\n\n    for (let i = 0; i < this.data.class.length; i++) {\n      returnValue += this.data.class[i] + ' ';\n    }\n\n    returnValue += this.data.prefixClass + value;\n    return returnValue;\n  }\n\n  toggle() {\n    this.open = !this.open;\n  }\n}\n","<ng-template [ngIf]=\"data != null\">\n  <button mat-button (click)=\"toggle()\" style=\"width:100%\">{{data.title}}</button>\n  <ng-template [ngIf]=\"open\">\n    <button mat-button (click)=\"emitFormula()\">Set formula</button>\n    <mat-card *ngIf=\"data.icon === 'true'\">\n      <mat-card-header>\n        {{data.title}}\n      </mat-card-header>\n      <mat-card-content>\n        <mat-grid-list cols=\"3\" rowHeight=\"100px\">\n          <ng-container *ngFor=\"let value of data.data\">\n            <mat-grid-tile *ngFor=\"let icon of value.icons\" [colspan]=\"1\" [rowspan]=\"1\">\n              <button style=\"height:100%\" (click)=\"setIcon(value.name, icon.name)\" [matTooltip]=\"icon.label\" matTooltipPosition=\"above\" mat-button>\n                <mat-icon\n                  [fontSet]=\"value.name\"\n                  [fontIcon]=\"icon.name\">\n                </mat-icon>\n              </button>\n            </mat-grid-tile>\n          </ng-container>\n        </mat-grid-list>\n      </mat-card-content>\n    </mat-card>\n    <mat-card *ngIf=\"data.icon === 'false'\">\n      <mat-card-header>\n        <mat-card-title>\n          {{data.title}}\n        </mat-card-title>\n        <mat-card-subtitle>\n          <mat-form-field>\n            <input matInput placeholder=\"{{data.title}} to search\" [(ngModel)]=\"valueToSearch\">\n          </mat-form-field>\n        </mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        <div class=\"ajf-image-group-container\">\n          <mat-grid-list cols=\"3\">\n            <mat-grid-tile *ngFor=\"let value of data.data | ajfImageFilter: valueToSearch\" [colspan]=\"1\" [rowspan]=\"1\">\n              <button style=\"height:100%\" (click)=\"setFlag(getFlag(value.class))\" matTooltip=\"{{value.info}}\" [matTooltipPosition]=\"'above'\" mat-button>\n                <span class={{getFlag(value.class)}} style=\"width: 100%;height: 100%;\"></span>\n              </button>\n            </mat-grid-tile>\n          </mat-grid-list>\n        </div>\n      </mat-card-content>\n    </mat-card>\n    <ajf-report-builder-forms-analyzer></ajf-report-builder-forms-analyzer>\n  </ng-template>\n</ng-template>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWidget} from '@ajf/core/reports';\nimport {deepCopy} from '@ajf/core/utils';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {Subscription} from 'rxjs';\n\nimport {AjfReportBuilderService} from './report-builder-service';\n\n@Component({\n  selector: 'theme-color-dialog',\n  templateUrl: 'theme-color-dialog.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderThemeColorDialog implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('colorpic', {static: true}) elem: any;\n\n  currentWidget: AjfWidget|null = null;\n\n  currentColor = 'rgb(255,255,255,0)';\n  section: string = 'color';\n\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n      private _service: AjfReportBuilderService,\n      private _dialogRef: MatDialogRef<AjfReportBuilderThemeColorDialog>) {}\n\n  setWidgetStyles(value: any) {\n    this._service.setWidgetStyles(this.section, value);\n    this.currentColor = value;\n    this.setStyle();\n  }\n\n  setStyle() {\n    if (this.currentWidget == null) {\n      return;\n    }\n    this.currentWidget.styles = deepCopy(this.currentWidget.styles);\n    this._service.updateCurrentWidget(this.currentWidget);\n  }\n\n  addCustomColor() {\n    this._service.addCustomColor(this.currentColor);\n    this._service.updateCurrentWidget(this.currentWidget);\n    this._dialogRef.close();\n  }\n\n  close() {\n    this._dialogRef.close();\n  }\n  ngOnInit() {\n    this._currentWidgetSub = this._service.currentWidget.subscribe(x => {\n      if (x !== null) {\n        if (this.currentWidget !== x) {\n          this.currentWidget = x;\n        }\n      } else {\n        this.currentWidget = null;\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    this.elem.nativeElement.children[1].firstElementChild['style']['position'] = 'initial';\n  }\n\n  ngOnDestroy() {\n    this._currentWidgetSub.unsubscribe();\n  }\n}\n","<div mat-dialog-content #colorpic>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"addCustomColor()\">Save color</button>\n</div>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWidget} from '@ajf/core/reports';\nimport {deepCopy} from '@ajf/core/utils';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation\n} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {Observable, Subscription} from 'rxjs';\nimport {distinctUntilChanged, map} from 'rxjs/operators';\n\nimport {AjfReportBuilderService} from './report-builder-service';\nimport {AjfReportBuilderThemeColorDialog} from './theme-color-dialog';\n\n/**\n * this component manages the report text\n *\n * @export\n */\n@Component({\n  selector: 'ajf-theme-color',\n  templateUrl: 'theme-color.html',\n  styleUrls: ['theme-color.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderThemeColor implements OnInit, OnDestroy {\n  currentWidget: AjfWidget|null = null;\n\n  alphaColor: number = 1;\n  colors: string[];\n  currentColor: string;\n\n  getColorWidget: Observable<string>;\n\n  dialogRef: MatDialogRef<AjfReportBuilderThemeColorDialog>;\n\n  styleBackgroundColor = 'rgb(255,255,255,0)';\n  styleColor = 'rgb(0,0,0,0)';\n\n  @Input() section: string;\n\n  @Input() label: string;\n\n  @Input() init: string;\n\n  /**\n   * the name of the section that contains the currentWidget\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  origin: string;\n\n  private _colorsSub: Subscription = Subscription.EMPTY;\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n  private _originSub: Subscription = Subscription.EMPTY;\n  private _headerStyleSub: Subscription = Subscription.EMPTY;\n  private _contentStylesSub: Subscription = Subscription.EMPTY;\n  private _footerStylesSub: Subscription = Subscription.EMPTY;\n\n  constructor(private _service: AjfReportBuilderService, public dialog: MatDialog) {}\n\n  setStyles(value: any) {\n    switch (this.section) {\n      case 'widget':\n        this.setWidgetStyles(value);\n        break;\n      case 'report':\n        this.setReportStyles(value);\n        break;\n      case 'section':\n        this.setSectionStyles(value);\n        break;\n      case 'chart':\n        this.setChartStyle(value);\n        break;\n    }\n  }\n\n  setChartStyle(value: any) {\n    if (this.label === 'backgroundColor') {\n      this.addChartBackgroundColor(value);\n    } else {\n      this.addChartBorderColor(value);\n    }\n  }\n\n  setAlphaColor(value: any) {\n    value = value.toFixed(2);\n    for (let i = 0; i < this.colors.length; i++) {\n      let lastComma = this.colors[i].lastIndexOf(',');\n      this.colors[i] = this.colors[i].substring(0, lastComma) + ',' + value + ')';\n    }\n  }\n\n  /**\n   * call to service to add new style to widget\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setWidgetStyles(value: any) {\n    if (this.section === 'chart') {\n      this.setChartStyle(value);\n    } else {\n      this._service.setWidgetStyles(this.label, value);\n      this.currentColor = value;\n      this.setStyle();\n    }\n  }\n\n  /**\n   * call to service to add new style to section\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setSectionStyles(value: any) {\n    this._service.setSectionStyles(this.origin, this.label, value);\n    this.styleColor = value;\n  }\n\n  /**\n   * call to service to add new style to report\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setReportStyles(value: any) {\n    this._service.setReportStyles(this.label, value);\n    this.styleBackgroundColor = value;\n  }\n\n  /**\n   * call to service to add background color to current chart\n   *\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  addChartBackgroundColor(value: any) {\n    this._service.addChartBackgroundColor(value);\n  }\n\n  /**\n   * call to service to add border color to current chart\n   *\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  addChartBorderColor(value: any) {\n    this._service.addChartBorderColor(value);\n  }\n\n  setStyle() {\n    if (this.currentWidget == null) {\n      return;\n    }\n    this.currentWidget.styles = deepCopy(this.currentWidget.styles);\n    this._service.updateCurrentWidget(this.currentWidget);\n  }\n\n  openDialog() {\n    this.dialogRef = this.dialog.open(AjfReportBuilderThemeColorDialog);\n  }\n\n  ngOnInit() {\n    this._colorsSub = this._service.colors.subscribe(x => {\n      this.colors = x;\n    });\n\n    this._currentWidgetSub = this._service.currentWidget.subscribe(x => {\n      if (x != null) {\n        if (this.currentWidget !== x) {\n          this.currentWidget = x;\n        }\n      } else {\n        this.currentWidget = null;\n      }\n    });\n\n    this.getColorWidget = this._service.currentWidget.pipe(\n        map((myObj: AjfWidget|null) => {\n          if (myObj != null) {\n            return myObj.styles['color'] || '';\n          }\n        }),\n        distinctUntilChanged());\n\n    this._originSub = this._service.origin.subscribe(s => {\n      this.origin = s;\n    });\n\n    this._headerStyleSub = this._service.headerStyles.subscribe(s => {\n      if (s['background-color'] != null) {\n        this.styleBackgroundColor = s['background-color'];\n      }\n    });\n    this._contentStylesSub = this._service.contentStyles.subscribe(s => {\n      if (s['background-color'] != null) {\n        this.styleBackgroundColor = s['background-color'];\n      }\n    });\n    this._footerStylesSub = this._service.footerStyles.subscribe(s => {\n      if (s['background-color'] != null) {\n        this.styleBackgroundColor = s['background-color'];\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._colorsSub.unsubscribe();\n    this._currentWidgetSub.unsubscribe();\n    this._originSub.unsubscribe();\n    this._headerStyleSub.unsubscribe();\n    this._contentStylesSub.unsubscribe();\n    this._footerStylesSub.unsubscribe();\n  }\n}\n","<mat-card style=\"width:90%\">\n  <mat-card-header>\n    <mat-card-title> {{ label }} Trasparency</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n       <mat-slider\n      style=\"width:90%\"\n      (change)=\"setAlphaColor($event.value)\"\n      min=\"0\"\n      max=\"1\"\n      step=\"0.1\"\n      [value]=\"alphaColor\"\n      thumbLabel>\n    </mat-slider>\n  </mat-card-content>\n</mat-card>\n<mat-card style=\"width:90%\">\n  <mat-card-header>\n    <mat-card-title> {{ label }} </mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <mat-grid-list\n      cols=\"8\"\n      rowHeight=\"25px\">\n      <mat-grid-tile\n        *ngFor=\"let color of colors\"\n        [colspan]=\"1\"\n        [rowspan]=\"1\"\n        [style.background]=\"color\">\n        <button\n          style=\"height:100%\"\n          (click)=\"setStyles(color)\"\n          mat-button>\n        </button>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-button (click)=\"openDialog()\" style=\"width:90%;\">Add color</button>\n    <button mat-button (click)=\"setStyles('')\" style=\"width:90%\"> Reset </button>\n  </mat-card-actions>\n</mat-card>\n\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormControl,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  Validator\n} from '@angular/forms';\nimport {default as Quill} from 'quill';\nimport {Subscription} from 'rxjs';\n\nimport {AjfReportBuilderService} from './report-builder-service';\n\n\n@Component({\n  selector: 'ajf-quill-editor',\n  template: `\n    <ng-content select=\"[ajf-quill-editor-toolbar]\"></ng-content>\n  `,\n  providers: [\n    {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AjfQuillEditor), multi: true},\n    {provide: NG_VALIDATORS, useExisting: forwardRef(() => AjfQuillEditor), multi: true}\n  ],\n  styleUrls: ['quill-editor.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfQuillEditor implements AfterViewInit, ControlValueAccessor, OnChanges, OnDestroy,\n                                       Validator {\n  quillEditor: any;\n  editorElem: HTMLElement;\n  emptyArray: any[] = [];\n  content: any;\n\n  listenFunc: Function;\n\n  previewElemFormula: any;\n  private _init: boolean = false;\n\n  dateFormats = [\n    {\n      'label': 'June 23rd 2017, 12:39:12 pm',\n      'value': 'MMMM Do YYYY, h:mm:ss a',\n      'validator': 'MMMMDoYYYYhmmssa'\n    },\n    {'label': 'Friday', 'value': 'dddd', 'validator': 'dddd'},\n    {'label': 'Jun 23rd 17', 'value': 'MMM Do YY', 'validator': 'MMMDoYY'}\n  ];\n\n\n  fonts = [\n    false, 'blackr', 'black-italic', 'bold', 'bold-condensed', 'bold-condensed-italic',\n    'bold-italic', 'condensed', 'condensed-italic', 'italic', 'light', 'light-italic', 'medium',\n    'medium-italic', 'thinr', 'thin-italic'\n  ];\n\n  defaultModules = {\n    formula: true,\n    toolbar:\n        [\n          ['formula'], ['bold', 'italic', 'underline', 'strike'],  // toggled buttons\n          // ['blockquote', 'code-block'],\n\n          [{'header': 1}, {'header': 2}],  // custom button values\n          [{'list': 'ordered'}, {'list': 'bullet'}],\n          [{'script': 'sub'}, {'script': 'super'}],  // superscript/subscript\n          // [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\n          // [{ 'direction': 'rtl' }],                         // text direction\n\n          [{'size': ['small', false, 'large', 'huge']}],  // custom dropdown\n          [{'header': [1, 2, 3, 4, 5, 6, false]}],\n\n          [\n            {'color': this.emptyArray.slice()}, {'background': this.emptyArray.slice()}\n          ],  // dropdown with defaults from theme\n          [{'font': this.fonts}], [{'align': this.emptyArray.slice()}],\n\n          ['clean'],  // remove formatting button\n\n          // ['link', 'image', 'video']                         // link and image, video\n        ]\n  };\n\n  font = Quill.import('formats/font');\n\n\n  @Input() theme: string;\n  @Input() modules: Object;\n  @Input() readOnly: boolean;\n  @Input() placeholder: string;\n  @Input() maxLength: number;\n  @Input() minLength: number;\n  @Input() formats: string[];\n  @Input() initHTML: string;\n\n  @Output() readonly editorCreated: EventEmitter<any> = new EventEmitter();\n  @Output() readonly contentChanged: EventEmitter<any> = new EventEmitter();\n  @Output() readonly selectionChanged: EventEmitter<any> = new EventEmitter();\n\n\n  /**\n   * this event is fired when the user click on formula button on quill editor rool barƒ\n   *\n   * @memberof QuillEditorComponent\n   */\n  @Output() readonly formulaClick: EventEmitter<any> = new EventEmitter<any>();\n\n\n  onModelChange: Function = () => {};\n  onModelTouched: Function = () => {};\n\n  private _formulas: {formula: any, unlisten: Function|null}[] = [];\n  private _formulaTextSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n      private _elementRef: ElementRef, private _renderer: Renderer2,\n      private _service: AjfReportBuilderService) {\n    this.font.whitelist = this.fonts;\n    this.font.whitelist.push('regular');\n\n    this._formulaTextSub = this._service.getFormulaToHtmlEvent().subscribe((event: any) => {\n      // reference is defined only when the user want to edit the formula\n      if (event.reference !== undefined) {\n        event.reference.innerHTML = event.formula;\n        this._renderer.setAttribute(event.reference, 'formula', event.formula);\n        const efs = this._formulas.filter(f => f.formula === event.reference);\n        let formulaEntry;\n        let unlisten;\n        if (efs.length > 0) {\n          formulaEntry = efs[0];\n          unlisten = formulaEntry.unlisten;\n          if (unlisten != null) {\n            unlisten();\n          }\n        } else {\n          formulaEntry = {formula: event.reference, unlisten: null};\n          this._formulas.push(formulaEntry);\n        }\n        formulaEntry.unlisten = this._renderer.listen(event.reference, 'click', () => {\n          let obj = {'formula': event.formula, 'reference': event.reference};\n          this.formulaClick.emit(obj);\n        });\n      } else {\n        const quillEditor = this._elementRef.nativeElement.querySelector('.ajf-ql-editor');\n        const link = this._renderer.createElement('a');\n        this._renderer.setAttribute(link, 'href', 'javascript:void(0)');\n        this._renderer.setStyle(link, 'cursor', 'pointer');\n        this._renderer.setAttribute(link, 'formula', this.check(event.formula));\n        const linkLabel = this._renderer.createText(event.formula);\n        this._renderer.appendChild(link, linkLabel);\n        // add listener related on the click event of the new formula\n        const unlisten = this._renderer.listen(link, 'click', (_) => {\n          let obj = {'formula': this.check(event.formula), 'reference': link};\n          this.formulaClick.emit(obj);\n        });\n        this._renderer.appendChild(quillEditor, link);\n        this._formulas.push({unlisten, formula: link});\n      }\n    });\n  }\n\n  check(value: string): string {\n    for (let i = 0; i < this.dateFormats.length; i++) {\n      if (this.dateFormats[i].value == value) {\n        return this.dateFormats[i].validator;\n      }\n    }\n    return <string>value;\n  }\n  /**\n   * this function search fomulas inside the init text\n   * and allocate the related listener on click event\n   *\n   * @memberof QuillEditorComponent\n   */\n  setHTML() {\n    this.writeValue(this.initHTML);\n  }\n\n  ngAfterViewInit() {\n    const toolbarElem = this._elementRef.nativeElement.querySelector('[ajf-quill-editor-toolbar]');\n    let modules: any = this.modules || this.defaultModules;\n\n    Quill.register(this.font, true);\n\n    if (toolbarElem) {\n      modules['toolbar'] = toolbarElem;\n      modules['formula'] = true;\n    }\n    this._elementRef.nativeElement.insertAdjacentHTML(\n        'beforeend', '<div quill-editor-element></div>');\n\n    this.editorElem = this._elementRef.nativeElement.querySelector('[quill-editor-element]');\n\n    this.quillEditor = new Quill(this.editorElem, {\n      modules: modules,\n      placeholder: this.placeholder || 'Insert text here ...',\n      readOnly: this.readOnly || false,\n      theme: this.theme || 'snow',\n      formats: this.formats\n    });\n\n\n    this.editorCreated.emit(this.quillEditor);\n    this.setHTML();\n\n    // mark model as touched if editor lost focus\n    this.quillEditor.on('selection-change', (range: any, oldRange: any, source: string) => {\n      this.selectionChanged.emit(\n          {editor: this.quillEditor, range: range, oldRange: oldRange, source: source});\n\n      if (!range) {\n        this.onModelTouched();\n      }\n    });\n\n    // update model if text changes\n    this.quillEditor.on('text-change', (delta: any, oldDelta: any, source: string) => {\n      let html: any = this.editorElem.children[0].innerHTML;\n      const text = this.quillEditor.getText();\n\n      if (html === '<p><br></p>') {\n        html = null;\n      }\n\n      this.onModelChange(html);\n\n      this.contentChanged.emit({\n        editor: this.quillEditor,\n        html: html,\n        text: text,\n        delta: delta,\n        oldDelta: oldDelta,\n        source: source\n      });\n    });\n\n    let elem = this._elementRef.nativeElement.querySelector('.ajf-ql-formula');\n    this.listenFunc = this._renderer.listen(elem, 'click', (_) => {\n      this.formulaClick.emit();\n    });\n  }\n\n  writeValue(currentValue: any) {\n    this.content = currentValue;\n\n    if (this.quillEditor) {\n      if (currentValue) {\n        if (currentValue == this.initHTML && !this._init) {\n          let editor = this._elementRef.nativeElement.querySelector('.ajf-ql-editor');\n          editor.innerHTML = this.initHTML;\n          let allFormulas = this._elementRef.nativeElement.querySelectorAll('[formula]');\n          allFormulas.forEach((elem: any) => {\n            const unlisten = this._renderer.listen(elem, 'click', (_) => {\n              let obj = {'formula': this.check(elem.innerText), 'reference': elem};\n              this.formulaClick.emit(obj);\n            });\n            this._renderer.setStyle(elem, 'cursor', 'pointer');\n            this._formulas.push({unlisten, formula: elem});\n            this._init = true;\n          });\n        } else if (currentValue != this.initHTML) {\n          this.quillEditor.pasteHTML(currentValue);\n        }\n        return;\n      }\n      this.quillEditor.setText('');\n    }\n  }\n\n  registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n\n  validate(_c: FormControl) {\n    if (!this.quillEditor) {\n      return null;\n    }\n\n    let err: {\n      minLengthError?: {given: number, minLength: number};\n      maxLengthError?: {given: number, maxLength: number};\n    } = {},\n  valid = true;\n\n    const textLength = this.quillEditor.getText().trim().length;\n\n    if (this.minLength) {\n      err.minLengthError = {given: textLength, minLength: this.minLength};\n\n      valid = textLength >= this.minLength || !textLength;\n    }\n\n    if (this.maxLength) {\n      err.maxLengthError = {given: textLength, maxLength: this.maxLength};\n\n      valid = textLength <= this.maxLength && valid;\n    }\n\n    return valid ? null : err;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['readOnly'] && this.quillEditor) {\n      this.quillEditor.enable(!changes['readOnly'].currentValue);\n    }\n    if (changes['modules'] && this.quillEditor) {\n      Quill.register(this.font, true);\n      this.quillEditor = new Quill(this.editorElem, {\n        modules: changes['modules']['currentValue'],\n        placeholder: this.placeholder || 'Insert text here ...',\n        readOnly: this.readOnly || false,\n        theme: this.theme || 'snow',\n        formats: this.formats\n      });\n      this._elementRef.nativeElement.children[0].remove();\n    }\n  }\n  ngOnDestroy() {\n    for (let i = 0; i < this._formulas.length; i++) {\n      let unlisten = this._formulas[i].unlisten;\n      if (unlisten != null) {\n        unlisten();\n      }\n    }\n    this._formulaTextSub.unsubscribe();\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfForm} from '@ajf/core/forms';\nimport {AjfCondition} from '@ajf/core/models';\nimport {\n  AjfAggregationType,\n  AjfChartWidget,\n  AjfLayoutWidget,\n  AjfTextWidget,\n  AjfWidget,\n  AjfWidgetType\n} from '@ajf/core/reports';\nimport {deepCopy} from '@ajf/core/utils';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation\n} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {Observable, Subscription} from 'rxjs';\nimport {distinctUntilChanged, filter, map, startWith, withLatestFrom} from 'rxjs/operators';\n\nimport {AjfReportBuilderFormsAnalyzerDialog} from './forms-analyzer-dialog';\nimport {AjfFormVariables} from './models';\nimport {AjfReportBuilderService} from './report-builder-service';\n\n@Component({\n  selector: 'ajf-report-builder-properties',\n  templateUrl: 'properties.html',\n  styleUrls: ['properties.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderProperties implements OnInit, OnChanges, OnDestroy {\n  /**\n   *  true when the first time chart type is setted\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  initChartType = false;\n\n  /**\n   * the current widget\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  currentWidget: AjfWidget|null = null;\n  get currentLayoutWidget(): AjfLayoutWidget {\n    return this.currentWidget as AjfLayoutWidget;\n  }\n  get currentTextWidget(): AjfTextWidget {\n    return this.currentWidget as AjfTextWidget;\n  }\n\n  /**\n   * this array contains the forms exploited for generate data labels\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  forms: AjfForm[] = [];\n\n\n  colors: string[] = [];\n\n  /**\n   * the name of the section that contains the currentWidget\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  origin: string;\n\n  /**\n   * FAKE DATA\n   */\n\n  formsJson: any = {forms: []};\n\n  /**\n   * WIDGET\n   */\n\n  widgetName = '';\n  getHTML: Observable<string|undefined>;\n  getHeightWidget: Observable<number|undefined>;\n  getFontSizeWidget: Observable<number|undefined>;\n  getFontAlignWidget: Observable<number|undefined>;\n  getBackgroundColorWidget: Observable<string>;\n  getColorWidget: Observable<string>;\n  getStyle: Observable<any>;\n  getChartBackgroundColor: Observable<string[]>;\n  getChartBorderColor: Observable<string[]>;\n  getVisibility: Observable<AjfCondition>;\n  getColor: Observable<String[]>;\n\n  marginExpanded: boolean = false;\n  getMarginWidget: Observable<number[]|undefined>;\n  getMarginWidgetTop: Observable<number>;\n  getMarginWidgetRight: Observable<number>;\n  getMarginWidgetBottom: Observable<number>;\n  getMarginWidgetLeft: Observable<number>;\n\n  paddingExpanded: boolean = false;\n  getPaddingWidget: Observable<number[]|undefined>;\n  getPaddingWidgetTop: Observable<number>;\n  getPaddingWidgetRight: Observable<number>;\n  getPaddingWidgetBottom: Observable<number>;\n  getPaddingWidgetLeft: Observable<number>;\n\n  borderWidthExpanded: boolean = false;\n  getBorderWidthWidget: Observable<number[]|undefined>;\n  getBorderWidthWidgetTop: Observable<number>;\n  getBorderWidthWidgetRight: Observable<number>;\n  getBorderWidthWidgetBottom: Observable<number>;\n  getBorderWidthWidgetLeft: Observable<number>;\n\n  borderRadiusExpanded: boolean = false;\n  getBorderRadiusWidget: Observable<number[]|undefined>;\n  getBorderRadiusWidgetTopLeft: Observable<number>;\n  getBorderRadiusWidgetTopRight: Observable<number>;\n  getBorderRadiusWidgetBottomRight: Observable<number>;\n  getBorderRadiusWidgetBottomLeft: Observable<number>;\n\n  backgroundColor = '#127bdc';\n  styleBackgroundColor = 'rgb(255,255,255,0)';\n  borderColor = '#127bdc';\n  styleColor = 'rgb(0,0,0,0)';\n  wbackgroundColor: string;\n  fontSize: string;\n  bubble: string;\n\n  dialogRef: MatDialogRef<AjfReportBuilderFormsAnalyzerDialog>;\n  container: AjfFormVariables;\n\n\n  align = [false, 'center', 'right', 'justify'];\n\n  fonts = [\n    false, 'blackr', 'black-italic', 'bold', 'bold-condensed', 'bold-condensed-italic',\n    'bold-italic', 'condensed', 'condensed-italic', 'italic', 'light', 'light-italic', 'medium',\n    'medium-italic', 'thinr', 'thin-italic'\n  ];\n  currentModule: any = {};\n  quillModules = {\n    toolbar: [\n      ['formula'], ['bold', 'italic', 'underline', 'strike'],  // toggled buttons\n      // ['blockquote', 'code-block'],\n\n      [{'header': 1}, {'header': 2}],  // custom button values\n      [{'list': 'ordered'}, {'list': 'bullet'}],\n      [{'script': 'sub'}, {'script': 'super'}],  // superscript/subscript\n      // [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\n      // [{ 'direction': 'rtl' }],                         // text direction\n\n      [{'size': ['small', false, 'large', 'huge']}],  // custom dropdown\n      [{'header': [1, 2, 3, 4, 5, 6, false]}],\n\n      [{'color': this.colors}, {'background': this.colors}],  // dropdown with defaults from theme\n      [{'font': this.fonts}], [{'align': this.align}],\n\n      ['clean'],  // remove formatting button\n\n      // ['link', 'class', 'video']                         // link and image, video\n    ]\n  };\n\n  /**\n   * CHART\n   */\n\n\n  getChartYLabels: Observable<string[]>;\n\n  chartBorderColor: string[] = [];\n  chartBorderWidth = 3;\n\n  /**\n   *\n   * IMAGE\n   */\n\n  imageUrl = 'https://angular.io/resources/images/logos/angular2/angular.png';\n\n  /**\n   *\n   * TEXT\n   */\n\n  htmlText = '';\n\n\n  /**\n   * these variables indicate that the user want to change section\n   */\n  reportStyles = false;\n  sectionStyles = false;\n  widgetStyles = true;\n  sectionColor = false;\n  widgetColor = false;\n  visibilitySection = false;\n  currentColor = '';\n\n  private _icon: {fontSet: string, fontIcon: string}|null = null;\n  get icon(): {fontSet: string, fontIcon: string}|null {\n    return this._icon;\n  }\n\n  iconSet: any = {'icon': 'true', 'title': 'report', 'data': null};\n\n  flagSet: any = {\n    'icon': 'false',\n    'class': ['flag-icon'],\n    'prefixClass': 'flag-icon-',\n    'title': 'flags',\n    'data':\n        [\n          {'class': 'dz', 'info': 'Algeria'},\n          {'class': 'ao', 'info': 'Angola'},\n          {'class': 'bj', 'info': 'Benin'},\n          {'class': 'bw', 'info': 'Botswana'},\n          {'class': 'bf', 'info': 'Burkina Faso'},\n          {'class': 'bi', 'info': 'Burundi'},\n          {'class': 'cm', 'info': 'Cameroon'},\n          {'class': 'cv', 'info': 'Cabo Verde'},\n          {'class': 'cf', 'info': 'The Central African Republic'},\n          {'class': 'td', 'info': 'Chad'},\n          {'class': 'km', 'info': 'The Comoros'},\n          {'class': 'ci', 'info': 'Cote D\\'avoire'},\n          {'class': 'cd', 'info': 'The Democratic Republic of Congo'},\n          {'class': 'dj', 'info': 'Dijibouti'},\n          {'class': 'eg', 'info': 'Egypt'},\n          {'class': 'gq', 'info': 'Equatorial Guinea'},\n          {'class': 'er', 'info': 'Eritrea'},\n          {'class': 'et', 'info': 'Ethiopia'},\n          {'class': 'tf', 'info': 'French Southern Territories'},\n          {'class': 'ga', 'info': 'Gabon'},\n          {'class': 'gm', 'info': 'The Gambia'},\n          {'class': 'gh', 'info': 'Ghana'},\n          {'class': 'gn', 'info': 'Guinea'},\n          {'class': 'gw', 'info': 'Guinea-Bissau'},\n          {'class': 'ke', 'info': 'Kenya'},\n          {'class': 'ls', 'info': 'Leshotho'},\n          {'class': 'lr', 'info': 'Liberia'},\n          {'class': 'ly', 'info': 'Libya'},\n          {'class': 'mg', 'info': 'Madagascar'},\n          {'class': 'mw', 'info': 'Malawy'},\n          {'class': 'ml', 'info': 'Mali'},\n          {'class': 'mr', 'info': 'Mauritania'},\n          {'class': 'mu', 'info': 'Mauritius'},\n          {'class': 'yt', 'info': 'Mayotte'},\n          {'class': 'ma', 'info': 'Marocco'},\n          {'class': 'mz', 'info': 'Mozambique'},\n          {'class': 'na', 'info': 'Namibia'},\n          {'class': 'ne', 'info': 'Niger'},\n          {'class': 'ng', 'info': 'Nigeria'},\n          {'class': 'cg', 'info': 'Republic of the Congo'},\n          {'class': 'rw', 'info': 'Rwnda'},\n          {'class': 're', 'info': 'rèunion'},\n          {'class': 'sh', 'info': 'Saint Helena, Ascension and Tristan da Cunha'},\n          {'class': 'st', 'info': 'Sao Tome and Principe'},\n          {'class': 'sn', 'info': 'Senegal'},\n          {'class': 'sc', 'info': 'Seychelles'},\n          {'class': 'sl', 'info': 'Sierra Leone'},\n          {'class': 'so', 'info': 'Somalia'},\n          {'class': 'za', 'info': 'South Africa'},\n          {'class': 'ss', 'info': 'South Sudan'},\n          {'class': 'sd', 'info': 'Sudan'},\n          {'class': 'sz', 'info': 'Swaziland'},\n          {'class': 'tz', 'info': 'Tanzania'},\n          {'class': 'tg', 'info': 'Togo'},\n          {'class': 'tn', 'info': 'Tunisia'},\n          {'class': 'ug', 'info': 'Uganda'},\n          {'class': 'eh', 'info': 'Western Sahara'},\n          {'class': 'zm', 'info': 'Zambia'},\n          {'class': 'zw', 'info': 'Zimbawe'},\n          {'class': 'iq', 'info': 'Iraq'},\n          {'class': 'lb', 'info': 'Lebanon'},\n          {'class': 'bd', 'info': 'Bangladesh'},\n          {'class': 'ir', 'info': 'Iran (Islamic Republic of)'},\n          {'class': 'my', 'info': 'Malaysia'},\n          {'class': 'np', 'info': 'Nepal'},\n          {'class': 'pk', 'info': 'Pakistan'},\n          {'class': 'th', 'info': 'Thailand'},\n          {'class': 'jo', 'info': 'Jordan'},\n          {'class': 'ye', 'info': 'Yemen'}\n        ]\n  };\n\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n  private _formsSub: Subscription = Subscription.EMPTY;\n  private _colorSub: Subscription = Subscription.EMPTY;\n  private _headerStyleSub: Subscription = Subscription.EMPTY;\n  private _contentStylesSub: Subscription = Subscription.EMPTY;\n  private _footerStylesSub: Subscription = Subscription.EMPTY;\n  private _originSub: Subscription = Subscription.EMPTY;\n  private _stylesUpdatesSubs: Subscription = Subscription.EMPTY;\n\n  private _updateWidgetMarginEvt: EventEmitter<{idx: number, value: any}> =\n      new EventEmitter<{idx: number, value: any}>();\n  private _updateWidgetPaddingEvt: EventEmitter<{idx: number, value: any}> =\n      new EventEmitter<{idx: number, value: any}>();\n  private _updateWidgetBorderWidthEvt: EventEmitter<{idx: number, value: any}> =\n      new EventEmitter<{idx: number, value: any}>();\n  private _updateWidgetBorderRadiusEvt: EventEmitter<{idx: number, value: any}> =\n      new EventEmitter<{idx: number, value: any}>();\n\n  constructor(private _dialog: MatDialog, private _service: AjfReportBuilderService) {\n    this.setForms();\n\n    this.iconSet.data = Object.keys(_service.iconSets).filter(x => x != 'ajf-icon').map(i => {\n      return {name: i, icons: _service.iconSets[i]};\n    });\n\n    this._headerStyleSub = this._service.headerStyles.subscribe(s => {\n      if (s['background-color'] != null) {\n        this.styleBackgroundColor = s['background-color'];\n      }\n    });\n    this._contentStylesSub = this._service.contentStyles.subscribe(s => {\n      if (s['background-color'] != null) {\n        this.styleBackgroundColor = s['background-color'];\n      }\n    });\n    this._footerStylesSub = this._service.footerStyles.subscribe(s => {\n      if (s['background-color'] != null) {\n        this.styleBackgroundColor = s['background-color'];\n      }\n    });\n    this._originSub = this._service.origin.subscribe(s => {\n      this.origin = s;\n    });\n  }\n\n\n  /**\n   *\n   * UTILS\n   */\n\n\n  /**\n   * return a number value\n   *\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  toNumber(value: string): number {\n    let numberPattern = /^(-)?\\d+/g;\n\n    if (value == null) {\n      return 0;\n    } else {\n      const matches = value.match(numberPattern);\n      if (matches == null || matches.length == 0) {\n        return 0;\n      }\n      return Number(matches[0]);\n    }\n  }\n\n  toNumberArray(value: string): number[] {\n    if (value == null) {\n      return [];\n    } else {\n      return (value || '')\n          .replace('px', '')\n          .split(' ')\n          .filter(v => v !== '' && v != null)\n          .map(v => this.toNumber(v));\n    }\n  }\n\n  fillPxNumberArray(value: number[]) {\n    const vl = value.length;\n    switch (vl) {\n      case 0:\n        return [0, 0, 0, 0];\n      case 1:\n        const v = value[0];\n        return [v, v, v, v];\n      case 2:\n        const v21 = value[0];\n        const v22 = value[1];\n        return [v21, v22, v21, v22];\n      case 3:\n        const v31 = value[0];\n        const v32 = value[1];\n        const v33 = value[2];\n        return [v31, v32, v33, v32];\n      default:\n        return value;\n    }\n  }\n\n  percent(value: number) {\n    let temp = this.roundTo(value * 100, 3);\n    return temp;\n  }\n\n  roundTo(value: number, decimalPositions: number) {\n    let i = value * Math.pow(10, decimalPositions);\n\n    i = Math.floor(i);\n\n    return i / Math.pow(10, decimalPositions);\n  }\n  /**\n   * call to service to set the forms\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n\n  setForms(): void {\n    let forms: AjfForm[] = [];\n    try {\n      for (let i = 0; i < this.formsJson.forms.length; i++) {\n        forms.push(deepCopy(this.formsJson.forms[i]));\n      }\n      this._service.setReportForms(forms);\n    } catch (e) {\n    }\n  }\n\n  /**\n   * call to service to set the width of the idx column of layout widget\n   *\n   * @param col\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  instantColumnValue(col: number|null, idx: number) {\n    if (col === null) {\n      return;\n    }\n    this._service.instantColumnValue(col, idx);\n  }\n\n  /**\n   *  force copy of style\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  // TODO delete this\n  setStyle() {\n    if (this.currentWidget == null) {\n      return;\n    }\n    this.currentWidget.styles = deepCopy(this.currentWidget.styles);\n    this._service.updateCurrentWidget(this.currentWidget);\n  }\n\n  /**\n   * call to service to add new style to widget\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setWidgetStyles(label: string, value: any) {\n    this._service.setWidgetStyles(label, value);\n    this.currentColor = value;\n    this.setStyle();\n  }\n\n  setWidgetMargin(idx: number, value: any): void {\n    this._updateWidgetMarginEvt.emit({idx, value});\n  }\n\n  setWidgetPadding(idx: number, value: any): void {\n    this._updateWidgetPaddingEvt.emit({idx, value});\n  }\n\n  setWidgetBorderWidth(idx: number, value: any): void {\n    this._updateWidgetBorderWidthEvt.emit({idx, value});\n  }\n\n  setWidgetBorderRadius(idx: number, value: any): void {\n    this._updateWidgetBorderRadiusEvt.emit({idx, value});\n  }\n\n  /**\n   * call to service to add new style to section\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setSectionStyles(label: string, value: any) {\n    this._service.setSectionStyles(this.origin, label, value);\n    this.styleColor = value;\n  }\n\n\n  /**\n   * call to service to add new style to report\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setReportStyles(label: string, value: any) {\n    this._service.setReportStyles(label, value);\n    this.styleBackgroundColor = value;\n  }\n\n  /**\n   * add custom color\n   *\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  addCustomColor() {\n    this._service.addCustomColor(this.currentColor);\n    this._service.updateCurrentWidget(this.currentWidget);\n  }\n\n  /**\n   * get the module exploit to quill text editor\n   *\n   * @returns\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  getModule() {\n    return this.quillModules;\n  }\n\n  /**\n   * true is the input type value is equal to current widget type\n   *\n   * @param value\n   * @returns\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  isChartTypeSelected(value: number) {\n    if (this.initChartType == false) {\n      return false;\n    }\n    const myObj = <AjfChartWidget>this.currentWidget;\n    if (value === myObj.chartType) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n\n  /* layout functions */\n\n  /**\n   * call to service to add a column to current layout widget\n   *\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  addColumn() {\n    this._service.addColumn();\n  }\n\n  /**\n   * call to service to add a obj to current layout widget\n   *\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  fixedColumn(idx: number) {\n    this._service.fixedColumn(idx);\n  }\n\n  /**\n   * call to service to remove obj of current layout widget\n   *\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  unfixedColumn(idx: number) {\n    this._service.remove('unfixedColumn', idx);\n  }\n\n  /* image functions */\n\n  /**\n   * call to service to set image url\n   *\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setImageUrl() {\n    this._service.setImageUrl(this.imageUrl);\n  }\n\n  setIcon(icon: {fontSet: string, fontIcon: string}) {\n    this._icon = icon;\n    this._service.setIcon(icon);\n  }\n\n  /* chart functions */\n\n  /**\n   * call to service to set the type of chart\n   *\n   * @param type\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setChartType(type: number) {\n    this.initChartType = true;\n    this._service.setChartType(type);\n  }\n\n  setChartBorderColor(value: number|null) {\n    if (value == null) {\n      return;\n    }\n    this._service.setChartBorderWidth(value);\n  }\n\n  tabValue: string = 'backgroundColor';\n  setTab(event: any) {\n    if (event.index === 0) {\n      this.tabValue = 'backgroundColor';\n    } else {\n      this.tabValue = 'borderColor';\n    }\n  }\n\n  /**\n   * call to service to remove background color to current chart\n   *\n   * @param index\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  removeChartBackgroundColor(index: number) {\n    this._service.removeChartBackgroundColor(index);\n  }\n\n  /**\n   * call to service to remove border color to current chart\n   *\n   * @param index\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  removeChartBorderColor(index: number) {\n    this._service.removeChartBorderColor(index);\n  }\n\n  hideMenu() {\n    this._service.updateCurrentWidget(null);\n  }\n\n  openFormulaDialog(event: any) {\n    this.dialogRef = this._dialog.open(AjfReportBuilderFormsAnalyzerDialog);\n    this.dialogRef.componentInstance.aggregation = AjfAggregationType.None;\n    this.dialogRef.componentInstance.isFormula = true;\n    if (event != null && event.reference != null) {\n      this.dialogRef.componentInstance.formula = event.formula;\n      this.dialogRef.componentInstance.reference = event.reference;\n    }\n  }\n\n  ngOnInit(): void {\n    this._formsSub = this._service.reportForms.subscribe(x => {\n      this.forms = x || [];\n    });\n\n    this._currentWidgetSub = this._service.currentWidget.subscribe(x => {\n      if (x != null) {\n        if (this.currentWidget !== x) {\n          this.currentWidget = x;\n          this.widgetName = AjfWidgetType[x.widgetType];\n          this.reportStyles = false;\n          this.sectionStyles = false;\n          this.widgetStyles = false;\n          this.sectionColor = false;\n          this.widgetColor = false;\n          this.visibilitySection = false;\n        }\n      } else {\n        this.currentWidget = null;\n        this.widgetName = '';\n      }\n    });\n    this._colorSub = this._service.colors.subscribe(x => {\n      if (x && x.length > 0) {\n        this.colors = x;\n\n        this.quillModules = {\n          toolbar: [\n            ['bold', 'italic', 'underline', 'strike'],  // toggled buttons\n            // ['blockquote', 'code-block'],\n            [{'header': 1}, {'header': 2}],  // custom button values\n            [{'list': 'ordered'}, {'list': 'bullet'}],\n            [{'script': 'sub'}, {'script': 'super'}],  // superscript/subscript\n            // [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\n            // [{ 'direction': 'rtl' }],                         // text direction\n\n            [{'size': ['small', false, 'large', 'huge']}],  // custom dropdown\n            [{'header': [1, 2, 3, 4, 5, 6, false]}],\n\n            [\n              {'color': this.colors}, {'background': this.colors}\n            ],  // dropdown with defaults from theme\n            [{'font': this.fonts}], [{'align': this.align}], ['formula'],\n            ['clean'],  // remove formatting button\n\n            // ['link', 'class', 'video']                         // link and image, video\n          ]\n        };\n      }\n    });\n\n\n    this.getHTML = this._service.currentWidget.pipe(\n        map((widget: AjfWidget|null) => {\n          if (widget != null) {\n            const myObj = <AjfTextWidget>this.currentWidget;\n            return myObj.htmlText;\n          }\n          return '';\n        }),\n        distinctUntilChanged(), startWith('<p><br></p>'));\n\n\n    this.getHeightWidget = this._service.currentWidget.pipe(\n        filter(x => x != null), map((myObj: AjfWidget|null) => {\n          if (myObj != null) {\n            let value = this.toNumber(myObj.styles['height']);\n            if (value != null || value != null) {\n              return value;\n            }\n          }\n          return undefined;\n        }),\n        distinctUntilChanged());\n\n    this.getFontSizeWidget = this._service.currentWidget.pipe(\n        map((myObj: AjfWidget|null) => {\n          if (myObj != null) {\n            return (this.toNumber(myObj.styles['font-size']) || 12);\n          }\n          return undefined;\n        }),\n        distinctUntilChanged());\n\n    this.getFontAlignWidget = this._service.currentWidget.pipe(\n        map((myObj: AjfWidget|null) => {\n          if (myObj != null) {\n            return ((myObj.styles['text-align']) || 'center');\n          }\n          return undefined;\n        }),\n        distinctUntilChanged());\n\n    this.getBorderWidthWidget = this._service.currentWidget.pipe(\n        map((myObj: AjfWidget|null) => {\n          if (myObj != null) {\n            return this.fillPxNumberArray(this.toNumberArray(myObj.styles['border-width']));\n          }\n          return undefined;\n        }),\n        distinctUntilChanged(), startWith([0, 0, 0, 0]));\n    this.getBorderWidthWidgetTop =\n        this.getBorderWidthWidget.pipe(filter(m => m != null), map(m => m![0]));\n    this.getBorderWidthWidgetRight =\n        this.getBorderWidthWidget.pipe(filter(m => m != null), map(m => m![1]));\n    this.getBorderWidthWidgetBottom =\n        this.getBorderWidthWidget.pipe(filter(m => m != null), map(m => m![2]));\n    this.getBorderWidthWidgetLeft =\n        this.getBorderWidthWidget.pipe(filter(m => m != null), map(m => m![3]));\n\n    this.getBorderRadiusWidget = this._service.currentWidget.pipe(\n        map((myObj: AjfWidget|null) => {\n          if (myObj != null) {\n            return this.fillPxNumberArray(this.toNumberArray(myObj.styles['border-radius']));\n          }\n          return undefined;\n        }),\n        distinctUntilChanged(), startWith([0, 0, 0, 0]));\n    this.getBorderRadiusWidgetTopLeft =\n        this.getBorderRadiusWidget.pipe(filter(m => m != null), map(m => m![0]));\n    this.getBorderRadiusWidgetTopRight =\n        this.getBorderRadiusWidget.pipe(filter(m => m != null), map(m => m![1]));\n    this.getBorderRadiusWidgetBottomRight =\n        this.getBorderRadiusWidget.pipe(filter(m => m != null), map(m => m![2]));\n    this.getBorderRadiusWidgetBottomLeft =\n        this.getBorderRadiusWidget.pipe(filter(m => m != null), map(m => m![3]));\n\n    this.getMarginWidget = this._service.currentWidget.pipe(\n        map((myObj: AjfWidget|null) => {\n          if (myObj != null && myObj.styles != null && myObj.styles['margin'] != null) {\n            return this.fillPxNumberArray(this.toNumberArray(myObj.styles['margin']));\n          }\n          return undefined;\n        }),\n        distinctUntilChanged(), startWith([0, 0, 0, 0]));\n    this.getMarginWidgetTop = this.getMarginWidget.pipe(filter(m => m != null), map(m => m![0]));\n    this.getMarginWidgetRight = this.getMarginWidget.pipe(filter(m => m != null), map(m => m![1]));\n    this.getMarginWidgetBottom = this.getMarginWidget.pipe(filter(m => m != null), map(m => m![2]));\n    this.getMarginWidgetLeft = this.getMarginWidget.pipe(filter(m => m != null), map(m => m![3]));\n\n    this.getPaddingWidget = this._service.currentWidget.pipe(\n        map((myObj: AjfWidget|null) => {\n          if (myObj != null && myObj.styles != null && myObj.styles['padding'] != null) {\n            return this.fillPxNumberArray(this.toNumberArray(myObj.styles['padding']));\n          }\n          return undefined;\n        }),\n        distinctUntilChanged());\n    this.getPaddingWidgetTop = this.getPaddingWidget.pipe(filter(m => m != null), map(m => m![0]));\n    this.getPaddingWidgetRight =\n        this.getPaddingWidget.pipe(filter(m => m != null), map(m => m![1]));\n    this.getPaddingWidgetBottom =\n        this.getPaddingWidget.pipe(filter(m => m != null), map(m => m![2]));\n    this.getPaddingWidgetLeft = this.getPaddingWidget.pipe(filter(m => m != null), map(m => m![3]));\n\n    this.getBackgroundColorWidget = this._service.currentWidget.pipe(\n        map((myObj: AjfWidget|null) => {\n          if (myObj != null && myObj.styles != null) {\n            return myObj.styles['backgroundColor'] || '';\n          }\n        }),\n        distinctUntilChanged());\n\n    this.getColorWidget = this._service.currentWidget.pipe(\n        map((myObj: AjfWidget|null) => {\n          if (myObj != null && myObj.styles != null) {\n            return myObj.styles['color'] || '';\n          }\n        }),\n        distinctUntilChanged());\n\n    this._stylesUpdatesSubs = this._updateWidgetMarginEvt\n                                  .pipe(\n                                      withLatestFrom(this.getMarginWidget),\n                                      )\n                                  .subscribe(r => {\n                                    if (r == null) {\n                                      return;\n                                    }\n                                    const idx = r[0].idx;\n                                    const value = r[0].value;\n                                    const v = (r[1] || [0, 0, 0, 0]) as number[];\n                                    if (v == null || v.length < idx) {\n                                      return;\n                                    }\n                                    v[idx] = value;\n                                    this.setWidgetStyles('margin', v);\n                                  });\n\n    this._stylesUpdatesSubs.add(this._updateWidgetPaddingEvt\n                                    .pipe(\n                                        withLatestFrom(this.getPaddingWidget),\n                                        )\n                                    .subscribe(r => {\n                                      if (r == null) {\n                                        return;\n                                      }\n                                      const idx = r[0].idx;\n                                      const value = r[0].value;\n                                      const v = (r[1] || [0, 0, 0, 0]) as number[];\n                                      if (v == null || v.length < idx) {\n                                        return;\n                                      }\n                                      v[idx] = value;\n                                      this.setWidgetStyles('padding', v);\n                                    }));\n\n    this._stylesUpdatesSubs.add(this._updateWidgetBorderWidthEvt\n                                    .pipe(\n                                        withLatestFrom(this.getBorderWidthWidget),\n                                        )\n                                    .subscribe(r => {\n                                      if (r == null) {\n                                        return;\n                                      }\n                                      const idx = r[0].idx;\n                                      const value = r[0].value;\n                                      const v = (r[1] || [0, 0, 0, 0]) as number[];\n                                      if (v == null || v.length < idx) {\n                                        return;\n                                      }\n                                      v[idx] = value;\n                                      this.setWidgetStyles('border-width', v);\n                                    }));\n\n    this._stylesUpdatesSubs.add(this._updateWidgetBorderRadiusEvt\n                                    .pipe(\n                                        withLatestFrom(this.getBorderRadiusWidget),\n                                        )\n                                    .subscribe(r => {\n                                      if (r == null) {\n                                        return;\n                                      }\n                                      const idx = r[0].idx;\n                                      const value = r[0].value;\n                                      const v = (r[1] || [0, 0, 0, 0]) as number[];\n                                      if (v == null || v.length < idx) {\n                                        return;\n                                      }\n                                      v[idx] = value;\n                                      this.setWidgetStyles('border-radius', v);\n                                    }));\n  }\n\n  ngOnChanges(changes: any) {\n    this.currentWidget = changes.widget.currentValue;\n    if (this.currentWidget == null) {\n      return;\n    }\n    this.widgetName = AjfWidgetType[this.currentWidget.widgetType];\n  }\n\n  ngOnDestroy(): void {\n    this._currentWidgetSub.unsubscribe();\n    this._formsSub.unsubscribe();\n    this._colorSub.unsubscribe();\n    this._headerStyleSub.unsubscribe();\n    this._contentStylesSub.unsubscribe();\n    this._footerStylesSub.unsubscribe();\n    this._originSub.unsubscribe();\n    this._stylesUpdatesSubs.unsubscribe();\n  }\n}\n","<ng-template [ngIf]=\"currentWidget != null\">\n  <div class=\"ajf-content\">\n    <button\n      mat-button\n      class=\"ajf-hide-menu\"\n      matTooltip=\"hide-menu\"\n      (click)=\"hideMenu()\"\n      [matTooltipPosition]=\"'above'\"\n    >\n      <mat-icon>remove_circle_outline</mat-icon>\n    </button>\n    <mat-button-toggle-group class=\"ajf-menu-css\">\n      <mat-button-toggle\n        (click)=\"reportStyles = !reportStyles; sectionStyles = false; widgetStyles = false\"\n        value=\"left\"\n        [ngClass]=\"{'ajf-selected': reportStyles}\"\n      >\n        report\n        <ng-container>{{'CSS style'|transloco}}</ng-container>\n      </mat-button-toggle>\n      <mat-button-toggle\n        (click)=\"sectionStyles = !sectionStyles; reportStyles = false; widgetStyles = false\"\n        [ngClass]=\"{'ajf-selected': sectionStyles}\"\n      >\n        {{ origin }}\n        <ng-container>{{'CSS style'|transloco}}</ng-container>\n      </mat-button-toggle>\n      <mat-button-toggle\n        (click)=\"widgetStyles = !widgetStyles; sectionStyles = false; reportStyles = false\"\n        [ngClass]=\"{'ajf-selected': widgetStyles}\"\n      >\n        {{ widgetName }}\n        <ng-container>{{'CSS style'|transloco}}</ng-container>\n      </mat-button-toggle>\n    </mat-button-toggle-group>\n    <div class=\"ajf-style-container\" *ngIf=\"(reportStyles) ? true : false \">\n      <mat-tab-group>\n        <mat-tab label=\"Background Color\">\n          <div class=\"ajf-style-panel\">\n            <ajf-theme-color\n              [section]=\"'report'\"\n              [label]=\"'color'\"\n            ></ajf-theme-color>\n          </div>\n        </mat-tab>\n      </mat-tab-group>\n    </div>\n    <div class=\"ajf-style-container\" *ngIf=\"(sectionStyles) ? true : false \">\n      <mat-tab-group>\n        <mat-tab label=\"Background Color\">\n          <div class=\"ajf-style-panel\">\n            <ajf-theme-color\n              [section]=\"'section'\"\n              [label]=\"'color'\"\n            ></ajf-theme-color>\n          </div>\n        </mat-tab>\n      </mat-tab-group>\n    </div>\n    <div class=\"ajf-style-container\" *ngIf=\"(widgetStyles) ? true : false \">\n      <mat-tab-group *ngIf=\"(currentWidget.widgetType != 4)\">\n        <mat-tab label=\"Color\">\n          <div class=\"ajf-style-panel\">\n            <ajf-theme-color\n              [section]=\"'widget'\"\n              [label]=\"'color'\"\n              [init]=\"'icon'\"\n            ></ajf-theme-color>\n          </div>\n        </mat-tab>\n        <mat-tab label=\"Background Color\">\n          <div class=\"ajf-style-panel\">\n            <ajf-theme-color\n              [section]=\"'widget'\"\n              [label]=\"'background-color'\"\n            ></ajf-theme-color>\n          </div>\n        </mat-tab>\n      </mat-tab-group>\n      <div\n        class=\"properties-container\"\n        *ngIf=\"(currentWidget.widgetType !== 8)\"\n      >\n        <div class=\"ajf-layout-preview\">\n          <div class=\"ajf-vbottom\">\n            <div>{{'height'|transloco}}</div>\n            <div>{{ getHeightWidget|async }}</div>\n          </div>\n          <div class=\"ajf-margin-box\">\n            <div class=\"ajf-top-label\">{{'margin'|transloco}}</div>\n            <div class=\"ajf-vtop\">{{ getMarginWidgetTop|async }}</div>\n            <div class=\"ajf-vright\">{{ getMarginWidgetRight|async }}</div>\n            <div class=\"ajf-vbottom\">{{ getMarginWidgetBottom|async }}</div>\n            <div class=\"ajf-vleft\">{{ getMarginWidgetLeft|async }}</div>\n            <div class=\"ajf-border-box\">\n              <div class=\"ajf-vtop\">{{ getBorderWidthWidgetTop|async }}</div>\n              <div class=\"ajf-vright\">\n                {{ getBorderWidthWidgetRight|async }}\n              </div>\n              <div class=\"ajf-vbottom\">\n                {{ getBorderWidthWidgetBottom|async }}\n              </div>\n              <div class=\"ajf-vleft\">{{ getBorderWidthWidgetLeft|async }}</div>\n              <div class=\"ajf-vtl\">\n                {{ getBorderRadiusWidgetTopLeft|async }}\n              </div>\n              <div class=\"ajf-vtr\">\n                {{ getBorderRadiusWidgetTopRight|async }}\n              </div>\n              <div class=\"ajf-vbr\">\n                {{ getBorderRadiusWidgetBottomRight|async }}\n              </div>\n              <div class=\"ajf-vbl\">\n                {{ getBorderRadiusWidgetBottomLeft|async }}\n              </div>\n              <div class=\"ajf-top-label\">{{'border'|transloco}}</div>\n              <div class=\"ajf-padding-box\">\n                <div class=\"ajf-top-label\">{{'padding'|transloco}}</div>\n                <div class=\"ajf-vtop\">{{ getPaddingWidgetTop|async }}</div>\n                <div class=\"ajf-vright\">{{ getPaddingWidgetRight|async }}</div>\n                <div class=\"ajf-vbottom\">\n                  {{ getPaddingWidgetBottom|async }}\n                </div>\n                <div class=\"ajf-vleft\">{{ getPaddingWidgetLeft|async }}</div>\n                <div class=\"ajf-content-box\">{{'content'|transloco}}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <mat-grid-list rowHeight=\"2em\" cols=\"12\">\n          <mat-grid-tile></mat-grid-tile>\n          <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n            <span>{{'height'|transloco}}</span>\n          </mat-grid-tile>\n          <mat-grid-tile colspan=\"7\">\n            <mat-slider\n              (change)=\"setWidgetStyles('height', $event.value)\"\n              min=\"0\"\n              max=\"200\"\n              step=\"1\"\n              [value]=\"getHeightWidget|async\"\n              tickInterval=\"1\"\n              thumbLabel\n            >\n            </mat-slider>\n          </mat-grid-tile>\n        </mat-grid-list>\n        <mat-grid-list cols=\"12\">\n          <mat-grid-tile>\n            <mat-icon\n              *ngIf=\"!marginExpanded\"\n              (click)=\"marginExpanded = !marginExpanded\"\n              >keyboard_arrow_right</mat-icon\n            >\n            <mat-icon\n              *ngIf=\"marginExpanded\"\n              (click)=\"marginExpanded = !marginExpanded\"\n              >keyboard_arrow_down</mat-icon\n            >\n          </mat-grid-tile>\n          <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n            <span>{{'margin'|transloco}}</span>\n          </mat-grid-tile>\n          <mat-grid-tile colspan=\"7\">\n            <mat-slider\n              [disabled]=\"marginExpanded\"\n              (change)=\"setWidgetStyles('margin', $event.value)\"\n              min=\"-50\"\n              max=\"50\"\n              step=\"1\"\n              [value]=\"getMarginWidgetTop|async\"\n              tickInterval=\"auto\"\n              thumbLabel\n            >\n            </mat-slider>\n          </mat-grid-tile>\n        </mat-grid-list>\n        <ng-template [ngIf]=\"marginExpanded\">\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'margin top'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetMargin(0, $event.value)\"\n                min=\"-50\"\n                max=\"50\"\n                step=\"1\"\n                [value]=\"getMarginWidgetTop|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'margin right'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetMargin(1, $event.value)\"\n                min=\"-50\"\n                max=\"50\"\n                step=\"1\"\n                [value]=\"getMarginWidgetRight|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'margin bottom'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetMargin(2, $event.value)\"\n                min=\"-50\"\n                max=\"50\"\n                step=\"1\"\n                [value]=\"getMarginWidgetBottom|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'margin left'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetMargin(3, $event.value)\"\n                min=\"-50\"\n                max=\"50\"\n                step=\"1\"\n                [value]=\"getMarginWidgetLeft|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n        </ng-template>\n        <mat-grid-list cols=\"12\">\n          <mat-grid-tile>\n            <mat-icon\n              *ngIf=\"!paddingExpanded\"\n              (click)=\"paddingExpanded = !paddingExpanded\"\n              >keyboard_arrow_right</mat-icon\n            >\n            <mat-icon\n              *ngIf=\"paddingExpanded\"\n              (click)=\"paddingExpanded = !paddingExpanded\"\n              >keyboard_arrow_down</mat-icon\n            >\n          </mat-grid-tile>\n          <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n            <span>{{'padding'|transloco}}</span>\n          </mat-grid-tile>\n          <mat-grid-tile colspan=\"7\">\n            <mat-slider\n              (change)=\"setWidgetStyles('padding', $event.value)\"\n              min=\"-50\"\n              max=\"50\"\n              step=\"1\"\n              [value]=\"getPaddingWidgetTop|async\"\n              tickInterval=\"auto\"\n              thumbLabel\n            >\n            </mat-slider>\n          </mat-grid-tile>\n        </mat-grid-list>\n        <ng-template [ngIf]=\"paddingExpanded\">\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'padding top'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetPadding(0, $event.value)\"\n                min=\"-50\"\n                max=\"50\"\n                step=\"1\"\n                [value]=\"getPaddingWidgetTop|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'padding right'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetPadding(1, $event.value)\"\n                min=\"-50\"\n                max=\"50\"\n                step=\"1\"\n                [value]=\"getPaddingWidgetRight|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'padding bottom'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetPadding(2, $event.value)\"\n                min=\"-50\"\n                max=\"50\"\n                step=\"1\"\n                [value]=\"getPaddingWidgetBottom|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'padding left'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetPadding(3, $event.value)\"\n                min=\"-50\"\n                max=\"50\"\n                step=\"1\"\n                [value]=\"getPaddingWidgetLeft|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n        </ng-template>\n        <mat-grid-list cols=\"12\">\n          <mat-grid-tile>\n            <mat-icon\n              *ngIf=\"!borderWidthExpanded\"\n              (click)=\"borderWidthExpanded = !borderWidthExpanded\"\n              >keyboard_arrow_right</mat-icon\n            >\n            <mat-icon\n              *ngIf=\"borderWidthExpanded\"\n              (click)=\"borderWidthExpanded = !borderWidthExpanded\"\n              >keyboard_arrow_down</mat-icon\n            >\n          </mat-grid-tile>\n          <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n            <span>{{'border width'|transloco}}</span>\n          </mat-grid-tile>\n          <mat-grid-tile colspan=\"7\">\n            <mat-slider\n              (change)=\"setWidgetStyles('border-width', $event.value)\"\n              min=\"0\"\n              max=\"10\"\n              step=\"1\"\n              [value]=\"getBorderWidthWidgetTop|async\"\n              tickInterval=\"1\"\n              thumbLabel\n            >\n            </mat-slider>\n          </mat-grid-tile>\n        </mat-grid-list>\n        <ng-template [ngIf]=\"borderWidthExpanded\">\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'border width top'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetBorderWidth(0, $event.value)\"\n                min=\"1\"\n                max=\"10\"\n                step=\"1\"\n                [value]=\"getBorderWidthWidgetTop|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'border width right'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetBorderWidth(1, $event.value)\"\n                min=\"1\"\n                max=\"10\"\n                step=\"1\"\n                [value]=\"getBorderWidthWidgetRight|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'border width bottom'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetBorderWidth(2, $event.value)\"\n                min=\"1\"\n                max=\"10\"\n                step=\"1\"\n                [value]=\"getBorderWidthWidgetBottom|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'border width left'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetBorderWidth(3, $event.value)\"\n                min=\"1\"\n                max=\"10\"\n                step=\"1\"\n                [value]=\"getBorderWidthWidgetLeft|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n        </ng-template>\n        <mat-grid-list cols=\"12\">\n          <mat-grid-tile>\n            <mat-icon\n              *ngIf=\"!borderRadiusExpanded\"\n              (click)=\"borderRadiusExpanded = !borderRadiusExpanded\"\n              >keyboard_arrow_right</mat-icon\n            >\n            <mat-icon\n              *ngIf=\"borderRadiusExpanded\"\n              (click)=\"borderRadiusExpanded = !borderRadiusExpanded\"\n              >keyboard_arrow_down</mat-icon\n            >\n          </mat-grid-tile>\n          <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n            <span>{{'border radius'|transloco}}</span>\n          </mat-grid-tile>\n          <mat-grid-tile colspan=\"7\">\n            <mat-slider\n              (change)=\"setWidgetStyles('border-radius', $event.value)\"\n              min=\"0\"\n              max=\"100\"\n              step=\"1\"\n              tickInterval=\"10\"\n              thumbLabel\n            >\n            </mat-slider>\n          </mat-grid-tile>\n        </mat-grid-list>\n        <ng-template [ngIf]=\"borderRadiusExpanded\">\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'border radius top left'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetBorderRadius(0, $event.value)\"\n                min=\"1\"\n                max=\"100\"\n                step=\"1\"\n                [value]=\"getBorderRadiusWidgetTopLeft|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'border radius top right'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetBorderRadius(1, $event.value)\"\n                min=\"1\"\n                max=\"100\"\n                step=\"1\"\n                [value]=\"getBorderRadiusWidgetTopRight|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'border radius bottom left'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetBorderRadius(2, $event.value)\"\n                min=\"1\"\n                max=\"100\"\n                step=\"1\"\n                [value]=\"getBorderRadiusWidgetBottomLeft|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span\n                >{{'border radius bottom right'|transloco}}</span\n              >\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetBorderRadius(3, $event.value)\"\n                min=\"1\"\n                max=\"100\"\n                step=\"1\"\n                [value]=\"getBorderRadiusWidgetBottomRight|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n        </ng-template>\n      </div>\n      <div class=\"properties-container\" *ngIf=\"currentWidget.widgetType === 2\">\n        <mat-grid-list cols=\"12\">\n          <mat-grid-tile></mat-grid-tile>\n          <mat-grid-tile class=\"ajf-lal\" colspan=\"3\">\n            <span>{{'font size'|transloco}}</span>\n          </mat-grid-tile>\n          <mat-grid-tile colspan=\"7\">\n            <mat-slider\n              (change)=\"setWidgetStyles('font-size', $event.value);\"\n              min=\"1\"\n              max=\"150\"\n              step=\"1\"\n              [value]=\"getFontSizeWidget|async\"\n              tickInterval=\"1\"\n              thumbLabel\n            >\n            </mat-slider>\n          </mat-grid-tile>\n        </mat-grid-list>\n      </div>\n      <ng-template [ngIf]=\"currentWidget.widgetType === 5\">\n        <br />\n        <form>\n          <mat-form-field>\n            <input\n              matInput\n              [placeholder]=\"'Font size' | transloco\"\n              [value]=\"getFontSizeWidget|async\"\n              [(ngModel)]=\"fontSize\"\n              [ngModelOptions]=\"{standalone: true}\"\n              (change)=\"setWidgetStyles('font-size', fontSize)\"\n            />\n          </mat-form-field>\n          <mat-select\n            (selectionChange)=\"setWidgetStyles('font-style', $event.value)\"\n            [placeholder]=\"'Font style' | transloco\"\n          >\n            <mat-option value=\"normal\">{{'Normal'|transloco}}</mat-option>\n            <mat-option value=\"italic\">{{'Italic'|transloco}}</mat-option>\n            <mat-option value=\"oblique\">{{'Oblique'|transloco}}</mat-option>\n          </mat-select>\n          <mat-select\n            (selectionChange)=\"setWidgetStyles('text-align', $event.value)\"\n            [placeholder]=\"'Align' | transloco\"\n          >\n            <mat-option value=\"center\">{{'Center'|transloco}}</mat-option>\n            <mat-option value=\"left\">{{'Left'|transloco}}</mat-option>\n            <mat-option value=\"right\">{{'Right'|transloco}}</mat-option>\n          </mat-select>\n        </form>\n      </ng-template>\n      <h1>\n        <ng-container>{{'properties of'|transloco}}</ng-container>\n        {{ widgetName|transloco }}\n      </h1>\n    </div>\n    <div [ngSwitch]=\"currentWidget.widgetType\">\n      <ng-template [ngSwitchCase]=\"0\">\n        <h1>{{'Column'|transloco}}</h1>\n        <ng-template\n          ngFor\n          let-col\n          [ngForOf]=\"currentLayoutWidget.columns\"\n          let-idx=\"index\"\n        >\n          <mat-toolbar>\n            <mat-toolbar-row *ngIf=\"col !== -1\">\n              <mat-grid-list cols=\"12\">\n                <mat-grid-tile colspan=\"1\"> {{idx + 1}} </mat-grid-tile>\n                <mat-grid-tile colspan=\"9\">\n                  <mat-slider\n                    style=\"width: 90%\"\n                    min=\"0.1\"\n                    max=\"1\"\n                    step=\"0.01\"\n                    value=\"{{col}}\"\n                    thumb-label=\"true\"\n                    tick-interval=\"true\"\n                    (change)=\"instantColumnValue($event.value,idx)\"\n                  >\n                  </mat-slider>\n                  {{percent(col)}}%\n                </mat-grid-tile>\n                <mat-grid-tile colspan=\"2\">\n                  <button\n                    style=\"width: 5%\"\n                    mat-button\n                    (click)=\"fixedColumn(idx)\"\n                  >\n                    fixed\n                  </button>\n                </mat-grid-tile>\n              </mat-grid-list>\n            </mat-toolbar-row>\n            <mat-toolbar-row *ngIf=\"col == -1\">\n              <mat-grid-list cols=\"12\">\n                <mat-grid-tile colspan=\"1\"> {{idx + 1}} </mat-grid-tile>\n                <mat-grid-tile colspan=\"11\">\n                  <button\n                    style=\"width: 90%\"\n                    mat-button\n                    (click)=\"unfixedColumn(idx)\"\n                  >\n                    percent\n                  </button>\n                </mat-grid-tile>\n              </mat-grid-list>\n            </mat-toolbar-row>\n          </mat-toolbar>\n        </ng-template>\n        <mat-toolbar>\n          <mat-toolbar-row>\n            <button\n              mat-button\n              (click)=\"addColumn()\"\n              *ngIf=\"currentLayoutWidget.columns.length < 10\"\n            >\n              {{'Add column'|transloco}}\n            </button>\n          </mat-toolbar-row>\n        </mat-toolbar>\n      </ng-template>\n      <ng-template [ngSwitchCase]=\"2\">\n        <ajf-image-group\n          (formulaClick)=\"openFormulaDialog($event)\"\n          [data]=\"iconSet\"\n        ></ajf-image-group>\n        <ajf-image-group\n          (formulaClick)=\"openFormulaDialog($event)\"\n          [data]=\"flagSet\"\n        ></ajf-image-group>\n        <ajf-report-builder-forms-analyzer></ajf-report-builder-forms-analyzer>\n        <input\n          mat-input\n          [placeholder]=\"'paste a link' | transloco\"\n          style=\"width: 100%\"\n          [(ngModel)]=\"imageUrl\"\n        />\n        <button mat-button (click)=\"setImageUrl()\">\n          {{'Set image'|transloco}}\n        </button>\n      </ng-template>\n      <ng-template [ngSwitchCase]=\"3\">\n        <div style=\"width: 500px\">\n          <ajf-quill-editor\n            [(ngModel)]=\"currentTextWidget.htmlText\"\n            [modules]=\"getModule()\"\n            [maxLength]=\"200\"\n            [theme]=\"bubble\"\n            [initHTML]=\"(getHTML|async) || ''\"\n            (formulaClick)=\"openFormulaDialog($event)\"\n          >\n          </ajf-quill-editor>\n        </div>\n      </ng-template>\n      <ng-template [ngSwitchCase]=\"4\">\n        <h3>{{'Choose type of Chart'|transloco}}</h3>\n        <mat-button-toggle-group class=\"ajf-chart-buttons\">\n          <div class=\"ajf-row\">\n            <mat-button-toggle\n              value=\"reportbuilder-linechart\"\n              (click)=\"setChartType(0)\"\n            >\n              <mat-icon fontSet=\"ajf-icon\" fontIcon=\"reportbuilder-linechart\">\n              </mat-icon>\n            </mat-button-toggle>\n            <mat-button-toggle\n              value=\"reportbuilder-barchartvertical\"\n              (click)=\"setChartType(1)\"\n            >\n              <mat-icon\n                fontSet=\"ajf-icon\"\n                fontIcon=\"reportbuilder-barchartvertical\"\n              >\n              </mat-icon>\n            </mat-button-toggle>\n            <mat-button-toggle\n              value=\"reportbuilder-bubblechart\"\n              (click)=\"setChartType(8)\"\n            >\n              <mat-icon fontSet=\"ajf-icon\" fontIcon=\"reportbuilder-bubblechart\">\n              </mat-icon>\n            </mat-button-toggle>\n          </div>\n          <div class=\"row\">\n            <mat-button-toggle\n              value=\"reportbuilder-barcharthorizontal\"\n              (click)=\"setChartType(2)\"\n            >\n              <mat-icon\n                fontSet=\"ajf-icon\"\n                fontIcon=\"reportbuilder-barcharthorizontal\"\n              >\n              </mat-icon>\n            </mat-button-toggle>\n            <mat-button-toggle\n              value=\"reportbuilder-radarchart\"\n              (click)=\"setChartType(3)\"\n            >\n              <mat-icon fontSet=\"ajf-icon\" fontIcon=\"reportbuilder-radarchart\">\n              </mat-icon>\n            </mat-button-toggle>\n            <mat-button-toggle\n              value=\"reportbuilder-barchartvertical\"\n              (click)=\"setChartType(1)\"\n            >\n              <mat-icon\n                fontSet=\"ajf-icon\"\n                fontIcon=\"reportbuilder-barchartvertical\"\n              >\n              </mat-icon>\n            </mat-button-toggle>\n          </div>\n          <div class=\"ajf-row\">\n            <mat-button-toggle\n              value=\"reportbuilder-scatterchart\"\n              (click)=\"setChartType(4)\"\n            >\n              <mat-icon\n                fontSet=\"ajf-icon\"\n                fontIcon=\"reportbuilder-scatterchart\"\n              >\n              </mat-icon>\n            </mat-button-toggle>\n            <mat-button-toggle\n              value=\"reportbuilder-polarareachart\"\n              (click)=\"setChartType(5)\"\n            >\n              <mat-icon\n                fontSet=\"ajf-icon\"\n                fontIcon=\"reportbuilder-polarareachart\"\n              >\n              </mat-icon>\n            </mat-button-toggle>\n          </div>\n          <div class=\"ajf-row\">\n            <mat-button-toggle\n              value=\"reportbuilder-piechart\"\n              (click)=\"setChartType(6)\"\n            >\n              <mat-icon fontSet=\"ajf-icon\" fontIcon=\"reportbuilder-piechart\">\n              </mat-icon>\n            </mat-button-toggle>\n            <mat-button-toggle\n              value=\"reportbuilder-donoughtchart\"\n              (click)=\"setChartType(7)\"\n            >\n              <mat-icon\n                fontSet=\"ajf-icon\"\n                fontIcon=\"reportbuilder-donoughtchart\"\n              >\n              </mat-icon>\n            </mat-button-toggle>\n          </div>\n        </mat-button-toggle-group>\n        <h3>{{'Labels'|transloco}}</h3>\n        <ajf-report-builder-forms-analyzer></ajf-report-builder-forms-analyzer>\n        <ajf-theme-color\n          [section]=\"'chart'\"\n          [label]=\"tabValue\"\n        ></ajf-theme-color>\n        <mat-card>\n          <mat-card-header>\n            <mat-card-title>{{'Border width'|transloco}}</mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n            <mat-slider\n              min=\"1\"\n              max=\"100\"\n              style=\"width: 99%\"\n              step=\"1\"\n              (change)=\"setChartBorderColor($event.value)\"\n              [value]=\"chartBorderWidth\"\n              tickInterval=\"auto\"\n              thumbLabel\n            >\n            </mat-slider>\n          </mat-card-content>\n        </mat-card>\n        <mat-tab-group (selectChange)=\"setTab($event)\">\n          <mat-tab label=\"Background\">\n            <mat-list>\n              <ng-template\n                ngFor\n                let-color\n                [ngForOf]=\"(getChartBackgroundColor|async)\"\n                let-idx=\"index\"\n              >\n                <mat-list-item>\n                  <span [style.background]=\"color\"> {{ color }} </span>\n                  <button mat-button (click)=\"removeChartBackgroundColor(idx)\">\n                    {{'Remove'|transloco}}\n                  </button>\n                </mat-list-item>\n              </ng-template>\n            </mat-list>\n          </mat-tab>\n          <mat-tab label=\"Border\">\n            <mat-list>\n              <ng-template\n                ngFor\n                let-color\n                [ngForOf]=\"(getChartBorderColor|async)\"\n                let-idx=\"index\"\n              >\n                <mat-list-item>\n                  <span [style.background]=\"color\"> {{ color }} </span>\n                  <button mat-button (click)=\"removeChartBorderColor(idx)\">\n                    remove\n                  </button>\n                </mat-list-item>\n              </ng-template>\n            </mat-list>\n          </mat-tab>\n        </mat-tab-group>\n      </ng-template>\n      <ng-template [ngSwitchCase]=\"5\">\n        <ajf-report-builder-forms-analyzer></ajf-report-builder-forms-analyzer>\n      </ng-template>\n    </div>\n    <button\n      mat-button\n      (click)=\"visibilitySection = !visibilitySection\"\n      [ngClass]=\"{'ajf-selected': visibilitySection}\"\n    >\n      {{ widgetName|transloco }}\n      <ng-container>{{'Visibility'|transloco}}</ng-container>\n    </button>\n    <div [style.display]=\"visibilitySection ? 'block' : 'none'\">\n      <ajf-report-builder-condition-editor\n        [visibility]=\"currentWidget.visibility\"\n      ></ajf-report-builder-condition-editor>\n    </div>\n  </div>\n</ng-template>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {AjfReportBuilderService} from './report-builder-service';\n\n@Component({\n  selector: 'toolbar-dialog',\n  templateUrl: 'toolbar-dialog.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderToolbarDialog {\n  constructor(\n      private _service: AjfReportBuilderService,\n      private _dialogRef: MatDialogRef<AjfReportBuilderToolbarDialog>) {}\n\n  resetReport() {\n    let emptyReport: any = {\n      'header': {'content': [], 'styles': {}},\n      'content': {'content': [], 'styles': {}},\n      'footer': {'content': [], 'styles': {}},\n      'styles': {}\n    };\n    this._service.setReport(emptyReport);\n    this._dialogRef.close();\n  }\n\n  close() {\n    this._dialogRef.close();\n  }\n}\n","<h1 matDialogTitle>Dialog</h1>\n<div mat-dialog-content>Are you sure you want to erase the report?</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"resetReport()\">Yes</button>\n  <button mat-button (click)=\"close()\">No</button>\n</div>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {deepCopy} from '@ajf/core/utils';\nimport {CdkDrag, CdkDragDrop} from '@angular/cdk/drag-drop';\nimport {ChangeDetectionStrategy, Component, EventEmitter, ViewEncapsulation} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {Observable} from 'rxjs';\n\nimport {AjfReportBuilderDragData} from './report-builder-drag-data';\nimport {AjfReportBuilderService} from './report-builder-service';\nimport {AjfReportBuilderToolbarDialog} from './toolbar-dialog';\n\n@Component({\n  selector: 'ajf-report-builder-toolbar',\n  outputs: ['addClick'],\n  styleUrls: ['toolbar.css'],\n  templateUrl: 'toolbar.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an ajf builder toolbar\n * @implements : OnDestroy\n */\nexport class AjfReportBuilderToolbar {\n  // this is an any EventEmitter\n  addClick: EventEmitter<any> = new EventEmitter<any>();\n  dialogRef: MatDialogRef<AjfReportBuilderToolbarDialog>;\n  zoom = false;\n\n  lastJson: string;\n\n  emptyContent: Observable<boolean>;\n\n  constructor(private _service: AjfReportBuilderService, public dialog: MatDialog) {\n    this.emptyContent = this._service.emptyContent;\n  }\n\n  canDropPredicate(item: CdkDrag<AjfReportBuilderDragData>): boolean {\n    return item.data.dropZones.indexOf('widget') > -1;\n  }\n\n  JSONRequest() {}\n  /**\n   * this method will pass event to event emitter\n   */\n  onAddClick(event: any): void {\n    this.addClick.emit(event);\n  }\n\n  addToList(event: CdkDragDrop<AjfReportBuilderDragData>) {\n    if (event.item.data.widget != null) {\n      this._service.addCustomWidgets(\n          {json: JSON.stringify(event.item.data.widget.toJson()), type: ''});\n    }\n  }\n\n  undoLastOperation() {\n    try {\n      let myObj = JSON.parse(this._service.popJsonStack() || '');\n      this._service.setReport(deepCopy(myObj));\n    } catch (e) {\n    }\n  }\n\n  isZoomed() {\n    this.zoom = !this.zoom;\n    if (this.zoom) {\n      this._service.fixedZoomIn();\n    } else {\n      this._service.fixedZoomOut();\n    }\n  }\n\n  openDialog() {\n    this.dialogRef = this.dialog.open(AjfReportBuilderToolbarDialog);\n  }\n}\n","<mat-toolbar>\n  <button\n    mat-button\n    (click)=\"onAddClick($event)\"\n    matTooltip=\"open widget sidebar\"\n    [matTooltipPosition]=\"'above'\">\n    Open\n  </button>\n  <button\n    mat-button\n    (click)=\"openDialog()\"\n    matTooltip=\"reset the current report\"\n    [matTooltipPosition]=\"'above'\">reset\n  </button>\n  <button\n    mat-button\n    (click)=\"undoLastOperation()\"\n    matTooltip=\"undo the last operation\"\n    [disabled]=\"emptyContent|async\"\n    [matTooltipPosition]=\"'above'\">Undo</button>\n\n  <button mat-button\n    class=\"ajf-custom-widget-drop-zone\"\n    cdkDropList\n    [cdkDropListEnterPredicate]=\"canDropPredicate\"\n    (cdkDropListDropped)=\"addToList($event);\"\n    matTooltip=\"add custom widget on toolbar\"\n    [matTooltipPosition]=\"'above'\">\n    add custom widget here\n    <i class=\"material-icons\">add_circle_outline</i>\n  </button>\n  <section class=\"example-section\">\n    <mat-slide-toggle\n        [checked]=\"zoom\"\n        (change)=isZoomed()\n        matTooltip=\"apply zoom out\"\n        [matTooltipPosition]=\"'above'\">\n      zoom out\n    </mat-slide-toggle>\n  </section>\n</mat-toolbar>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation} from '@angular/core';\n\nimport {ajfReportBuilderWidgetToString} from './utils';\n\n@Component({\n  selector: 'ajf-report-builder-widget-toolbar-button',\n  templateUrl: 'widget-toolbar-button.html',\n  styleUrls: ['widget-toolbar-button.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an ajf builder field toolbar button\n * @implements : OnInit\n */\nexport class AjfReportBuilderWidgetToolbarButton implements OnInit {\n  @Input() widgetType: string;\n  widgetIcon: string;\n\n  constructor() {}\n  ngOnInit(): void {\n    this.widgetIcon = ajfReportBuilderWidgetToString(this.widgetType);\n  }\n}\n","<button\n  mat-button\n  matTooltip=\"{{ widgetType}}\"\n  [matTooltipPosition]=\"'above'\">\n  <mat-icon\n    fontSet=\"ajf-icon\"\n    fontIcon=\"{{ widgetIcon }}\">\n  </mat-icon>\n</button>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChartType, AjfWidgetType} from '@ajf/core/reports';\nimport {sizedEnumToStringArray} from '@ajf/core/utils';\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\nimport {timer} from 'rxjs';\n\nimport {AjfReportBuilderService} from './report-builder-service';\n\n\n@Component({\n  selector: 'ajf-report-builder-widgets-toolbar',\n  templateUrl: 'widgets-toolbar.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an Ajf builder fields toolbar\n */\nexport class AjfReportBuilderWidgetsToolbar {\n  // fieldTypes is an array string that contains the field options\n  chartTypes: string[] = sizedEnumToStringArray(AjfChartType);\n  widgetTypes: string[] = sizedEnumToStringArray(AjfWidgetType);\n\n\n  /**\n   *\n   * @param private _afjBuilderService: AjfBuilderService\n   */\n  constructor(private _service: AjfReportBuilderService) {\n    // delete Column widget\n    let pos = this.widgetTypes.indexOf('Column');\n    if (pos !== -1) {\n      this.widgetTypes.splice(pos, 1);\n    }\n  }\n  /**\n   *  sign the start of mouse drag with 200 ms of delay\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragStartHandler(): void {\n    let s = timer(200).subscribe(() => {\n      if (s != null) {\n        s.unsubscribe();\n      }\n      this._service.dragStarted();\n    });\n  }\n\n  /**\n   * sign the end of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEndHandler(): void {\n    this._service.dragEnded();\n  }\n}\n","<mat-list>\n  <mat-list-item *ngFor=\"let t of widgetTypes\">\n    <ajf-report-builder-widget-toolbar-button ng-if=\"t != 'Column'\"\n        cdkDrag\n        [cdkDragData]=\"{widgetType: t, dropZones: ['header','content','footer','column','widget']}\"\n        [widgetType]=\"t\"\n        (onDragStart)=\"onDragStartHandler();\"\n        (onDragEnd)=\"onDragEndHandler();\">\n    </ajf-report-builder-widget-toolbar-button>\n  </mat-list-item>\n</mat-list>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfReport} from '@ajf/core/reports';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {MatSidenav} from '@angular/material/sidenav';\n\nimport {AjfReportBuilderService} from './report-builder-service';\n\n@Component({\n  selector: 'ajf-report-builder',\n  templateUrl: 'report-builder.html',\n  styleUrls: ['report-builder.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an ajf form builderx\n */\nexport class AjfReportBuilder implements AfterContentInit {\n  @ViewChild(MatSidenav, {static: true}) startSidenav: MatSidenav;\n\n  private _init: boolean = false;\n\n  private _report: AjfReport;\n  get report(): AjfReport {\n    return this._report;\n  }\n  @Input()\n  set report(report: AjfReport) {\n    if (report != null) {\n      this._report = report;\n      if (this._init) {\n        this._setCurrentReport();\n      }\n    }\n  }\n\n  constructor(private _service: AjfReportBuilderService) {}\n\n  ngAfterContentInit(): void {\n    this._setCurrentReport();\n    this._init = true;\n  }\n\n  private _setCurrentReport(): void {\n    this._service.setReportForms(this.report != null ? this.report.forms || [] : []);\n    this._service.setReport(this.report);\n  }\n}\n","<ajf-report-builder-toolbar (addClick)=\"start.toggle()\"></ajf-report-builder-toolbar>\n<ajf-report-builder-custom-widgets-toolbar (addClick)=\"start.toggle()\"></ajf-report-builder-custom-widgets-toolbar>\n<mat-drawer-container>\n    <mat-drawer #start position=\"start\" mode=\"side\" class=\"ajf-builder-sidebar\">\n        <ajf-report-builder-widgets-toolbar></ajf-report-builder-widgets-toolbar>\n    </mat-drawer>\n    <ajf-report-builder-content></ajf-report-builder-content>\n    <mat-drawer #end position=\"end\" mode=\"side\" class=\"ajf-builder-prop\" [opened]=\"true\">\n      <ajf-report-builder-properties></ajf-report-builder-properties>\n    </mat-drawer>\n</mat-drawer-container>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCommonModule} from '@ajf/core/common';\nimport {AjfMapModule} from '@ajf/core/map';\nimport {AjfTableModule} from '@ajf/core/table';\nimport {AjfTextModule} from '@ajf/core/text';\nimport {AjfTranslocoModule} from '@ajf/core/transloco';\nimport {AjfImageModule} from '@ajf/material/image';\nimport {AjfMonacoEditorModule} from '@ajf/material/monaco-editor';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {ColorPickerModule} from '@gnucoop/ngx-color-picker';\n\nimport {AjfReportBuilderColumn} from './column';\nimport {AjfReportBuilderConditionEditor} from './condition-editor';\nimport {AjfReportBuilderContent} from './content';\nimport {AjfReportBuilderCustomWidgetDialog} from './custom-widget-dialog';\nimport {AjfReportBuilderCustomWidgetToolbarButton} from './custom-widget-toolbar-button';\nimport {AjfReportBuilderCustomWidgetsToolbar} from './custom-widgets-toolbar';\nimport {AjfReportBuilderFormsAnalyzer} from './forms-analyzer';\nimport {AjfReportBuilderFormsAnalyzerDialog} from './forms-analyzer-dialog';\nimport {AjfImageFilterPipe} from './image-filter';\nimport {AjfReportBuilderImageGroup} from './image-group';\nimport {AjfReportBuilderProperties} from './properties';\nimport {AjfQuillEditor} from './quill-editor';\nimport {AjfReportBuilderRendererWidget} from './renderer-widget';\nimport {AjfReportBuilder} from './report-builder';\nimport {AjfReportBuilderService} from './report-builder-service';\nimport {AjfReportBuilderThemeColor} from './theme-color';\nimport {AjfReportBuilderThemeColorDialog} from './theme-color-dialog';\nimport {AjfReportBuilderToolbar} from './toolbar';\nimport {AjfReportBuilderToolbarDialog} from './toolbar-dialog';\nimport {AjfReportBuilderWidgetToolbarButton} from './widget-toolbar-button';\nimport {AjfReportBuilderWidgetsRowButtons} from './widgets-row-buttons';\nimport {AjfReportBuilderWidgetsToolbar} from './widgets-toolbar';\n\n@NgModule({\n  imports: [\n    AjfCommonModule,    AjfImageModule,  AjfMapModule,      AjfMonacoEditorModule,\n    AjfTableModule,     AjfTextModule,   ColorPickerModule, CommonModule,\n    DragDropModule,     FormsModule,     MatButtonModule,   MatButtonToggleModule,\n    MatCardModule,      MatDialogModule, MatGridListModule, MatIconModule,\n    MatListModule,      MatSelectModule, MatSidenavModule,  MatSlideToggleModule,\n    MatSliderModule,    MatTabsModule,   MatToolbarModule,  MatTooltipModule,\n    AjfTranslocoModule,\n  ],\n  declarations: [\n    AjfImageFilterPipe,\n    AjfQuillEditor,\n    AjfReportBuilderColumn,\n    AjfReportBuilderConditionEditor,\n    AjfReportBuilderContent,\n    AjfReportBuilderCustomWidgetDialog,\n    AjfReportBuilderCustomWidgetsToolbar,\n    AjfReportBuilderCustomWidgetToolbarButton,\n    AjfReportBuilderFormsAnalyzer,\n    AjfReportBuilderFormsAnalyzerDialog,\n    AjfReportBuilderImageGroup,\n    AjfReportBuilderProperties,\n    AjfReportBuilderRendererWidget,\n    AjfReportBuilderThemeColor,\n    AjfReportBuilderThemeColorDialog,\n    AjfReportBuilderToolbar,\n    AjfReportBuilderToolbarDialog,\n    AjfReportBuilderWidgetsRowButtons,\n    AjfReportBuilderWidgetsToolbar,\n    AjfReportBuilderWidgetToolbarButton,\n    AjfReportBuilder,\n  ],\n  exports: [\n    AjfReportBuilder,\n  ],\n  providers: [\n    AjfReportBuilderService,\n  ],\n})\nexport class AjfReportBuilderModule {\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport {AjfReportsConfig} from './models';\nexport * from './report-builder-module';\nexport * from './report-builder-service';\nexport * from './report-builder';\nexport * from './tokens';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}