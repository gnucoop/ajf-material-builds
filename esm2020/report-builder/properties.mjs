import { AjfAggregationType, AjfWidgetType, } from '@ajf/core/reports';
import { deepCopy } from '@ajf/core/utils';
import { ChangeDetectionStrategy, Component, EventEmitter, ViewEncapsulation, } from '@angular/core';
import { MatDialog } from '@angular/material/dialog';
import { Subscription } from 'rxjs';
import { distinctUntilChanged, filter, map, startWith, withLatestFrom } from 'rxjs/operators';
import { AjfReportBuilderFormsAnalyzerDialog } from './forms-analyzer-dialog';
import { AjfReportBuilderService } from './report-builder-service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/dialog";
import * as i2 from "./report-builder-service";
import * as i3 from "@angular/material/button";
import * as i4 from "@angular/material/icon";
import * as i5 from "@angular/material/button-toggle";
import * as i6 from "@angular/material/tabs";
import * as i7 from "./theme-color";
import * as i8 from "@angular/material/grid-list";
import * as i9 from "@angular/material/slider";
import * as i10 from "@angular/material/form-field";
import * as i11 from "@angular/material/select";
import * as i12 from "@angular/material/core";
import * as i13 from "@angular/material/toolbar";
import * as i14 from "./image-group";
import * as i15 from "./forms-analyzer";
import * as i16 from "./quill-editor";
import * as i17 from "@angular/material/card";
import * as i18 from "@angular/material/list";
import * as i19 from "./condition-editor";
import * as i20 from "@angular/common";
import * as i21 from "@angular/material/tooltip";
import * as i22 from "@angular/forms";
import * as i23 from "@ngneat/transloco";
export class AjfReportBuilderProperties {
    constructor(_dialog, _service) {
        this._dialog = _dialog;
        this._service = _service;
        /**
         *  true when the first time chart type is setted
         *
         * @memberOf AjfReportBuilderProperties
         */
        this.initChartType = false;
        /**
         * the current widget
         *
         * @memberOf AjfReportBuilderProperties
         */
        this.currentWidget = null;
        /**
         * this array contains the forms exploited for generate data labels
         *
         * @memberOf AjfReportBuilderProperties
         */
        this.forms = [];
        this.colors = [];
        /**
         * FAKE DATA
         */
        this.formsJson = { forms: [] };
        /**
         * WIDGET
         */
        this.widgetName = '';
        this.marginExpanded = false;
        this.paddingExpanded = false;
        this.borderWidthExpanded = false;
        this.borderRadiusExpanded = false;
        this.backgroundColor = '#127bdc';
        this.styleBackgroundColor = 'rgb(255,255,255,0)';
        this.borderColor = '#127bdc';
        this.styleColor = 'rgb(0,0,0,0)';
        this.align = [false, 'center', 'right', 'justify'];
        this.fonts = [
            false,
            'blackr',
            'black-italic',
            'bold',
            'bold-condensed',
            'bold-condensed-italic',
            'bold-italic',
            'condensed',
            'condensed-italic',
            'italic',
            'light',
            'light-italic',
            'medium',
            'medium-italic',
            'thinr',
            'thin-italic',
        ];
        this.currentModule = {};
        this.quillModules = {
            toolbar: [
                ['formula'],
                ['bold', 'italic', 'underline', 'strike'],
                // ['blockquote', 'code-block'],
                [{ 'header': 1 }, { 'header': 2 }],
                [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                [{ 'script': 'sub' }, { 'script': 'super' }],
                // [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent
                // [{ 'direction': 'rtl' }],                         // text direction
                [{ 'size': ['small', false, 'large', 'huge'] }],
                [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                [{ 'color': this.colors }, { 'background': this.colors }],
                [{ 'font': this.fonts }],
                [{ 'align': this.align }],
                ['clean'], // remove formatting button
                // ['link', 'class', 'video']                         // link and image, video
            ],
        };
        this.chartBorderColor = [];
        this.chartBorderWidth = 3;
        /**
         *
         * IMAGE
         */
        this.imageUrl = 'https://angular.io/resources/images/logos/angular2/angular.png';
        /**
         *
         * TEXT
         */
        this.htmlText = '';
        /**
         * these variables indicate that the user want to change section
         */
        this.reportStyles = false;
        this.sectionStyles = false;
        this.widgetStyles = true;
        this.sectionColor = false;
        this.widgetColor = false;
        this.visibilitySection = false;
        this.currentColor = '';
        this._icon = null;
        this.iconSet = { 'icon': 'true', 'title': 'report', 'data': null };
        this.flagSet = {
            'icon': 'false',
            'class': ['flag-icon'],
            'prefixClass': 'flag-icon-',
            'title': 'flags',
            'data': [
                { 'class': 'dz', 'info': 'Algeria' },
                { 'class': 'ao', 'info': 'Angola' },
                { 'class': 'bj', 'info': 'Benin' },
                { 'class': 'bw', 'info': 'Botswana' },
                { 'class': 'bf', 'info': 'Burkina Faso' },
                { 'class': 'bi', 'info': 'Burundi' },
                { 'class': 'cm', 'info': 'Cameroon' },
                { 'class': 'cv', 'info': 'Cabo Verde' },
                { 'class': 'cf', 'info': 'The Central African Republic' },
                { 'class': 'td', 'info': 'Chad' },
                { 'class': 'km', 'info': 'The Comoros' },
                { 'class': 'ci', 'info': "Cote D'avoire" },
                { 'class': 'cd', 'info': 'The Democratic Republic of Congo' },
                { 'class': 'dj', 'info': 'Dijibouti' },
                { 'class': 'eg', 'info': 'Egypt' },
                { 'class': 'gq', 'info': 'Equatorial Guinea' },
                { 'class': 'er', 'info': 'Eritrea' },
                { 'class': 'et', 'info': 'Ethiopia' },
                { 'class': 'tf', 'info': 'French Southern Territories' },
                { 'class': 'ga', 'info': 'Gabon' },
                { 'class': 'gm', 'info': 'The Gambia' },
                { 'class': 'gh', 'info': 'Ghana' },
                { 'class': 'gn', 'info': 'Guinea' },
                { 'class': 'gw', 'info': 'Guinea-Bissau' },
                { 'class': 'ke', 'info': 'Kenya' },
                { 'class': 'ls', 'info': 'Leshotho' },
                { 'class': 'lr', 'info': 'Liberia' },
                { 'class': 'ly', 'info': 'Libya' },
                { 'class': 'mg', 'info': 'Madagascar' },
                { 'class': 'mw', 'info': 'Malawy' },
                { 'class': 'ml', 'info': 'Mali' },
                { 'class': 'mr', 'info': 'Mauritania' },
                { 'class': 'mu', 'info': 'Mauritius' },
                { 'class': 'yt', 'info': 'Mayotte' },
                { 'class': 'ma', 'info': 'Marocco' },
                { 'class': 'mz', 'info': 'Mozambique' },
                { 'class': 'na', 'info': 'Namibia' },
                { 'class': 'ne', 'info': 'Niger' },
                { 'class': 'ng', 'info': 'Nigeria' },
                { 'class': 'cg', 'info': 'Republic of the Congo' },
                { 'class': 'rw', 'info': 'Rwnda' },
                { 'class': 're', 'info': 'r√®union' },
                { 'class': 'sh', 'info': 'Saint Helena, Ascension and Tristan da Cunha' },
                { 'class': 'st', 'info': 'Sao Tome and Principe' },
                { 'class': 'sn', 'info': 'Senegal' },
                { 'class': 'sc', 'info': 'Seychelles' },
                { 'class': 'sl', 'info': 'Sierra Leone' },
                { 'class': 'so', 'info': 'Somalia' },
                { 'class': 'za', 'info': 'South Africa' },
                { 'class': 'ss', 'info': 'South Sudan' },
                { 'class': 'sd', 'info': 'Sudan' },
                { 'class': 'sz', 'info': 'Swaziland' },
                { 'class': 'tz', 'info': 'Tanzania' },
                { 'class': 'tg', 'info': 'Togo' },
                { 'class': 'tn', 'info': 'Tunisia' },
                { 'class': 'ug', 'info': 'Uganda' },
                { 'class': 'eh', 'info': 'Western Sahara' },
                { 'class': 'zm', 'info': 'Zambia' },
                { 'class': 'zw', 'info': 'Zimbawe' },
                { 'class': 'iq', 'info': 'Iraq' },
                { 'class': 'lb', 'info': 'Lebanon' },
                { 'class': 'bd', 'info': 'Bangladesh' },
                { 'class': 'ir', 'info': 'Iran (Islamic Republic of)' },
                { 'class': 'my', 'info': 'Malaysia' },
                { 'class': 'np', 'info': 'Nepal' },
                { 'class': 'pk', 'info': 'Pakistan' },
                { 'class': 'th', 'info': 'Thailand' },
                { 'class': 'jo', 'info': 'Jordan' },
                { 'class': 'ye', 'info': 'Yemen' },
            ],
        };
        this._currentWidgetSub = Subscription.EMPTY;
        this._formsSub = Subscription.EMPTY;
        this._colorSub = Subscription.EMPTY;
        this._headerStyleSub = Subscription.EMPTY;
        this._contentStylesSub = Subscription.EMPTY;
        this._footerStylesSub = Subscription.EMPTY;
        this._originSub = Subscription.EMPTY;
        this._stylesUpdatesSubs = Subscription.EMPTY;
        this._updateWidgetMarginEvt = new EventEmitter();
        this._updateWidgetPaddingEvt = new EventEmitter();
        this._updateWidgetBorderWidthEvt = new EventEmitter();
        this._updateWidgetBorderRadiusEvt = new EventEmitter();
        this.tabValue = 'backgroundColor';
        this.setForms();
        this.iconSet.data = Object.keys(_service.iconSets)
            .filter(x => x != 'ajf-icon')
            .map(i => {
            return { name: i, icons: _service.iconSets[i] };
        });
        this._headerStyleSub = this._service.headerStyles.subscribe(s => {
            if (s['background-color'] != null) {
                this.styleBackgroundColor = s['background-color'];
            }
        });
        this._contentStylesSub = this._service.contentStyles.subscribe(s => {
            if (s['background-color'] != null) {
                this.styleBackgroundColor = s['background-color'];
            }
        });
        this._footerStylesSub = this._service.footerStyles.subscribe(s => {
            if (s['background-color'] != null) {
                this.styleBackgroundColor = s['background-color'];
            }
        });
        this._originSub = this._service.origin.subscribe(s => {
            this.origin = s;
        });
    }
    get currentLayoutWidget() {
        return this.currentWidget;
    }
    get currentTextWidget() {
        return this.currentWidget;
    }
    get icon() {
        return this._icon;
    }
    /**
     *
     * UTILS
     */
    /**
     * return a number value
     *
     * @param value
     *
     * @memberOf AjfReportBuilderProperties
     */
    toNumber(value) {
        let numberPattern = /^(-)?\d+/g;
        if (value == null) {
            return 0;
        }
        else {
            const matches = value.match(numberPattern);
            if (matches == null || matches.length == 0) {
                return 0;
            }
            return Number(matches[0]);
        }
    }
    toNumberArray(value) {
        if (value == null) {
            return [];
        }
        else {
            return (value || '')
                .replace('px', '')
                .split(' ')
                .filter(v => v !== '' && v != null)
                .map(v => this.toNumber(v));
        }
    }
    fillPxNumberArray(value) {
        const vl = value.length;
        switch (vl) {
            case 0:
                return [0, 0, 0, 0];
            case 1:
                const v = value[0];
                return [v, v, v, v];
            case 2:
                const v21 = value[0];
                const v22 = value[1];
                return [v21, v22, v21, v22];
            case 3:
                const v31 = value[0];
                const v32 = value[1];
                const v33 = value[2];
                return [v31, v32, v33, v32];
            default:
                return value;
        }
    }
    percent(value) {
        let temp = this.roundTo(value * 100, 3);
        return temp;
    }
    roundTo(value, decimalPositions) {
        let i = value * Math.pow(10, decimalPositions);
        i = Math.floor(i);
        return i / Math.pow(10, decimalPositions);
    }
    /**
     * call to service to set the forms
     *
     * @memberOf AjfReportBuilderProperties
     */
    setForms() {
        let forms = [];
        try {
            for (let i = 0; i < this.formsJson.forms.length; i++) {
                forms.push(deepCopy(this.formsJson.forms[i]));
            }
            this._service.setReportForms(forms);
        }
        catch (e) { }
    }
    /**
     * call to service to set the width of the idx column of layout widget
     *
     * @param col
     * @param idx
     *
     * @memberOf AjfReportBuilderProperties
     */
    instantColumnValue(col, idx) {
        if (col === null) {
            return;
        }
        this._service.instantColumnValue(col, idx);
    }
    /**
     *  force copy of style
     *
     * @memberOf AjfReportBuilderProperties
     */
    // TODO delete this
    setStyle() {
        if (this.currentWidget == null) {
            return;
        }
        this.currentWidget.styles = deepCopy(this.currentWidget.styles);
        this._service.updateCurrentWidget(this.currentWidget);
    }
    /**
     * call to service to add new style to widget
     *
     * @param label
     * @param value
     *
     * @memberOf AjfReportBuilderProperties
     */
    setWidgetStyles(label, value) {
        this._service.setWidgetStyles(label, value);
        this.currentColor = value;
        this.setStyle();
    }
    setWidgetMargin(idx, value) {
        this._updateWidgetMarginEvt.emit({ idx, value });
    }
    setWidgetPadding(idx, value) {
        this._updateWidgetPaddingEvt.emit({ idx, value });
    }
    setWidgetBorderWidth(idx, value) {
        this._updateWidgetBorderWidthEvt.emit({ idx, value });
    }
    setWidgetBorderRadius(idx, value) {
        this._updateWidgetBorderRadiusEvt.emit({ idx, value });
    }
    /**
     * call to service to add new style to section
     *
     * @param label
     * @param value
     *
     * @memberOf AjfReportBuilderProperties
     */
    setSectionStyles(label, value) {
        this._service.setSectionStyles(this.origin, label, value);
        this.styleColor = value;
    }
    /**
     * call to service to add new style to report
     *
     * @param label
     * @param value
     *
     * @memberOf AjfReportBuilderProperties
     */
    setReportStyles(label, value) {
        this._service.setReportStyles(label, value);
        this.styleBackgroundColor = value;
    }
    /**
     * add custom color
     *
     *
     * @memberOf AjfReportBuilderProperties
     */
    addCustomColor() {
        this._service.addCustomColor(this.currentColor);
        this._service.updateCurrentWidget(this.currentWidget);
    }
    /**
     * get the module exploit to quill text editor
     *
     * @returns
     *
     * @memberOf AjfReportBuilderProperties
     */
    getModule() {
        return this.quillModules;
    }
    /**
     * true is the input type value is equal to current widget type
     *
     * @param value
     * @returns
     *
     * @memberOf AjfReportBuilderProperties
     */
    isChartTypeSelected(value) {
        if (this.initChartType == false) {
            return false;
        }
        const myObj = this.currentWidget;
        if (value === myObj.chartType) {
            return true;
        }
        else {
            return false;
        }
    }
    /* layout functions */
    /**
     * call to service to add a column to current layout widget
     *
     *
     * @memberOf AjfReportBuilderProperties
     */
    addColumn() {
        this._service.addColumn();
    }
    /**
     * call to service to add a obj to current layout widget
     *
     * @param idx
     *
     * @memberOf AjfReportBuilderProperties
     */
    fixedColumn(idx) {
        this._service.fixedColumn(idx);
    }
    /**
     * call to service to remove obj of current layout widget
     *
     * @param idx
     *
     * @memberOf AjfReportBuilderProperties
     */
    unfixedColumn(idx) {
        this._service.remove('unfixedColumn', idx);
    }
    /* image functions */
    /**
     * call to service to set image url
     *
     *
     * @memberOf AjfReportBuilderProperties
     */
    setImageUrl() {
        this._service.setImageUrl(this.imageUrl);
    }
    setIcon(icon) {
        this._icon = icon;
        this._service.setIcon(icon);
    }
    /* chart functions */
    /**
     * call to service to set the type of chart
     *
     * @param type
     *
     * @memberOf AjfReportBuilderProperties
     */
    setChartType(type) {
        this.initChartType = true;
        this._service.setChartType(type);
    }
    setChartBorderColor(value) {
        if (value == null) {
            return;
        }
        this._service.setChartBorderWidth(value);
    }
    setTab(event) {
        if (event.index === 0) {
            this.tabValue = 'backgroundColor';
        }
        else {
            this.tabValue = 'borderColor';
        }
    }
    /**
     * call to service to remove background color to current chart
     *
     * @param index
     *
     * @memberOf AjfReportBuilderProperties
     */
    removeChartBackgroundColor(index) {
        this._service.removeChartBackgroundColor(index);
    }
    /**
     * call to service to remove border color to current chart
     *
     * @param index
     *
     * @memberOf AjfReportBuilderProperties
     */
    removeChartBorderColor(index) {
        this._service.removeChartBorderColor(index);
    }
    hideMenu() {
        this._service.updateCurrentWidget(null);
    }
    openFormulaDialog(event) {
        this.dialogRef = this._dialog.open(AjfReportBuilderFormsAnalyzerDialog);
        this.dialogRef.componentInstance.aggregation = AjfAggregationType.None;
        this.dialogRef.componentInstance.isFormula = true;
        if (event != null && event.reference != null) {
            this.dialogRef.componentInstance.formula = event.formula;
            this.dialogRef.componentInstance.reference = event.reference;
        }
    }
    ngOnInit() {
        this._formsSub = this._service.reportForms.subscribe(x => {
            this.forms = x || [];
        });
        this._currentWidgetSub = this._service.currentWidget.subscribe(x => {
            if (x != null) {
                if (this.currentWidget !== x) {
                    this.currentWidget = x;
                    this.widgetName = AjfWidgetType[x.widgetType];
                    this.reportStyles = false;
                    this.sectionStyles = false;
                    this.widgetStyles = false;
                    this.sectionColor = false;
                    this.widgetColor = false;
                    this.visibilitySection = false;
                }
            }
            else {
                this.currentWidget = null;
                this.widgetName = '';
            }
        });
        this._colorSub = this._service.colors.subscribe(x => {
            if (x && x.length > 0) {
                this.colors = x;
                this.quillModules = {
                    toolbar: [
                        ['bold', 'italic', 'underline', 'strike'],
                        // ['blockquote', 'code-block'],
                        [{ 'header': 1 }, { 'header': 2 }],
                        [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                        [{ 'script': 'sub' }, { 'script': 'super' }],
                        // [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent
                        // [{ 'direction': 'rtl' }],                         // text direction
                        [{ 'size': ['small', false, 'large', 'huge'] }],
                        [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                        [{ 'color': this.colors }, { 'background': this.colors }],
                        [{ 'font': this.fonts }],
                        [{ 'align': this.align }],
                        ['formula'],
                        ['clean'], // remove formatting button
                        // ['link', 'class', 'video']                         // link and image, video
                    ],
                };
            }
        });
        this.getHTML = this._service.currentWidget.pipe(map((widget) => {
            if (widget != null) {
                const myObj = this.currentWidget;
                return myObj.htmlText;
            }
            return '';
        }), distinctUntilChanged(), startWith('<p><br></p>'));
        this.getHeightWidget = this._service.currentWidget.pipe(filter(x => x != null), map((myObj) => {
            if (myObj != null) {
                let value = this.toNumber(myObj.styles['height']);
                if (value != null || value != null) {
                    return value;
                }
            }
            return undefined;
        }), distinctUntilChanged());
        this.getFontSizeWidget = this._service.currentWidget.pipe(map((myObj) => {
            if (myObj != null) {
                return this.toNumber(myObj.styles['font-size']) || 12;
            }
            return undefined;
        }), distinctUntilChanged());
        this.getFontAlignWidget = this._service.currentWidget.pipe(map((myObj) => {
            if (myObj != null) {
                return myObj.styles['text-align'] || 'center';
            }
            return undefined;
        }), distinctUntilChanged());
        this.getBorderWidthWidget = this._service.currentWidget.pipe(map((myObj) => {
            if (myObj != null) {
                return this.fillPxNumberArray(this.toNumberArray(myObj.styles['border-width']));
            }
            return undefined;
        }), distinctUntilChanged(), startWith([0, 0, 0, 0]));
        this.getBorderWidthWidgetTop = this.getBorderWidthWidget.pipe(filter(m => m != null), map(m => m[0]));
        this.getBorderWidthWidgetRight = this.getBorderWidthWidget.pipe(filter(m => m != null), map(m => m[1]));
        this.getBorderWidthWidgetBottom = this.getBorderWidthWidget.pipe(filter(m => m != null), map(m => m[2]));
        this.getBorderWidthWidgetLeft = this.getBorderWidthWidget.pipe(filter(m => m != null), map(m => m[3]));
        this.getBorderRadiusWidget = this._service.currentWidget.pipe(map((myObj) => {
            if (myObj != null) {
                return this.fillPxNumberArray(this.toNumberArray(myObj.styles['border-radius']));
            }
            return undefined;
        }), distinctUntilChanged(), startWith([0, 0, 0, 0]));
        this.getBorderRadiusWidgetTopLeft = this.getBorderRadiusWidget.pipe(filter(m => m != null), map(m => m[0]));
        this.getBorderRadiusWidgetTopRight = this.getBorderRadiusWidget.pipe(filter(m => m != null), map(m => m[1]));
        this.getBorderRadiusWidgetBottomRight = this.getBorderRadiusWidget.pipe(filter(m => m != null), map(m => m[2]));
        this.getBorderRadiusWidgetBottomLeft = this.getBorderRadiusWidget.pipe(filter(m => m != null), map(m => m[3]));
        this.getMarginWidget = this._service.currentWidget.pipe(map((myObj) => {
            if (myObj != null && myObj.styles != null && myObj.styles['margin'] != null) {
                return this.fillPxNumberArray(this.toNumberArray(myObj.styles['margin']));
            }
            return undefined;
        }), distinctUntilChanged(), startWith([0, 0, 0, 0]));
        this.getMarginWidgetTop = this.getMarginWidget.pipe(filter(m => m != null), map(m => m[0]));
        this.getMarginWidgetRight = this.getMarginWidget.pipe(filter(m => m != null), map(m => m[1]));
        this.getMarginWidgetBottom = this.getMarginWidget.pipe(filter(m => m != null), map(m => m[2]));
        this.getMarginWidgetLeft = this.getMarginWidget.pipe(filter(m => m != null), map(m => m[3]));
        this.getPaddingWidget = this._service.currentWidget.pipe(map((myObj) => {
            if (myObj != null && myObj.styles != null && myObj.styles['padding'] != null) {
                return this.fillPxNumberArray(this.toNumberArray(myObj.styles['padding']));
            }
            return undefined;
        }), distinctUntilChanged());
        this.getPaddingWidgetTop = this.getPaddingWidget.pipe(filter(m => m != null), map(m => m[0]));
        this.getPaddingWidgetRight = this.getPaddingWidget.pipe(filter(m => m != null), map(m => m[1]));
        this.getPaddingWidgetBottom = this.getPaddingWidget.pipe(filter(m => m != null), map(m => m[2]));
        this.getPaddingWidgetLeft = this.getPaddingWidget.pipe(filter(m => m != null), map(m => m[3]));
        this.getBackgroundColorWidget = this._service.currentWidget.pipe(map((myObj) => {
            if (myObj != null && myObj.styles != null) {
                return myObj.styles['backgroundColor'] || '';
            }
        }), distinctUntilChanged());
        this.getColorWidget = this._service.currentWidget.pipe(map((myObj) => {
            if (myObj != null && myObj.styles != null) {
                return myObj.styles['color'] || '';
            }
        }), distinctUntilChanged());
        this._stylesUpdatesSubs = this._updateWidgetMarginEvt
            .pipe(withLatestFrom(this.getMarginWidget))
            .subscribe(r => {
            if (r == null) {
                return;
            }
            const idx = r[0].idx;
            const value = r[0].value;
            const v = (r[1] || [0, 0, 0, 0]);
            if (v == null || v.length < idx) {
                return;
            }
            v[idx] = value;
            this.setWidgetStyles('margin', v);
        });
        this._stylesUpdatesSubs.add(this._updateWidgetPaddingEvt.pipe(withLatestFrom(this.getPaddingWidget)).subscribe(r => {
            if (r == null) {
                return;
            }
            const idx = r[0].idx;
            const value = r[0].value;
            const v = (r[1] || [0, 0, 0, 0]);
            if (v == null || v.length < idx) {
                return;
            }
            v[idx] = value;
            this.setWidgetStyles('padding', v);
        }));
        this._stylesUpdatesSubs.add(this._updateWidgetBorderWidthEvt
            .pipe(withLatestFrom(this.getBorderWidthWidget))
            .subscribe(r => {
            if (r == null) {
                return;
            }
            const idx = r[0].idx;
            const value = r[0].value;
            const v = (r[1] || [0, 0, 0, 0]);
            if (v == null || v.length < idx) {
                return;
            }
            v[idx] = value;
            this.setWidgetStyles('border-width', v);
        }));
        this._stylesUpdatesSubs.add(this._updateWidgetBorderRadiusEvt
            .pipe(withLatestFrom(this.getBorderRadiusWidget))
            .subscribe(r => {
            if (r == null) {
                return;
            }
            const idx = r[0].idx;
            const value = r[0].value;
            const v = (r[1] || [0, 0, 0, 0]);
            if (v == null || v.length < idx) {
                return;
            }
            v[idx] = value;
            this.setWidgetStyles('border-radius', v);
        }));
    }
    ngOnChanges(changes) {
        this.currentWidget = changes.widget.currentValue;
        if (this.currentWidget == null) {
            return;
        }
        this.widgetName = AjfWidgetType[this.currentWidget.widgetType];
    }
    ngOnDestroy() {
        this._currentWidgetSub.unsubscribe();
        this._formsSub.unsubscribe();
        this._colorSub.unsubscribe();
        this._headerStyleSub.unsubscribe();
        this._contentStylesSub.unsubscribe();
        this._footerStylesSub.unsubscribe();
        this._originSub.unsubscribe();
        this._stylesUpdatesSubs.unsubscribe();
    }
}
AjfReportBuilderProperties.…µfac = i0.…µ…µngDeclareFactory({ minVersion: "12.0.0", version: "13.0.0-next.15", ngImport: i0, type: AjfReportBuilderProperties, deps: [{ token: i1.MatDialog }, { token: i2.AjfReportBuilderService }], target: i0.…µ…µFactoryTarget.Component });
AjfReportBuilderProperties.…µcmp = i0.…µ…µngDeclareComponent({ minVersion: "12.0.0", version: "13.0.0-next.15", type: AjfReportBuilderProperties, selector: "ajf-report-builder-properties", usesOnChanges: true, ngImport: i0, template: "<ng-template [ngIf]=\"currentWidget != null\">\n  <div class=\"ajf-content\">\n    <button\n      mat-button\n      class=\"ajf-hide-menu\"\n      matTooltip=\"hide-menu\"\n      (click)=\"hideMenu()\"\n      [matTooltipPosition]=\"'above'\"\n    >\n      <mat-icon>remove_circle_outline</mat-icon>\n    </button>\n    <mat-button-toggle-group class=\"ajf-menu-css\">\n      <mat-button-toggle\n        (click)=\"reportStyles = !reportStyles; sectionStyles = false; widgetStyles = false\"\n        value=\"left\"\n        [ngClass]=\"{'ajf-selected': reportStyles}\"\n      >\n        report\n        <ng-container>{{'CSS style'|transloco}}</ng-container>\n      </mat-button-toggle>\n      <mat-button-toggle\n        (click)=\"sectionStyles = !sectionStyles; reportStyles = false; widgetStyles = false\"\n        [ngClass]=\"{'ajf-selected': sectionStyles}\"\n      >\n        {{ origin }}\n        <ng-container>{{'CSS style'|transloco}}</ng-container>\n      </mat-button-toggle>\n      <mat-button-toggle\n        (click)=\"widgetStyles = !widgetStyles; sectionStyles = false; reportStyles = false\"\n        [ngClass]=\"{'ajf-selected': widgetStyles}\"\n      >\n        {{ widgetName }}\n        <ng-container>{{'CSS style'|transloco}}</ng-container>\n      </mat-button-toggle>\n    </mat-button-toggle-group>\n    <div class=\"ajf-style-container\" *ngIf=\"(reportStyles) ? true : false \">\n      <mat-tab-group>\n        <mat-tab label=\"Background Color\">\n          <div class=\"ajf-style-panel\">\n            <ajf-theme-color\n              [section]=\"'report'\"\n              [label]=\"'color'\"\n            ></ajf-theme-color>\n          </div>\n        </mat-tab>\n      </mat-tab-group>\n    </div>\n    <div class=\"ajf-style-container\" *ngIf=\"(sectionStyles) ? true : false \">\n      <mat-tab-group>\n        <mat-tab label=\"Background Color\">\n          <div class=\"ajf-style-panel\">\n            <ajf-theme-color\n              [section]=\"'section'\"\n              [label]=\"'color'\"\n            ></ajf-theme-color>\n          </div>\n        </mat-tab>\n      </mat-tab-group>\n    </div>\n    <div class=\"ajf-style-container\" *ngIf=\"(widgetStyles) ? true : false \">\n      <mat-tab-group *ngIf=\"(currentWidget.widgetType != 4)\">\n        <mat-tab label=\"Color\">\n          <div class=\"ajf-style-panel\">\n            <ajf-theme-color\n              [section]=\"'widget'\"\n              [label]=\"'color'\"\n              [init]=\"'icon'\"\n            ></ajf-theme-color>\n          </div>\n        </mat-tab>\n        <mat-tab label=\"Background Color\">\n          <div class=\"ajf-style-panel\">\n            <ajf-theme-color\n              [section]=\"'widget'\"\n              [label]=\"'background-color'\"\n            ></ajf-theme-color>\n          </div>\n        </mat-tab>\n      </mat-tab-group>\n      <div\n        class=\"properties-container\"\n        *ngIf=\"(currentWidget.widgetType !== 8)\"\n      >\n        <div class=\"ajf-layout-preview\">\n          <div class=\"ajf-vbottom\">\n            <div>{{'height'|transloco}}</div>\n            <div>{{ getHeightWidget|async }}</div>\n          </div>\n          <div class=\"ajf-margin-box\">\n            <div class=\"ajf-top-label\">{{'margin'|transloco}}</div>\n            <div class=\"ajf-vtop\">{{ getMarginWidgetTop|async }}</div>\n            <div class=\"ajf-vright\">{{ getMarginWidgetRight|async }}</div>\n            <div class=\"ajf-vbottom\">{{ getMarginWidgetBottom|async }}</div>\n            <div class=\"ajf-vleft\">{{ getMarginWidgetLeft|async }}</div>\n            <div class=\"ajf-border-box\">\n              <div class=\"ajf-vtop\">{{ getBorderWidthWidgetTop|async }}</div>\n              <div class=\"ajf-vright\">\n                {{ getBorderWidthWidgetRight|async }}\n              </div>\n              <div class=\"ajf-vbottom\">\n                {{ getBorderWidthWidgetBottom|async }}\n              </div>\n              <div class=\"ajf-vleft\">{{ getBorderWidthWidgetLeft|async }}</div>\n              <div class=\"ajf-vtl\">\n                {{ getBorderRadiusWidgetTopLeft|async }}\n              </div>\n              <div class=\"ajf-vtr\">\n                {{ getBorderRadiusWidgetTopRight|async }}\n              </div>\n              <div class=\"ajf-vbr\">\n                {{ getBorderRadiusWidgetBottomRight|async }}\n              </div>\n              <div class=\"ajf-vbl\">\n                {{ getBorderRadiusWidgetBottomLeft|async }}\n              </div>\n              <div class=\"ajf-top-label\">{{'border'|transloco}}</div>\n              <div class=\"ajf-padding-box\">\n                <div class=\"ajf-top-label\">{{'padding'|transloco}}</div>\n                <div class=\"ajf-vtop\">{{ getPaddingWidgetTop|async }}</div>\n                <div class=\"ajf-vright\">{{ getPaddingWidgetRight|async }}</div>\n                <div class=\"ajf-vbottom\">\n                  {{ getPaddingWidgetBottom|async }}\n                </div>\n                <div class=\"ajf-vleft\">{{ getPaddingWidgetLeft|async }}</div>\n                <div class=\"ajf-content-box\">{{'content'|transloco}}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <mat-grid-list rowHeight=\"2em\" cols=\"12\">\n          <mat-grid-tile></mat-grid-tile>\n          <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n            <span>{{'height'|transloco}}</span>\n          </mat-grid-tile>\n          <mat-grid-tile colspan=\"7\">\n            <mat-slider\n              (change)=\"setWidgetStyles('height', $event.value)\"\n              min=\"0\"\n              max=\"200\"\n              step=\"1\"\n              [value]=\"getHeightWidget|async\"\n              tickInterval=\"1\"\n              thumbLabel\n            >\n            </mat-slider>\n          </mat-grid-tile>\n        </mat-grid-list>\n        <mat-grid-list cols=\"12\">\n          <mat-grid-tile>\n            <mat-icon\n              *ngIf=\"!marginExpanded\"\n              (click)=\"marginExpanded = !marginExpanded\"\n              >keyboard_arrow_right</mat-icon\n            >\n            <mat-icon\n              *ngIf=\"marginExpanded\"\n              (click)=\"marginExpanded = !marginExpanded\"\n              >keyboard_arrow_down</mat-icon\n            >\n          </mat-grid-tile>\n          <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n            <span>{{'margin'|transloco}}</span>\n          </mat-grid-tile>\n          <mat-grid-tile colspan=\"7\">\n            <mat-slider\n              [disabled]=\"marginExpanded\"\n              (change)=\"setWidgetStyles('margin', $event.value)\"\n              min=\"-50\"\n              max=\"50\"\n              step=\"1\"\n              [value]=\"getMarginWidgetTop|async\"\n              tickInterval=\"auto\"\n              thumbLabel\n            >\n            </mat-slider>\n          </mat-grid-tile>\n        </mat-grid-list>\n        <ng-template [ngIf]=\"marginExpanded\">\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'margin top'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetMargin(0, $event.value)\"\n                min=\"-50\"\n                max=\"50\"\n                step=\"1\"\n                [value]=\"getMarginWidgetTop|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'margin right'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetMargin(1, $event.value)\"\n                min=\"-50\"\n                max=\"50\"\n                step=\"1\"\n                [value]=\"getMarginWidgetRight|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'margin bottom'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetMargin(2, $event.value)\"\n                min=\"-50\"\n                max=\"50\"\n                step=\"1\"\n                [value]=\"getMarginWidgetBottom|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'margin left'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetMargin(3, $event.value)\"\n                min=\"-50\"\n                max=\"50\"\n                step=\"1\"\n                [value]=\"getMarginWidgetLeft|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n        </ng-template>\n        <mat-grid-list cols=\"12\">\n          <mat-grid-tile>\n            <mat-icon\n              *ngIf=\"!paddingExpanded\"\n              (click)=\"paddingExpanded = !paddingExpanded\"\n              >keyboard_arrow_right</mat-icon\n            >\n            <mat-icon\n              *ngIf=\"paddingExpanded\"\n              (click)=\"paddingExpanded = !paddingExpanded\"\n              >keyboard_arrow_down</mat-icon\n            >\n          </mat-grid-tile>\n          <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n            <span>{{'padding'|transloco}}</span>\n          </mat-grid-tile>\n          <mat-grid-tile colspan=\"7\">\n            <mat-slider\n              (change)=\"setWidgetStyles('padding', $event.value)\"\n              min=\"-50\"\n              max=\"50\"\n              step=\"1\"\n              [value]=\"getPaddingWidgetTop|async\"\n              tickInterval=\"auto\"\n              thumbLabel\n            >\n            </mat-slider>\n          </mat-grid-tile>\n        </mat-grid-list>\n        <ng-template [ngIf]=\"paddingExpanded\">\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'padding top'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetPadding(0, $event.value)\"\n                min=\"-50\"\n                max=\"50\"\n                step=\"1\"\n                [value]=\"getPaddingWidgetTop|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'padding right'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetPadding(1, $event.value)\"\n                min=\"-50\"\n                max=\"50\"\n                step=\"1\"\n                [value]=\"getPaddingWidgetRight|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'padding bottom'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetPadding(2, $event.value)\"\n                min=\"-50\"\n                max=\"50\"\n                step=\"1\"\n                [value]=\"getPaddingWidgetBottom|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'padding left'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetPadding(3, $event.value)\"\n                min=\"-50\"\n                max=\"50\"\n                step=\"1\"\n                [value]=\"getPaddingWidgetLeft|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n        </ng-template>\n        <mat-grid-list cols=\"12\">\n          <mat-grid-tile>\n            <mat-icon\n              *ngIf=\"!borderWidthExpanded\"\n              (click)=\"borderWidthExpanded = !borderWidthExpanded\"\n              >keyboard_arrow_right</mat-icon\n            >\n            <mat-icon\n              *ngIf=\"borderWidthExpanded\"\n              (click)=\"borderWidthExpanded = !borderWidthExpanded\"\n              >keyboard_arrow_down</mat-icon\n            >\n          </mat-grid-tile>\n          <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n            <span>{{'border width'|transloco}}</span>\n          </mat-grid-tile>\n          <mat-grid-tile colspan=\"7\">\n            <mat-slider\n              (change)=\"setWidgetStyles('border-width', $event.value)\"\n              min=\"0\"\n              max=\"10\"\n              step=\"1\"\n              [value]=\"getBorderWidthWidgetTop|async\"\n              tickInterval=\"1\"\n              thumbLabel\n            >\n            </mat-slider>\n          </mat-grid-tile>\n        </mat-grid-list>\n        <ng-template [ngIf]=\"borderWidthExpanded\">\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'border width top'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetBorderWidth(0, $event.value)\"\n                min=\"1\"\n                max=\"10\"\n                step=\"1\"\n                [value]=\"getBorderWidthWidgetTop|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'border width right'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetBorderWidth(1, $event.value)\"\n                min=\"1\"\n                max=\"10\"\n                step=\"1\"\n                [value]=\"getBorderWidthWidgetRight|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'border width bottom'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetBorderWidth(2, $event.value)\"\n                min=\"1\"\n                max=\"10\"\n                step=\"1\"\n                [value]=\"getBorderWidthWidgetBottom|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'border width left'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetBorderWidth(3, $event.value)\"\n                min=\"1\"\n                max=\"10\"\n                step=\"1\"\n                [value]=\"getBorderWidthWidgetLeft|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n        </ng-template>\n        <mat-grid-list cols=\"12\">\n          <mat-grid-tile>\n            <mat-icon\n              *ngIf=\"!borderRadiusExpanded\"\n              (click)=\"borderRadiusExpanded = !borderRadiusExpanded\"\n              >keyboard_arrow_right</mat-icon\n            >\n            <mat-icon\n              *ngIf=\"borderRadiusExpanded\"\n              (click)=\"borderRadiusExpanded = !borderRadiusExpanded\"\n              >keyboard_arrow_down</mat-icon\n            >\n          </mat-grid-tile>\n          <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n            <span>{{'border radius'|transloco}}</span>\n          </mat-grid-tile>\n          <mat-grid-tile colspan=\"7\">\n            <mat-slider\n              (change)=\"setWidgetStyles('border-radius', $event.value)\"\n              min=\"0\"\n              max=\"100\"\n              step=\"1\"\n              tickInterval=\"10\"\n              thumbLabel\n            >\n            </mat-slider>\n          </mat-grid-tile>\n        </mat-grid-list>\n        <ng-template [ngIf]=\"borderRadiusExpanded\">\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'border radius top left'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetBorderRadius(0, $event.value)\"\n                min=\"1\"\n                max=\"100\"\n                step=\"1\"\n                [value]=\"getBorderRadiusWidgetTopLeft|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'border radius top right'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetBorderRadius(1, $event.value)\"\n                min=\"1\"\n                max=\"100\"\n                step=\"1\"\n                [value]=\"getBorderRadiusWidgetTopRight|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'border radius bottom left'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetBorderRadius(2, $event.value)\"\n                min=\"1\"\n                max=\"100\"\n                step=\"1\"\n                [value]=\"getBorderRadiusWidgetBottomLeft|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span\n                >{{'border radius bottom right'|transloco}}</span\n              >\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetBorderRadius(3, $event.value)\"\n                min=\"1\"\n                max=\"100\"\n                step=\"1\"\n                [value]=\"getBorderRadiusWidgetBottomRight|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n        </ng-template>\n      </div>\n      <div class=\"properties-container\" *ngIf=\"currentWidget.widgetType === 2\">\n        <mat-grid-list cols=\"12\">\n          <mat-grid-tile></mat-grid-tile>\n          <mat-grid-tile class=\"ajf-lal\" colspan=\"3\">\n            <span>{{'font size'|transloco}}</span>\n          </mat-grid-tile>\n          <mat-grid-tile colspan=\"7\">\n            <mat-slider\n              (change)=\"setWidgetStyles('font-size', $event.value);\"\n              min=\"1\"\n              max=\"150\"\n              step=\"1\"\n              [value]=\"getFontSizeWidget|async\"\n              tickInterval=\"1\"\n              thumbLabel\n            >\n            </mat-slider>\n          </mat-grid-tile>\n        </mat-grid-list>\n      </div>\n      <ng-template [ngIf]=\"currentWidget.widgetType === 5\">\n        <br />\n        <form>\n          <mat-form-field>\n            <input\n              matInput\n              [placeholder]=\"'Font size' | transloco\"\n              [value]=\"getFontSizeWidget|async\"\n              [(ngModel)]=\"fontSize\"\n              [ngModelOptions]=\"{standalone: true}\"\n              (change)=\"setWidgetStyles('font-size', fontSize)\"\n            />\n          </mat-form-field>\n          <mat-select\n            (selectionChange)=\"setWidgetStyles('font-style', $event.value)\"\n            [placeholder]=\"'Font style' | transloco\"\n          >\n            <mat-option value=\"normal\">{{'Normal'|transloco}}</mat-option>\n            <mat-option value=\"italic\">{{'Italic'|transloco}}</mat-option>\n            <mat-option value=\"oblique\">{{'Oblique'|transloco}}</mat-option>\n          </mat-select>\n          <mat-select\n            (selectionChange)=\"setWidgetStyles('text-align', $event.value)\"\n            [placeholder]=\"'Align' | transloco\"\n          >\n            <mat-option value=\"center\">{{'Center'|transloco}}</mat-option>\n            <mat-option value=\"left\">{{'Left'|transloco}}</mat-option>\n            <mat-option value=\"right\">{{'Right'|transloco}}</mat-option>\n          </mat-select>\n        </form>\n      </ng-template>\n      <h1>\n        <ng-container>{{'properties of'|transloco}}</ng-container>\n        {{ widgetName|transloco }}\n      </h1>\n    </div>\n    <div [ngSwitch]=\"currentWidget.widgetType\">\n      <ng-template [ngSwitchCase]=\"0\">\n        <h1>{{'Column'|transloco}}</h1>\n        <ng-template\n          ngFor\n          let-col\n          [ngForOf]=\"currentLayoutWidget.columns\"\n          let-idx=\"index\"\n        >\n          <mat-toolbar>\n            <mat-toolbar-row *ngIf=\"col !== -1\">\n              <mat-grid-list cols=\"12\">\n                <mat-grid-tile colspan=\"1\"> {{idx + 1}} </mat-grid-tile>\n                <mat-grid-tile colspan=\"9\">\n                  <mat-slider\n                    style=\"width: 90%\"\n                    min=\"0.1\"\n                    max=\"1\"\n                    step=\"0.01\"\n                    value=\"{{col}}\"\n                    thumb-label=\"true\"\n                    tick-interval=\"true\"\n                    (change)=\"instantColumnValue($event.value,idx)\"\n                  >\n                  </mat-slider>\n                  {{percent(col)}}%\n                </mat-grid-tile>\n                <mat-grid-tile colspan=\"2\">\n                  <button\n                    style=\"width: 5%\"\n                    mat-button\n                    (click)=\"fixedColumn(idx)\"\n                  >\n                    fixed\n                  </button>\n                </mat-grid-tile>\n              </mat-grid-list>\n            </mat-toolbar-row>\n            <mat-toolbar-row *ngIf=\"col == -1\">\n              <mat-grid-list cols=\"12\">\n                <mat-grid-tile colspan=\"1\"> {{idx + 1}} </mat-grid-tile>\n                <mat-grid-tile colspan=\"11\">\n                  <button\n                    style=\"width: 90%\"\n                    mat-button\n                    (click)=\"unfixedColumn(idx)\"\n                  >\n                    percent\n                  </button>\n                </mat-grid-tile>\n              </mat-grid-list>\n            </mat-toolbar-row>\n          </mat-toolbar>\n        </ng-template>\n        <mat-toolbar>\n          <mat-toolbar-row>\n            <button\n              mat-button\n              (click)=\"addColumn()\"\n              *ngIf=\"currentLayoutWidget.columns.length < 10\"\n            >\n              {{'Add column'|transloco}}\n            </button>\n          </mat-toolbar-row>\n        </mat-toolbar>\n      </ng-template>\n      <ng-template [ngSwitchCase]=\"2\">\n        <ajf-image-group\n          (formulaClick)=\"openFormulaDialog($event)\"\n          [data]=\"iconSet\"\n        ></ajf-image-group>\n        <ajf-image-group\n          (formulaClick)=\"openFormulaDialog($event)\"\n          [data]=\"flagSet\"\n        ></ajf-image-group>\n        <ajf-report-builder-forms-analyzer></ajf-report-builder-forms-analyzer>\n        <input\n          mat-input\n          [placeholder]=\"'paste a link' | transloco\"\n          style=\"width: 100%\"\n          [(ngModel)]=\"imageUrl\"\n        />\n        <button mat-button (click)=\"setImageUrl()\">\n          {{'Set image'|transloco}}\n        </button>\n      </ng-template>\n      <ng-template [ngSwitchCase]=\"3\">\n        <div style=\"width: 500px\">\n          <ajf-quill-editor\n            [(ngModel)]=\"currentTextWidget.htmlText\"\n            [modules]=\"getModule()\"\n            [maxLength]=\"200\"\n            [theme]=\"bubble\"\n            [initHTML]=\"(getHTML|async) || ''\"\n            (formulaClick)=\"openFormulaDialog($event)\"\n          >\n          </ajf-quill-editor>\n        </div>\n      </ng-template>\n      <ng-template [ngSwitchCase]=\"4\">\n        <h3>{{'Choose type of Chart'|transloco}}</h3>\n        <mat-button-toggle-group class=\"ajf-chart-buttons\">\n          <div class=\"ajf-row\">\n            <mat-button-toggle\n              value=\"reportbuilder-linechart\"\n              (click)=\"setChartType(0)\"\n            >\n              <mat-icon fontSet=\"ajf-icon\" fontIcon=\"reportbuilder-linechart\">\n              </mat-icon>\n            </mat-button-toggle>\n            <mat-button-toggle\n              value=\"reportbuilder-barchartvertical\"\n              (click)=\"setChartType(1)\"\n            >\n              <mat-icon\n                fontSet=\"ajf-icon\"\n                fontIcon=\"reportbuilder-barchartvertical\"\n              >\n              </mat-icon>\n            </mat-button-toggle>\n            <mat-button-toggle\n              value=\"reportbuilder-bubblechart\"\n              (click)=\"setChartType(8)\"\n            >\n              <mat-icon fontSet=\"ajf-icon\" fontIcon=\"reportbuilder-bubblechart\">\n              </mat-icon>\n            </mat-button-toggle>\n          </div>\n          <div class=\"row\">\n            <mat-button-toggle\n              value=\"reportbuilder-barcharthorizontal\"\n              (click)=\"setChartType(2)\"\n            >\n              <mat-icon\n                fontSet=\"ajf-icon\"\n                fontIcon=\"reportbuilder-barcharthorizontal\"\n              >\n              </mat-icon>\n            </mat-button-toggle>\n            <mat-button-toggle\n              value=\"reportbuilder-radarchart\"\n              (click)=\"setChartType(3)\"\n            >\n              <mat-icon fontSet=\"ajf-icon\" fontIcon=\"reportbuilder-radarchart\">\n              </mat-icon>\n            </mat-button-toggle>\n            <mat-button-toggle\n              value=\"reportbuilder-barchartvertical\"\n              (click)=\"setChartType(1)\"\n            >\n              <mat-icon\n                fontSet=\"ajf-icon\"\n                fontIcon=\"reportbuilder-barchartvertical\"\n              >\n              </mat-icon>\n            </mat-button-toggle>\n          </div>\n          <div class=\"ajf-row\">\n            <mat-button-toggle\n              value=\"reportbuilder-scatterchart\"\n              (click)=\"setChartType(4)\"\n            >\n              <mat-icon\n                fontSet=\"ajf-icon\"\n                fontIcon=\"reportbuilder-scatterchart\"\n              >\n              </mat-icon>\n            </mat-button-toggle>\n            <mat-button-toggle\n              value=\"reportbuilder-polarareachart\"\n              (click)=\"setChartType(5)\"\n            >\n              <mat-icon\n                fontSet=\"ajf-icon\"\n                fontIcon=\"reportbuilder-polarareachart\"\n              >\n              </mat-icon>\n            </mat-button-toggle>\n          </div>\n          <div class=\"ajf-row\">\n            <mat-button-toggle\n              value=\"reportbuilder-piechart\"\n              (click)=\"setChartType(6)\"\n            >\n              <mat-icon fontSet=\"ajf-icon\" fontIcon=\"reportbuilder-piechart\">\n              </mat-icon>\n            </mat-button-toggle>\n            <mat-button-toggle\n              value=\"reportbuilder-donoughtchart\"\n              (click)=\"setChartType(7)\"\n            >\n              <mat-icon\n                fontSet=\"ajf-icon\"\n                fontIcon=\"reportbuilder-donoughtchart\"\n              >\n              </mat-icon>\n            </mat-button-toggle>\n          </div>\n        </mat-button-toggle-group>\n        <h3>{{'Labels'|transloco}}</h3>\n        <ajf-report-builder-forms-analyzer></ajf-report-builder-forms-analyzer>\n        <ajf-theme-color\n          [section]=\"'chart'\"\n          [label]=\"tabValue\"\n        ></ajf-theme-color>\n        <mat-card>\n          <mat-card-header>\n            <mat-card-title>{{'Border width'|transloco}}</mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n            <mat-slider\n              min=\"1\"\n              max=\"100\"\n              style=\"width: 99%\"\n              step=\"1\"\n              (change)=\"setChartBorderColor($event.value)\"\n              [value]=\"chartBorderWidth\"\n              tickInterval=\"auto\"\n              thumbLabel\n            >\n            </mat-slider>\n          </mat-card-content>\n        </mat-card>\n        <mat-tab-group (selectChange)=\"setTab($event)\">\n          <mat-tab label=\"Background\">\n            <mat-list>\n              <ng-template\n                ngFor\n                let-color\n                [ngForOf]=\"(getChartBackgroundColor|async)\"\n                let-idx=\"index\"\n              >\n                <mat-list-item>\n                  <span [style.background]=\"color\"> {{ color }} </span>\n                  <button mat-button (click)=\"removeChartBackgroundColor(idx)\">\n                    {{'Remove'|transloco}}\n                  </button>\n                </mat-list-item>\n              </ng-template>\n            </mat-list>\n          </mat-tab>\n          <mat-tab label=\"Border\">\n            <mat-list>\n              <ng-template\n                ngFor\n                let-color\n                [ngForOf]=\"(getChartBorderColor|async)\"\n                let-idx=\"index\"\n              >\n                <mat-list-item>\n                  <span [style.background]=\"color\"> {{ color }} </span>\n                  <button mat-button (click)=\"removeChartBorderColor(idx)\">\n                    remove\n                  </button>\n                </mat-list-item>\n              </ng-template>\n            </mat-list>\n          </mat-tab>\n        </mat-tab-group>\n      </ng-template>\n      <ng-template [ngSwitchCase]=\"5\">\n        <ajf-report-builder-forms-analyzer></ajf-report-builder-forms-analyzer>\n      </ng-template>\n    </div>\n    <button\n      mat-button\n      (click)=\"visibilitySection = !visibilitySection\"\n      [ngClass]=\"{'ajf-selected': visibilitySection}\"\n    >\n      {{ widgetName|transloco }}\n      <ng-container>{{'Visibility'|transloco}}</ng-container>\n    </button>\n    <div [style.display]=\"visibilitySection ? 'block' : 'none'\">\n      <ajf-report-builder-condition-editor\n        [visibility]=\"currentWidget.visibility\"\n      ></ajf-report-builder-condition-editor>\n    </div>\n  </div>\n</ng-template>\n", styles: ["ajf-report-builder-properties .ajf-selected{background-color:darkred;color:#fff}ajf-report-builder-properties .ajf-style-container{height:auto;width:100%;position:relative;margin-bottom:60px;text-align:center}ajf-report-builder-properties .ajf-style-container mat-tab-group .ajf-style-panel{min-height:350px}ajf-report-builder-properties .ajf-style-container .ajf-style-background,ajf-report-builder-properties .ajf-style-container .ajf-style-color{width:100%;height:350px;position:relative;margin:30px}ajf-report-builder-properties .ajf-style-container .mat-list-item-content{position:normal !important;display:block !important;height:350px !important}ajf-report-builder-properties .ajf-style-container mat-tab-group .mat-tab-body-wrapper,ajf-report-builder-properties .ajf-style-container mat-tab-group .mat-list-item-content{position:normal !important;display:block !important;height:350px !important}ajf-report-builder-properties .ajf-content{margin-top:10px;margin-right:15px;margin-bottom:290px;margin-left:15px}ajf-report-builder-properties .ajf-content .ajf-menu-css{width:100% !important;font-size:10px !important}ajf-report-builder-properties .ajf-content .ajf-menu-css mat-button-toggle{width:33% !important}ajf-report-builder-properties .ajf-content mat-button-toggle-group{width:100% !important}ajf-report-builder-properties .ajf-content mat-button-toggle-group mat-button-toggle{width:auto !important}ajf-report-builder-properties .ajf-content mat-button-toggle-group mat-button-toggle mat-icon{margin:15px}ajf-report-builder-properties button{width:100%;margin-bottom:30px}ajf-report-builder-properties .ajf-hide-menu{width:auto !important}ajf-report-builder-properties h1,ajf-report-builder-properties h3,ajf-report-builder-properties h5{text-align:center}ajf-report-builder-properties .ajf-row{display:flex;flex-direction:column;width:100%}ajf-report-builder-properties .mat-tab-body.mat-tab-active{min-height:600px}ajf-report-builder-properties mat-grid-list{width:100%}ajf-report-builder-properties mat-grid-tile{overflow:visible !important}ajf-report-builder-properties mat-grid-tile.ajf-lal{text-align:left}ajf-report-builder-properties .ajf-chart-buttons mat-icon{font-size:15px}ajf-report-builder-properties .ajf-layout-preview{background-color:#fff;width:100%;font-size:.9em;box-sizing:border-box;position:relative}ajf-report-builder-properties .ajf-layout-preview .ajf-top-label{position:absolute;top:1em;left:1em;text-align:left}ajf-report-builder-properties .ajf-layout-preview .ajf-vtop{position:absolute;top:1em;right:0;left:0}ajf-report-builder-properties .ajf-layout-preview .ajf-vbottom{position:absolute;bottom:0;right:0;left:0}ajf-report-builder-properties .ajf-layout-preview .ajf-vright{position:absolute;top:50%;right:1em;margin-top:.5em}ajf-report-builder-properties .ajf-layout-preview .ajf-vleft{position:absolute;top:50%;left:1em;margin-top:.5em}ajf-report-builder-properties .ajf-layout-preview .ajf-vtl{position:absolute;top:1em;left:1em}ajf-report-builder-properties .ajf-layout-preview .ajf-vtr{position:absolute;top:1em;right:1em}ajf-report-builder-properties .ajf-layout-preview .ajf-vbl{position:absolute;bottom:1em;left:1em}ajf-report-builder-properties .ajf-layout-preview .ajf-vbr{position:absolute;bottom:1em;right:1em}ajf-report-builder-properties .ajf-layout-preview .ajf-margin-box{background-color:#fff;padding:3em;position:relative;border:solid 1px #ccc}ajf-report-builder-properties .ajf-layout-preview .ajf-margin-box .ajf-border-box{background-color:#ddd;padding:3em;position:relative;box-sizing:border-box}ajf-report-builder-properties .ajf-layout-preview .ajf-margin-box .ajf-border-box>.ajf-top-label{left:4em}ajf-report-builder-properties .ajf-layout-preview .ajf-margin-box .ajf-border-box .ajf-padding-box{padding:3em;background-color:#aaa;position:relative;box-sizing:border-box}ajf-report-builder-properties .ajf-layout-preview .ajf-margin-box .ajf-border-box .ajf-padding-box .ajf-content-box{background-color:#888;padding:2em;text-align:center;box-sizing:border-box}\n"], components: [{ type: i3.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { type: i4.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { type: i5.MatButtonToggle, selector: "mat-button-toggle", inputs: ["disableRipple", "aria-label", "aria-labelledby", "id", "name", "value", "tabIndex", "appearance", "checked", "disabled"], outputs: ["change"], exportAs: ["matButtonToggle"] }, { type: i6.MatTabGroup, selector: "mat-tab-group", inputs: ["color", "disableRipple"], exportAs: ["matTabGroup"] }, { type: i6.MatTab, selector: "mat-tab", inputs: ["disabled", "label", "aria-label", "aria-labelledby"], exportAs: ["matTab"] }, { type: i7.AjfReportBuilderThemeColor, selector: "ajf-theme-color", inputs: ["section", "label", "init"] }, { type: i8.MatGridList, selector: "mat-grid-list", inputs: ["cols", "gutterSize", "rowHeight"], exportAs: ["matGridList"] }, { type: i8.MatGridTile, selector: "mat-grid-tile", inputs: ["rowspan", "colspan"], exportAs: ["matGridTile"] }, { type: i9.MatSlider, selector: "mat-slider", inputs: ["disabled", "color", "tabIndex", "invert", "max", "min", "step", "thumbLabel", "tickInterval", "value", "displayWith", "valueText", "vertical"], outputs: ["change", "input", "valueChange"], exportAs: ["matSlider"] }, { type: i10.MatFormField, selector: "mat-form-field", inputs: ["color", "appearance", "hideRequiredMarker", "hintLabel", "floatLabel"], exportAs: ["matFormField"] }, { type: i11.MatSelect, selector: "mat-select", inputs: ["disabled", "disableRipple", "tabIndex"], exportAs: ["matSelect"] }, { type: i12.MatOption, selector: "mat-option", exportAs: ["matOption"] }, { type: i13.MatToolbar, selector: "mat-toolbar", inputs: ["color"], exportAs: ["matToolbar"] }, { type: i14.AjfReportBuilderImageGroup, selector: "ajf-image-group", inputs: ["data"], outputs: ["formulaClick"] }, { type: i15.AjfReportBuilderFormsAnalyzer, selector: "ajf-report-builder-forms-analyzer" }, { type: i16.AjfQuillEditor, selector: "ajf-quill-editor", inputs: ["theme", "modules", "readOnly", "placeholder", "maxLength", "minLength", "formats", "initHTML"], outputs: ["editorCreated", "contentChanged", "selectionChanged", "formulaClick"] }, { type: i17.MatCard, selector: "mat-card", exportAs: ["matCard"] }, { type: i17.MatCardHeader, selector: "mat-card-header" }, { type: i18.MatList, selector: "mat-list, mat-action-list", inputs: ["disableRipple", "disabled"], exportAs: ["matList"] }, { type: i18.MatListItem, selector: "mat-list-item, a[mat-list-item], button[mat-list-item]", inputs: ["disableRipple", "disabled"], exportAs: ["matListItem"] }, { type: i19.AjfReportBuilderConditionEditor, selector: "ajf-report-builder-condition-editor", inputs: ["visibility"] }], directives: [{ type: i20.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i21.MatTooltip, selector: "[matTooltip]", exportAs: ["matTooltip"] }, { type: i5.MatButtonToggleGroup, selector: "mat-button-toggle-group", inputs: ["appearance", "name", "vertical", "value", "multiple", "disabled"], outputs: ["valueChange", "change"], exportAs: ["matButtonToggleGroup"] }, { type: i20.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i22.…µNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i22.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i22.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i22.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i22.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i22.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i20.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i20.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i20.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i13.MatToolbarRow, selector: "mat-toolbar-row", exportAs: ["matToolbarRow"] }, { type: i17.MatCardTitle, selector: "mat-card-title, [mat-card-title], [matCardTitle]" }, { type: i17.MatCardContent, selector: "mat-card-content, [mat-card-content], [matCardContent]" }], pipes: { "transloco": i23.TranslocoPipe, "async": i20.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
i0.…µ…µngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.0-next.15", ngImport: i0, type: AjfReportBuilderProperties, decorators: [{
            type: Component,
            args: [{ selector: 'ajf-report-builder-properties', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-template [ngIf]=\"currentWidget != null\">\n  <div class=\"ajf-content\">\n    <button\n      mat-button\n      class=\"ajf-hide-menu\"\n      matTooltip=\"hide-menu\"\n      (click)=\"hideMenu()\"\n      [matTooltipPosition]=\"'above'\"\n    >\n      <mat-icon>remove_circle_outline</mat-icon>\n    </button>\n    <mat-button-toggle-group class=\"ajf-menu-css\">\n      <mat-button-toggle\n        (click)=\"reportStyles = !reportStyles; sectionStyles = false; widgetStyles = false\"\n        value=\"left\"\n        [ngClass]=\"{'ajf-selected': reportStyles}\"\n      >\n        report\n        <ng-container>{{'CSS style'|transloco}}</ng-container>\n      </mat-button-toggle>\n      <mat-button-toggle\n        (click)=\"sectionStyles = !sectionStyles; reportStyles = false; widgetStyles = false\"\n        [ngClass]=\"{'ajf-selected': sectionStyles}\"\n      >\n        {{ origin }}\n        <ng-container>{{'CSS style'|transloco}}</ng-container>\n      </mat-button-toggle>\n      <mat-button-toggle\n        (click)=\"widgetStyles = !widgetStyles; sectionStyles = false; reportStyles = false\"\n        [ngClass]=\"{'ajf-selected': widgetStyles}\"\n      >\n        {{ widgetName }}\n        <ng-container>{{'CSS style'|transloco}}</ng-container>\n      </mat-button-toggle>\n    </mat-button-toggle-group>\n    <div class=\"ajf-style-container\" *ngIf=\"(reportStyles) ? true : false \">\n      <mat-tab-group>\n        <mat-tab label=\"Background Color\">\n          <div class=\"ajf-style-panel\">\n            <ajf-theme-color\n              [section]=\"'report'\"\n              [label]=\"'color'\"\n            ></ajf-theme-color>\n          </div>\n        </mat-tab>\n      </mat-tab-group>\n    </div>\n    <div class=\"ajf-style-container\" *ngIf=\"(sectionStyles) ? true : false \">\n      <mat-tab-group>\n        <mat-tab label=\"Background Color\">\n          <div class=\"ajf-style-panel\">\n            <ajf-theme-color\n              [section]=\"'section'\"\n              [label]=\"'color'\"\n            ></ajf-theme-color>\n          </div>\n        </mat-tab>\n      </mat-tab-group>\n    </div>\n    <div class=\"ajf-style-container\" *ngIf=\"(widgetStyles) ? true : false \">\n      <mat-tab-group *ngIf=\"(currentWidget.widgetType != 4)\">\n        <mat-tab label=\"Color\">\n          <div class=\"ajf-style-panel\">\n            <ajf-theme-color\n              [section]=\"'widget'\"\n              [label]=\"'color'\"\n              [init]=\"'icon'\"\n            ></ajf-theme-color>\n          </div>\n        </mat-tab>\n        <mat-tab label=\"Background Color\">\n          <div class=\"ajf-style-panel\">\n            <ajf-theme-color\n              [section]=\"'widget'\"\n              [label]=\"'background-color'\"\n            ></ajf-theme-color>\n          </div>\n        </mat-tab>\n      </mat-tab-group>\n      <div\n        class=\"properties-container\"\n        *ngIf=\"(currentWidget.widgetType !== 8)\"\n      >\n        <div class=\"ajf-layout-preview\">\n          <div class=\"ajf-vbottom\">\n            <div>{{'height'|transloco}}</div>\n            <div>{{ getHeightWidget|async }}</div>\n          </div>\n          <div class=\"ajf-margin-box\">\n            <div class=\"ajf-top-label\">{{'margin'|transloco}}</div>\n            <div class=\"ajf-vtop\">{{ getMarginWidgetTop|async }}</div>\n            <div class=\"ajf-vright\">{{ getMarginWidgetRight|async }}</div>\n            <div class=\"ajf-vbottom\">{{ getMarginWidgetBottom|async }}</div>\n            <div class=\"ajf-vleft\">{{ getMarginWidgetLeft|async }}</div>\n            <div class=\"ajf-border-box\">\n              <div class=\"ajf-vtop\">{{ getBorderWidthWidgetTop|async }}</div>\n              <div class=\"ajf-vright\">\n                {{ getBorderWidthWidgetRight|async }}\n              </div>\n              <div class=\"ajf-vbottom\">\n                {{ getBorderWidthWidgetBottom|async }}\n              </div>\n              <div class=\"ajf-vleft\">{{ getBorderWidthWidgetLeft|async }}</div>\n              <div class=\"ajf-vtl\">\n                {{ getBorderRadiusWidgetTopLeft|async }}\n              </div>\n              <div class=\"ajf-vtr\">\n                {{ getBorderRadiusWidgetTopRight|async }}\n              </div>\n              <div class=\"ajf-vbr\">\n                {{ getBorderRadiusWidgetBottomRight|async }}\n              </div>\n              <div class=\"ajf-vbl\">\n                {{ getBorderRadiusWidgetBottomLeft|async }}\n              </div>\n              <div class=\"ajf-top-label\">{{'border'|transloco}}</div>\n              <div class=\"ajf-padding-box\">\n                <div class=\"ajf-top-label\">{{'padding'|transloco}}</div>\n                <div class=\"ajf-vtop\">{{ getPaddingWidgetTop|async }}</div>\n                <div class=\"ajf-vright\">{{ getPaddingWidgetRight|async }}</div>\n                <div class=\"ajf-vbottom\">\n                  {{ getPaddingWidgetBottom|async }}\n                </div>\n                <div class=\"ajf-vleft\">{{ getPaddingWidgetLeft|async }}</div>\n                <div class=\"ajf-content-box\">{{'content'|transloco}}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <mat-grid-list rowHeight=\"2em\" cols=\"12\">\n          <mat-grid-tile></mat-grid-tile>\n          <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n            <span>{{'height'|transloco}}</span>\n          </mat-grid-tile>\n          <mat-grid-tile colspan=\"7\">\n            <mat-slider\n              (change)=\"setWidgetStyles('height', $event.value)\"\n              min=\"0\"\n              max=\"200\"\n              step=\"1\"\n              [value]=\"getHeightWidget|async\"\n              tickInterval=\"1\"\n              thumbLabel\n            >\n            </mat-slider>\n          </mat-grid-tile>\n        </mat-grid-list>\n        <mat-grid-list cols=\"12\">\n          <mat-grid-tile>\n            <mat-icon\n              *ngIf=\"!marginExpanded\"\n              (click)=\"marginExpanded = !marginExpanded\"\n              >keyboard_arrow_right</mat-icon\n            >\n            <mat-icon\n              *ngIf=\"marginExpanded\"\n              (click)=\"marginExpanded = !marginExpanded\"\n              >keyboard_arrow_down</mat-icon\n            >\n          </mat-grid-tile>\n          <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n            <span>{{'margin'|transloco}}</span>\n          </mat-grid-tile>\n          <mat-grid-tile colspan=\"7\">\n            <mat-slider\n              [disabled]=\"marginExpanded\"\n              (change)=\"setWidgetStyles('margin', $event.value)\"\n              min=\"-50\"\n              max=\"50\"\n              step=\"1\"\n              [value]=\"getMarginWidgetTop|async\"\n              tickInterval=\"auto\"\n              thumbLabel\n            >\n            </mat-slider>\n          </mat-grid-tile>\n        </mat-grid-list>\n        <ng-template [ngIf]=\"marginExpanded\">\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'margin top'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetMargin(0, $event.value)\"\n                min=\"-50\"\n                max=\"50\"\n                step=\"1\"\n                [value]=\"getMarginWidgetTop|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'margin right'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetMargin(1, $event.value)\"\n                min=\"-50\"\n                max=\"50\"\n                step=\"1\"\n                [value]=\"getMarginWidgetRight|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'margin bottom'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetMargin(2, $event.value)\"\n                min=\"-50\"\n                max=\"50\"\n                step=\"1\"\n                [value]=\"getMarginWidgetBottom|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'margin left'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetMargin(3, $event.value)\"\n                min=\"-50\"\n                max=\"50\"\n                step=\"1\"\n                [value]=\"getMarginWidgetLeft|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n        </ng-template>\n        <mat-grid-list cols=\"12\">\n          <mat-grid-tile>\n            <mat-icon\n              *ngIf=\"!paddingExpanded\"\n              (click)=\"paddingExpanded = !paddingExpanded\"\n              >keyboard_arrow_right</mat-icon\n            >\n            <mat-icon\n              *ngIf=\"paddingExpanded\"\n              (click)=\"paddingExpanded = !paddingExpanded\"\n              >keyboard_arrow_down</mat-icon\n            >\n          </mat-grid-tile>\n          <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n            <span>{{'padding'|transloco}}</span>\n          </mat-grid-tile>\n          <mat-grid-tile colspan=\"7\">\n            <mat-slider\n              (change)=\"setWidgetStyles('padding', $event.value)\"\n              min=\"-50\"\n              max=\"50\"\n              step=\"1\"\n              [value]=\"getPaddingWidgetTop|async\"\n              tickInterval=\"auto\"\n              thumbLabel\n            >\n            </mat-slider>\n          </mat-grid-tile>\n        </mat-grid-list>\n        <ng-template [ngIf]=\"paddingExpanded\">\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'padding top'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetPadding(0, $event.value)\"\n                min=\"-50\"\n                max=\"50\"\n                step=\"1\"\n                [value]=\"getPaddingWidgetTop|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'padding right'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetPadding(1, $event.value)\"\n                min=\"-50\"\n                max=\"50\"\n                step=\"1\"\n                [value]=\"getPaddingWidgetRight|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'padding bottom'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetPadding(2, $event.value)\"\n                min=\"-50\"\n                max=\"50\"\n                step=\"1\"\n                [value]=\"getPaddingWidgetBottom|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'padding left'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetPadding(3, $event.value)\"\n                min=\"-50\"\n                max=\"50\"\n                step=\"1\"\n                [value]=\"getPaddingWidgetLeft|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n        </ng-template>\n        <mat-grid-list cols=\"12\">\n          <mat-grid-tile>\n            <mat-icon\n              *ngIf=\"!borderWidthExpanded\"\n              (click)=\"borderWidthExpanded = !borderWidthExpanded\"\n              >keyboard_arrow_right</mat-icon\n            >\n            <mat-icon\n              *ngIf=\"borderWidthExpanded\"\n              (click)=\"borderWidthExpanded = !borderWidthExpanded\"\n              >keyboard_arrow_down</mat-icon\n            >\n          </mat-grid-tile>\n          <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n            <span>{{'border width'|transloco}}</span>\n          </mat-grid-tile>\n          <mat-grid-tile colspan=\"7\">\n            <mat-slider\n              (change)=\"setWidgetStyles('border-width', $event.value)\"\n              min=\"0\"\n              max=\"10\"\n              step=\"1\"\n              [value]=\"getBorderWidthWidgetTop|async\"\n              tickInterval=\"1\"\n              thumbLabel\n            >\n            </mat-slider>\n          </mat-grid-tile>\n        </mat-grid-list>\n        <ng-template [ngIf]=\"borderWidthExpanded\">\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'border width top'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetBorderWidth(0, $event.value)\"\n                min=\"1\"\n                max=\"10\"\n                step=\"1\"\n                [value]=\"getBorderWidthWidgetTop|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'border width right'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetBorderWidth(1, $event.value)\"\n                min=\"1\"\n                max=\"10\"\n                step=\"1\"\n                [value]=\"getBorderWidthWidgetRight|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'border width bottom'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetBorderWidth(2, $event.value)\"\n                min=\"1\"\n                max=\"10\"\n                step=\"1\"\n                [value]=\"getBorderWidthWidgetBottom|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'border width left'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetBorderWidth(3, $event.value)\"\n                min=\"1\"\n                max=\"10\"\n                step=\"1\"\n                [value]=\"getBorderWidthWidgetLeft|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n        </ng-template>\n        <mat-grid-list cols=\"12\">\n          <mat-grid-tile>\n            <mat-icon\n              *ngIf=\"!borderRadiusExpanded\"\n              (click)=\"borderRadiusExpanded = !borderRadiusExpanded\"\n              >keyboard_arrow_right</mat-icon\n            >\n            <mat-icon\n              *ngIf=\"borderRadiusExpanded\"\n              (click)=\"borderRadiusExpanded = !borderRadiusExpanded\"\n              >keyboard_arrow_down</mat-icon\n            >\n          </mat-grid-tile>\n          <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n            <span>{{'border radius'|transloco}}</span>\n          </mat-grid-tile>\n          <mat-grid-tile colspan=\"7\">\n            <mat-slider\n              (change)=\"setWidgetStyles('border-radius', $event.value)\"\n              min=\"0\"\n              max=\"100\"\n              step=\"1\"\n              tickInterval=\"10\"\n              thumbLabel\n            >\n            </mat-slider>\n          </mat-grid-tile>\n        </mat-grid-list>\n        <ng-template [ngIf]=\"borderRadiusExpanded\">\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'border radius top left'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetBorderRadius(0, $event.value)\"\n                min=\"1\"\n                max=\"100\"\n                step=\"1\"\n                [value]=\"getBorderRadiusWidgetTopLeft|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'border radius top right'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetBorderRadius(1, $event.value)\"\n                min=\"1\"\n                max=\"100\"\n                step=\"1\"\n                [value]=\"getBorderRadiusWidgetTopRight|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span>{{'border radius bottom left'|transloco}}</span>\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetBorderRadius(2, $event.value)\"\n                min=\"1\"\n                max=\"100\"\n                step=\"1\"\n                [value]=\"getBorderRadiusWidgetBottomLeft|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n          <mat-grid-list cols=\"12\">\n            <mat-grid-tile></mat-grid-tile>\n            <mat-grid-tile class=\"ajf-lal\" colspan=\"4\">\n              &nbsp;&nbsp;<span\n                >{{'border radius bottom right'|transloco}}</span\n              >\n            </mat-grid-tile>\n            <mat-grid-tile colspan=\"7\">\n              <mat-slider\n                (change)=\"setWidgetBorderRadius(3, $event.value)\"\n                min=\"1\"\n                max=\"100\"\n                step=\"1\"\n                [value]=\"getBorderRadiusWidgetBottomRight|async\"\n                tickInterval=\"auto\"\n                thumbLabel\n              >\n              </mat-slider>\n            </mat-grid-tile>\n          </mat-grid-list>\n        </ng-template>\n      </div>\n      <div class=\"properties-container\" *ngIf=\"currentWidget.widgetType === 2\">\n        <mat-grid-list cols=\"12\">\n          <mat-grid-tile></mat-grid-tile>\n          <mat-grid-tile class=\"ajf-lal\" colspan=\"3\">\n            <span>{{'font size'|transloco}}</span>\n          </mat-grid-tile>\n          <mat-grid-tile colspan=\"7\">\n            <mat-slider\n              (change)=\"setWidgetStyles('font-size', $event.value);\"\n              min=\"1\"\n              max=\"150\"\n              step=\"1\"\n              [value]=\"getFontSizeWidget|async\"\n              tickInterval=\"1\"\n              thumbLabel\n            >\n            </mat-slider>\n          </mat-grid-tile>\n        </mat-grid-list>\n      </div>\n      <ng-template [ngIf]=\"currentWidget.widgetType === 5\">\n        <br />\n        <form>\n          <mat-form-field>\n            <input\n              matInput\n              [placeholder]=\"'Font size' | transloco\"\n              [value]=\"getFontSizeWidget|async\"\n              [(ngModel)]=\"fontSize\"\n              [ngModelOptions]=\"{standalone: true}\"\n              (change)=\"setWidgetStyles('font-size', fontSize)\"\n            />\n          </mat-form-field>\n          <mat-select\n            (selectionChange)=\"setWidgetStyles('font-style', $event.value)\"\n            [placeholder]=\"'Font style' | transloco\"\n          >\n            <mat-option value=\"normal\">{{'Normal'|transloco}}</mat-option>\n            <mat-option value=\"italic\">{{'Italic'|transloco}}</mat-option>\n            <mat-option value=\"oblique\">{{'Oblique'|transloco}}</mat-option>\n          </mat-select>\n          <mat-select\n            (selectionChange)=\"setWidgetStyles('text-align', $event.value)\"\n            [placeholder]=\"'Align' | transloco\"\n          >\n            <mat-option value=\"center\">{{'Center'|transloco}}</mat-option>\n            <mat-option value=\"left\">{{'Left'|transloco}}</mat-option>\n            <mat-option value=\"right\">{{'Right'|transloco}}</mat-option>\n          </mat-select>\n        </form>\n      </ng-template>\n      <h1>\n        <ng-container>{{'properties of'|transloco}}</ng-container>\n        {{ widgetName|transloco }}\n      </h1>\n    </div>\n    <div [ngSwitch]=\"currentWidget.widgetType\">\n      <ng-template [ngSwitchCase]=\"0\">\n        <h1>{{'Column'|transloco}}</h1>\n        <ng-template\n          ngFor\n          let-col\n          [ngForOf]=\"currentLayoutWidget.columns\"\n          let-idx=\"index\"\n        >\n          <mat-toolbar>\n            <mat-toolbar-row *ngIf=\"col !== -1\">\n              <mat-grid-list cols=\"12\">\n                <mat-grid-tile colspan=\"1\"> {{idx + 1}} </mat-grid-tile>\n                <mat-grid-tile colspan=\"9\">\n                  <mat-slider\n                    style=\"width: 90%\"\n                    min=\"0.1\"\n                    max=\"1\"\n                    step=\"0.01\"\n                    value=\"{{col}}\"\n                    thumb-label=\"true\"\n                    tick-interval=\"true\"\n                    (change)=\"instantColumnValue($event.value,idx)\"\n                  >\n                  </mat-slider>\n                  {{percent(col)}}%\n                </mat-grid-tile>\n                <mat-grid-tile colspan=\"2\">\n                  <button\n                    style=\"width: 5%\"\n                    mat-button\n                    (click)=\"fixedColumn(idx)\"\n                  >\n                    fixed\n                  </button>\n                </mat-grid-tile>\n              </mat-grid-list>\n            </mat-toolbar-row>\n            <mat-toolbar-row *ngIf=\"col == -1\">\n              <mat-grid-list cols=\"12\">\n                <mat-grid-tile colspan=\"1\"> {{idx + 1}} </mat-grid-tile>\n                <mat-grid-tile colspan=\"11\">\n                  <button\n                    style=\"width: 90%\"\n                    mat-button\n                    (click)=\"unfixedColumn(idx)\"\n                  >\n                    percent\n                  </button>\n                </mat-grid-tile>\n              </mat-grid-list>\n            </mat-toolbar-row>\n          </mat-toolbar>\n        </ng-template>\n        <mat-toolbar>\n          <mat-toolbar-row>\n            <button\n              mat-button\n              (click)=\"addColumn()\"\n              *ngIf=\"currentLayoutWidget.columns.length < 10\"\n            >\n              {{'Add column'|transloco}}\n            </button>\n          </mat-toolbar-row>\n        </mat-toolbar>\n      </ng-template>\n      <ng-template [ngSwitchCase]=\"2\">\n        <ajf-image-group\n          (formulaClick)=\"openFormulaDialog($event)\"\n          [data]=\"iconSet\"\n        ></ajf-image-group>\n        <ajf-image-group\n          (formulaClick)=\"openFormulaDialog($event)\"\n          [data]=\"flagSet\"\n        ></ajf-image-group>\n        <ajf-report-builder-forms-analyzer></ajf-report-builder-forms-analyzer>\n        <input\n          mat-input\n          [placeholder]=\"'paste a link' | transloco\"\n          style=\"width: 100%\"\n          [(ngModel)]=\"imageUrl\"\n        />\n        <button mat-button (click)=\"setImageUrl()\">\n          {{'Set image'|transloco}}\n        </button>\n      </ng-template>\n      <ng-template [ngSwitchCase]=\"3\">\n        <div style=\"width: 500px\">\n          <ajf-quill-editor\n            [(ngModel)]=\"currentTextWidget.htmlText\"\n            [modules]=\"getModule()\"\n            [maxLength]=\"200\"\n            [theme]=\"bubble\"\n            [initHTML]=\"(getHTML|async) || ''\"\n            (formulaClick)=\"openFormulaDialog($event)\"\n          >\n          </ajf-quill-editor>\n        </div>\n      </ng-template>\n      <ng-template [ngSwitchCase]=\"4\">\n        <h3>{{'Choose type of Chart'|transloco}}</h3>\n        <mat-button-toggle-group class=\"ajf-chart-buttons\">\n          <div class=\"ajf-row\">\n            <mat-button-toggle\n              value=\"reportbuilder-linechart\"\n              (click)=\"setChartType(0)\"\n            >\n              <mat-icon fontSet=\"ajf-icon\" fontIcon=\"reportbuilder-linechart\">\n              </mat-icon>\n            </mat-button-toggle>\n            <mat-button-toggle\n              value=\"reportbuilder-barchartvertical\"\n              (click)=\"setChartType(1)\"\n            >\n              <mat-icon\n                fontSet=\"ajf-icon\"\n                fontIcon=\"reportbuilder-barchartvertical\"\n              >\n              </mat-icon>\n            </mat-button-toggle>\n            <mat-button-toggle\n              value=\"reportbuilder-bubblechart\"\n              (click)=\"setChartType(8)\"\n            >\n              <mat-icon fontSet=\"ajf-icon\" fontIcon=\"reportbuilder-bubblechart\">\n              </mat-icon>\n            </mat-button-toggle>\n          </div>\n          <div class=\"row\">\n            <mat-button-toggle\n              value=\"reportbuilder-barcharthorizontal\"\n              (click)=\"setChartType(2)\"\n            >\n              <mat-icon\n                fontSet=\"ajf-icon\"\n                fontIcon=\"reportbuilder-barcharthorizontal\"\n              >\n              </mat-icon>\n            </mat-button-toggle>\n            <mat-button-toggle\n              value=\"reportbuilder-radarchart\"\n              (click)=\"setChartType(3)\"\n            >\n              <mat-icon fontSet=\"ajf-icon\" fontIcon=\"reportbuilder-radarchart\">\n              </mat-icon>\n            </mat-button-toggle>\n            <mat-button-toggle\n              value=\"reportbuilder-barchartvertical\"\n              (click)=\"setChartType(1)\"\n            >\n              <mat-icon\n                fontSet=\"ajf-icon\"\n                fontIcon=\"reportbuilder-barchartvertical\"\n              >\n              </mat-icon>\n            </mat-button-toggle>\n          </div>\n          <div class=\"ajf-row\">\n            <mat-button-toggle\n              value=\"reportbuilder-scatterchart\"\n              (click)=\"setChartType(4)\"\n            >\n              <mat-icon\n                fontSet=\"ajf-icon\"\n                fontIcon=\"reportbuilder-scatterchart\"\n              >\n              </mat-icon>\n            </mat-button-toggle>\n            <mat-button-toggle\n              value=\"reportbuilder-polarareachart\"\n              (click)=\"setChartType(5)\"\n            >\n              <mat-icon\n                fontSet=\"ajf-icon\"\n                fontIcon=\"reportbuilder-polarareachart\"\n              >\n              </mat-icon>\n            </mat-button-toggle>\n          </div>\n          <div class=\"ajf-row\">\n            <mat-button-toggle\n              value=\"reportbuilder-piechart\"\n              (click)=\"setChartType(6)\"\n            >\n              <mat-icon fontSet=\"ajf-icon\" fontIcon=\"reportbuilder-piechart\">\n              </mat-icon>\n            </mat-button-toggle>\n            <mat-button-toggle\n              value=\"reportbuilder-donoughtchart\"\n              (click)=\"setChartType(7)\"\n            >\n              <mat-icon\n                fontSet=\"ajf-icon\"\n                fontIcon=\"reportbuilder-donoughtchart\"\n              >\n              </mat-icon>\n            </mat-button-toggle>\n          </div>\n        </mat-button-toggle-group>\n        <h3>{{'Labels'|transloco}}</h3>\n        <ajf-report-builder-forms-analyzer></ajf-report-builder-forms-analyzer>\n        <ajf-theme-color\n          [section]=\"'chart'\"\n          [label]=\"tabValue\"\n        ></ajf-theme-color>\n        <mat-card>\n          <mat-card-header>\n            <mat-card-title>{{'Border width'|transloco}}</mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n            <mat-slider\n              min=\"1\"\n              max=\"100\"\n              style=\"width: 99%\"\n              step=\"1\"\n              (change)=\"setChartBorderColor($event.value)\"\n              [value]=\"chartBorderWidth\"\n              tickInterval=\"auto\"\n              thumbLabel\n            >\n            </mat-slider>\n          </mat-card-content>\n        </mat-card>\n        <mat-tab-group (selectChange)=\"setTab($event)\">\n          <mat-tab label=\"Background\">\n            <mat-list>\n              <ng-template\n                ngFor\n                let-color\n                [ngForOf]=\"(getChartBackgroundColor|async)\"\n                let-idx=\"index\"\n              >\n                <mat-list-item>\n                  <span [style.background]=\"color\"> {{ color }} </span>\n                  <button mat-button (click)=\"removeChartBackgroundColor(idx)\">\n                    {{'Remove'|transloco}}\n                  </button>\n                </mat-list-item>\n              </ng-template>\n            </mat-list>\n          </mat-tab>\n          <mat-tab label=\"Border\">\n            <mat-list>\n              <ng-template\n                ngFor\n                let-color\n                [ngForOf]=\"(getChartBorderColor|async)\"\n                let-idx=\"index\"\n              >\n                <mat-list-item>\n                  <span [style.background]=\"color\"> {{ color }} </span>\n                  <button mat-button (click)=\"removeChartBorderColor(idx)\">\n                    remove\n                  </button>\n                </mat-list-item>\n              </ng-template>\n            </mat-list>\n          </mat-tab>\n        </mat-tab-group>\n      </ng-template>\n      <ng-template [ngSwitchCase]=\"5\">\n        <ajf-report-builder-forms-analyzer></ajf-report-builder-forms-analyzer>\n      </ng-template>\n    </div>\n    <button\n      mat-button\n      (click)=\"visibilitySection = !visibilitySection\"\n      [ngClass]=\"{'ajf-selected': visibilitySection}\"\n    >\n      {{ widgetName|transloco }}\n      <ng-container>{{'Visibility'|transloco}}</ng-container>\n    </button>\n    <div [style.display]=\"visibilitySection ? 'block' : 'none'\">\n      <ajf-report-builder-condition-editor\n        [visibility]=\"currentWidget.visibility\"\n      ></ajf-report-builder-condition-editor>\n    </div>\n  </div>\n</ng-template>\n", styles: ["ajf-report-builder-properties .ajf-selected{background-color:darkred;color:#fff}ajf-report-builder-properties .ajf-style-container{height:auto;width:100%;position:relative;margin-bottom:60px;text-align:center}ajf-report-builder-properties .ajf-style-container mat-tab-group .ajf-style-panel{min-height:350px}ajf-report-builder-properties .ajf-style-container .ajf-style-background,ajf-report-builder-properties .ajf-style-container .ajf-style-color{width:100%;height:350px;position:relative;margin:30px}ajf-report-builder-properties .ajf-style-container .mat-list-item-content{position:normal !important;display:block !important;height:350px !important}ajf-report-builder-properties .ajf-style-container mat-tab-group .mat-tab-body-wrapper,ajf-report-builder-properties .ajf-style-container mat-tab-group .mat-list-item-content{position:normal !important;display:block !important;height:350px !important}ajf-report-builder-properties .ajf-content{margin-top:10px;margin-right:15px;margin-bottom:290px;margin-left:15px}ajf-report-builder-properties .ajf-content .ajf-menu-css{width:100% !important;font-size:10px !important}ajf-report-builder-properties .ajf-content .ajf-menu-css mat-button-toggle{width:33% !important}ajf-report-builder-properties .ajf-content mat-button-toggle-group{width:100% !important}ajf-report-builder-properties .ajf-content mat-button-toggle-group mat-button-toggle{width:auto !important}ajf-report-builder-properties .ajf-content mat-button-toggle-group mat-button-toggle mat-icon{margin:15px}ajf-report-builder-properties button{width:100%;margin-bottom:30px}ajf-report-builder-properties .ajf-hide-menu{width:auto !important}ajf-report-builder-properties h1,ajf-report-builder-properties h3,ajf-report-builder-properties h5{text-align:center}ajf-report-builder-properties .ajf-row{display:flex;flex-direction:column;width:100%}ajf-report-builder-properties .mat-tab-body.mat-tab-active{min-height:600px}ajf-report-builder-properties mat-grid-list{width:100%}ajf-report-builder-properties mat-grid-tile{overflow:visible !important}ajf-report-builder-properties mat-grid-tile.ajf-lal{text-align:left}ajf-report-builder-properties .ajf-chart-buttons mat-icon{font-size:15px}ajf-report-builder-properties .ajf-layout-preview{background-color:#fff;width:100%;font-size:.9em;box-sizing:border-box;position:relative}ajf-report-builder-properties .ajf-layout-preview .ajf-top-label{position:absolute;top:1em;left:1em;text-align:left}ajf-report-builder-properties .ajf-layout-preview .ajf-vtop{position:absolute;top:1em;right:0;left:0}ajf-report-builder-properties .ajf-layout-preview .ajf-vbottom{position:absolute;bottom:0;right:0;left:0}ajf-report-builder-properties .ajf-layout-preview .ajf-vright{position:absolute;top:50%;right:1em;margin-top:.5em}ajf-report-builder-properties .ajf-layout-preview .ajf-vleft{position:absolute;top:50%;left:1em;margin-top:.5em}ajf-report-builder-properties .ajf-layout-preview .ajf-vtl{position:absolute;top:1em;left:1em}ajf-report-builder-properties .ajf-layout-preview .ajf-vtr{position:absolute;top:1em;right:1em}ajf-report-builder-properties .ajf-layout-preview .ajf-vbl{position:absolute;bottom:1em;left:1em}ajf-report-builder-properties .ajf-layout-preview .ajf-vbr{position:absolute;bottom:1em;right:1em}ajf-report-builder-properties .ajf-layout-preview .ajf-margin-box{background-color:#fff;padding:3em;position:relative;border:solid 1px #ccc}ajf-report-builder-properties .ajf-layout-preview .ajf-margin-box .ajf-border-box{background-color:#ddd;padding:3em;position:relative;box-sizing:border-box}ajf-report-builder-properties .ajf-layout-preview .ajf-margin-box .ajf-border-box>.ajf-top-label{left:4em}ajf-report-builder-properties .ajf-layout-preview .ajf-margin-box .ajf-border-box .ajf-padding-box{padding:3em;background-color:#aaa;position:relative;box-sizing:border-box}ajf-report-builder-properties .ajf-layout-preview .ajf-margin-box .ajf-border-box .ajf-padding-box .ajf-content-box{background-color:#888;padding:2em;text-align:center;box-sizing:border-box}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.MatDialog }, { type: i2.AjfReportBuilderService }]; } });
//# sourceMappingURL=data:application/json;base64,