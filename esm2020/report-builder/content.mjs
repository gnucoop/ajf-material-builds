/**
 * @license
 * Copyright (C) Gnucoop soc. coop.
 *
 * This file is part of the Advanced JSON forms (ajf).
 *
 * Advanced JSON forms (ajf) is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
 * General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Advanced JSON forms (ajf).
 * If not, see http://www.gnu.org/licenses/.
 *
 */
import { AjfWidgetType } from '@ajf/core/reports';
import { deepCopy } from '@ajf/core/utils';
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation, } from '@angular/core';
import { Subscription, timer } from 'rxjs';
import { AjfReportBuilderService } from './report-builder-service';
import * as i0 from "@angular/core";
import * as i1 from "./report-builder-service";
import * as i2 from "@angular/material/list";
import * as i3 from "./widgets-row-buttons";
import * as i4 from "./renderer-widget";
import * as i5 from "@angular/common";
import * as i6 from "@ajf/core/common";
import * as i7 from "@angular/cdk/drag-drop";
import * as i8 from "@ngneat/transloco";
/**
 *  manage the content page
 *
 * @export
 */
export class AjfReportBuilderContent {
    constructor(_service, _cdRef) {
        this._service = _service;
        this._cdRef = _cdRef;
        // this boolean sign if is dragged a widget
        this.onDragged = false;
        /**
         *  observe the status of the fixed zoom
         *
         * @memberOf AjfReportBuilderContent
         */
        this.fixedZoom = false;
        // this boolean sign if widget is in drag enter status
        this.onDragEnter = {};
        this.show = false;
        // this array contains all widget locate in header zone
        this.headerWidgets = [];
        // this array contains all widget locate in content zone
        this.contentWidgets = [];
        // this array contains all widget locate in footer zone
        this.footerWidgets = [];
        this.onOver = false;
        // this is the current widget
        this.currentWidget = null;
        /**
         * if true mouse event is on dragged status
         *
         * @memberOf AjfReportBuilderContent
         */
        this.showActions = false;
        this._onDraggedSub = Subscription.EMPTY;
        this._fixedZoomSub = Subscription.EMPTY;
        this._onDragEnterSub = Subscription.EMPTY;
        this._headerWidgetsSub = Subscription.EMPTY;
        this._contentWidgetsSub = Subscription.EMPTY;
        this._footerWidgetsSub = Subscription.EMPTY;
        this._onOverSub = Subscription.EMPTY;
        this._currentWidgetSub = Subscription.EMPTY;
        this.headerStyles = this._service.headerStyles;
        this.contentStyles = this._service.contentStyles;
        this.footerStyles = this._service.footerStyles;
    }
    onMouseOver() {
        this.showActions = true;
        this._service.overStarted();
    }
    onMouseLeave() {
        this.showActions = false;
        this._service.overEnded();
    }
    canDropPredicate(dropZones) {
        return item => {
            for (let i = 0; i < item.data.dropZones.length; i++) {
                if (dropZones.indexOf(item.data.dropZones[i]) > -1) {
                    return true;
                }
            }
            return false;
        };
    }
    isLayout(widget) {
        return widget.widgetType === AjfWidgetType.Layout;
    }
    /**
     *  sign the start of mouse drag with 200 ms of delay
     *
     * @memberOf AjfReportBuilderContent
     */
    onDragStartHandler() {
        let s = timer(200).subscribe(() => {
            if (s != null) {
                s.unsubscribe();
            }
            this._service.dragStarted();
        });
    }
    /**
     * sign the end of mouse drag
     *
     * @memberOf AjfReportBuilderContent
     */
    onDragEndHandler() {
        this._service.dragEnded();
    }
    /**
     *  sign the enter of mouse drag
     *
     * @memberOf AjfReportBuilderContent
     */
    onDragEnterHandler(array, index) {
        if (index == null) {
            return;
        }
        this._service.dragEnter(array, index);
    }
    /**
     * sign the leave of mouse drag
     *
     * @memberOf AjfReportBuilderContent
     */
    onDragLeaveHandler() {
        this._service.dragLeave();
    }
    /**
     *  return true if array and index is === with array and index of onDragEnter
     *
     * @param array
     * @param index
     *
     * @memberOf AjfReportBuilderContent
     */
    onDragEnterCheck(array, index) {
        if (array === this.onDragEnter.array && (index === this.onDragEnter.index || index === -1)) {
            return true;
        }
        else {
            return false;
        }
    }
    /**
     * remove widget element from type array in idx position
     *
     * @param type can be header content or footer
     * @param idx
     *
     * @memberOf AjfReportBuilderContent
     */
    remove(type, idx) {
        this._service.remove(type, idx);
    }
    /**
     * add widget element into type array in idx position
     *
     * @param type
     * @param event
     *
     * @memberOf AjfReportBuilderContent
     */
    addToList(arrayTo, event, to) {
        this.onDragEndHandler();
        this._service.setOrigin(arrayTo);
        const itemData = event.item.data;
        if (itemData.fromColumn != null) {
            this._service.removeWidgetToColumn(itemData.fromColumn, itemData.fromIndex);
            this.currentWidget = itemData.widget;
        }
        else if (itemData.widget != null) {
            this.remove(itemData.arrayFrom, itemData.from);
            this.currentWidget = itemData.widget;
        }
        else if (itemData.json != null && itemData.json !== '') {
            this.currentWidget = deepCopy(itemData.json);
        }
        else {
            let obj = { 'widgetType': AjfWidgetType[itemData.widgetType] };
            this.currentWidget = deepCopy(obj);
        }
        this.onDragEndHandler();
        if (this.currentWidget != null) {
            switch (arrayTo) {
                case 'header':
                    this._service.addHeaderWidget(this.currentWidget, to);
                    break;
                case 'content':
                    this._service.addContentWidget(this.currentWidget, to);
                    break;
                case 'footer':
                    this._service.addfooterWidget(this.currentWidget, to);
                    break;
            }
        }
        this.onDragLeaveHandler();
    }
    ngOnInit() {
        this._headerWidgetsSub = this._service.headerWidgets.subscribe(x => {
            this.headerWidgets = x.widgets;
        });
        this._contentWidgetsSub = this._service.contentWidgets.subscribe(x => {
            this.contentWidgets = x.widgets;
        });
        this._footerWidgetsSub = this._service.footerWidgets.subscribe(x => {
            this.footerWidgets = x.widgets;
        });
        this._onDraggedSub = this._service.onDragged.subscribe(x => {
            this.onDragged = x;
        });
        this._fixedZoomSub = this._service.fixedZoom.subscribe(bool => {
            this.fixedZoom = bool;
        });
        this._onDragEnterSub = this._service.onDragEnter.subscribe(x => {
            this.onDragEnter = x;
        });
        this._onOverSub = this._service.onOver.subscribe(x => {
            this.onOver = x;
        });
    }
    ngAfterViewChecked() {
        this._cdRef.detectChanges();
    }
    ngOnDestroy() {
        [
            this._headerWidgetsSub,
            this._contentWidgetsSub,
            this._footerWidgetsSub,
            this._currentWidgetSub,
            this._onDraggedSub,
            this._fixedZoomSub,
            this._onOverSub,
            this._onDragEnterSub,
        ].forEach(s => {
            s.unsubscribe();
        });
    }
}
AjfReportBuilderContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.0-next.15", ngImport: i0, type: AjfReportBuilderContent, deps: [{ token: i1.AjfReportBuilderService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
AjfReportBuilderContent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.0.0-next.15", type: AjfReportBuilderContent, selector: "ajf-report-builder-content", host: { listeners: { "mouseover": "onMouseOver()", "mouseleave": "onMouseLeave()" } }, ngImport: i0, template: "<div\n  class=\"ajf-overlay\"\n  [ngClass]=\"{'ajf-drag-mode': onDragged, 'ajf-zoom-mode': fixedZoom}\"\n  [applyStyles]=\"reportStyles|async\"\n  (mouseenter)=\"show = true\"\n  (mouseleave)=\"show = false\"\n>\n  <div\n    class=\"ajf-header\"\n    [ngClass]=\"{'ajf-is-on-over': onDragged || show}\"\n    [applyStyles]=\"(headerStyles|async)\"\n  >\n    <mat-list *ngFor=\"let t of headerWidgets; let i = index\">\n      <div\n        cdkDropList\n        class=\"ajf-drop-zone\"\n        [ngClass]=\"{'ajf-show': true}\"\n        [cdkDropListEnterPredicate]=\"canDropPredicate(['widget','column'])\"\n        (cdkDropListDropped)=\"addToList('header', $event, i);\"\n        (dragenter)=\"onDragEnterHandler('header', i)\"\n        (dragleave)=\"onDragLeaveHandler()\"\n      ></div>\n      <ajf-report-builder-widgets-row-buttons\n        cdkDrag\n        [cdkDragData]=\"{widget: t,fromIndex: i,arrayFrom: 'header', dropZones: ['widget','column']}\"\n        [style.display]=\"(showActions || onDragged)? 'block' : 'none'\"\n        [from]=\"'header'\"\n        [widget]=\"t\"\n        [position]=\"i\"\n        (cdkDragStarted)=\"onDragStartHandler();\"\n        (cdkDragEnded)=\"onDragEndHandler()\"\n      >\n      </ajf-report-builder-widgets-row-buttons>\n      <ajf-report-builder-renderer-widget\n        [widget]=\"t\"\n        [position]=\"i\"\n        [section]=\"'header'\"\n        (currentWidget)=\"currentWidget\"\n      ></ajf-report-builder-renderer-widget>\n    </mat-list>\n    <div\n      cdkDropList\n      class=\"ajf-drop-zone-container\"\n      [ngClass]=\"{'ajf-show': true}\"\n      [cdkDropListEnterPredicate]=\"canDropPredicate(['header','widget','column'])\"\n      (cdkDropListDropped)=\"addToList('header', $event)\"\n      (dragenter)=\"onDragEnterHandler('header', headerWidgets?.length)\"\n      (dragleave)=\"onDragLeaveHandler()\"\n    ></div>\n  </div>\n  <div\n    class=\"ajf-content\"\n    [ngClass]=\"{'ajf-is-on-over': onDragged || show}\"\n    [applyStyles]=\"contentStyles|async\"\n  >\n    <mat-list *ngFor=\"let t of contentWidgets; let i = index\">\n      <div\n        cdkDropList\n        class=\"ajf-drop-zone\"\n        [ngClass]=\"{'ajf-show': true}\"\n        [cdkDropListEnterPredicate]=\"canDropPredicate(['widget','column'])\"\n        (cdkDropListDropped)=\"addToList('content', $event, i)\"\n        (dragenter)=\"onDragEnterHandler('content', i)\"\n        (dragleave)=\"onDragLeaveHandler()\"\n      ></div>\n      <ajf-report-builder-widgets-row-buttons\n        cdkDrag\n        [cdkDragData]=\"{widget: t, fromIndex: i, arrayFrom: 'content', dropZones: ['widget','column']}\"\n        [style.display]=\"showActions ? 'block' : 'none'\"\n        [from]=\"'content'\"\n        [widget]=\"t\"\n        [position]=\"i\"\n        (cdkDragStarted)=\"onDragStartHandler()\"\n        (cdkDragEnded)=\"onDragEndHandler();\"\n      >\n      </ajf-report-builder-widgets-row-buttons>\n      <ajf-report-builder-renderer-widget\n        [widget]=\"t\"\n        [position]=\"i\"\n        [section]=\"'content'\"\n        (currentWidget)=\"currentWidget\"\n      ></ajf-report-builder-renderer-widget>\n    </mat-list>\n    <div\n      cdkDropList\n      class=\"ajf-drop-zone-container\"\n      [ngClass]=\"{'ajf-show': onDragged}\"\n      [cdkDropListEnterPredicate]=\"canDropPredicate(['content','widget','column'])\"\n      (cdkDropListDropped)=\"addToList('content', $event)\"\n      (dragenter)=\"onDragEnterHandler('content', contentWidgets?.length)\"\n      (dragleave)=\"onDragLeaveHandler()\"\n    >\n      <label>{{'Drop here'|transloco}}</label>\n    </div>\n  </div>\n  <div\n    class=\"ajf-footer\"\n    [ngClass]=\"{'ajf-is-on-over': onDragged || show}\"\n    [applyStyles]=\"footerStyles|async\"\n  >\n    <mat-list *ngFor=\"let t of footerWidgets; let i = index\">\n      <div\n        cdkDropList\n        class=\"ajf-drop-zone\"\n        [ngClass]=\"{'ajf-show': true}\"\n        [cdkDropListEnterPredicate]=\"canDropPredicate(['widget','column'])\"\n        (cdkDropListDropped)=\"addToList('footer', $event, i)\"\n        (dragenter)=\"onDragEnterHandler('footer', i)\"\n        (dragleave)=\"onDragLeaveHandler()\"\n      ></div>\n      <ajf-report-builder-widgets-row-buttons\n        cdkDrag\n        [cdkDragData]=\"{widget: t, fromIndex: i, arrayFrom: 'footer', dropZones: ['widget','column']}\"\n        [style.display]=\"showActions ? 'block' : 'none'\"\n        [from]=\"'footer'\"\n        [widget]=\"t\"\n        [position]=\"i\"\n        (cdkDragStarted)=\"onDragStartHandler()\"\n        (cdkDragEnded)=\"onDragEndHandler()\"\n      >\n      </ajf-report-builder-widgets-row-buttons>\n      <ajf-report-builder-renderer-widget\n        [widget]=\"t\"\n        [position]=\"i\"\n        [section]=\"'footer'\"\n        (currentWidget)=\"currentWidget\"\n      ></ajf-report-builder-renderer-widget>\n    </mat-list>\n    <div\n      cdkDropList\n      class=\"ajf-drop-zone-container\"\n      [ngClass]=\"{'ajf-show': onDragged}\"\n      [cdkDropListEnterPredicate]=\"canDropPredicate(['footer','widget','column'])\"\n      (cdkDropListDropped)=\"addToList('footer', $event)\"\n      (dragenter)=\"onDragEnterHandler('footer', headerWidgets?.length)\"\n      (dragleave)=\"onDragLeaveHandler()\"\n    >\n      <label>{{'Drop here'|transloco}}</label>\n    </div>\n  </div>\n</div>\n", styles: ["ajf-report-builder-content{text-align:center;display:block;margin-bottom:300px}ajf-report-builder-content .ajf-overlay.ajf-drag-mode{max-height:700px;margin-top:50px;background-color:beige}ajf-report-builder-content .ajf-drag-mode{overflow:scroll;zoom:50%}ajf-report-builder-content .ajf-drag-mode .ajf-header,ajf-report-builder-content .ajf-drag-mode .ajf-content,ajf-report-builder-content .ajf-drag-mode .ajf-footer{margin-bottom:20px;border:23px solid rgba(66,134,244,.2)}ajf-report-builder-content .ajf-drag-mode .ajf-header .ajf-drop-zone,ajf-report-builder-content .ajf-drag-mode .ajf-content .ajf-drop-zone,ajf-report-builder-content .ajf-drag-mode .ajf-footer .ajf-drop-zone{width:auto;background-color:rgba(66,134,244,.2);border:23px solid #fff;position:relative;min-height:50px !important;z-index:0;opacity:1}ajf-report-builder-content .ajf-drag-mode .ajf-header .ajf-drop-zone-container,ajf-report-builder-content .ajf-drag-mode .ajf-content .ajf-drop-zone-container,ajf-report-builder-content .ajf-drag-mode .ajf-footer .ajf-drop-zone-container{background-color:rgba(66,134,244,.2) !important;border:23px solid #fff !important}ajf-report-builder-content .ajf-drag-mode .ajf-header,ajf-report-builder-content .ajf-drag-mode .ajf-footer{border:23px solid rgba(255,102,102,.4) !important}ajf-report-builder-content .ajf-drag-mode .ajf-header .ajf-drop-zone-container,ajf-report-builder-content .ajf-drag-mode .ajf-footer .ajf-drop-zone-container{background-color:rgba(255,102,102,.4) !important}ajf-report-builder-content .ajf-drag-mode .ajf-header .ajf-drop-zone,ajf-report-builder-content .ajf-drag-mode .ajf-footer .ajf-drop-zone{background-color:rgba(255,102,102,.4) !important}ajf-report-builder-content .ajf-drag-mode .ajf-drop-zone-container{background-color:#000;border:16px solid #fff;position:relative;opacity:0;z-index:0;min-height:50px !important;display:none !important}ajf-report-builder-content .ajf-zoom-mode{zoom:50%}ajf-report-builder-content .ajf-header,ajf-report-builder-content .ajf-content,ajf-report-builder-content .ajf-footer{height:100%;min-height:50px;position:relative;text-align:center;display:block}ajf-report-builder-content .ajf-header .mat-list,ajf-report-builder-content .ajf-content .mat-list,ajf-report-builder-content .ajf-footer .mat-list{padding:0}ajf-report-builder-content .ajf-header .ajf-zoom:hover,ajf-report-builder-content .ajf-content .ajf-zoom:hover,ajf-report-builder-content .ajf-footer .ajf-zoom:hover{padding-bottom:100px;overflow-y:scroll}ajf-report-builder-content .ajf-content:hover{background-color:rgba(66,134,244,.2) !important}ajf-report-builder-content .ajf-header:hover,ajf-report-builder-content .ajf-footer:hover{background-color:rgba(255,102,102,.4)}ajf-report-builder-content .ajf-header:hover,ajf-report-builder-content .ajf-content:hover,ajf-report-builder-content .ajf-footer:hover,ajf-report-builder-content .ajf-is-on-over{border:3px dotted #3a7999}ajf-report-builder-content .ajf-header:hover label,ajf-report-builder-content .ajf-content:hover label,ajf-report-builder-content .ajf-footer:hover label,ajf-report-builder-content .ajf-is-on-over label{visibility:visible !important;opacity:.4;display:block !important}ajf-report-builder-content .ajf-header:hover .ajf-drop-zone-container,ajf-report-builder-content .ajf-content:hover .ajf-drop-zone-container,ajf-report-builder-content .ajf-footer:hover .ajf-drop-zone-container,ajf-report-builder-content .ajf-is-on-over .ajf-drop-zone-container{display:block !important}ajf-report-builder-content .ajf-header:hover mat-list button,ajf-report-builder-content .ajf-content:hover mat-list button,ajf-report-builder-content .ajf-footer:hover mat-list button,ajf-report-builder-content .ajf-is-on-over mat-list button{display:inline}ajf-report-builder-content .ajf-my-content{width:100%;white-space:nowrap;overflow-y:auto}ajf-report-builder-content .ajf-show,ajf-report-builder-content .ajf-on-drag-over{opacity:1 !important;z-index:10}ajf-report-builder-content mat-list{position:relative;display:block}\n"], components: [{ type: i2.MatList, selector: "mat-list, mat-action-list", inputs: ["disableRipple", "disabled"], exportAs: ["matList"] }, { type: i3.AjfReportBuilderWidgetsRowButtons, selector: "ajf-report-builder-widgets-row-buttons", inputs: ["from", "fromWidget", "position", "widget", "child", "isOver"] }, { type: i4.AjfReportBuilderRendererWidget, selector: "ajf-report-builder-renderer-widget", inputs: ["widget", "position", "section"] }], directives: [{ type: i5.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i6.ApplyStylesDirective, selector: "[applyStyles]", inputs: ["applyStyles"] }, { type: i5.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i7.CdkDropList, selector: "[cdkDropList], cdk-drop-list", inputs: ["cdkDropListConnectedTo", "cdkDropListData", "cdkDropListOrientation", "id", "cdkDropListLockAxis", "cdkDropListDisabled", "cdkDropListSortingDisabled", "cdkDropListEnterPredicate", "cdkDropListSortPredicate", "cdkDropListAutoScrollDisabled", "cdkDropListAutoScrollStep"], outputs: ["cdkDropListDropped", "cdkDropListEntered", "cdkDropListExited", "cdkDropListSorted"], exportAs: ["cdkDropList"] }, { type: i7.CdkDrag, selector: "[cdkDrag]", inputs: ["cdkDragData", "cdkDragLockAxis", "cdkDragRootElement", "cdkDragBoundary", "cdkDragStartDelay", "cdkDragFreeDragPosition", "cdkDragDisabled", "cdkDragConstrainPosition", "cdkDragPreviewClass", "cdkDragPreviewContainer"], outputs: ["cdkDragStarted", "cdkDragReleased", "cdkDragEnded", "cdkDragEntered", "cdkDragExited", "cdkDragDropped", "cdkDragMoved"], exportAs: ["cdkDrag"] }], pipes: { "async": i5.AsyncPipe, "transloco": i8.TranslocoPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.0-next.15", ngImport: i0, type: AjfReportBuilderContent, decorators: [{
            type: Component,
            args: [{ selector: 'ajf-report-builder-content', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: { '(mouseover)': 'onMouseOver()', '(mouseleave)': 'onMouseLeave()' }, template: "<div\n  class=\"ajf-overlay\"\n  [ngClass]=\"{'ajf-drag-mode': onDragged, 'ajf-zoom-mode': fixedZoom}\"\n  [applyStyles]=\"reportStyles|async\"\n  (mouseenter)=\"show = true\"\n  (mouseleave)=\"show = false\"\n>\n  <div\n    class=\"ajf-header\"\n    [ngClass]=\"{'ajf-is-on-over': onDragged || show}\"\n    [applyStyles]=\"(headerStyles|async)\"\n  >\n    <mat-list *ngFor=\"let t of headerWidgets; let i = index\">\n      <div\n        cdkDropList\n        class=\"ajf-drop-zone\"\n        [ngClass]=\"{'ajf-show': true}\"\n        [cdkDropListEnterPredicate]=\"canDropPredicate(['widget','column'])\"\n        (cdkDropListDropped)=\"addToList('header', $event, i);\"\n        (dragenter)=\"onDragEnterHandler('header', i)\"\n        (dragleave)=\"onDragLeaveHandler()\"\n      ></div>\n      <ajf-report-builder-widgets-row-buttons\n        cdkDrag\n        [cdkDragData]=\"{widget: t,fromIndex: i,arrayFrom: 'header', dropZones: ['widget','column']}\"\n        [style.display]=\"(showActions || onDragged)? 'block' : 'none'\"\n        [from]=\"'header'\"\n        [widget]=\"t\"\n        [position]=\"i\"\n        (cdkDragStarted)=\"onDragStartHandler();\"\n        (cdkDragEnded)=\"onDragEndHandler()\"\n      >\n      </ajf-report-builder-widgets-row-buttons>\n      <ajf-report-builder-renderer-widget\n        [widget]=\"t\"\n        [position]=\"i\"\n        [section]=\"'header'\"\n        (currentWidget)=\"currentWidget\"\n      ></ajf-report-builder-renderer-widget>\n    </mat-list>\n    <div\n      cdkDropList\n      class=\"ajf-drop-zone-container\"\n      [ngClass]=\"{'ajf-show': true}\"\n      [cdkDropListEnterPredicate]=\"canDropPredicate(['header','widget','column'])\"\n      (cdkDropListDropped)=\"addToList('header', $event)\"\n      (dragenter)=\"onDragEnterHandler('header', headerWidgets?.length)\"\n      (dragleave)=\"onDragLeaveHandler()\"\n    ></div>\n  </div>\n  <div\n    class=\"ajf-content\"\n    [ngClass]=\"{'ajf-is-on-over': onDragged || show}\"\n    [applyStyles]=\"contentStyles|async\"\n  >\n    <mat-list *ngFor=\"let t of contentWidgets; let i = index\">\n      <div\n        cdkDropList\n        class=\"ajf-drop-zone\"\n        [ngClass]=\"{'ajf-show': true}\"\n        [cdkDropListEnterPredicate]=\"canDropPredicate(['widget','column'])\"\n        (cdkDropListDropped)=\"addToList('content', $event, i)\"\n        (dragenter)=\"onDragEnterHandler('content', i)\"\n        (dragleave)=\"onDragLeaveHandler()\"\n      ></div>\n      <ajf-report-builder-widgets-row-buttons\n        cdkDrag\n        [cdkDragData]=\"{widget: t, fromIndex: i, arrayFrom: 'content', dropZones: ['widget','column']}\"\n        [style.display]=\"showActions ? 'block' : 'none'\"\n        [from]=\"'content'\"\n        [widget]=\"t\"\n        [position]=\"i\"\n        (cdkDragStarted)=\"onDragStartHandler()\"\n        (cdkDragEnded)=\"onDragEndHandler();\"\n      >\n      </ajf-report-builder-widgets-row-buttons>\n      <ajf-report-builder-renderer-widget\n        [widget]=\"t\"\n        [position]=\"i\"\n        [section]=\"'content'\"\n        (currentWidget)=\"currentWidget\"\n      ></ajf-report-builder-renderer-widget>\n    </mat-list>\n    <div\n      cdkDropList\n      class=\"ajf-drop-zone-container\"\n      [ngClass]=\"{'ajf-show': onDragged}\"\n      [cdkDropListEnterPredicate]=\"canDropPredicate(['content','widget','column'])\"\n      (cdkDropListDropped)=\"addToList('content', $event)\"\n      (dragenter)=\"onDragEnterHandler('content', contentWidgets?.length)\"\n      (dragleave)=\"onDragLeaveHandler()\"\n    >\n      <label>{{'Drop here'|transloco}}</label>\n    </div>\n  </div>\n  <div\n    class=\"ajf-footer\"\n    [ngClass]=\"{'ajf-is-on-over': onDragged || show}\"\n    [applyStyles]=\"footerStyles|async\"\n  >\n    <mat-list *ngFor=\"let t of footerWidgets; let i = index\">\n      <div\n        cdkDropList\n        class=\"ajf-drop-zone\"\n        [ngClass]=\"{'ajf-show': true}\"\n        [cdkDropListEnterPredicate]=\"canDropPredicate(['widget','column'])\"\n        (cdkDropListDropped)=\"addToList('footer', $event, i)\"\n        (dragenter)=\"onDragEnterHandler('footer', i)\"\n        (dragleave)=\"onDragLeaveHandler()\"\n      ></div>\n      <ajf-report-builder-widgets-row-buttons\n        cdkDrag\n        [cdkDragData]=\"{widget: t, fromIndex: i, arrayFrom: 'footer', dropZones: ['widget','column']}\"\n        [style.display]=\"showActions ? 'block' : 'none'\"\n        [from]=\"'footer'\"\n        [widget]=\"t\"\n        [position]=\"i\"\n        (cdkDragStarted)=\"onDragStartHandler()\"\n        (cdkDragEnded)=\"onDragEndHandler()\"\n      >\n      </ajf-report-builder-widgets-row-buttons>\n      <ajf-report-builder-renderer-widget\n        [widget]=\"t\"\n        [position]=\"i\"\n        [section]=\"'footer'\"\n        (currentWidget)=\"currentWidget\"\n      ></ajf-report-builder-renderer-widget>\n    </mat-list>\n    <div\n      cdkDropList\n      class=\"ajf-drop-zone-container\"\n      [ngClass]=\"{'ajf-show': onDragged}\"\n      [cdkDropListEnterPredicate]=\"canDropPredicate(['footer','widget','column'])\"\n      (cdkDropListDropped)=\"addToList('footer', $event)\"\n      (dragenter)=\"onDragEnterHandler('footer', headerWidgets?.length)\"\n      (dragleave)=\"onDragLeaveHandler()\"\n    >\n      <label>{{'Drop here'|transloco}}</label>\n    </div>\n  </div>\n</div>\n", styles: ["ajf-report-builder-content{text-align:center;display:block;margin-bottom:300px}ajf-report-builder-content .ajf-overlay.ajf-drag-mode{max-height:700px;margin-top:50px;background-color:beige}ajf-report-builder-content .ajf-drag-mode{overflow:scroll;zoom:50%}ajf-report-builder-content .ajf-drag-mode .ajf-header,ajf-report-builder-content .ajf-drag-mode .ajf-content,ajf-report-builder-content .ajf-drag-mode .ajf-footer{margin-bottom:20px;border:23px solid rgba(66,134,244,.2)}ajf-report-builder-content .ajf-drag-mode .ajf-header .ajf-drop-zone,ajf-report-builder-content .ajf-drag-mode .ajf-content .ajf-drop-zone,ajf-report-builder-content .ajf-drag-mode .ajf-footer .ajf-drop-zone{width:auto;background-color:rgba(66,134,244,.2);border:23px solid #fff;position:relative;min-height:50px !important;z-index:0;opacity:1}ajf-report-builder-content .ajf-drag-mode .ajf-header .ajf-drop-zone-container,ajf-report-builder-content .ajf-drag-mode .ajf-content .ajf-drop-zone-container,ajf-report-builder-content .ajf-drag-mode .ajf-footer .ajf-drop-zone-container{background-color:rgba(66,134,244,.2) !important;border:23px solid #fff !important}ajf-report-builder-content .ajf-drag-mode .ajf-header,ajf-report-builder-content .ajf-drag-mode .ajf-footer{border:23px solid rgba(255,102,102,.4) !important}ajf-report-builder-content .ajf-drag-mode .ajf-header .ajf-drop-zone-container,ajf-report-builder-content .ajf-drag-mode .ajf-footer .ajf-drop-zone-container{background-color:rgba(255,102,102,.4) !important}ajf-report-builder-content .ajf-drag-mode .ajf-header .ajf-drop-zone,ajf-report-builder-content .ajf-drag-mode .ajf-footer .ajf-drop-zone{background-color:rgba(255,102,102,.4) !important}ajf-report-builder-content .ajf-drag-mode .ajf-drop-zone-container{background-color:#000;border:16px solid #fff;position:relative;opacity:0;z-index:0;min-height:50px !important;display:none !important}ajf-report-builder-content .ajf-zoom-mode{zoom:50%}ajf-report-builder-content .ajf-header,ajf-report-builder-content .ajf-content,ajf-report-builder-content .ajf-footer{height:100%;min-height:50px;position:relative;text-align:center;display:block}ajf-report-builder-content .ajf-header .mat-list,ajf-report-builder-content .ajf-content .mat-list,ajf-report-builder-content .ajf-footer .mat-list{padding:0}ajf-report-builder-content .ajf-header .ajf-zoom:hover,ajf-report-builder-content .ajf-content .ajf-zoom:hover,ajf-report-builder-content .ajf-footer .ajf-zoom:hover{padding-bottom:100px;overflow-y:scroll}ajf-report-builder-content .ajf-content:hover{background-color:rgba(66,134,244,.2) !important}ajf-report-builder-content .ajf-header:hover,ajf-report-builder-content .ajf-footer:hover{background-color:rgba(255,102,102,.4)}ajf-report-builder-content .ajf-header:hover,ajf-report-builder-content .ajf-content:hover,ajf-report-builder-content .ajf-footer:hover,ajf-report-builder-content .ajf-is-on-over{border:3px dotted #3a7999}ajf-report-builder-content .ajf-header:hover label,ajf-report-builder-content .ajf-content:hover label,ajf-report-builder-content .ajf-footer:hover label,ajf-report-builder-content .ajf-is-on-over label{visibility:visible !important;opacity:.4;display:block !important}ajf-report-builder-content .ajf-header:hover .ajf-drop-zone-container,ajf-report-builder-content .ajf-content:hover .ajf-drop-zone-container,ajf-report-builder-content .ajf-footer:hover .ajf-drop-zone-container,ajf-report-builder-content .ajf-is-on-over .ajf-drop-zone-container{display:block !important}ajf-report-builder-content .ajf-header:hover mat-list button,ajf-report-builder-content .ajf-content:hover mat-list button,ajf-report-builder-content .ajf-footer:hover mat-list button,ajf-report-builder-content .ajf-is-on-over mat-list button{display:inline}ajf-report-builder-content .ajf-my-content{width:100%;white-space:nowrap;overflow-y:auto}ajf-report-builder-content .ajf-show,ajf-report-builder-content .ajf-on-drag-over{opacity:1 !important;z-index:10}ajf-report-builder-content mat-list{position:relative;display:block}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.AjfReportBuilderService }, { type: i0.ChangeDetectorRef }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9tYXRlcmlhbC9yZXBvcnQtYnVpbGRlci9jb250ZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL21hdGVyaWFsL3JlcG9ydC1idWlsZGVyL2NvbnRlbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FvQkc7QUFFSCxPQUFPLEVBQXVCLGFBQWEsRUFBQyxNQUFNLG1CQUFtQixDQUFDO0FBQ3RFLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUV6QyxPQUFPLEVBRUwsdUJBQXVCLEVBQ3ZCLGlCQUFpQixFQUNqQixTQUFTLEVBR1QsaUJBQWlCLEdBQ2xCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBYSxZQUFZLEVBQUUsS0FBSyxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBR3JELE9BQU8sRUFBQyx1QkFBdUIsRUFBQyxNQUFNLDBCQUEwQixDQUFDOzs7Ozs7Ozs7O0FBRWpFOzs7O0dBSUc7QUFTSCxNQUFNLE9BQU8sdUJBQXVCO0lBd0ZsQyxZQUFvQixRQUFpQyxFQUFVLE1BQXlCO1FBQXBFLGFBQVEsR0FBUixRQUFRLENBQXlCO1FBQVUsV0FBTSxHQUFOLE1BQU0sQ0FBbUI7UUFoRXhGLDJDQUEyQztRQUMzQyxjQUFTLEdBQUcsS0FBSyxDQUFDO1FBRWxCOzs7O1dBSUc7UUFDSCxjQUFTLEdBQUcsS0FBSyxDQUFDO1FBRWxCLHNEQUFzRDtRQUN0RCxnQkFBVyxHQUFRLEVBQUUsQ0FBQztRQUV0QixTQUFJLEdBQUcsS0FBSyxDQUFDO1FBRWIsdURBQXVEO1FBQ3ZELGtCQUFhLEdBQWdCLEVBQUUsQ0FBQztRQVFoQyx3REFBd0Q7UUFDeEQsbUJBQWMsR0FBZ0IsRUFBRSxDQUFDO1FBU2pDLHVEQUF1RDtRQUN2RCxrQkFBYSxHQUFnQixFQUFFLENBQUM7UUFFaEMsV0FB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QkFBaUI7WUFDdEIsSUFBSSxDQUFDLGlCQUFpQjtZQUN0QixJQUFJLENBQUMsYUFBYTtZQUNsQixJQUFJLENBQUMsYUFBYTtZQUNsQixJQUFJLENBQUMsVUFBVTtZQUNmLElBQUksQ0FBQyxlQUFlO1NBQ3JCLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQ1osQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ2xCLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7NEhBNVBVLHVCQUF1QjtnSEFBdkIsdUJBQXVCLHlKQ3BEcEMsMnZLQTZJQTttR0R6RmEsdUJBQXVCO2tCQVJuQyxTQUFTOytCQUNFLDRCQUE0QixpQkFHdkIsaUJBQWlCLENBQUMsSUFBSSxtQkFDcEIsdUJBQXVCLENBQUMsTUFBTSxRQUN6QyxFQUFDLGFBQWEsRUFBRSxlQUFlLEVBQUUsY0FBYyxFQUFFLGdCQUFnQixFQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChDKSBHbnVjb29wIHNvYy4gY29vcC5cbiAqXG4gKiBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgQWR2YW5jZWQgSlNPTiBmb3JtcyAoYWpmKS5cbiAqXG4gKiBBZHZhbmNlZCBKU09OIGZvcm1zIChhamYpIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vclxuICogbW9kaWZ5IGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzXG4gKiBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSxcbiAqIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogQWR2YW5jZWQgSlNPTiBmb3JtcyAoYWpmKSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gU2VlIHRoZSBHTlUgQWZmZXJvXG4gKiBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIEFkdmFuY2VkIEpTT04gZm9ybXMgKGFqZikuXG4gKiBJZiBub3QsIHNlZSBodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvLlxuICpcbiAqL1xuXG5pbXBvcnQge0FqZlN0eWxlcywgQWpmV2lkZ2V0LCBBamZXaWRnZXRUeXBlfSBmcm9tICdAYWpmL2NvcmUvcmVwb3J0cyc7XG5pbXBvcnQge2RlZXBDb3B5fSBmcm9tICdAYWpmL2NvcmUvdXRpbHMnO1xuaW1wb3J0IHtDZGtEcmFnLCBDZGtEcmFnRHJvcH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2RyYWctZHJvcCc7XG5pbXBvcnQge1xuICBBZnRlclZpZXdDaGVja2VkLFxuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gIENvbXBvbmVudCxcbiAgT25EZXN0cm95LFxuICBPbkluaXQsXG4gIFZpZXdFbmNhcHN1bGF0aW9uLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7T2JzZXJ2YWJsZSwgU3Vic2NyaXB0aW9uLCB0aW1lcn0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7QWpmUmVwb3J0QnVpbGRlckRyYWdEYXRhfSBmcm9tICcuL3JlcG9ydC1idWlsZGVyLWRyYWctZGF0YSc7XG5pbXBvcnQge0FqZlJlcG9ydEJ1aWxkZXJTZXJ2aWNlfSBmcm9tICcuL3JlcG9ydC1idWlsZGVyLXNlcnZpY2UnO1xuXG4vKipcbiAqICBtYW5hZ2UgdGhlIGNvbnRlbnQgcGFnZVxuICpcbiAqIEBleHBvcnRcbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYWpmLXJlcG9ydC1idWlsZGVyLWNvbnRlbnQnLFxuICB0ZW1wbGF0ZVVybDogJ2NvbnRlbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWydjb250ZW50LmNzcyddLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgaG9zdDogeycobW91c2VvdmVyKSc6ICdvbk1vdXNlT3ZlcigpJywgJyhtb3VzZWxlYXZlKSc6ICdvbk1vdXNlTGVhdmUoKSd9LFxufSlcbmV4cG9ydCBjbGFzcyBBamZSZXBvcnRCdWlsZGVyQ29udGVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJWaWV3Q2hlY2tlZCwgT25EZXN0cm95IHtcbiAgb25Nb3VzZU92ZXIoKTogdm9pZCB7XG4gICAgdGhpcy5zaG93QWN0aW9ucyA9IHRydWU7XG4gICAgdGhpcy5fc2VydmljZS5vdmVyU3RhcnRlZCgpO1xuICB9XG5cbiAgb25Nb3VzZUxlYXZlKCk6IHZvaWQge1xuICAgIHRoaXMuc2hvd0FjdGlvbnMgPSBmYWxzZTtcbiAgICB0aGlzLl9zZXJ2aWNlLm92ZXJFbmRlZCgpO1xuICB9XG5cbiAgY2FuRHJvcFByZWRpY2F0ZShkcm9wWm9uZXM6IHN0cmluZ1tdKTogKGl0ZW06IENka0RyYWc8QWpmUmVwb3J0QnVpbGRlckRyYWdEYXRhPikgPT4gYm9vbGVhbiB7XG4gICAgcmV0dXJuIGl0ZW0gPT4ge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpdGVtLmRhdGEuZHJvcFpvbmVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChkcm9wWm9uZXMuaW5kZXhPZihpdGVtLmRhdGEuZHJvcFpvbmVzW2ldKSA+IC0xKSB7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9O1xuICB9XG5cbiAgcmVwb3J0U3R5bGVzOiBPYnNlcnZhYmxlPEFqZlN0eWxlcz47XG5cbiAgLy8gdGhpcyBib29sZWFuIHNpZ24gaWYgaXMgZHJhZ2dlZCBhIHdpZGdldFxuICBvbkRyYWdnZWQgPSBmYWxzZTtcblxuICAvKipcbiAgICogIG9ic2VydmUgdGhlIHN0YXR1cyBvZiB0aGUgZml4ZWQgem9vbVxuICAgKlxuICAgKiBAbWVtYmVyT2YgQWpmUmVwb3J0QnVpbGRlckNvbnRlbnRcbiAgICovXG4gIGZpeGVkWm9vbSA9IGZhbHNlO1xuXG4gIC8vIHRoaXMgYm9vbGVhbiBzaWduIGlmIHdpZGdldCBpcyBpbiBkcmFnIGVudGVyIHN0YXR1c1xuICBvbkRyYWdFbnRlcjogYW55ID0ge307XG5cbiAgc2hvdyA9IGZhbHNlO1xuXG4gIC8vIHRoaXMgYXJyYXkgY29udGFpbnMgYWxsIHdpZGdldCBsb2NhdGUgaW4gaGVhZGVyIHpvbmVcbiAgaGVhZGVyV2lkZ2V0czogQWpmV2lkZ2V0W10gPSBbXTtcbiAgLyoqXG4gICAqIG9ic2VydmUgdGhlIGNzcyBzdHlsZSBvZiBoZWFkZXJcbiAgICpcbiAgICogQG1lbWJlck9mIEFqZlJlcG9ydEJ1aWxkZXJDb250ZW50XG4gICAqL1xuICBoZWFkZXJTdHlsZXM6IE9ic2VydmFibGU8QWpmU3R5bGVzPjtcblxuICAvLyB0aGlzIGFycmF5IGNvbnRhaW5zIGFsbCB3aWRnZXQgbG9jYXRlIGluIGNvbnRlbnQgem9uZVxuICBjb250ZW50V2lkZ2V0czogQWpmV2lkZ2V0W10gPSBbXTtcblxuICAvKipcbiAgICogb2JzZXJ2ZSB0aGUgY3NzIHN0eWxlIG9mIGNvbnRlbnRcbiAgICpcbiAgICogQG1lbWJlck9mIEFqZlJlcG9ydEJ1aWxkZXJDb250ZW50XG4gICAqL1xuICBjb250ZW50U3R5bGVzOiBPYnNlcnZhYmxlPEFqZlN0eWxlcz47XG5cbiAgLy8gdGhpcyBhcnJheSBjb250YWlucyBhbGwgd2lkZ2V0IGxvY2F0ZSBpbiBmb290ZXIgem9uZVxuICBmb290ZXJXaWRnZXRzOiBBamZXaWRnZXRbXSA9IFtdO1xuXG4gIG9uT3ZlcjogYm9vbGVhbiA9IGZhbHNlO1xuICAvKipcbiAgICogb2JzZXJ2ZSB0aGUgY3NzIHN0eWxlIG9mIGZvb3RlclxuICAgKlxuICAgKiBAbWVtYmVyT2YgQWpmUmVwb3J0QnVpbGRlckNvbnRlbnRcbiAgICovXG4gIGZvb3RlclN0eWxlczogT2JzZXJ2YWJsZTxBamZTdHlsZXM+O1xuXG4gIC8vIHRoaXMgaXMgdGhlIGN1cnJlbnQgd2lkZ2V0XG4gIGN1cnJlbnRXaWRnZXQ6IEFqZldpZGdldCB8IG51bGwgPSBudWxsO1xuXG4gIC8qKlxuICAgKiBpZiB0cnVlIG1vdXNlIGV2ZW50IGlzIG9uIGRyYWdnZWQgc3RhdHVzXG4gICAqXG4gICAqIEBtZW1iZXJPZiBBamZSZXBvcnRCdWlsZGVyQ29udGVudFxuICAgKi9cbiAgc2hvd0FjdGlvbnMgPSBmYWxzZTtcblxuICBwcml2YXRlIF9vbkRyYWdnZWRTdWI6IFN1YnNjcmlwdGlvbiA9IFN1YnNjcmlwdGlvbi5FTVBUWTtcbiAgcHJpdmF0ZSBfZml4ZWRab29tU3ViOiBTdWJzY3JpcHRpb24gPSBTdWJzY3JpcHRpb24uRU1QVFk7XG4gIHByaXZhdGUgX29uRHJhZ0VudGVyU3ViOiBTdWJzY3JpcHRpb24gPSBTdWJzY3JpcHRpb24uRU1QVFk7XG4gIHByaXZhdGUgX2hlYWRlcldpZGdldHNTdWI6IFN1YnNjcmlwdGlvbiA9IFN1YnNjcmlwdGlvbi5FTVBUWTtcbiAgcHJpdmF0ZSBfY29udGVudFdpZGdldHNTdWI6IFN1YnNjcmlwdGlvbiA9IFN1YnNjcmlwdGlvbi5FTVBUWTtcbiAgcHJpdmF0ZSBfZm9vdGVyV2lkZ2V0c1N1YjogU3Vic2NyaXB0aW9uID0gU3Vic2NyaXB0aW9uLkVNUFRZO1xuICBwcml2YXRlIF9vbk92ZXJTdWI6IFN1YnNjcmlwdGlvbiA9IFN1YnNjcmlwdGlvbi5FTVBUWTtcbiAgcHJpdmF0ZSBfY3VycmVudFdpZGdldFN1YjogU3Vic2NyaXB0aW9uID0gU3Vic2NyaXB0aW9uLkVNUFRZO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX3NlcnZpY2U6IEFqZlJlcG9ydEJ1aWxkZXJTZXJ2aWNlLCBwcml2YXRlIF9jZFJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHtcbiAgICB0aGlzLmhlYWRlclN0eWxlcyA9IHRoaXMuX3NlcnZpY2UuaGVhZGVyU3R5bGVzO1xuICAgIHRoaXMuY29udGVudFN0eWxlcyA9IHRoaXMuX3NlcnZpY2UuY29udGVudFN0eWxlcztcbiAgICB0aGlzLmZvb3RlclN0eWxlcyA9IHRoaXMuX3NlcnZpY2UuZm9vdGVyU3R5bGVzO1xuICB9XG5cbiAgaXNMYXlvdXQod2lkZ2V0OiBBamZXaWRnZXQpOiBib29sZWFuIHtcbiAgICByZXR1cm4gd2lkZ2V0LndpZGdldFR5cGUgPT09IEFqZldpZGdldFR5cGUuTGF5b3V0O1xuICB9XG5cbiAgLyoqXG4gICAqICBzaWduIHRoZSBzdGFydCBvZiBtb3VzZSBkcmFnIHdpdGggMjAwIG1zIG9mIGRlbGF5XG4gICAqXG4gICAqIEBtZW1iZXJPZiBBamZSZXBvcnRCdWlsZGVyQ29udGVudFxuICAgKi9cbiAgb25EcmFnU3RhcnRIYW5kbGVyKCk6IHZvaWQge1xuICAgIGxldCBzID0gdGltZXIoMjAwKS5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgaWYgKHMgIT0gbnVsbCkge1xuICAgICAgICBzLnVuc3Vic2NyaWJlKCk7XG4gICAgICB9XG4gICAgICB0aGlzLl9zZXJ2aWNlLmRyYWdTdGFydGVkKCk7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogc2lnbiB0aGUgZW5kIG9mIG1vdXNlIGRyYWdcbiAgICpcbiAgICogQG1lbWJlck9mIEFqZlJlcG9ydEJ1aWxkZXJDb250ZW50XG4gICAqL1xuICBvbkRyYWdFbmRIYW5kbGVyKCk6IHZvaWQge1xuICAgIHRoaXMuX3NlcnZpY2UuZHJhZ0VuZGVkKCk7XG4gIH1cblxuICAvKipcbiAgICogIHNpZ24gdGhlIGVudGVyIG9mIG1vdXNlIGRyYWdcbiAgICpcbiAgICogQG1lbWJlck9mIEFqZlJlcG9ydEJ1aWxkZXJDb250ZW50XG4gICAqL1xuICBvbkRyYWdFbnRlckhhbmRsZXIoYXJyYXk6IHN0cmluZywgaW5kZXg6IG51bWJlciB8IHVuZGVmaW5lZCk6IHZvaWQge1xuICAgIGlmIChpbmRleCA9PSBudWxsKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuX3NlcnZpY2UuZHJhZ0VudGVyKGFycmF5LCBpbmRleCk7XG4gIH1cblxuICAvKipcbiAgICogc2lnbiB0aGUgbGVhdmUgb2YgbW91c2UgZHJhZ1xuICAgKlxuICAgKiBAbWVtYmVyT2YgQWpmUmVwb3J0QnVpbGRlckNvbnRlbnRcbiAgICovXG4gIG9uRHJhZ0xlYXZlSGFuZGxlcigpOiB2b2lkIHtcbiAgICB0aGlzLl9zZXJ2aWNlLmRyYWdMZWF2ZSgpO1xuICB9XG5cbiAgLyoqXG4gICAqICByZXR1cm4gdHJ1ZSBpZiBhcnJheSBhbmQgaW5kZXggaXMgPT09IHdpdGggYXJyYXkgYW5kIGluZGV4IG9mIG9uRHJhZ0VudGVyXG4gICAqXG4gICAqIEBwYXJhbSBhcnJheVxuICAgKiBAcGFyYW0gaW5kZXhcbiAgICpcbiAgICogQG1lbWJlck9mIEFqZlJlcG9ydEJ1aWxkZXJDb250ZW50XG4gICAqL1xuICBvbkRyYWdFbnRlckNoZWNrKGFycmF5OiBzdHJpbmcsIGluZGV4OiBudW1iZXIpOiBib29sZWFuIHtcbiAgICBpZiAoYXJyYXkgPT09IHRoaXMub25EcmFnRW50ZXIuYXJyYXkgJiYgKGluZGV4ID09PSB0aGlzLm9uRHJhZ0VudGVyLmluZGV4IHx8IGluZGV4ID09PSAtMSkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIHJlbW92ZSB3aWRnZXQgZWxlbWVudCBmcm9tIHR5cGUgYXJyYXkgaW4gaWR4IHBvc2l0aW9uXG4gICAqXG4gICAqIEBwYXJhbSB0eXBlIGNhbiBiZSBoZWFkZXIgY29udGVudCBvciBmb290ZXJcbiAgICogQHBhcmFtIGlkeFxuICAgKlxuICAgKiBAbWVtYmVyT2YgQWpmUmVwb3J0QnVpbGRlckNvbnRlbnRcbiAgICovXG4gIHJlbW92ZSh0eXBlOiBzdHJpbmcsIGlkeDogbnVtYmVyKSB7XG4gICAgdGhpcy5fc2VydmljZS5yZW1vdmUodHlwZSwgaWR4KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBhZGQgd2lkZ2V0IGVsZW1lbnQgaW50byB0eXBlIGFycmF5IGluIGlkeCBwb3NpdGlvblxuICAgKlxuICAgKiBAcGFyYW0gdHlwZVxuICAgKiBAcGFyYW0gZXZlbnRcbiAgICpcbiAgICogQG1lbWJlck9mIEFqZlJlcG9ydEJ1aWxkZXJDb250ZW50XG4gICAqL1xuICBhZGRUb0xpc3QoYXJyYXlUbzogc3RyaW5nLCBldmVudDogQ2RrRHJhZ0Ryb3A8QWpmUmVwb3J0QnVpbGRlckRyYWdEYXRhPiwgdG8/OiBudW1iZXIpIHtcbiAgICB0aGlzLm9uRHJhZ0VuZEhhbmRsZXIoKTtcbiAgICB0aGlzLl9zZXJ2aWNlLnNldE9yaWdpbihhcnJheVRvKTtcbiAgICBjb25zdCBpdGVtRGF0YSA9IGV2ZW50Lml0ZW0uZGF0YSBhcyBBamZSZXBvcnRCdWlsZGVyRHJhZ0RhdGE7XG4gICAgaWYgKGl0ZW1EYXRhLmZyb21Db2x1bW4gIT0gbnVsbCkge1xuICAgICAgdGhpcy5fc2VydmljZS5yZW1vdmVXaWRnZXRUb0NvbHVtbihpdGVtRGF0YS5mcm9tQ29sdW1uLCBpdGVtRGF0YS5mcm9tSW5kZXghKTtcbiAgICAgIHRoaXMuY3VycmVudFdpZGdldCA9IGl0ZW1EYXRhLndpZGdldCE7XG4gICAgfSBlbHNlIGlmIChpdGVtRGF0YS53aWRnZXQgIT0gbnVsbCkge1xuICAgICAgdGhpcy5yZW1vdmUoaXRlbURhdGEuYXJyYXlGcm9tISwgaXRlbURhdGEuZnJvbSEpO1xuICAgICAgdGhpcy5jdXJyZW50V2lkZ2V0ID0gaXRlbURhdGEud2lkZ2V0O1xuICAgIH0gZWxzZSBpZiAoaXRlbURhdGEuanNvbiAhPSBudWxsICYmIGl0ZW1EYXRhLmpzb24gIT09ICcnKSB7XG4gICAgICB0aGlzLmN1cnJlbnRXaWRnZXQgPSBkZWVwQ29weShpdGVtRGF0YS5qc29uKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbGV0IG9iaiA9IHsnd2lkZ2V0VHlwZSc6IChBamZXaWRnZXRUeXBlIGFzIGFueSlbaXRlbURhdGEud2lkZ2V0VHlwZSFdfTtcbiAgICAgIHRoaXMuY3VycmVudFdpZGdldCA9IGRlZXBDb3B5KG9iaik7XG4gICAgfVxuICAgIHRoaXMub25EcmFnRW5kSGFuZGxlcigpO1xuICAgIGlmICh0aGlzLmN1cnJlbnRXaWRnZXQgIT0gbnVsbCkge1xuICAgICAgc3dpdGNoIChhcnJheVRvKSB7XG4gICAgICAgIGNhc2UgJ2hlYWRlcic6XG4gICAgICAgICAgdGhpcy5fc2VydmljZS5hZGRIZWFkZXJXaWRnZXQodGhpcy5jdXJyZW50V2lkZ2V0LCB0byk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ2NvbnRlbnQnOlxuICAgICAgICAgIHRoaXMuX3NlcnZpY2UuYWRkQ29udGVudFdpZGdldCh0aGlzLmN1cnJlbnRXaWRnZXQsIHRvKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnZm9vdGVyJzpcbiAgICAgICAgICB0aGlzLl9zZXJ2aWNlLmFkZGZvb3RlcldpZGdldCh0aGlzLmN1cnJlbnRXaWRnZXQsIHRvKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5vbkRyYWdMZWF2ZUhhbmRsZXIoKTtcbiAgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMuX2hlYWRlcldpZGdldHNTdWIgPSB0aGlzLl9zZXJ2aWNlLmhlYWRlcldpZGdldHMuc3Vic2NyaWJlKHggPT4ge1xuICAgICAgdGhpcy5oZWFkZXJXaWRnZXRzID0geC53aWRnZXRzO1xuICAgIH0pO1xuICAgIHRoaXMuX2NvbnRlbnRXaWRnZXRzU3ViID0gdGhpcy5fc2VydmljZS5jb250ZW50V2lkZ2V0cy5zdWJzY3JpYmUoeCA9PiB7XG4gICAgICB0aGlzLmNvbnRlbnRXaWRnZXRzID0geC53aWRnZXRzO1xuICAgIH0pO1xuICAgIHRoaXMuX2Zvb3RlcldpZGdldHNTdWIgPSB0aGlzLl9zZXJ2aWNlLmZvb3RlcldpZGdldHMuc3Vic2NyaWJlKHggPT4ge1xuICAgICAgdGhpcy5mb290ZXJXaWRnZXRzID0geC53aWRnZXRzO1xuICAgIH0pO1xuICAgIHRoaXMuX29uRHJhZ2dlZFN1YiA9IHRoaXMuX3NlcnZpY2Uub25EcmFnZ2VkLnN1YnNjcmliZSh4ID0+IHtcbiAgICAgIHRoaXMub25EcmFnZ2VkID0geDtcbiAgICB9KTtcbiAgICB0aGlzLl9maXhlZFpvb21TdWIgPSB0aGlzLl9zZXJ2aWNlLmZpeGVkWm9vbS5zdWJzY3JpYmUoYm9vbCA9PiB7XG4gICAgICB0aGlzLmZpeGVkWm9vbSA9IGJvb2w7XG4gICAgfSk7XG4gICAgdGhpcy5fb25EcmFnRW50ZXJTdWIgPSB0aGlzLl9zZXJ2aWNlLm9uRHJhZ0VudGVyLnN1YnNjcmliZSh4ID0+IHtcbiAgICAgIHRoaXMub25EcmFnRW50ZXIgPSB4O1xuICAgIH0pO1xuICAgIHRoaXMuX29uT3ZlclN1YiA9IHRoaXMuX3NlcnZpY2Uub25PdmVyLnN1YnNjcmliZSh4ID0+IHtcbiAgICAgIHRoaXMub25PdmVyID0geDtcbiAgICB9KTtcbiAgfVxuXG4gIG5nQWZ0ZXJWaWV3Q2hlY2tlZCgpIHtcbiAgICB0aGlzLl9jZFJlZi5kZXRlY3RDaGFuZ2VzKCk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICBbXG4gICAgICB0aGlzLl9oZWFkZXJXaWRnZXRzU3ViLFxuICAgICAgdGhpcy5fY29udGVudFdpZGdldHNTdWIsXG4gICAgICB0aGlzLl9mb290ZXJXaWRnZXRzU3ViLFxuICAgICAgdGhpcy5fY3VycmVudFdpZGdldFN1YixcbiAgICAgIHRoaXMuX29uRHJhZ2dlZFN1YixcbiAgICAgIHRoaXMuX2ZpeGVkWm9vbVN1YixcbiAgICAgIHRoaXMuX29uT3ZlclN1YixcbiAgICAgIHRoaXMuX29uRHJhZ0VudGVyU3ViLFxuICAgIF0uZm9yRWFjaChzID0+IHtcbiAgICAgIHMudW5zdWJzY3JpYmUoKTtcbiAgICB9KTtcbiAgfVxufVxuIiwiPGRpdlxuICBjbGFzcz1cImFqZi1vdmVybGF5XCJcbiAgW25nQ2xhc3NdPVwieydhamYtZHJhZy1tb2RlJzogb25EcmFnZ2VkLCAnYWpmLXpvb20tbW9kZSc6IGZpeGVkWm9vbX1cIlxuICBbYXBwbHlTdHlsZXNdPVwicmVwb3J0U3R5bGVzfGFzeW5jXCJcbiAgKG1vdXNlZW50ZXIpPVwic2hvdyA9IHRydWVcIlxuICAobW91c2VsZWF2ZSk9XCJzaG93ID0gZmFsc2VcIlxuPlxuICA8ZGl2XG4gICAgY2xhc3M9XCJhamYtaGVhZGVyXCJcbiAgICBbbmdDbGFzc109XCJ7J2FqZi1pcy1vbi1vdmVyJzogb25EcmFnZ2VkIHx8IHNob3d9XCJcbiAgICBbYXBwbHlTdHlsZXNdPVwiKGhlYWRlclN0eWxlc3xhc3luYylcIlxuICA+XG4gICAgPG1hdC1saXN0ICpuZ0Zvcj1cImxldCB0IG9mIGhlYWRlcldpZGdldHM7IGxldCBpID0gaW5kZXhcIj5cbiAgICAgIDxkaXZcbiAgICAgICAgY2RrRHJvcExpc3RcbiAgICAgICAgY2xhc3M9XCJhamYtZHJvcC16b25lXCJcbiAgICAgICAgW25nQ2xhc3NdPVwieydhamYtc2hvdyc6IHRydWV9XCJcbiAgICAgICAgW2Nka0Ryb3BMaXN0RW50ZXJQcmVkaWNhdGVdPVwiY2FuRHJvcFByZWRpY2F0ZShbJ3dpZGdldCcsJ2NvbHVtbiddKVwiXG4gICAgICAgIChjZGtEcm9wTGlzdERyb3BwZWQpPVwiYWRkVG9MaXN0KCdoZWFkZXInLCAkZXZlbnQsIGkpO1wiXG4gICAgICAgIChkcmFnZW50ZXIpPVwib25EcmFnRW50ZXJIYW5kbGVyKCdoZWFkZXInLCBpKVwiXG4gICAgICAgIChkcmFnbGVhdmUpPVwib25EcmFnTGVhdmVIYW5kbGVyKClcIlxuICAgICAgPjwvZGl2PlxuICAgICAgPGFqZi1yZXBvcnQtYnVpbGRlci13aWRnZXRzLXJvdy1idXR0b25zXG4gICAgICAgIGNka0RyYWdcbiAgICAgICAgW2Nka0RyYWdEYXRhXT1cInt3aWRnZXQ6IHQsZnJvbUluZGV4OiBpLGFycmF5RnJvbTogJ2hlYWRlcicsIGRyb3Bab25lczogWyd3aWRnZXQnLCdjb2x1bW4nXX1cIlxuICAgICAgICBbc3R5bGUuZGlzcGxheV09XCIoc2hvd0FjdGlvbnMgfHwgb25EcmFnZ2VkKT8gJ2Jsb2NrJyA6ICdub25lJ1wiXG4gICAgICAgIFtmcm9tXT1cIidoZWFkZXInXCJcbiAgICAgICAgW3dpZGdldF09XCJ0XCJcbiAgICAgICAgW3Bvc2l0aW9uXT1cImlcIlxuICAgICAgICAoY2RrRHJhZ1N0YXJ0ZWQpPVwib25EcmFnU3RhcnRIYW5kbGVyKCk7XCJcbiAgICAgICAgKGNka0RyYWdFbmRlZCk9XCJvbkRyYWdFbmRIYW5kbGVyKClcIlxuICAgICAgPlxuICAgICAgPC9hamYtcmVwb3J0LWJ1aWxkZXItd2lkZ2V0cy1yb3ctYnV0dG9ucz5cbiAgICAgIDxhamYtcmVwb3J0LWJ1aWxkZXItcmVuZGVyZXItd2lkZ2V0XG4gICAgICAgIFt3aWRnZXRdPVwidFwiXG4gICAgICAgIFtwb3NpdGlvbl09XCJpXCJcbiAgICAgICAgW3NlY3Rpb25dPVwiJ2hlYWRlcidcIlxuICAgICAgICAoY3VycmVudFdpZGdldCk9XCJjdXJyZW50V2lkZ2V0XCJcbiAgICAgID48L2FqZi1yZXBvcnQtYnVpbGRlci1yZW5kZXJlci13aWRnZXQ+XG4gICAgPC9tYXQtbGlzdD5cbiAgICA8ZGl2XG4gICAgICBjZGtEcm9wTGlzdFxuICAgICAgY2xhc3M9XCJhamYtZHJvcC16b25lLWNvbnRhaW5lclwiXG4gICAgICBbbmdDbGFzc109XCJ7J2FqZi1zaG93JzogdHJ1ZX1cIlxuICAgICAgW2Nka0Ryb3BMaXN0RW50ZXJQcmVkaWNhdGVdPVwiY2FuRHJvcFByZWRpY2F0ZShbJ2hlYWRlcicsJ3dpZGdldCcsJ2NvbHVtbiddKVwiXG4gICAgICAoY2RrRHJvcExpc3REcm9wcGVkKT1cImFkZFRvTGlzdCgnaGVhZGVyJywgJGV2ZW50KVwiXG4gICAgICAoZHJhZ2VudGVyKT1cIm9uRHJhZ0VudGVySGFuZGxlcignaGVhZGVyJywgaGVhZGVyV2lkZ2V0cz8ubGVuZ3RoKVwiXG4gICAgICAoZHJhZ2xlYXZlKT1cIm9uRHJhZ0xlYXZlSGFuZGxlcigpXCJcbiAgICA+PC9kaXY+XG4gIDwvZGl2PlxuICA8ZGl2XG4gICAgY2xhc3M9XCJhamYtY29udGVudFwiXG4gICAgW25nQ2xhc3NdPVwieydhamYtaXMtb24tb3Zlcic6IG9uRHJhZ2dlZCB8fCBzaG93fVwiXG4gICAgW2FwcGx5U3R5bGVzXT1cImNvbnRlbnRTdHlsZXN8YXN5bmNcIlxuICA+XG4gICAgPG1hdC1saXN0ICpuZ0Zvcj1cImxldCB0IG9mIGNvbnRlbnRXaWRnZXRzOyBsZXQgaSA9IGluZGV4XCI+XG4gICAgICA8ZGl2XG4gICAgICAgIGNka0Ryb3BMaXN0XG4gICAgICAgIGNsYXNzPVwiYWpmLWRyb3Atem9uZVwiXG4gICAgICAgIFtuZ0NsYXNzXT1cInsnYWpmLXNob3cnOiB0cnVlfVwiXG4gICAgICAgIFtjZGtEcm9wTGlzdEVudGVyUHJlZGljYXRlXT1cImNhbkRyb3BQcmVkaWNhdGUoWyd3aWRnZXQnLCdjb2x1bW4nXSlcIlxuICAgICAgICAoY2RrRHJvcExpc3REcm9wcGVkKT1cImFkZFRvTGlzdCgnY29udGVudCcsICRldmVudCwgaSlcIlxuICAgICAgICAoZHJhZ2VudGVyKT1cIm9uRHJhZ0VudGVySGFuZGxlcignY29udGVudCcsIGkpXCJcbiAgICAgICAgKGRyYWdsZWF2ZSk9XCJvbkRyYWdMZWF2ZUhhbmRsZXIoKVwiXG4gICAgICA+PC9kaXY+XG4gICAgICA8YWpmLXJlcG9ydC1idWlsZGVyLXdpZGdldHMtcm93LWJ1dHRvbnNcbiAgICAgICAgY2RrRHJhZ1xuICAgICAgICBbY2RrRHJhZ0RhdGFdPVwie3dpZGdldDogdCwgZnJvbUluZGV4OiBpLCBhcnJheUZyb206ICdjb250ZW50JywgZHJvcFpvbmVzOiBbJ3dpZGdldCcsJ2NvbHVtbiddfVwiXG4gICAgICAgIFtzdHlsZS5kaXNwbGF5XT1cInNob3dBY3Rpb25zID8gJ2Jsb2NrJyA6ICdub25lJ1wiXG4gICAgICAgIFtmcm9tXT1cIidjb250ZW50J1wiXG4gICAgICAgIFt3aWRnZXRdPVwidFwiXG4gICAgICAgIFtwb3NpdGlvbl09XCJpXCJcbiAgICAgICAgKGNka0RyYWdTdGFydGVkKT1cIm9uRHJhZ1N0YXJ0SGFuZGxlcigpXCJcbiAgICAgICAgKGNka0RyYWdFbmRlZCk9XCJvbkRyYWdFbmRIYW5kbGVyKCk7XCJcbiAgICAgID5cbiAgICAgIDwvYWpmLXJlcG9ydC1idWlsZGVyLXdpZGdldHMtcm93LWJ1dHRvbnM+XG4gICAgICA8YWpmLXJlcG9ydC1idWlsZGVyLXJlbmRlcmVyLXdpZGdldFxuICAgICAgICBbd2lkZ2V0XT1cInRcIlxuICAgICAgICBbcG9zaXRpb25dPVwiaVwiXG4gICAgICAgIFtzZWN0aW9uXT1cIidjb250ZW50J1wiXG4gICAgICAgIChjdXJyZW50V2lkZ2V0KT1cImN1cnJlbnRXaWRnZXRcIlxuICAgICAgPjwvYWpmLXJlcG9ydC1idWlsZGVyLXJlbmRlcmVyLXdpZGdldD5cbiAgICA8L21hdC1saXN0PlxuICAgIDxkaXZcbiAgICAgIGNka0Ryb3BMaXN0XG4gICAgICBjbGFzcz1cImFqZi1kcm9wLXpvbmUtY29udGFpbmVyXCJcbiAgICAgIFtuZ0NsYXNzXT1cInsnYWpmLXNob3cnOiBvbkRyYWdnZWR9XCJcbiAgICAgIFtjZGtEcm9wTGlzdEVudGVyUHJlZGljYXRlXT1cImNhbkRyb3BQcmVkaWNhdGUoWydjb250ZW50Jywnd2lkZ2V0JywnY29sdW1uJ10pXCJcbiAgICAgIChjZGtEcm9wTGlzdERyb3BwZWQpPVwiYWRkVG9MaXN0KCdjb250ZW50JywgJGV2ZW50KVwiXG4gICAgICAoZHJhZ2VudGVyKT1cIm9uRHJhZ0VudGVySGFuZGxlcignY29udGVudCcsIGNvbnRlbnRXaWRnZXRzPy5sZW5ndGgpXCJcbiAgICAgIChkcmFnbGVhdmUpPVwib25EcmFnTGVhdmVIYW5kbGVyKClcIlxuICAgID5cbiAgICAgIDxsYWJlbD57eydEcm9wIGhlcmUnfHRyYW5zbG9jb319PC9sYWJlbD5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG4gIDxkaXZcbiAgICBjbGFzcz1cImFqZi1mb290ZXJcIlxuICAgIFtuZ0NsYXNzXT1cInsnYWpmLWlzLW9uLW92ZXInOiBvbkRyYWdnZWQgfHwgc2hvd31cIlxuICAgIFthcHBseVN0eWxlc109XCJmb290ZXJTdHlsZXN8YXN5bmNcIlxuICA+XG4gICAgPG1hdC1saXN0ICpuZ0Zvcj1cImxldCB0IG9mIGZvb3RlcldpZGdldHM7IGxldCBpID0gaW5kZXhcIj5cbiAgICAgIDxkaXZcbiAgICAgICAgY2RrRHJvcExpc3RcbiAgICAgICAgY2xhc3M9XCJhamYtZHJvcC16b25lXCJcbiAgICAgICAgW25nQ2xhc3NdPVwieydhamYtc2hvdyc6IHRydWV9XCJcbiAgICAgICAgW2Nka0Ryb3BMaXN0RW50ZXJQcmVkaWNhdGVdPVwiY2FuRHJvcFByZWRpY2F0ZShbJ3dpZGdldCcsJ2NvbHVtbiddKVwiXG4gICAgICAgIChjZGtEcm9wTGlzdERyb3BwZWQpPVwiYWRkVG9MaXN0KCdmb290ZXInLCAkZXZlbnQsIGkpXCJcbiAgICAgICAgKGRyYWdlbnRlcik9XCJvbkRyYWdFbnRlckhhbmRsZXIoJ2Zvb3RlcicsIGkpXCJcbiAgICAgICAgKGRyYWdsZWF2ZSk9XCJvbkRyYWdMZWF2ZUhhbmRsZXIoKVwiXG4gICAgICA+PC9kaXY+XG4gICAgICA8YWpmLXJlcG9ydC1idWlsZGVyLXdpZGdldHMtcm93LWJ1dHRvbnNcbiAgICAgICAgY2RrRHJhZ1xuICAgICAgICBbY2RrRHJhZ0RhdGFdPVwie3dpZGdldDogdCwgZnJvbUluZGV4OiBpLCBhcnJheUZyb206ICdmb290ZXInLCBkcm9wWm9uZXM6IFsnd2lkZ2V0JywnY29sdW1uJ119XCJcbiAgICAgICAgW3N0eWxlLmRpc3BsYXldPVwic2hvd0FjdGlvbnMgPyAnYmxvY2snIDogJ25vbmUnXCJcbiAgICAgICAgW2Zyb21dPVwiJ2Zvb3RlcidcIlxuICAgICAgICBbd2lkZ2V0XT1cInRcIlxuICAgICAgICBbcG9zaXRpb25dPVwiaVwiXG4gICAgICAgIChjZGtEcmFnU3RhcnRlZCk9XCJvbkRyYWdTdGFydEhhbmRsZXIoKVwiXG4gICAgICAgIChjZGtEcmFnRW5kZWQpPVwib25EcmFnRW5kSGFuZGxlcigpXCJcbiAgICAgID5cbiAgICAgIDwvYWpmLXJlcG9ydC1idWlsZGVyLXdpZGdldHMtcm93LWJ1dHRvbnM+XG4gICAgICA8YWpmLXJlcG9ydC1idWlsZGVyLXJlbmRlcmVyLXdpZGdldFxuICAgICAgICBbd2lkZ2V0XT1cInRcIlxuICAgICAgICBbcG9zaXRpb25dPVwiaVwiXG4gICAgICAgIFtzZWN0aW9uXT1cIidmb290ZXInXCJcbiAgICAgICAgKGN1cnJlbnRXaWRnZXQpPVwiY3VycmVudFdpZGdldFwiXG4gICAgICA+PC9hamYtcmVwb3J0LWJ1aWxkZXItcmVuZGVyZXItd2lkZ2V0PlxuICAgIDwvbWF0LWxpc3Q+XG4gICAgPGRpdlxuICAgICAgY2RrRHJvcExpc3RcbiAgICAgIGNsYXNzPVwiYWpmLWRyb3Atem9uZS1jb250YWluZXJcIlxuICAgICAgW25nQ2xhc3NdPVwieydhamYtc2hvdyc6IG9uRHJhZ2dlZH1cIlxuICAgICAgW2Nka0Ryb3BMaXN0RW50ZXJQcmVkaWNhdGVdPVwiY2FuRHJvcFByZWRpY2F0ZShbJ2Zvb3RlcicsJ3dpZGdldCcsJ2NvbHVtbiddKVwiXG4gICAgICAoY2RrRHJvcExpc3REcm9wcGVkKT1cImFkZFRvTGlzdCgnZm9vdGVyJywgJGV2ZW50KVwiXG4gICAgICAoZHJhZ2VudGVyKT1cIm9uRHJhZ0VudGVySGFuZGxlcignZm9vdGVyJywgaGVhZGVyV2lkZ2V0cz8ubGVuZ3RoKVwiXG4gICAgICAoZHJhZ2xlYXZlKT1cIm9uRHJhZ0xlYXZlSGFuZGxlcigpXCJcbiAgICA+XG4gICAgICA8bGFiZWw+e3snRHJvcCBoZXJlJ3x0cmFuc2xvY299fTwvbGFiZWw+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9kaXY+XG4iXX0=