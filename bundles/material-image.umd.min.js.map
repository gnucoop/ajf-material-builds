{"version":3,"sources":["src/material/material-image.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ajf","material","image","ng","common","core","icon","tslib","platformBrowser","this","AjfImage","_super","el","renderer","ds","call","__extends","decorators","type","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","styles","ctorParameters","ElementRef","Renderer2","DomSanitizer","AjfImageModule","NgModule","imports","CommonModule","MatIconModule","declarations","Object","defineProperty","value"],"mappings":"CAAC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,mBAAoBA,QAAQ,iBAAkBA,QAAQ,0BAA2BA,QAAQ,SAAUA,QAAQ,mBAAoBA,QAAQ,8BAC7M,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,sBAAuB,CAAC,UAAW,kBAAmB,gBAAiB,yBAA0B,QAAS,kBAAmB,6BAA8BJ,GACrLA,IAAzBD,EAASA,GAAUO,MAAsBC,IAAMR,EAAOQ,KAAO,GAAIR,EAAOQ,IAAIC,SAAWT,EAAOQ,IAAIC,UAAY,GAAIT,EAAOQ,IAAIC,SAASC,MAAQ,IAAKV,EAAOW,GAAGC,OAAQZ,EAAOW,GAAGE,KAAMb,EAAOW,GAAGF,SAASK,KAAMd,EAAOe,MAAOf,EAAOW,GAAGE,KAAKH,MAAOV,EAAOW,GAAGK,iBAHjQ,CAIEC,MAAM,SAAWf,EAASU,EAAQC,EAAMC,EAAMC,EAAOL,EAAOM,GAAmB;;;;;;;;;;;;;;;;;;;;;OAuB7E,IAAIE,EAA0B,SAAUC,GAEpC,SAASD,EAASE,EAAIC,EAAUC,GAC5B,OAAOH,EAAOI,KAAKN,KAAMG,EAAIC,EAAUC,IAAOL,KAiBlD,OAnBAF,EAAMS,UAAUN,EAAUC,GAI1BD,EAASO,WAAa,CAClB,CAAEC,KAAMb,EAAKc,UAAWC,KAAM,CAAC,CACnBC,SAAU,YACVC,SAAU,0cACVC,gBAAiBlB,EAAKmB,wBAAwBC,OAC9CC,cAAerB,EAAKsB,kBAAkBC,KACtCC,OAAQ,CAAC,yUAIzBnB,EAASoB,eAAiB,WAAc,MAAO,CAC3C,CAAEZ,KAAMb,EAAK0B,YACb,CAAEb,KAAMb,EAAK2B,WACb,CAAEd,KAAMV,EAAgByB,gBAErBvB,EApBkB,CAqB3BR,EAAMQ,UAuBJwB,EAAgC,WAChC,SAASA,KAgBT,OAdAA,EAAejB,WAAa,CACxB,CAAEC,KAAMb,EAAK8B,SAAUf,KAAM,CAAC,CAClBgB,QAAS,CACLhC,EAAOiC,aACP/B,EAAKgC,eAETC,aAAc,CACV7B,GAEJhB,QAAS,CACLgB,OAIbwB,EAjBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CnCxC,EAAQgB,SAAWA,EACnBhB,EAAQwC,eAAiBA,EAEzBM,OAAOC,eAAe/C,EAAS,aAAc,CAAEgD,OAAO","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@angular/material/icon'), require('tslib'), require('@ajf/core/image'), require('@angular/platform-browser')) :\n    typeof define === 'function' && define.amd ? define('@ajf/material/image', ['exports', '@angular/common', '@angular/core', '@angular/material/icon', 'tslib', '@ajf/core/image', '@angular/platform-browser'], factory) :\n    (global = global || self, factory((global.ajf = global.ajf || {}, global.ajf.material = global.ajf.material || {}, global.ajf.material.image = {}), global.ng.common, global.ng.core, global.ng.material.icon, global.tslib, global.ng.core.image, global.ng.platformBrowser));\n}(this, (function (exports, common, core, icon, tslib, image, platformBrowser) { 'use strict';\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfImage = /** @class */ (function (_super) {\n        tslib.__extends(AjfImage, _super);\n        function AjfImage(el, renderer, ds) {\n            return _super.call(this, el, renderer, ds) || this;\n        }\n        AjfImage.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-image',\n                        template: \"<ng-container [ngSwitch]=\\\"imageType|async\\\">\\n  <ng-template [ngSwitchCase]=\\\"imageTypes.Image\\\">\\n    <img *ngIf=\\\"url|async as iu\\\" [src]=\\\"iu\\\" alt=\\\"\\\">\\n  </ng-template>\\n  <ng-template [ngSwitchCase]=\\\"imageTypes.Icon\\\">\\n    <mat-icon *ngIf=\\\"iconObj|async as io\\\"\\n        [fontSet]=\\\"io!.fontSet\\\"\\n        [fontIcon]=\\\"io!.fontIcon\\\">\\n    </mat-icon>\\n  </ng-template>\\n  <span *ngSwitchCase=\\\"imageTypes.Flag\\\" [class]=\\\"flagName|async\\\"></span>\\n</ng-container>\\n\",\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        encapsulation: core.ViewEncapsulation.None,\n                        styles: [\"ajf-image{display:flex;box-sizing:border-box;align-items:center;position:relative;font-size:inherit;width:inherit;height:inherit}ajf-image img{vertical-align:middle;position:relative;max-height:100%;max-width:100%;height:auto;width:auto}ajf-image span{height:inherit;width:inherit}ajf-image .mat-icon{font-size:inherit}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfImage.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: core.Renderer2 },\n            { type: platformBrowser.DomSanitizer }\n        ]; };\n        return AjfImage;\n    }(image.AjfImage));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfImageModule = /** @class */ (function () {\n        function AjfImageModule() {\n        }\n        AjfImageModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [\n                            common.CommonModule,\n                            icon.MatIconModule,\n                        ],\n                        declarations: [\n                            AjfImage,\n                        ],\n                        exports: [\n                            AjfImage,\n                        ],\n                    },] }\n        ];\n        return AjfImageModule;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.AjfImage = AjfImage;\n    exports.AjfImageModule = AjfImageModule;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-image.umd.js.map\n"]}