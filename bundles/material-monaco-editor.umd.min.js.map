{"version":3,"sources":["src/material/material-monaco-editor.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ajf","material","monacoEditor","ng","core","this","IEditorLanguage","AutoCompleteItem","prototype","setLabel","label","setKind","kind","setDocumentation","documentation","setInsertText","insertText","BAT","C","CPP","CSHARP","CSS","DOCKERFILE","FSHARP","GO","HANDLEBARS","HTML","INI","JADE","JAVASCRIPT","JSON","LESS","LUA","MARKDOWN","OBJECTIVEC","PHP","PLAINTEXT","POSTIATS","POWERSHELL","PYTHON","R","RAZOR","RUBY","SCSS","SQL","SWIFT","TYPESCRIPT","VB","XML","YAML","AutoCompleteSingleton","_autoCompleteValues","getInstance","_instance","Object","defineProperty","get","enumerable","configurable","initAutoComplete","language","toString","monaco","languages","registerCompletionItemProvider","provideCompletionItems","model","parseAutoCompleteValues","getValue","autoCompleteValues","content","_parseXmlAutoComplete","_parseJsonAutoComplete","tempList","tags","DOMParser","parseFromString","getElementsByTagName","_loop_1","i","this_1","find","obj","tagName","CompletionItemKind","Function","push","length","concat","m","regex","exec","index","lastIndex","Value","AjfMonacoEditorModule","IEditorOptions","AjfMonacoEditor","autoFormatOnLoad","monacoLibPath","valueChange","EventEmitter","valueToCompareChange","init","_value","_valueToCompare","set","v","_editor","getEditorType","_initEditor","setValue","ngAfterViewInit","_this","onGotAmdLoader","window","_initMonaco","loaderScript","document","createElement","type","src","addEventListener","body","appendChild","ngOnDestroy","dispose","ngOnChanges","_changes","updateOptions","_getOptions","myDiv","editorContent","nativeElement","hasChildNodes","firstChild","removeChild","onResize","_event","parentElement","setAttribute","offsetHeight","emit","options","_initDiffEditor","_initSimpleEditor","disableAutocomplete","_getOriginalModel","onDidChangeContent","_e","newVal","_updateValue","_getModifiedModel","_updateValueToCompare","div","editor","create","originalModel","createModel","modifiedModel","diffEditor","createDiffEditor","setModel","modified","original","experimentalScreenReader","ariaLabel","rulers","wordSeparators","selectionClipboard","lineNumbers","selectOnLineNumbers","lineNumbersMinChars","glyphMargin","lineDecorationsWidth","revealHorizontalRightPadding","roundedSelection","theme","readOnly","scrollbar","overviewRulerLanes","cursorBlinking","mouseWheelZoom","cursorStyle","fontLigatures","disableTranslate3d","hideCursorInOverviewRuler","scrollBeyondLastLine","automaticLayout","wrappingColumn","wordWrap","wrappingIndent","wordWrapBreakBeforeCharacters","wordWrapBreakAfterCharacters","wordWrapBreakObtrusiveCharacters","stopRenderingLineAfter","hover","contextmenu","mouseWheelScrollSensitivity","quickSuggestions","quickSuggestionsDelay","parameterHints","iconsInSuggestions","autoClosingBrackets","formatOnType","suggestOnTriggerCharacters","acceptSuggestionOnEnter","snippetSuggestions","tabCompletion","wordBasedSuggestions","selectionHighlight","codeLens","folding","renderWhitespace","renderControlCharacters","renderIndentGuides","renderLineHighlight","useTabStops","fontFamily","fontWeight","fontSize","lineHeight","value","keys","forEach","key","undefined","valueToCompare","getModel","decorators","Component","args","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","selector","template","host","(window:resize)","styles","ctorParameters","propDecorators","Input","Output","ViewChild","static","NgModule","declarations"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n    typeof define === 'function' && define.amd ? define('@ajf/material/monaco-editor', ['exports', '@angular/core'], factory) :\n    (global = global || self, factory((global.ajf = global.ajf || {}, global.ajf.material = global.ajf.material || {}, global.ajf.material.monacoEditor = {}), global.ng.core));\n}(this, (function (exports, core) { 'use strict';\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    /**\n     * Representation of AutoCompleteItem\n     */\n    var AutoCompleteItem = /** @class */ (function () {\n        function AutoCompleteItem() {\n        }\n        AutoCompleteItem.prototype.setLabel = function (label) {\n            this.label = label;\n            return this;\n        };\n        AutoCompleteItem.prototype.setKind = function (kind) {\n            this.kind = kind;\n            return this;\n        };\n        AutoCompleteItem.prototype.setDocumentation = function (documentation) {\n            this.documentation = documentation;\n            return this;\n        };\n        AutoCompleteItem.prototype.setInsertText = function (insertText) {\n            this.insertText = insertText;\n            return this;\n        };\n        return AutoCompleteItem;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    /**\n     * List of dev language avalaible in Monaco Editor\n     */\n    var IEditorLanguage = /** @class */ (function () {\n        function IEditorLanguage() {\n        }\n        return IEditorLanguage;\n    }());\n    IEditorLanguage.BAT = 'bat';\n    IEditorLanguage.C = 'c';\n    IEditorLanguage.CPP = 'cpp';\n    IEditorLanguage.CSHARP = 'csharp';\n    IEditorLanguage.CSS = 'css';\n    IEditorLanguage.DOCKERFILE = 'dockerfile';\n    IEditorLanguage.FSHARP = 'fsharp';\n    IEditorLanguage.GO = 'go';\n    IEditorLanguage.HANDLEBARS = 'handlebars';\n    IEditorLanguage.HTML = 'html';\n    IEditorLanguage.INI = 'ini';\n    IEditorLanguage.JADE = 'jade';\n    IEditorLanguage.JAVASCRIPT = 'javascript';\n    IEditorLanguage.JSON = 'json';\n    IEditorLanguage.LESS = 'less';\n    IEditorLanguage.LUA = 'lua';\n    IEditorLanguage.MARKDOWN = 'markdown';\n    IEditorLanguage.OBJECTIVEC = 'objective-c';\n    IEditorLanguage.PHP = 'php';\n    IEditorLanguage.PLAINTEXT = 'plaintext';\n    IEditorLanguage.POSTIATS = 'postiats';\n    IEditorLanguage.POWERSHELL = 'powershell';\n    IEditorLanguage.PYTHON = 'python';\n    IEditorLanguage.R = 'r';\n    IEditorLanguage.RAZOR = 'razor';\n    IEditorLanguage.RUBY = 'ruby';\n    IEditorLanguage.SCSS = 'scss';\n    IEditorLanguage.SQL = 'sql';\n    IEditorLanguage.SWIFT = 'swift';\n    IEditorLanguage.TYPESCRIPT = 'typescript';\n    IEditorLanguage.VB = 'vb';\n    IEditorLanguage.XML = 'xml';\n    IEditorLanguage.YAML = 'yaml';\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    /**\n     * Manage the autoCompletion for all instances of the editors\n     */\n    var AutoCompleteSingleton = /** @class */ (function () {\n        function AutoCompleteSingleton() {\n            this._autoCompleteValues = {};\n        }\n        /**\n         * We use a singleton, because this class can be call from all the Monaco Editor Components\n         */\n        AutoCompleteSingleton.getInstance = function () {\n            if (!AutoCompleteSingleton._instance) {\n                AutoCompleteSingleton._instance = new AutoCompleteSingleton();\n            }\n            return AutoCompleteSingleton._instance;\n        };\n        Object.defineProperty(AutoCompleteSingleton.prototype, \"autoCompleteValues\", {\n            get: function () {\n                return this._autoCompleteValues;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /**\n         * Init autoComplete for language passed in param if is not already done.\n         * @param language\n         */\n        AutoCompleteSingleton.prototype.initAutoComplete = function (language) {\n            if (this._autoCompleteValues[language.toString()]) {\n                return;\n            }\n            this._autoCompleteValues[language.toString()] = [];\n            // This event is fired when the user press Ctrl + Space, to show Intelissense (Autocomplete)\n            monaco.languages.registerCompletionItemProvider(language, {\n                provideCompletionItems: function (model) {\n                    // Get new autoComplete list for the current content\n                    AutoCompleteSingleton.getInstance().parseAutoCompleteValues(language, model.getValue());\n                    return AutoCompleteSingleton.getInstance().autoCompleteValues[language.toString()];\n                },\n            });\n        };\n        /**\n         * Parse the content passed in param for the language passed in param\n         * @param language\n         * @param content\n         */\n        AutoCompleteSingleton.prototype.parseAutoCompleteValues = function (language, content) {\n            switch (language) {\n                case IEditorLanguage.XML:\n                    return this._parseXmlAutoComplete(content);\n                case IEditorLanguage.JSON:\n                    return this._parseJsonAutoComplete(content);\n                default:\n                    return [];\n            }\n        };\n        /**\n         * Parse the XML content and add all tags in AutoComplete for XML Language\n         * @param content\n         */\n        AutoCompleteSingleton.prototype._parseXmlAutoComplete = function (content) {\n            var tempList = [];\n            var parser = new DOMParser();\n            var tags = parser.parseFromString(content, 'text/xml').getElementsByTagName('*');\n            var _loop_1 = function (i) {\n                // Add TAG only if it not already existing in autoComplete list and in tempList\n                if (!this_1._autoCompleteValues[IEditorLanguage.XML].find(function (obj) { return obj.label === tags[i].tagName; }) &&\n                    !tempList.find(function (obj) { return obj.label === tags[i].tagName; })) {\n                    // Create autoComplete object\n                    var obj = new AutoCompleteItem()\n                        .setLabel(tags[i].tagName)\n                        .setKind(monaco.languages.CompletionItemKind.Function)\n                        .setDocumentation('')\n                        .setInsertText(\"<\" + tags[i].tagName + \"><\" + tags[i].tagName + \">\");\n                    tempList.push(obj);\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < tags.length; i++) {\n                _loop_1(i);\n            }\n            // Add tempList list in the _autoCompleteValues, to maintain a list updated\n            if (tempList.length > 0) {\n                this._autoCompleteValues[IEditorLanguage.XML.toString()] =\n                    this._autoCompleteValues[IEditorLanguage.XML.toString()].concat(tempList);\n            }\n            return tempList;\n        };\n        AutoCompleteSingleton.prototype._parseJsonAutoComplete = function (content) {\n            /* tslint:disable-next-line */\n            var regex = /(?:\\'|\\')([^']*)(?:\\'|\\')(?=:)(?:\\:\\s*)(?:\\'|\\')?(true|false|[0-9a-zA-Z\\+\\-\\,\\.\\$]*)/g;\n            var tempList = [];\n            var m;\n            while ((m = regex.exec(content)) !== null) {\n                // This is necessary to avoid infinite loops with zero-width matches\n                if (m.index === regex.lastIndex) {\n                    regex.lastIndex++;\n                }\n                // Add Element only if it not already existing in autoComplete list and in tempList\n                if (m[1] && !this._autoCompleteValues[IEditorLanguage.JSON].find(function (obj) { return obj.label === m[1]; }) &&\n                    !tempList.find(function (obj) { return obj.label === m[1]; })) {\n                    var obj = new AutoCompleteItem()\n                        .setLabel(m[1])\n                        .setKind(monaco.languages.CompletionItemKind.Value)\n                        .setDocumentation('')\n                        .setInsertText(\"'\" + m[1] + \"':\");\n                    tempList.push(obj);\n                }\n            }\n            // Add tempList list in the _autoCompleteValues, to maintain a list updated\n            if (tempList.length > 0) {\n                this._autoCompleteValues[IEditorLanguage.JSON.toString()] =\n                    this._autoCompleteValues[IEditorLanguage.JSON.toString()].concat(tempList);\n            }\n            return tempList;\n        };\n        return AutoCompleteSingleton;\n    }());\n    AutoCompleteSingleton._instance = null;\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    /**\n     * Configuration options for the editor.\n     */\n    var IEditorOptions = /** @class */ (function () {\n        function IEditorOptions() {\n        }\n        return IEditorOptions;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfMonacoEditor = /** @class */ (function () {\n        function AjfMonacoEditor() {\n            this.autoFormatOnLoad = true;\n            this.monacoLibPath = 'vs/loader.js';\n            this.valueChange = new core.EventEmitter();\n            this.valueToCompareChange = new core.EventEmitter();\n            this.init = new core.EventEmitter();\n            this._value = '';\n            this._valueToCompare = '';\n        }\n        Object.defineProperty(AjfMonacoEditor.prototype, \"valueToCompare\", {\n            set: function (v) {\n                if (v !== this._valueToCompare) {\n                    this._valueToCompare = v;\n                    if (this._valueToCompare === void 0 || !this._valueToCompare || !this._editor) {\n                        if (this._editor && this._editor.getEditorType() !== 'vs.editor.ICodeEditor') {\n                            this._initEditor();\n                            return;\n                        }\n                        return;\n                    }\n                    if (!this._value) {\n                        this._value = '';\n                    }\n                    if (this._editor.getEditorType() === 'vs.editor.ICodeEditor') {\n                        this._initEditor();\n                        return;\n                    }\n                }\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfMonacoEditor.prototype, \"value\", {\n            set: function (v) {\n                if (v !== this._value) {\n                    this._value = v;\n                    if (this._value === void 0 || !this._editor) {\n                        return;\n                    }\n                    if (this._editor.getEditorType() !== 'vs.editor.ICodeEditor') {\n                        this._initEditor();\n                        return;\n                    }\n                    this._editor.setValue(this._value);\n                }\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfMonacoEditor.prototype, \"editor\", {\n            get: function () {\n                return this._editor;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /**\n         * load Monaco lib\n         */\n        AjfMonacoEditor.prototype.ngAfterViewInit = function () {\n            var _this = this;\n            var onGotAmdLoader = function () {\n                // Load monaco\n                window.require(['vs/editor/editor.main'], function () {\n                    _this._initMonaco();\n                });\n            };\n            // Load AMD loader if necessary\n            if (!window.require) {\n                var loaderScript = document.createElement('script');\n                loaderScript.type = 'text/javascript';\n                loaderScript.src = this.monacoLibPath;\n                loaderScript.addEventListener('load', onGotAmdLoader);\n                document.body.appendChild(loaderScript);\n            }\n            else {\n                onGotAmdLoader();\n            }\n        };\n        /**\n         * Upon destruction of the component we make sure to dispose both the editor and\n         * the extra libs that we might've loaded\n         */\n        AjfMonacoEditor.prototype.ngOnDestroy = function () {\n            this.dispose();\n        };\n        AjfMonacoEditor.prototype.ngOnChanges = function (_changes) {\n            if (this._editor) {\n                this._editor.updateOptions(this._getOptions());\n            }\n        };\n        /**\n         * Destroy the monaco componenent\n         */\n        AjfMonacoEditor.prototype.dispose = function () {\n            var myDiv = this.editorContent.nativeElement;\n            if (this._editor) {\n                this._editor.dispose();\n                while (myDiv.hasChildNodes()) {\n                    if (myDiv.firstChild != null) {\n                        myDiv.removeChild(myDiv.firstChild);\n                    }\n                }\n                this._editor = null;\n            }\n        };\n        /**\n         * Triggered when windows is resized\n         * @param event\n         */\n        AjfMonacoEditor.prototype.onResize = function (_event) {\n            // Manually set monaco size because MonacoEditor doesn't work with Flexbox css\n            var myDiv = this.editorContent.nativeElement;\n            if (myDiv == null || myDiv.parentElement == null) {\n                return;\n            }\n            myDiv.setAttribute('style', \"height: \" + myDiv.parentElement.offsetHeight + \"px; width:100%;\");\n        };\n        /**\n         * Init editor\n         * Is called once monaco library is available\n         */\n        AjfMonacoEditor.prototype._initMonaco = function () {\n            this._initEditor();\n            this.init.emit();\n        };\n        AjfMonacoEditor.prototype._initEditor = function () {\n            var _this = this;\n            var myDiv = this.editorContent.nativeElement;\n            var options = this._getOptions();\n            this.dispose();\n            if (!this._valueToCompare) {\n                this._editor = this._initSimpleEditor(myDiv, options);\n            }\n            else {\n                this._editor = this._initDiffEditor(myDiv, options);\n            }\n            // Manually set monaco size because MonacoEditor doesn't work with Flexbox css\n            if (myDiv != null && myDiv.parentElement != null) {\n                myDiv.setAttribute('style', \"height: \" + myDiv.parentElement.offsetHeight + \"px; width:100%;\");\n            }\n            // Init Autocomplete if not disabled\n            if (!this.disableAutocomplete) {\n                AutoCompleteSingleton.getInstance().initAutoComplete(this.language);\n            }\n            // When content is loaded, scrollChange is trigerred,\n            // We can only force auto format at this moment, because editor\n            // doesn't have onReady event ...\n            //  this._editor.onDidScrollChange(() => {\n            //     if (this.autoFormatOnLoad && !this._isCodeFormatted) {\n            //         this._editor.getAction('editor.action.format').run();\n            //         this._isCodeFormatted = true;\n            //     }\n            // });\n            // Trigger on change event for simple editor\n            this._getOriginalModel().onDidChangeContent(function (_e) {\n                var newVal = _this._getOriginalModel().getValue();\n                if (_this._value !== newVal) {\n                    _this._updateValue(newVal);\n                }\n            });\n            // Trigger on change event for diff editor\n            if (this._getModifiedModel()) {\n                this._getModifiedModel().onDidChangeContent(function (_e) {\n                    var newVal = _this._getModifiedModel().getValue();\n                    if (_this._valueToCompare !== newVal) {\n                        _this._updateValueToCompare(newVal);\n                    }\n                });\n            }\n        };\n        /**\n         * Create a simple editor text\n         * @param div\n         * @param options\n         */\n        AjfMonacoEditor.prototype._initSimpleEditor = function (div, options) {\n            return monaco.editor.create(div, options);\n        };\n        /**\n         * Create a diff editor to compare two string (_value and _valueToCompare)\n         * @param div\n         */\n        AjfMonacoEditor.prototype._initDiffEditor = function (div, options) {\n            var originalModel = monaco.editor.createModel(this._value, this.language);\n            var modifiedModel = monaco.editor.createModel(this._valueToCompare, this.language);\n            var diffEditor = monaco.editor.createDiffEditor(div, options);\n            diffEditor.setModel({\n                modified: modifiedModel,\n                original: originalModel,\n            });\n            return diffEditor;\n        };\n        AjfMonacoEditor.prototype._getOptions = function () {\n            var options = new IEditorOptions();\n            options.experimentalScreenReader = this.experimentalScreenReader;\n            options.ariaLabel = this.ariaLabel;\n            options.rulers = this.rulers;\n            options.wordSeparators = this.wordSeparators;\n            options.selectionClipboard = this.selectionClipboard;\n            options.lineNumbers = this.lineNumbers;\n            options.selectOnLineNumbers = this.selectOnLineNumbers;\n            options.lineNumbersMinChars = this.lineNumbersMinChars;\n            options.glyphMargin = this.glyphMargin;\n            options.lineDecorationsWidth = this.lineDecorationsWidth;\n            options.revealHorizontalRightPadding = this.revealHorizontalRightPadding;\n            options.roundedSelection = this.roundedSelection;\n            options.theme = this.theme;\n            options.readOnly = this.readOnly;\n            options.scrollbar = this.scrollbar;\n            options.overviewRulerLanes = this.overviewRulerLanes;\n            options.cursorBlinking = this.cursorBlinking;\n            options.mouseWheelZoom = this.mouseWheelZoom;\n            options.cursorStyle = this.cursorStyle;\n            options.mouseWheelZoom = this.mouseWheelZoom;\n            options.fontLigatures = this.fontLigatures;\n            options.disableTranslate3d = this.disableTranslate3d;\n            options.hideCursorInOverviewRuler = this.hideCursorInOverviewRuler;\n            options.scrollBeyondLastLine = this.scrollBeyondLastLine;\n            options.automaticLayout = this.automaticLayout;\n            options.wrappingColumn = this.wrappingColumn;\n            options.wordWrap = this.wordWrap;\n            options.wrappingIndent = this.wrappingIndent;\n            options.wordWrapBreakBeforeCharacters = this.wordWrapBreakBeforeCharacters;\n            options.wordWrapBreakAfterCharacters = this.wordWrapBreakAfterCharacters;\n            options.wordWrapBreakObtrusiveCharacters = this.wordWrapBreakObtrusiveCharacters;\n            options.stopRenderingLineAfter = this.stopRenderingLineAfter;\n            options.hover = this.hover;\n            options.contextmenu = this.contextmenu;\n            options.mouseWheelScrollSensitivity = this.mouseWheelScrollSensitivity;\n            options.quickSuggestions = this.quickSuggestions;\n            options.quickSuggestionsDelay = this.quickSuggestionsDelay;\n            options.parameterHints = this.parameterHints;\n            options.iconsInSuggestions = this.iconsInSuggestions;\n            options.autoClosingBrackets = this.autoClosingBrackets;\n            options.formatOnType = this.formatOnType;\n            options.suggestOnTriggerCharacters = this.suggestOnTriggerCharacters;\n            options.acceptSuggestionOnEnter = this.acceptSuggestionOnEnter;\n            options.snippetSuggestions = this.snippetSuggestions;\n            options.tabCompletion = this.tabCompletion;\n            options.wordBasedSuggestions = this.wordBasedSuggestions;\n            options.selectionHighlight = this.selectionHighlight;\n            options.codeLens = this.codeLens;\n            options.folding = this.folding;\n            options.renderWhitespace = this.renderWhitespace;\n            options.renderControlCharacters = this.renderControlCharacters;\n            options.renderIndentGuides = this.renderIndentGuides;\n            options.renderLineHighlight = this.renderLineHighlight;\n            options.useTabStops = this.useTabStops;\n            options.fontFamily = this.fontFamily;\n            options.fontWeight = this.fontWeight;\n            options.fontSize = this.fontSize;\n            options.lineHeight = this.lineHeight;\n            options.value = this._value;\n            options.language = this.language;\n            Object.keys(options).forEach(function (key) {\n                if (options[key] === undefined) {\n                    delete options[key]; // Remove all undefined properties\n                }\n            });\n            return options;\n        };\n        /**\n         * UpdateValue\n         *\n         * @param value\n         */\n        AjfMonacoEditor.prototype._updateValue = function (value) {\n            this.value = value;\n            this._value = value;\n            this.valueChange.emit(value);\n        };\n        /**\n         * UpdateValue\n         *\n         * @param value\n         */\n        AjfMonacoEditor.prototype._updateValueToCompare = function (value) {\n            this.valueToCompare = value;\n            this._valueToCompare = value;\n            this.valueToCompareChange.emit(value);\n        };\n        AjfMonacoEditor.prototype._getOriginalModel = function () {\n            if (this._editor) {\n                var model = this._editor.getModel();\n                return model.original ? model.original : model;\n            }\n        };\n        AjfMonacoEditor.prototype._getModifiedModel = function () {\n            if (this._editor) {\n                var model = this._editor.getModel();\n                return model.modified ? model.modified : null;\n            }\n        };\n        return AjfMonacoEditor;\n    }());\n    AjfMonacoEditor.decorators = [\n        { type: core.Component, args: [{\n                    encapsulation: core.ViewEncapsulation.None,\n                    changeDetection: core.ChangeDetectionStrategy.OnPush,\n                    selector: 'ajf-monaco-editor',\n                    template: \"<div #editor class=\\\"ajf-monaco-editor\\\"></div>\\n\",\n                    host: { '(window:resize)': 'onResize($event)' },\n                    styles: [\"ajf-monaco-editor{display:flex;align-items:stretch;overflow:hidden}ajf-monaco-editor .ajf-monaco-editor{flex:1 0 auto}\\n\"]\n                },] }\n    ];\n    AjfMonacoEditor.ctorParameters = function () { return []; };\n    AjfMonacoEditor.propDecorators = {\n        experimentalScreenReader: [{ type: core.Input }],\n        ariaLabel: [{ type: core.Input }],\n        rulers: [{ type: core.Input }],\n        wordSeparators: [{ type: core.Input }],\n        selectionClipboard: [{ type: core.Input }],\n        lineNumbers: [{ type: core.Input }],\n        selectOnLineNumbers: [{ type: core.Input }],\n        lineNumbersMinChars: [{ type: core.Input }],\n        glyphMargin: [{ type: core.Input }],\n        lineDecorationsWidth: [{ type: core.Input }],\n        revealHorizontalRightPadding: [{ type: core.Input }],\n        roundedSelection: [{ type: core.Input }],\n        theme: [{ type: core.Input }],\n        readOnly: [{ type: core.Input }],\n        scrollbar: [{ type: core.Input }],\n        overviewRulerLanes: [{ type: core.Input }],\n        cursorBlinking: [{ type: core.Input }],\n        mouseWheelZoom: [{ type: core.Input }],\n        cursorStyle: [{ type: core.Input }],\n        fontLigatures: [{ type: core.Input }],\n        disableTranslate3d: [{ type: core.Input }],\n        hideCursorInOverviewRuler: [{ type: core.Input }],\n        scrollBeyondLastLine: [{ type: core.Input }],\n        automaticLayout: [{ type: core.Input }],\n        wrappingColumn: [{ type: core.Input }],\n        wordWrap: [{ type: core.Input }],\n        wrappingIndent: [{ type: core.Input }],\n        wordWrapBreakBeforeCharacters: [{ type: core.Input }],\n        wordWrapBreakAfterCharacters: [{ type: core.Input }],\n        wordWrapBreakObtrusiveCharacters: [{ type: core.Input }],\n        stopRenderingLineAfter: [{ type: core.Input }],\n        hover: [{ type: core.Input }],\n        contextmenu: [{ type: core.Input }],\n        mouseWheelScrollSensitivity: [{ type: core.Input }],\n        quickSuggestions: [{ type: core.Input }],\n        quickSuggestionsDelay: [{ type: core.Input }],\n        parameterHints: [{ type: core.Input }],\n        iconsInSuggestions: [{ type: core.Input }],\n        autoClosingBrackets: [{ type: core.Input }],\n        formatOnType: [{ type: core.Input }],\n        suggestOnTriggerCharacters: [{ type: core.Input }],\n        acceptSuggestionOnEnter: [{ type: core.Input }],\n        snippetSuggestions: [{ type: core.Input }],\n        tabCompletion: [{ type: core.Input }],\n        wordBasedSuggestions: [{ type: core.Input }],\n        selectionHighlight: [{ type: core.Input }],\n        codeLens: [{ type: core.Input }],\n        folding: [{ type: core.Input }],\n        renderWhitespace: [{ type: core.Input }],\n        renderControlCharacters: [{ type: core.Input }],\n        renderIndentGuides: [{ type: core.Input }],\n        renderLineHighlight: [{ type: core.Input }],\n        useTabStops: [{ type: core.Input }],\n        fontFamily: [{ type: core.Input }],\n        fontWeight: [{ type: core.Input }],\n        fontSize: [{ type: core.Input }],\n        lineHeight: [{ type: core.Input }],\n        language: [{ type: core.Input }],\n        disableAutocomplete: [{ type: core.Input }],\n        autoFormatOnLoad: [{ type: core.Input }],\n        monacoLibPath: [{ type: core.Input }],\n        valueToCompare: [{ type: core.Input }],\n        value: [{ type: core.Input }],\n        valueChange: [{ type: core.Output }],\n        valueToCompareChange: [{ type: core.Output }],\n        init: [{ type: core.Output }],\n        editorContent: [{ type: core.ViewChild, args: ['editor', { static: true },] }]\n    };\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfMonacoEditorModule = /** @class */ (function () {\n        function AjfMonacoEditorModule() {\n        }\n        return AjfMonacoEditorModule;\n    }());\n    AjfMonacoEditorModule.decorators = [\n        { type: core.NgModule, args: [{\n                    declarations: [\n                        AjfMonacoEditor,\n                    ],\n                    exports: [\n                        AjfMonacoEditor,\n                    ]\n                },] }\n    ];\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.AjfMonacoEditor = AjfMonacoEditor;\n    exports.AjfMonacoEditorModule = AjfMonacoEditorModule;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-monaco-editor.umd.js.map\n"]}