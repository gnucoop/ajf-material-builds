{"version":3,"sources":["src/material/material-monaco-editor.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ajf","material","monacoEditor","ng","core","this","AutoCompleteItem","prototype","setLabel","label","setKind","kind","setDocumentation","documentation","setInsertText","insertText","IEditorLanguage","BAT","C","CPP","CSHARP","CSS","DOCKERFILE","FSHARP","GO","HANDLEBARS","HTML","INI","JADE","JAVASCRIPT","JSON","LESS","LUA","MARKDOWN","OBJECTIVEC","PHP","PLAINTEXT","POSTIATS","POWERSHELL","PYTHON","R","RAZOR","RUBY","SCSS","SQL","SWIFT","TYPESCRIPT","VB","XML","YAML","AutoCompleteSingleton","_autoCompleteValues","getInstance","_instance","Object","defineProperty","get","enumerable","configurable","initAutoComplete","language","toString","monaco","languages","registerCompletionItemProvider","provideCompletionItems","model","parseAutoCompleteValues","getValue","autoCompleteValues","content","_parseXmlAutoComplete","_parseJsonAutoComplete","tempList","tags","DOMParser","parseFromString","getElementsByTagName","_loop_1","i","this_1","find","obj","tagName","CompletionItemKind","Function","push","length","concat","m","regex","exec","index","lastIndex","Value","IEditorOptions","AjfMonacoEditor","IEditorTheme","VISUAL_STUDIO","VISUAL_STUDIO_DARK","HIGH_CONTRAST_DARK","autoFormatOnLoad","monacoLibPath","valueChange","EventEmitter","valueToCompareChange","init","_value","_valueToCompare","set","v","_editor","getEditorType","_initEditor","setValue","ngAfterViewInit","_this","onGotAmdLoader","window","_initMonaco","loaderScript","document","createElement","type","src","addEventListener","body","appendChild","ngOnDestroy","dispose","ngOnChanges","_changes","updateOptions","_getOptions","myDiv","editorContent","nativeElement","hasChildNodes","firstChild","removeChild","onResize","_event","parentElement","setAttribute","offsetHeight","emit","options","_initDiffEditor","_initSimpleEditor","disableAutocomplete","_getOriginalModel","onDidChangeContent","_e","newVal","_updateValue","_getModifiedModel","_updateValueToCompare","div","editor","create","originalModel","createModel","modifiedModel","diffEditor","createDiffEditor","setModel","modified","original","experimentalScreenReader","ariaLabel","rulers","wordSeparators","selectionClipboard","lineNumbers","selectOnLineNumbers","lineNumbersMinChars","glyphMargin","lineDecorationsWidth","revealHorizontalRightPadding","roundedSelection","theme","readOnly","scrollbar","overviewRulerLanes","cursorBlinking","mouseWheelZoom","cursorStyle","fontLigatures","disableTranslate3d","hideCursorInOverviewRuler","scrollBeyondLastLine","automaticLayout","wrappingColumn","wordWrap","wrappingIndent","wordWrapBreakBeforeCharacters","wordWrapBreakAfterCharacters","wordWrapBreakObtrusiveCharacters","stopRenderingLineAfter","hover","contextmenu","mouseWheelScrollSensitivity","quickSuggestions","quickSuggestionsDelay","parameterHints","iconsInSuggestions","autoClosingBrackets","formatOnType","suggestOnTriggerCharacters","acceptSuggestionOnEnter","snippetSuggestions","tabCompletion","wordBasedSuggestions","selectionHighlight","codeLens","folding","renderWhitespace","renderControlCharacters","renderIndentGuides","renderLineHighlight","useTabStops","fontFamily","fontWeight","fontSize","lineHeight","value","keys","forEach","key","undefined","valueToCompare","getModel","decorators","Component","args","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","selector","template","host","(window:resize)","styles","ctorParameters","propDecorators","Input","Output","ViewChild","static","AjfMonacoEditorModule","NgModule","declarations"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n    typeof define === 'function' && define.amd ? define('@ajf/material/monaco-editor', ['exports', '@angular/core'], factory) :\n    (global = global || self, factory((global.ajf = global.ajf || {}, global.ajf.material = global.ajf.material || {}, global.ajf.material.monacoEditor = {}), global.ng.core));\n}(this, (function (exports, core) { 'use strict';\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    /**\n     * Representation of AutoCompleteItem\n     */\n    var AutoCompleteItem = /** @class */ (function () {\n        function AutoCompleteItem() {\n        }\n        AutoCompleteItem.prototype.setLabel = function (label) {\n            this.label = label;\n            return this;\n        };\n        AutoCompleteItem.prototype.setKind = function (kind) {\n            this.kind = kind;\n            return this;\n        };\n        AutoCompleteItem.prototype.setDocumentation = function (documentation) {\n            this.documentation = documentation;\n            return this;\n        };\n        AutoCompleteItem.prototype.setInsertText = function (insertText) {\n            this.insertText = insertText;\n            return this;\n        };\n        return AutoCompleteItem;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    /**\n     * List of dev language avalaible in Monaco Editor\n     */\n    var IEditorLanguage = /** @class */ (function () {\n        function IEditorLanguage() {\n        }\n        IEditorLanguage.BAT = 'bat';\n        IEditorLanguage.C = 'c';\n        IEditorLanguage.CPP = 'cpp';\n        IEditorLanguage.CSHARP = 'csharp';\n        IEditorLanguage.CSS = 'css';\n        IEditorLanguage.DOCKERFILE = 'dockerfile';\n        IEditorLanguage.FSHARP = 'fsharp';\n        IEditorLanguage.GO = 'go';\n        IEditorLanguage.HANDLEBARS = 'handlebars';\n        IEditorLanguage.HTML = 'html';\n        IEditorLanguage.INI = 'ini';\n        IEditorLanguage.JADE = 'jade';\n        IEditorLanguage.JAVASCRIPT = 'javascript';\n        IEditorLanguage.JSON = 'json';\n        IEditorLanguage.LESS = 'less';\n        IEditorLanguage.LUA = 'lua';\n        IEditorLanguage.MARKDOWN = 'markdown';\n        IEditorLanguage.OBJECTIVEC = 'objective-c';\n        IEditorLanguage.PHP = 'php';\n        IEditorLanguage.PLAINTEXT = 'plaintext';\n        IEditorLanguage.POSTIATS = 'postiats';\n        IEditorLanguage.POWERSHELL = 'powershell';\n        IEditorLanguage.PYTHON = 'python';\n        IEditorLanguage.R = 'r';\n        IEditorLanguage.RAZOR = 'razor';\n        IEditorLanguage.RUBY = 'ruby';\n        IEditorLanguage.SCSS = 'scss';\n        IEditorLanguage.SQL = 'sql';\n        IEditorLanguage.SWIFT = 'swift';\n        IEditorLanguage.TYPESCRIPT = 'typescript';\n        IEditorLanguage.VB = 'vb';\n        IEditorLanguage.XML = 'xml';\n        IEditorLanguage.YAML = 'yaml';\n        return IEditorLanguage;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    /**\n     * Manage the autoCompletion for all instances of the editors\n     */\n    var AutoCompleteSingleton = /** @class */ (function () {\n        function AutoCompleteSingleton() {\n            this._autoCompleteValues = {};\n        }\n        /**\n         * We use a singleton, because this class can be call from all the Monaco Editor Components\n         */\n        AutoCompleteSingleton.getInstance = function () {\n            if (!AutoCompleteSingleton._instance) {\n                AutoCompleteSingleton._instance = new AutoCompleteSingleton();\n            }\n            return AutoCompleteSingleton._instance;\n        };\n        Object.defineProperty(AutoCompleteSingleton.prototype, \"autoCompleteValues\", {\n            get: function () {\n                return this._autoCompleteValues;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /**\n         * Init autoComplete for language passed in param if is not already done.\n         * @param language\n         */\n        AutoCompleteSingleton.prototype.initAutoComplete = function (language) {\n            if (this._autoCompleteValues[language.toString()]) {\n                return;\n            }\n            this._autoCompleteValues[language.toString()] = [];\n            // This event is fired when the user press Ctrl + Space, to show Intelissense (Autocomplete)\n            monaco.languages.registerCompletionItemProvider(language, {\n                provideCompletionItems: function (model) {\n                    // Get new autoComplete list for the current content\n                    AutoCompleteSingleton.getInstance().parseAutoCompleteValues(language, model.getValue());\n                    return AutoCompleteSingleton.getInstance().autoCompleteValues[language.toString()];\n                },\n            });\n        };\n        /**\n         * Parse the content passed in param for the language passed in param\n         * @param language\n         * @param content\n         */\n        AutoCompleteSingleton.prototype.parseAutoCompleteValues = function (language, content) {\n            switch (language) {\n                case IEditorLanguage.XML:\n                    return this._parseXmlAutoComplete(content);\n                case IEditorLanguage.JSON:\n                    return this._parseJsonAutoComplete(content);\n                default:\n                    return [];\n            }\n        };\n        /**\n         * Parse the XML content and add all tags in AutoComplete for XML Language\n         * @param content\n         */\n        AutoCompleteSingleton.prototype._parseXmlAutoComplete = function (content) {\n            var tempList = [];\n            var parser = new DOMParser();\n            var tags = parser.parseFromString(content, 'text/xml').getElementsByTagName('*');\n            var _loop_1 = function (i) {\n                // Add TAG only if it not already existing in autoComplete list and in tempList\n                if (!this_1._autoCompleteValues[IEditorLanguage.XML].find(function (obj) { return obj.label === tags[i].tagName; }) &&\n                    !tempList.find(function (obj) { return obj.label === tags[i].tagName; })) {\n                    // Create autoComplete object\n                    var obj = new AutoCompleteItem()\n                        .setLabel(tags[i].tagName)\n                        .setKind(monaco.languages.CompletionItemKind.Function)\n                        .setDocumentation('')\n                        .setInsertText(\"<\" + tags[i].tagName + \"><\" + tags[i].tagName + \">\");\n                    tempList.push(obj);\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < tags.length; i++) {\n                _loop_1(i);\n            }\n            // Add tempList list in the _autoCompleteValues, to maintain a list updated\n            if (tempList.length > 0) {\n                this._autoCompleteValues[IEditorLanguage.XML.toString()] =\n                    this._autoCompleteValues[IEditorLanguage.XML.toString()].concat(tempList);\n            }\n            return tempList;\n        };\n        AutoCompleteSingleton.prototype._parseJsonAutoComplete = function (content) {\n            /* tslint:disable-next-line */\n            var regex = /(?:\\'|\\')([^']*)(?:\\'|\\')(?=:)(?:\\:\\s*)(?:\\'|\\')?(true|false|[0-9a-zA-Z\\+\\-\\,\\.\\$]*)/g;\n            var tempList = [];\n            var m;\n            while ((m = regex.exec(content)) !== null) {\n                // This is necessary to avoid infinite loops with zero-width matches\n                if (m.index === regex.lastIndex) {\n                    regex.lastIndex++;\n                }\n                // Add Element only if it not already existing in autoComplete list and in tempList\n                if (m[1] && !this._autoCompleteValues[IEditorLanguage.JSON].find(function (obj) { return obj.label === m[1]; }) &&\n                    !tempList.find(function (obj) { return obj.label === m[1]; })) {\n                    var obj = new AutoCompleteItem()\n                        .setLabel(m[1])\n                        .setKind(monaco.languages.CompletionItemKind.Value)\n                        .setDocumentation('')\n                        .setInsertText(\"'\" + m[1] + \"':\");\n                    tempList.push(obj);\n                }\n            }\n            // Add tempList list in the _autoCompleteValues, to maintain a list updated\n            if (tempList.length > 0) {\n                this._autoCompleteValues[IEditorLanguage.JSON.toString()] =\n                    this._autoCompleteValues[IEditorLanguage.JSON.toString()].concat(tempList);\n            }\n            return tempList;\n        };\n        AutoCompleteSingleton._instance = null;\n        return AutoCompleteSingleton;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    /**\n     * Configuration options for the editor.\n     */\n    var IEditorOptions = /** @class */ (function () {\n        function IEditorOptions() {\n        }\n        return IEditorOptions;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    /**\n     * List of theme available for Monaco Editor\n     */\n    var IEditorTheme = /** @class */ (function () {\n        function IEditorTheme() {\n        }\n        IEditorTheme.VISUAL_STUDIO = 'vs';\n        IEditorTheme.VISUAL_STUDIO_DARK = 'vs-dark';\n        IEditorTheme.HIGH_CONTRAST_DARK = 'hc-black';\n        return IEditorTheme;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfMonacoEditor = /** @class */ (function () {\n        function AjfMonacoEditor() {\n            this.autoFormatOnLoad = true;\n            this.monacoLibPath = 'vs/loader.js';\n            this.valueChange = new core.EventEmitter();\n            this.valueToCompareChange = new core.EventEmitter();\n            this.init = new core.EventEmitter();\n            this._value = '';\n            this._valueToCompare = '';\n        }\n        Object.defineProperty(AjfMonacoEditor.prototype, \"valueToCompare\", {\n            set: function (v) {\n                if (v !== this._valueToCompare) {\n                    this._valueToCompare = v;\n                    if (this._valueToCompare === void 0 || !this._valueToCompare || !this._editor) {\n                        if (this._editor && this._editor.getEditorType() !== 'vs.editor.ICodeEditor') {\n                            this._initEditor();\n                            return;\n                        }\n                        return;\n                    }\n                    if (!this._value) {\n                        this._value = '';\n                    }\n                    if (this._editor.getEditorType() === 'vs.editor.ICodeEditor') {\n                        this._initEditor();\n                        return;\n                    }\n                }\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfMonacoEditor.prototype, \"value\", {\n            set: function (v) {\n                if (v !== this._value) {\n                    this._value = v;\n                    if (this._value === void 0 || !this._editor) {\n                        return;\n                    }\n                    if (this._editor.getEditorType() !== 'vs.editor.ICodeEditor') {\n                        this._initEditor();\n                        return;\n                    }\n                    this._editor.setValue(this._value);\n                }\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfMonacoEditor.prototype, \"editor\", {\n            get: function () {\n                return this._editor;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /**\n         * load Monaco lib\n         */\n        AjfMonacoEditor.prototype.ngAfterViewInit = function () {\n            var _this = this;\n            var onGotAmdLoader = function () {\n                // Load monaco\n                window.require(['vs/editor/editor.main'], function () {\n                    _this._initMonaco();\n                });\n            };\n            // Load AMD loader if necessary\n            if (!window.require) {\n                var loaderScript = document.createElement('script');\n                loaderScript.type = 'text/javascript';\n                loaderScript.src = this.monacoLibPath;\n                loaderScript.addEventListener('load', onGotAmdLoader);\n                document.body.appendChild(loaderScript);\n            }\n            else {\n                onGotAmdLoader();\n            }\n        };\n        /**\n         * Upon destruction of the component we make sure to dispose both the editor and\n         * the extra libs that we might've loaded\n         */\n        AjfMonacoEditor.prototype.ngOnDestroy = function () {\n            this.dispose();\n        };\n        AjfMonacoEditor.prototype.ngOnChanges = function (_changes) {\n            if (this._editor) {\n                this._editor.updateOptions(this._getOptions());\n            }\n        };\n        /**\n         * Destroy the monaco componenent\n         */\n        AjfMonacoEditor.prototype.dispose = function () {\n            var myDiv = this.editorContent.nativeElement;\n            if (this._editor) {\n                this._editor.dispose();\n                while (myDiv.hasChildNodes()) {\n                    if (myDiv.firstChild != null) {\n                        myDiv.removeChild(myDiv.firstChild);\n                    }\n                }\n                this._editor = null;\n            }\n        };\n        /**\n         * Triggered when windows is resized\n         * @param event\n         */\n        AjfMonacoEditor.prototype.onResize = function (_event) {\n            // Manually set monaco size because MonacoEditor doesn't work with Flexbox css\n            var myDiv = this.editorContent.nativeElement;\n            if (myDiv == null || myDiv.parentElement == null) {\n                return;\n            }\n            myDiv.setAttribute('style', \"height: \" + myDiv.parentElement.offsetHeight + \"px; width:100%;\");\n        };\n        /**\n         * Init editor\n         * Is called once monaco library is available\n         */\n        AjfMonacoEditor.prototype._initMonaco = function () {\n            this._initEditor();\n            this.init.emit();\n        };\n        AjfMonacoEditor.prototype._initEditor = function () {\n            var _this = this;\n            var myDiv = this.editorContent.nativeElement;\n            var options = this._getOptions();\n            this.dispose();\n            if (!this._valueToCompare) {\n                this._editor = this._initSimpleEditor(myDiv, options);\n            }\n            else {\n                this._editor = this._initDiffEditor(myDiv, options);\n            }\n            // Manually set monaco size because MonacoEditor doesn't work with Flexbox css\n            if (myDiv != null && myDiv.parentElement != null) {\n                myDiv.setAttribute('style', \"height: \" + myDiv.parentElement.offsetHeight + \"px; width:100%;\");\n            }\n            // Init Autocomplete if not disabled\n            if (!this.disableAutocomplete) {\n                AutoCompleteSingleton.getInstance().initAutoComplete(this.language);\n            }\n            // When content is loaded, scrollChange is trigerred,\n            // We can only force auto format at this moment, because editor\n            // doesn't have onReady event ...\n            //  this._editor.onDidScrollChange(() => {\n            //     if (this.autoFormatOnLoad && !this._isCodeFormatted) {\n            //         this._editor.getAction('editor.action.format').run();\n            //         this._isCodeFormatted = true;\n            //     }\n            // });\n            // Trigger on change event for simple editor\n            this._getOriginalModel().onDidChangeContent(function (_e) {\n                var newVal = _this._getOriginalModel().getValue();\n                if (_this._value !== newVal) {\n                    _this._updateValue(newVal);\n                }\n            });\n            // Trigger on change event for diff editor\n            if (this._getModifiedModel()) {\n                this._getModifiedModel().onDidChangeContent(function (_e) {\n                    var newVal = _this._getModifiedModel().getValue();\n                    if (_this._valueToCompare !== newVal) {\n                        _this._updateValueToCompare(newVal);\n                    }\n                });\n            }\n        };\n        /**\n         * Create a simple editor text\n         * @param div\n         * @param options\n         */\n        AjfMonacoEditor.prototype._initSimpleEditor = function (div, options) {\n            return monaco.editor.create(div, options);\n        };\n        /**\n         * Create a diff editor to compare two string (_value and _valueToCompare)\n         * @param div\n         */\n        AjfMonacoEditor.prototype._initDiffEditor = function (div, options) {\n            var originalModel = monaco.editor.createModel(this._value, this.language);\n            var modifiedModel = monaco.editor.createModel(this._valueToCompare, this.language);\n            var diffEditor = monaco.editor.createDiffEditor(div, options);\n            diffEditor.setModel({\n                modified: modifiedModel,\n                original: originalModel,\n            });\n            return diffEditor;\n        };\n        AjfMonacoEditor.prototype._getOptions = function () {\n            var options = new IEditorOptions();\n            options.experimentalScreenReader = this.experimentalScreenReader;\n            options.ariaLabel = this.ariaLabel;\n            options.rulers = this.rulers;\n            options.wordSeparators = this.wordSeparators;\n            options.selectionClipboard = this.selectionClipboard;\n            options.lineNumbers = this.lineNumbers;\n            options.selectOnLineNumbers = this.selectOnLineNumbers;\n            options.lineNumbersMinChars = this.lineNumbersMinChars;\n            options.glyphMargin = this.glyphMargin;\n            options.lineDecorationsWidth = this.lineDecorationsWidth;\n            options.revealHorizontalRightPadding = this.revealHorizontalRightPadding;\n            options.roundedSelection = this.roundedSelection;\n            options.theme = this.theme;\n            options.readOnly = this.readOnly;\n            options.scrollbar = this.scrollbar;\n            options.overviewRulerLanes = this.overviewRulerLanes;\n            options.cursorBlinking = this.cursorBlinking;\n            options.mouseWheelZoom = this.mouseWheelZoom;\n            options.cursorStyle = this.cursorStyle;\n            options.mouseWheelZoom = this.mouseWheelZoom;\n            options.fontLigatures = this.fontLigatures;\n            options.disableTranslate3d = this.disableTranslate3d;\n            options.hideCursorInOverviewRuler = this.hideCursorInOverviewRuler;\n            options.scrollBeyondLastLine = this.scrollBeyondLastLine;\n            options.automaticLayout = this.automaticLayout;\n            options.wrappingColumn = this.wrappingColumn;\n            options.wordWrap = this.wordWrap;\n            options.wrappingIndent = this.wrappingIndent;\n            options.wordWrapBreakBeforeCharacters = this.wordWrapBreakBeforeCharacters;\n            options.wordWrapBreakAfterCharacters = this.wordWrapBreakAfterCharacters;\n            options.wordWrapBreakObtrusiveCharacters = this.wordWrapBreakObtrusiveCharacters;\n            options.stopRenderingLineAfter = this.stopRenderingLineAfter;\n            options.hover = this.hover;\n            options.contextmenu = this.contextmenu;\n            options.mouseWheelScrollSensitivity = this.mouseWheelScrollSensitivity;\n            options.quickSuggestions = this.quickSuggestions;\n            options.quickSuggestionsDelay = this.quickSuggestionsDelay;\n            options.parameterHints = this.parameterHints;\n            options.iconsInSuggestions = this.iconsInSuggestions;\n            options.autoClosingBrackets = this.autoClosingBrackets;\n            options.formatOnType = this.formatOnType;\n            options.suggestOnTriggerCharacters = this.suggestOnTriggerCharacters;\n            options.acceptSuggestionOnEnter = this.acceptSuggestionOnEnter;\n            options.snippetSuggestions = this.snippetSuggestions;\n            options.tabCompletion = this.tabCompletion;\n            options.wordBasedSuggestions = this.wordBasedSuggestions;\n            options.selectionHighlight = this.selectionHighlight;\n            options.codeLens = this.codeLens;\n            options.folding = this.folding;\n            options.renderWhitespace = this.renderWhitespace;\n            options.renderControlCharacters = this.renderControlCharacters;\n            options.renderIndentGuides = this.renderIndentGuides;\n            options.renderLineHighlight = this.renderLineHighlight;\n            options.useTabStops = this.useTabStops;\n            options.fontFamily = this.fontFamily;\n            options.fontWeight = this.fontWeight;\n            options.fontSize = this.fontSize;\n            options.lineHeight = this.lineHeight;\n            options.value = this._value;\n            options.language = this.language;\n            Object.keys(options).forEach(function (key) {\n                if (options[key] === undefined) {\n                    delete options[key]; // Remove all undefined properties\n                }\n            });\n            return options;\n        };\n        /**\n         * UpdateValue\n         *\n         * @param value\n         */\n        AjfMonacoEditor.prototype._updateValue = function (value) {\n            this.value = value;\n            this._value = value;\n            this.valueChange.emit(value);\n        };\n        /**\n         * UpdateValue\n         *\n         * @param value\n         */\n        AjfMonacoEditor.prototype._updateValueToCompare = function (value) {\n            this.valueToCompare = value;\n            this._valueToCompare = value;\n            this.valueToCompareChange.emit(value);\n        };\n        AjfMonacoEditor.prototype._getOriginalModel = function () {\n            if (this._editor) {\n                var model = this._editor.getModel();\n                return model.original ? model.original : model;\n            }\n        };\n        AjfMonacoEditor.prototype._getModifiedModel = function () {\n            if (this._editor) {\n                var model = this._editor.getModel();\n                return model.modified ? model.modified : null;\n            }\n        };\n        AjfMonacoEditor.decorators = [\n            { type: core.Component, args: [{\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        selector: 'ajf-monaco-editor',\n                        template: \"<div #editor class=\\\"ajf-monaco-editor\\\"></div>\\n\",\n                        host: { '(window:resize)': 'onResize($event)' },\n                        styles: [\"ajf-monaco-editor{display:flex;align-items:stretch;overflow:hidden}ajf-monaco-editor .ajf-monaco-editor{flex:1 0 auto}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfMonacoEditor.ctorParameters = function () { return []; };\n        AjfMonacoEditor.propDecorators = {\n            experimentalScreenReader: [{ type: core.Input }],\n            ariaLabel: [{ type: core.Input }],\n            rulers: [{ type: core.Input }],\n            wordSeparators: [{ type: core.Input }],\n            selectionClipboard: [{ type: core.Input }],\n            lineNumbers: [{ type: core.Input }],\n            selectOnLineNumbers: [{ type: core.Input }],\n            lineNumbersMinChars: [{ type: core.Input }],\n            glyphMargin: [{ type: core.Input }],\n            lineDecorationsWidth: [{ type: core.Input }],\n            revealHorizontalRightPadding: [{ type: core.Input }],\n            roundedSelection: [{ type: core.Input }],\n            theme: [{ type: core.Input }],\n            readOnly: [{ type: core.Input }],\n            scrollbar: [{ type: core.Input }],\n            overviewRulerLanes: [{ type: core.Input }],\n            cursorBlinking: [{ type: core.Input }],\n            mouseWheelZoom: [{ type: core.Input }],\n            cursorStyle: [{ type: core.Input }],\n            fontLigatures: [{ type: core.Input }],\n            disableTranslate3d: [{ type: core.Input }],\n            hideCursorInOverviewRuler: [{ type: core.Input }],\n            scrollBeyondLastLine: [{ type: core.Input }],\n            automaticLayout: [{ type: core.Input }],\n            wrappingColumn: [{ type: core.Input }],\n            wordWrap: [{ type: core.Input }],\n            wrappingIndent: [{ type: core.Input }],\n            wordWrapBreakBeforeCharacters: [{ type: core.Input }],\n            wordWrapBreakAfterCharacters: [{ type: core.Input }],\n            wordWrapBreakObtrusiveCharacters: [{ type: core.Input }],\n            stopRenderingLineAfter: [{ type: core.Input }],\n            hover: [{ type: core.Input }],\n            contextmenu: [{ type: core.Input }],\n            mouseWheelScrollSensitivity: [{ type: core.Input }],\n            quickSuggestions: [{ type: core.Input }],\n            quickSuggestionsDelay: [{ type: core.Input }],\n            parameterHints: [{ type: core.Input }],\n            iconsInSuggestions: [{ type: core.Input }],\n            autoClosingBrackets: [{ type: core.Input }],\n            formatOnType: [{ type: core.Input }],\n            suggestOnTriggerCharacters: [{ type: core.Input }],\n            acceptSuggestionOnEnter: [{ type: core.Input }],\n            snippetSuggestions: [{ type: core.Input }],\n            tabCompletion: [{ type: core.Input }],\n            wordBasedSuggestions: [{ type: core.Input }],\n            selectionHighlight: [{ type: core.Input }],\n            codeLens: [{ type: core.Input }],\n            folding: [{ type: core.Input }],\n            renderWhitespace: [{ type: core.Input }],\n            renderControlCharacters: [{ type: core.Input }],\n            renderIndentGuides: [{ type: core.Input }],\n            renderLineHighlight: [{ type: core.Input }],\n            useTabStops: [{ type: core.Input }],\n            fontFamily: [{ type: core.Input }],\n            fontWeight: [{ type: core.Input }],\n            fontSize: [{ type: core.Input }],\n            lineHeight: [{ type: core.Input }],\n            language: [{ type: core.Input }],\n            disableAutocomplete: [{ type: core.Input }],\n            autoFormatOnLoad: [{ type: core.Input }],\n            monacoLibPath: [{ type: core.Input }],\n            valueToCompare: [{ type: core.Input }],\n            value: [{ type: core.Input }],\n            valueChange: [{ type: core.Output }],\n            valueToCompareChange: [{ type: core.Output }],\n            init: [{ type: core.Output }],\n            editorContent: [{ type: core.ViewChild, args: ['editor', { static: true },] }]\n        };\n        return AjfMonacoEditor;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfMonacoEditorModule = /** @class */ (function () {\n        function AjfMonacoEditorModule() {\n        }\n        AjfMonacoEditorModule.decorators = [\n            { type: core.NgModule, args: [{\n                        declarations: [\n                            AjfMonacoEditor,\n                        ],\n                        exports: [\n                            AjfMonacoEditor,\n                        ]\n                    },] }\n        ];\n        return AjfMonacoEditorModule;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.AjfMonacoEditor = AjfMonacoEditor;\n    exports.AjfMonacoEditorModule = AjfMonacoEditorModule;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-monaco-editor.umd.js.map\n"]}