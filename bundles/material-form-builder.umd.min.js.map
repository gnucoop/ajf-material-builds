{"version":3,"file":"material-form-builder.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/material/form-builder/branch-line.ts","../../src/material/form-builder/choices-origin-data-source.ts","../../src/material/form-builder/choices-origin-editor.ts","../../src/material/form-builder/form-builder-service.ts","../../src/material/form-builder/choices-origin-editor-dialog.ts","../../src/material/form-builder/condition-editor.ts","../../src/material/form-builder/condition-editor-dialog.ts","../../src/material/form-builder/string-identifier-dialog.ts","../../src/material/form-builder/form-builder.ts","../../src/material/form-builder/node-entry.ts","../../src/material/form-builder/validation-condition-editor-dialog.ts","../../src/material/form-builder/warning-condition-editor-dialog.ts","../../src/material/form-builder/node-properties.ts","../../src/material/form-builder/node-type-entry.ts","../../src/material/form-builder/form-builder-module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2,\n  ViewEncapsulation} from '@angular/core';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-branch-line',\n  templateUrl: 'branch-line.html',\n  styleUrls: ['branch-line.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbBranchLine {\n  private _offset = 0;\n  @Input() set offset(offset: number) {\n    this._offset = offset;\n    this._updateOffset();\n  }\n\n  private _color: string;\n  @Input() set color(color: string) {\n    this._color = color;\n    this._updateColor();\n  }\n\n  private _height = 0;\n  @Input() set height(height: number) {\n    this._height = height;\n    this._updateHeight();\n  }\n\n  constructor(private _el: ElementRef, private _renderer: Renderer2) { }\n\n  private _updateHeight(): void {\n    const height = `${Math.max(0, this._height - 25)}px`;\n    this._renderer.setStyle(this._el.nativeElement, 'height', height);\n  }\n\n  private _updateOffset(): void {\n    const margin = `${this._offset * 4}px`;\n    this._renderer.setStyle(this._el.nativeElement, 'margin-top', margin);\n    this._renderer.setStyle(this._el.nativeElement, 'margin-left', margin);\n  }\n\n  private _updateColor(): void {\n    this._renderer.setStyle(this._el.nativeElement, 'border-color', this._color);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {DataSource} from '@angular/cdk/collections';\n\nimport {BehaviorSubject, Observable} from 'rxjs';\n\n\nexport type ChoicesOriginChoiceEntry = {label: string, value: string};\n\nexport class ChoicesOriginDataSource\n    extends DataSource<ChoicesOriginChoiceEntry> {\n  private _choices: BehaviorSubject<ChoicesOriginChoiceEntry[]> =\n      new BehaviorSubject<ChoicesOriginChoiceEntry[]>([]);\n  private _choicesObs: Observable<ChoicesOriginChoiceEntry[]>;\n\n  constructor() {\n    super();\n    this._choicesObs = this._choices.asObservable();\n  }\n\n  connect(): Observable<ChoicesOriginChoiceEntry[]> {\n    return this._choicesObs;\n  }\n\n  disconnect() {}\n\n  updateChoices(choices: ChoicesOriginChoiceEntry[]) {\n    this._choices.next(choices);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin, isChoicesFixedOrigin} from '@ajf/core/forms';\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\n\nimport {ChoicesOriginChoiceEntry, ChoicesOriginDataSource} from './choices-origin-data-source';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-choices-origin-editor',\n  templateUrl: 'choices-origin-editor.html',\n  styleUrls: ['choices-origin-editor.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbChoicesOriginEditor {\n  private _displayedColumns: string[] = ['label', 'value', 'delete'];\n  get displayedColumns(): string[] { return this._displayedColumns; }\n\n  private _choicesOrigin: AjfChoicesOrigin<any>;\n  get choicesOrigin(): AjfChoicesOrigin<any> {\n    return this._choicesOrigin;\n  }\n  @Input()\n  set choicesOrigin(choicesOrigin: AjfChoicesOrigin<any>) {\n    this._choicesOrigin = choicesOrigin;\n    this.name = choicesOrigin.name;\n    this.label = choicesOrigin.label;\n\n    this.canEditChoices = isChoicesFixedOrigin(choicesOrigin);\n    this._choicesArr = choicesOrigin.choices;\n    this._choices.updateChoices(this._choicesArr);\n  }\n\n  editing: {[key: string]: boolean} = {};\n  name: string;\n  label: string;\n  canEditChoices: boolean;\n\n  private _choices: ChoicesOriginDataSource = new ChoicesOriginDataSource();\n  get choices(): ChoicesOriginDataSource { return this._choices; }\n\n  private _choicesArr: ChoicesOriginChoiceEntry[] = [];\n  get choicesArr(): ChoicesOriginChoiceEntry[] { return this._choicesArr; }\n\n  updateValue(evt: any, cell: string, _value: any, rowIdx: number): void {\n    this.editing[rowIdx + '-' + cell] = false;\n    (this._choicesArr[rowIdx] as any)[cell] = evt.target.value;\n    this._choices.updateChoices(this._choicesArr);\n  }\n\n  deleteRow(rowIdx: number): void {\n    this._choicesArr.splice(rowIdx, 1);\n    this._choices.updateChoices(this._choicesArr);\n  }\n\n  addRow(): void {\n    this._choicesArr.push({label: '', value: ''});\n    this._choices.updateChoices(this._choicesArr);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfAttachmentsOrigin, AjfChoicesOrigin, AjfContainerNode, AjfField, AjfFieldType,\n  AjfFieldWithChoices, AjfForm, AjfFormStringIdentifier, AjfNode, AjfNodeGroup, AjfNodesOperation,\n  AjfNodeType, AjfRepeatingContainerNode, AjfRepeatingSlide, AjfSlide, createChoicesFixedOrigin,\n  createField, createForm, createContainerNode, createValidation, createValidationGroup,\n  createWarning, createWarningGroup, isChoicesFixedOrigin, isContainerNode, isField,\n  isFieldWithChoices, isRepeatingContainerNode, isSlidesNode, maxDigitsValidation, maxValidation,\n  minDigitsValidation, minValidation, notEmptyValidation, notEmptyWarning\n} from '@ajf/core/forms';\nimport {AjfCondition, alwaysCondition, createCondition, createFormula} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {filter, map, publishReplay, refCount, scan, withLatestFrom} from 'rxjs/operators';\n\nimport {AjfAttachmentsOriginsOperation, AjfChoicesOriginsOperation,\n  AjfFormStringIdentifierOperation} from './operations';\n\n\nexport interface AjfFormBuilderNodeTypeEntry {\n  label: string;\n  icon: {\n    fontSet: string;\n    fontIcon: string;\n  };\n  nodeType: {\n    node: AjfNodeType;\n    field?: AjfFieldType,\n  };\n  isSlide?: boolean;\n}\n\n\nexport interface AjfFormBuilderNodeEntry {\n  node: AjfNode;\n  container: AjfContainerNode | null;\n  children: AjfFormBuilderNodeEntry[];\n  content: AjfFormBuilderNodeEntry[];\n}\n\n\nexport interface AjfFormBuilderEmptySlot {\n  parent: AjfNode;\n  parentNode: number;\n}\n\n\nexport type AjfFormBuilderNode = AjfFormBuilderNodeEntry | AjfFormBuilderEmptySlot;\nexport type AjfContainerNode = AjfSlide | AjfRepeatingSlide | AjfNodeGroup;\n\nfunction getNodeContainer(c: {nodes: AjfNode[]}, node: AjfNode): {nodes: AjfNode[]} | null {\n  if (c.nodes.indexOf(node) > -1) {\n    return c;\n  }\n  const cns = c.nodes.filter(n => isContainerNode(n));\n  const len = cns.length;\n  for (let i = 0 ; i < len ; i++) {\n    const cn = getNodeContainer(<AjfContainerNode>cns[i], node);\n    if (cn != null) { return cn; }\n  }\n  return null;\n}\n\nfunction buildFormBuilderNodesSubtree(\n  nodes: AjfNode[], parent: AjfNode, ignoreConditionalBranches = false\n): AjfFormBuilderNode[] {\n  const entries: AjfFormBuilderNode[] = nodes\n    .filter(n => n.parent === parent.id)\n    .sort((n1, n2) => n1.parentNode - n2.parentNode)\n    .map(n => {\n      const children = buildFormBuilderNodesSubtree(nodes, n);\n      if (children.length === 0) {\n        children.push({parent: n, parentNode: 0});\n      }\n      return <AjfFormBuilderNodeEntry>{\n        node: n,\n        children,\n        content: buildFormBuilderNodesContent(nodes, n)\n      };\n    });\n  if (!ignoreConditionalBranches) {\n    const entriesNum = entries.length;\n    const cbs = parent.conditionalBranches.length;\n    for (let i = entriesNum ; i < cbs ; i++) {\n      entries.push({\n        parent: parent,\n        parentNode: i\n      });\n    }\n  }\n  return entries;\n}\n\nfunction buildFormBuilderNodesContent(_nodes: AjfNode[], node: AjfNode): AjfFormBuilderNode[] {\n  if (isContainerNode(node)) {\n    return buildFormBuilderNodesSubtree((<AjfContainerNode>node).nodes, node, true);\n  }\n  return [];\n}\n\n\nfunction buildFormBuilderNodesTree(nodes: AjfNode[]): (AjfFormBuilderNode | null)[] {\n  const rootNodes = nodes.filter(n => n.parent == null || n.parent === 0);\n  if (rootNodes.length === 1) {\n    const rootNode = rootNodes[0];\n    if (isSlidesNode(rootNode)) {\n      const tree: AjfFormBuilderNode[] = [];\n      tree.push(<AjfFormBuilderNodeEntry>{\n        node: rootNode,\n        container: null,\n        children: buildFormBuilderNodesSubtree(nodes, rootNode),\n        content: buildFormBuilderNodesContent(nodes, rootNode)\n      });\n      return tree;\n    }\n  } else if (rootNodes.length === 0) {\n    return [null];\n  }\n  throw new Error('Invalid form definition');\n}\n\nexport function flattenNodes(nodes: AjfNode[]): AjfNode[] {\n  let flatNodes: AjfNode[] = [];\n\n  nodes.forEach((node: AjfNode) => {\n    if (isContainerNode(node)) {\n      flatNodes = flatNodes.concat(flattenNodes((<AjfContainerNode>node).nodes));\n    }\n    flatNodes.push(node);\n  });\n\n  return flatNodes;\n}\n\nfunction getDescendants(\n  flatNodes: AjfNode[], parentNode: AjfNode, branch: number | null = null\n): AjfNode[] {\n  return branch != null ?\n    flatNodes.filter(n => n.parent === parentNode.id && n.parentNode === branch) :\n    flatNodes.filter(n => n.parent === parentNode.id);\n}\n\nfunction removeNodes(nodes: AjfNode[], ids: number[]): AjfNode[] {\n  const len = nodes.length;\n  for (let i = 0 ; i < len ; i++) {\n    const node = nodes[i];\n    if (isContainerNode(node)) {\n      const container = (<AjfContainerNode>node);\n      container.nodes = removeNodes(container.nodes, ids);\n    }\n  }\n  return nodes.filter(n => ids.indexOf(n.id) === -1);\n}\n\nfunction deleteNodeSubtree(\n  nodes: AjfNode[], parentNode: AjfNode, branch: number | null = null\n): AjfNode[] {\n  const flatNodes = flattenNodes(nodes);\n  let delNodes: AjfNode[] = [];\n  let descendants = getDescendants(flatNodes, parentNode, branch);\n  const len = descendants.length;\n  for (let i = 0 ; i < len ; i++) {\n    delNodes = delNodes.concat(getDescendants(flatNodes, descendants[i]));\n  }\n  delNodes = delNodes.concat(descendants);\n  return removeNodes(nodes, delNodes.map(n => n.id));\n}\n\nlet nodeUniqueId = 0;\n\n\n@Injectable()\nexport class AjfFormBuilderService {\n  private _availableNodeTypes: AjfFormBuilderNodeTypeEntry[] = [\n    {\n      label: 'Slide',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-slide'},\n      nodeType: {node: AjfNodeType.AjfSlide},\n      isSlide: true\n    },\n    {\n      label: 'Repeating slide',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-repeatingslide'},\n      nodeType: {node: AjfNodeType.AjfRepeatingSlide},\n      isSlide: true\n    },\n    {\n      label: 'String',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-string'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.String}\n    },\n    {\n      label: 'Text',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-text'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Text}\n    },\n    {\n      label: 'Number',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-number'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Number}\n    },\n    {\n      label: 'Boolean',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-boolean'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Boolean}\n    },\n    {\n      label: 'Single choice',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-singlechoice'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.SingleChoice}\n    },\n    {\n      label: 'Multiple choice',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-multiplechoice'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.MultipleChoice}\n    },\n    {\n      label: 'Formula',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-formula'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Formula}\n    },\n    {\n      label: 'Date',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-date'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Date}\n    },\n    {\n      label: 'Date input',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-dateinput'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.DateInput}\n    },\n    {\n      label: 'Time',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-time'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Time}\n    },\n    {\n      label: 'Table',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-table'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Table}\n    }\n  ];\n  /**\n   * Available node types\n   *\n   * @readonly\n   * @memberOf AjfFormBuilderService\n   */\n  get availableNodeTypes(): AjfFormBuilderNodeTypeEntry[] { return this._availableNodeTypes; }\n\n  private _form: BehaviorSubject<AjfForm | null> = new BehaviorSubject<AjfForm | null>(null);\n  private _formObs: Observable<AjfForm | null> = this._form.asObservable();\n  /**\n   * Current edited form stream\n   *\n   * @readonly\n   * @memberOf AjfFormBuilderService\n   */\n  get form(): Observable<AjfForm | null> { return this._formObs; }\n\n  private _attachmentsOrigins: Observable<AjfAttachmentsOrigin<any>[]>;\n  get attachmentsOrigins(): Observable<AjfAttachmentsOrigin<any>[]> {\n    return this._attachmentsOrigins;\n  }\n\n  private _choicesOrigins: Observable<AjfChoicesOrigin<any>[]>;\n  get choicesOrigins(): Observable<AjfChoicesOrigin<any>[]> {\n    return this._choicesOrigins;\n  }\n\n  private _stringIdentifier: Observable<AjfFormStringIdentifier[]>;\n  get stringIdentifier(): Observable<AjfFormStringIdentifier[]> {\n    return this._stringIdentifier;\n  }\n\n  private _nodes: Observable<AjfNode[]>;\n  get nodes(): Observable<AjfNode[]> { return this._nodes; }\n\n  private _flatNodes: Observable<AjfNode[]>;\n  get flatNodes(): Observable<AjfNode[]> {\n    return this._flatNodes;\n  }\n\n  private _flatFields: Observable<AjfField[]>;\n  get flatFields(): Observable<AjfField[]> { return this._flatFields; }\n\n  private _nodeEntriesTree: Observable<AjfFormBuilderNodeEntry[]>;\n  get nodeEntriesTree(): Observable<AjfFormBuilderNodeEntry[]> { return this._nodeEntriesTree; }\n\n  private _editedNodeEntry: BehaviorSubject<AjfFormBuilderNodeEntry | null> =\n    new BehaviorSubject<AjfFormBuilderNodeEntry | null>(null);\n  private _editedNodeEntryObs: Observable<AjfFormBuilderNodeEntry | null> =\n    this._editedNodeEntry.asObservable();\n  get editedNodeEntry(): Observable<AjfFormBuilderNodeEntry | null> {\n    return this._editedNodeEntryObs;\n  }\n\n  private _editedCondition: BehaviorSubject<AjfCondition | null> =\n    new BehaviorSubject<AjfCondition | null>(null);\n  private _editedConditionObs: Observable<AjfCondition | null> =\n    this._editedCondition.asObservable();\n  get editedCondition(): Observable<AjfCondition | null> { return this._editedConditionObs; }\n\n  private _editedChoicesOrigin: BehaviorSubject<AjfChoicesOrigin<any>|null> =\n      new BehaviorSubject<AjfChoicesOrigin<any>|null>(null);\n  private _editedChoicesOriginObs: Observable<AjfChoicesOrigin<any>|null> =\n      this._editedChoicesOrigin.asObservable();\n  get editedChoicesOrigin(): Observable<AjfChoicesOrigin<any>|null> {\n    return this._editedChoicesOriginObs;\n  }\n\n  private _beforeNodesUpdate: EventEmitter<void> = new EventEmitter<void>();\n  private _beforeNodesUpdateObs: Observable<void> = this._beforeNodesUpdate.asObservable();\n  get beforeNodesUpdate(): Observable<void> { return this._beforeNodesUpdateObs; }\n  private _afterNodeUpdate: EventEmitter<void> = new EventEmitter<void>();\n  private _afterNodeUpdateObs: Observable<void> = this._afterNodeUpdate.asObservable();\n  get afterNodeUpdate(): Observable<void> { return this._afterNodeUpdateObs; }\n\n  private _nodesUpdates: Subject<AjfNodesOperation> = new Subject<AjfNodesOperation>();\n  private _attachmentsOriginsUpdates: Subject<AjfAttachmentsOriginsOperation> =\n      new Subject<AjfAttachmentsOriginsOperation>();\n  private _choicesOriginsUpdates: Subject<AjfChoicesOriginsOperation> =\n      new Subject<AjfChoicesOriginsOperation>();\n  private _stringIdentifierUpdates: Subject<AjfFormStringIdentifierOperation> =\n      new Subject<AjfFormStringIdentifierOperation>();\n\n  private _saveNodeEntryEvent: EventEmitter<any> = new EventEmitter<any>();\n  private _deleteNodeEntryEvent: EventEmitter<AjfFormBuilderNodeEntry> =\n    new EventEmitter<AjfFormBuilderNodeEntry>();\n\n  constructor() {\n    this._initChoicesOriginsStreams();\n    this._initAttachmentsOriginsStreams();\n    this._initStringIdentifierStreams();\n    this._initNodesStreams();\n    this._initFormStreams();\n    this._initSaveNode();\n    this._initDeleteNode();\n  }\n\n  /**\n   * Sets the current edited form\n   *\n   * @param form\n   *\n   * @memberOf AjfFormBuilderService\n   */\n  setForm(form: AjfForm | null): void {\n    if (form !== this._form.getValue()) {\n      this._form.next(form);\n    }\n  }\n\n  editNodeEntry(nodeEntry: AjfFormBuilderNodeEntry): void {\n    this._editedNodeEntry.next(nodeEntry);\n  }\n\n  editCondition(condition: AjfCondition): void {\n    this._editedCondition.next(condition);\n  }\n\n  saveCurrentCondition(condition: string): void {\n    let c = this._editedCondition.getValue();\n    if (c == null) { return; }\n    c.condition = condition;\n    this._editedCondition.next(null);\n  }\n\n  cancelConditionEdit(): void {\n    this._editedChoicesOrigin.next(null);\n  }\n\n  insertNode(\n    nodeType: AjfFormBuilderNodeTypeEntry,\n    parent: AjfNode,\n    parentNode: number,\n    inContent = false\n  ): void {\n    let node: AjfNode|AjfField;\n    const id = ++nodeUniqueId;\n    const isFieldNode = nodeType.nodeType.field != null;\n    if (isFieldNode) {\n      node = createField({\n        id,\n        nodeType: AjfNodeType.AjfField,\n        fieldType: nodeType.nodeType.field!,\n        parent: parent.id,\n        parentNode,\n        name: '',\n      });\n    } else {\n      node = createContainerNode({\n        id,\n        nodeType: nodeType.nodeType.node,\n        parent: parent != null ? parent.id : 0,\n        parentNode,\n        name: '',\n        nodes: [],\n      });\n    }\n    this._beforeNodesUpdate.emit();\n    this._nodesUpdates.next((nodes: AjfNode[]): AjfNode[] => {\n      if (node.parent === 0) {\n        return [node];\n      }\n      const cn = isContainerNode(parent) && inContent ?\n        (<AjfContainerNode>parent) :\n        getNodeContainer({nodes}, parent);\n      if (cn != null) {\n        if (!isFieldNode) {\n          const replaceNodes = cn.nodes === nodes;\n          const newNodes = cn.nodes.slice(0);\n          newNodes.push(node);\n          cn.nodes = newNodes;\n          if (replaceNodes) {\n            nodes = newNodes;\n          }\n        } else {\n          cn.nodes.push(node);\n        }\n      }\n      return nodes;\n    });\n  }\n\n  saveNodeEntry(properties: any): void {\n    this._saveNodeEntryEvent.emit(properties);\n  }\n\n  cancelNodeEntryEdit(): void {\n    this._editedNodeEntry.next(null);\n  }\n\n  deleteNodeEntry(nodeEntry: AjfFormBuilderNodeEntry): void {\n    this._deleteNodeEntryEvent.next(nodeEntry);\n  }\n\n  getCurrentForm(): Observable<AjfForm> {\n    return combineLatest(\n      [this.form, this.nodes, this.attachmentsOrigins, this.choicesOrigins, this.stringIdentifier]\n    ).pipe(\n      filter(([form]) => form != null),\n      map(([form, nodes, attachmentsOrigins, choicesOrigins, stringIdentifier]) => {\n        return createForm({\n          choicesOrigins: choicesOrigins.slice(0),\n          attachmentsOrigins: attachmentsOrigins.slice(0),\n          stringIdentifier: (stringIdentifier || []).slice(0),\n          nodes: nodes.slice(0) as AjfSlide[],\n          supplementaryInformations: form!.supplementaryInformations,\n        });\n      })\n    );\n  }\n\n  editChoicesOrigin(choicesOrigin: AjfChoicesOrigin<any>): void {\n    this._editedChoicesOrigin.next(choicesOrigin);\n  }\n\n  createChoicesOrigin(): void {\n    this._editedChoicesOrigin.next(createChoicesFixedOrigin<any>({name: ''}));\n  }\n\n  cancelChoicesOriginEdit(): void {\n    this._editedChoicesOrigin.next(null);\n  }\n\n  saveChoicesOrigin(params: {label: string, name: string, choices: any[]}): void {\n    const choicesOrigin = this._editedChoicesOrigin.getValue();\n    if (choicesOrigin != null) {\n      choicesOrigin.label = params.label;\n      choicesOrigin.name = params.name;\n      if (isChoicesFixedOrigin(choicesOrigin)) {\n        choicesOrigin.choices = params.choices;\n      }\n      this._choicesOriginsUpdates.next((choicesOrigins) => {\n        const idx = choicesOrigins.indexOf(choicesOrigin);\n        if (idx > -1) {\n          choicesOrigins = [\n            ...choicesOrigins.slice(0, idx),\n            choicesOrigin,\n            ...choicesOrigins.slice(idx + 1),\n          ];\n        } else {\n          choicesOrigins = [...choicesOrigins, choicesOrigin];\n        }\n        return choicesOrigins;\n      });\n    }\n    this._editedChoicesOrigin.next(null);\n  }\n\n  saveStringIdentifier(identifier: AjfFormStringIdentifier[]): void {\n    this._stringIdentifierUpdates.next(() => [...identifier]);\n  }\n\n  private _findMaxNodeId(nodes: AjfNode[], _curMaxId = 0): number {\n    let maxId = 0;\n    nodes.forEach((n) => {\n      maxId = Math.max(maxId, n.id);\n      if (isContainerNode(n)) {\n        maxId = Math.max(maxId, this._findMaxNodeId((<AjfContainerNode>n).nodes));\n      }\n    });\n    return maxId;\n  }\n\n  private _initFormStreams(): void {\n    this._form\n      .subscribe((form: AjfForm | null) => {\n        nodeUniqueId = 0;\n        if (form != null && form.nodes != null && form.nodes.length > 0) {\n          nodeUniqueId = this._findMaxNodeId(form.nodes);\n        }\n        this._nodesUpdates.next(\n          (_nodes: AjfNode[]): AjfNode[] => {\n            return form != null && form.nodes != null ? form.nodes.slice(0) : [];\n          }\n        );\n        this._attachmentsOriginsUpdates.next(\n            (_attachmentsOrigins: AjfAttachmentsOrigin<any>[]): AjfAttachmentsOrigin<any>[] => {\n              return form != null && form.attachmentsOrigins != null ?\n                  form.attachmentsOrigins.slice(0) :\n                  [];\n            });\n        this._choicesOriginsUpdates.next(\n            (_choicesOrigins: AjfChoicesOrigin<any>[]): AjfChoicesOrigin<any>[] => {\n              return form != null && form.choicesOrigins != null ? form.choicesOrigins.slice(0) :\n                                                                   [];\n            });\n        this._stringIdentifierUpdates.next(\n            (_: AjfFormStringIdentifier[]): AjfFormStringIdentifier[] => {\n              return form != null && form.stringIdentifier != null\n                ? form.stringIdentifier.slice(0)\n                : [];\n            });\n      });\n  }\n\n  private _initChoicesOriginsStreams(): void {\n    this._choicesOrigins =\n        (<Observable<AjfChoicesOriginsOperation>>this._choicesOriginsUpdates)\n            .pipe(\n                scan((choicesOrigins: AjfChoicesOrigin<any>[], op: AjfChoicesOriginsOperation) => {\n                  return op(choicesOrigins);\n                }, []), publishReplay(1), refCount());\n  }\n\n  private _initAttachmentsOriginsStreams(): void {\n    this._attachmentsOrigins = this._attachmentsOriginsUpdates.pipe(\n      scan(\n        (attachmentsOrigins: AjfAttachmentsOrigin<any>[], op: AjfAttachmentsOriginsOperation) => {\n          return op(attachmentsOrigins);\n        }, []\n      ),\n      publishReplay(1),\n      refCount(),\n    );\n  }\n\n  private _initStringIdentifierStreams(): void {\n    this._stringIdentifier = this._stringIdentifierUpdates.pipe(\n      scan(\n        (stringIdentifier: AjfFormStringIdentifier[], op: AjfFormStringIdentifierOperation) => {\n          return op(stringIdentifier);\n        }, []\n      ),\n      publishReplay(1),\n      refCount(),\n    );\n  }\n\n  private _initNodesStreams(): void {\n    this._nodes = (<Observable<AjfNodesOperation>>this._nodesUpdates)\n                      .pipe(scan((nodes: AjfNode[], op: AjfNodesOperation) => {\n                              return op(nodes);\n                            }, []), publishReplay(1), refCount());\n\n    this._flatNodes = this._nodes.pipe(\n      map((nodes: AjfNode[]) => flattenNodes(nodes)),\n      publishReplay(1),\n      refCount()\n    );\n\n    this._flatFields = this._flatNodes.pipe(\n      map((nodes: AjfNode[]) => <AjfField[]>nodes.filter(n => !isContainerNode(n))),\n      publishReplay(1),\n      refCount()\n    );\n\n    this._nodeEntriesTree = this._nodes.pipe(\n      map(nodes => <AjfFormBuilderNodeEntry[]>buildFormBuilderNodesTree(nodes)),\n      publishReplay(1),\n      refCount()\n    );\n  }\n\n  private _initSaveNode(): void {\n    this._saveNodeEntryEvent\n        .pipe(\n            withLatestFrom(this.editedNodeEntry, this.choicesOrigins, this.attachmentsOrigins),\n            filter(([_, nodeEntry]) => nodeEntry != null),\n            map(([properties, nodeEntry]) => {\n              this._beforeNodesUpdate.emit();\n              nodeEntry = nodeEntry!;\n              const origNode = nodeEntry.node;\n              const node = deepCopy(origNode);\n              node.id = nodeEntry.node.id;\n              node.name = properties.name;\n              node.label = properties.label;\n              node.visibility = properties.visibility != null ?\n                  createCondition({condition: properties.visibility}) :\n                  null;\n\n              const oldConditionalBranches = node.conditionalBranches.length;\n              node.conditionalBranches = properties.conditionalBranches != null ?\n                  properties.conditionalBranches.map(\n                      (condition: string) => createCondition({condition})) :\n                  [alwaysCondition()];\n              const newConditionalBranches = node.conditionalBranches.length;\n\n              if (isRepeatingContainerNode(node)) {\n                const repNode = <AjfRepeatingContainerNode>node;\n                repNode.formulaReps = properties.formulaReps != null ?\n                    createFormula({formula: properties.formulaReps}) :\n                    undefined;\n                repNode.minReps = properties.minReps;\n                repNode.maxReps = properties.maxReps;\n              }\n\n              if (isField(node)) {\n                const field = node as AjfField;\n                field.description = properties.description;\n                field.defaultValue = properties.defaultValue;\n                field.formula = properties.formula != null ?\n                    createFormula({formula: properties.formula}) :\n                    undefined;\n                const forceValue = properties.value;\n                const notEmpty = properties.notEmpty;\n                const validationConditions = properties.validationConditions;\n                let minValue: number|null = parseInt(properties.minValue, 10);\n                let maxValue: number|null = parseInt(properties.maxValue, 10);\n                let minDigits: number|null = parseInt(properties.minDigits, 10);\n                let maxDigits: number|null = parseInt(properties.maxDigits, 10);\n                if (isNaN(minValue)) {\n                  minValue = null;\n                }\n                if (isNaN(maxValue)) {\n                  maxValue = null;\n                }\n                if (isNaN(minDigits)) {\n                  minDigits = null;\n                }\n                if (isNaN(maxDigits)) {\n                  maxDigits = null;\n                }\n                if (forceValue != null || notEmpty != null ||\n                    (validationConditions != null && validationConditions.length > 0) ||\n                    minValue != null || maxValue != null || minDigits != null ||\n                    maxDigits != null) {\n                  const validation = field.validation || createValidationGroup({});\n                  validation.forceValue = forceValue;\n                  validation.notEmpty = notEmpty ? notEmptyValidation() : undefined;\n                  validation.minValue = minValue != null ? minValidation(minValue) : undefined;\n                  validation.maxValue = maxValue != null ? maxValidation(maxValue) : undefined;\n                  validation.minDigits =\n                      minDigits != null ? minDigitsValidation(minDigits) : undefined;\n                  validation.maxDigits =\n                      maxDigits != null ? maxDigitsValidation(maxDigits) : undefined;\n                  validation.conditions =\n                      (validationConditions ||\n                       []).map((c: {condition: string, errorMessage: string}) => createValidation({\n                                 condition: c.condition,\n                                 errorMessage: c.errorMessage\n                               }));\n                  field.validation = validation;\n                } else {\n                  field.validation = undefined;\n                }\n                const notEmptyWarn = properties.notEmptyWarning;\n                const warningConditions = properties.warningConditions;\n                if (notEmptyWarn != null ||\n                    (warningConditions != null && warningConditions.length > 0)) {\n                  const warning = field.warning || createWarningGroup({});\n                  warning.notEmpty = notEmptyWarn ? notEmptyWarning() : undefined;\n                  warning.conditions =\n                      (warningConditions ||\n                       []).map((w: {condition: string, warningMessage: string}) => createWarning({\n                                 condition: w.condition,\n                                 warningMessage: w.warningMessage\n                               }));\n                  field.warning = warning;\n                } else {\n                  field.warning = undefined;\n                }\n                field.nextSlideCondition = properties.nextSlideCondition != null ?\n                    createCondition({condition: properties.nextSlideCondition}) :\n                    undefined;\n                field.size = properties.size;\n                field.defaultValue = properties.defaultValue;\n\n                if (isFieldWithChoices(field)) {\n                  const fwc = <AjfFieldWithChoices<any>>field;\n                  (fwc as any).choicesOriginRef = properties.choicesOriginRef;\n                  fwc.forceExpanded = properties.forceExpanded;\n                  fwc.forceNarrow = properties.forceNarrow;\n                  fwc.triggerConditions = (properties.triggerConditions ||\n                                           []).map((t: string) => createCondition({condition: t}));\n                }\n              }\n\n              this._editedNodeEntry.next(null);\n\n              return (nodes: AjfNode[]): AjfNode[] => {\n                let cn = getNodeContainer({nodes}, origNode);\n                if (cn != null) {\n                  // TODO: @trik check this, was always true?\n                  // if (cn instanceof AjfNode) {\n                  const replaceNodes = cn.nodes === nodes;\n                  const idx = cn.nodes.indexOf(origNode);\n                  let newNodes = cn.nodes.slice(0, idx);\n                  newNodes.push(node);\n                  newNodes = newNodes.concat(cn.nodes.slice(idx + 1));\n                  cn.nodes = newNodes;\n                  if (replaceNodes) {\n                    nodes = newNodes;\n                  } else {\n                    nodes = nodes.slice(0);\n                  }\n                  // } else {\n                  //   const idx = nodes.indexOf(origNode);\n                  //   nodes = nodes.slice(0, idx).concat([node]).concat(nodes.slice(idx + 1));\n                  // }\n                  if (newConditionalBranches < oldConditionalBranches) {\n                    for (let i = newConditionalBranches; i < oldConditionalBranches; i++) {\n                      nodes = deleteNodeSubtree(nodes, node, i);\n                    }\n                  }\n                }\n                return nodes;\n              };\n            }))\n        .subscribe(this._nodesUpdates);\n  }\n\n  private _initDeleteNode(): void {\n    (<Observable<AjfFormBuilderNodeEntry>>this._deleteNodeEntryEvent).pipe(\n      map((nodeEntry: AjfFormBuilderNodeEntry) => {\n        this._beforeNodesUpdate.emit();\n        return (nodes: AjfNode[]): AjfNode[] => {\n          const node = nodeEntry.node;\n          let cn = getNodeContainer({nodes}, node);\n          if (cn != null) {\n            const replaceNodes = cn.nodes === nodes;\n            const idx = cn.nodes.indexOf(node);\n            let newNodes = cn.nodes.slice(0, idx);\n            newNodes = newNodes.concat(cn.nodes.slice(idx + 1));\n            cn.nodes = newNodes;\n            if (replaceNodes) {\n              nodes = newNodes;\n            } else {\n              nodes = nodes.slice(0);\n            }\n            nodes = deleteNodeSubtree(nodes, node);\n          }\n          return nodes;\n        };\n      })\n    ).subscribe(this._nodesUpdates);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin} from '@ajf/core/forms';\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {AjfFbChoicesOriginEditor} from './choices-origin-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-choices-origin-editor-dialog',\n  templateUrl: 'choices-origin-editor-dialog.html',\n  styleUrls: ['choices-origin-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbChoicesOriginEditorDialog {\n  @ViewChild(AjfFbChoicesOriginEditor, {static: true}) editor: AjfFbChoicesOriginEditor;\n\n  private _choicesOrigin: Observable<AjfChoicesOrigin<any>>;\n  get choicesOrigin(): Observable<AjfChoicesOrigin<any>> {\n    return this._choicesOrigin;\n  }\n\n  constructor(private _service: AjfFormBuilderService) {\n    this._choicesOrigin = this._service.editedChoicesOrigin.pipe(\n      filter(c => c != null),\n      map(c => c!)\n    );\n  }\n\n  saveChoicesOrigin(): void {\n    this._service.saveChoicesOrigin({\n      label: this.editor.label,\n      name: this.editor.name,\n      choices: this.editor.choicesArr\n    });\n  }\n\n  cancelChoicesOriginEdit(): void {\n    this._service.cancelChoicesOriginEdit();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField, AjfFieldType, AjfValidationService} from '@ajf/core/forms';\nimport {AjfExpressionUtils} from '@ajf/core/models';\nimport {AjfMonacoEditor} from '@ajf/material/monaco-editor';\nimport {\n  ChangeDetectionStrategy, Component, Input, ViewChild, ViewEncapsulation\n} from '@angular/core';\n\ndeclare var monaco: any;\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-condition-editor',\n  templateUrl: 'fb-condition-editor.html',\n  styleUrls: ['fb-condition-editor.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class AjfFbConditionEditor {\n  @ViewChild(AjfMonacoEditor, {static: true}) monacoEditor: AjfMonacoEditor;\n\n  private _fields: AjfField[];\n  get fields(): AjfField[] { return this._fields; }\n  @Input() set fields(fields: AjfField[]) {\n    this._fields = fields;\n    this._updateVariables();\n  }\n  @Input() condition: string;\n\n  editedValue: string;\n\n  constructor(_: AjfValidationService) { }\n\n  insertVariable(variable: string): void {\n    if (this.monacoEditor != null && this.monacoEditor.editor != null) {\n      const editor = this.monacoEditor.editor;\n      let value: string[] = editor.getValue().split('\\n');\n      let position: {column: number, lineNumber: number} = editor.getPosition();\n      const ln = position.lineNumber - 1;\n      let line = value[ln];\n      let col = position.column - 1;\n      line = line.substring(0, col) + variable + line.substring(col);\n      value[ln] = line;\n      position.column += variable.length;\n      this.monacoEditor.value = value.join('\\n');\n      editor.setPosition(position);\n      editor.focus();\n      this.editedValue = editor.getValue();\n    }\n  }\n\n  onEditorInit(): void {\n    monaco.languages.typescript.javascriptDefaults.setDiagnosticsOptions({\n      noSemanticValidation: false,\n      noSyntaxValidation: false\n    });\n\n    monaco.languages.typescript.javascriptDefaults.setCompilerOptions({\n      target: monaco.languages.typescript.ScriptTarget.ES2015,\n      allowNonTsExtensions: true,\n      allowJs: true,\n      module: monaco.languages.typescript.ModuleKind.None\n    });\n\n    try {\n      monaco.languages.typescript.javascriptDefaults.addExtraLib(\n        '', 'condition-editor-variables.d.ts'\n      );\n    } catch (e) {\n      monaco.languages.typescript.javascriptDefaults\n          ._extraLibs['condition-editor-variables.d.ts'] = '';\n    }\n\n    try {\n      monaco.languages.typescript.javascriptDefaults.addExtraLib(\n        '', 'condition-editor-functions.d.ts'\n      );\n    } catch (e) {\n      monaco.languages.typescript.javascriptDefaults\n          ._extraLibs['condition-editor-functions.d.ts'] = '';\n    }\n\n    this._updateVariables();\n    this._updateFunctions();\n  }\n\n  private _updateVariables(): void {\n    if (this._fields == null) { return; }\n    try {\n      monaco.languages.typescript.javascriptDefaults\n        ._extraLibs['condition-editor-variables.d.ts'] =\n          this._fields\n            .map((field: AjfField) => {\n              return `declare const ${field.name}: ${this._fieldVarType(field.fieldType)};`;\n            })\n            .join('\\n');\n    } catch (e) { }\n  }\n\n  private _updateFunctions(): void {\n    try {\n      monaco.languages.typescript.javascriptDefaults._extraLibs['condition-editor-functions.d.ts'] =\n          AjfExpressionUtils.UTIL_FUNCTIONS;\n    } catch (e) { }\n  }\n\n  private _fieldVarType(fieldType: AjfFieldType): string | null {\n    switch (fieldType) {\n      case AjfFieldType.Boolean:\n      return 'boolean';\n      case AjfFieldType.Date:\n      case AjfFieldType.DateInput:\n      case AjfFieldType.Time:\n      return 'Date';\n      case AjfFieldType.Empty:\n      return 'void';\n      case AjfFieldType.Formula:\n      return 'number';\n      case AjfFieldType.MultipleChoice:\n      case AjfFieldType.SingleChoice:\n      return 'any';\n      case AjfFieldType.Number:\n      return 'number';\n      case AjfFieldType.Table:\n      return 'Array';\n      case AjfFieldType.String:\n      case AjfFieldType.Text:\n      return 'string';\n    }\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AjfField} from '@ajf/core/forms';\n\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-condition-editor-dialog',\n  templateUrl: 'condition-editor-dialog.html',\n  styleUrls: ['condition-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbConditionEditorDialog {\n  @ViewChild(AjfFbConditionEditor, {static: true}) editor: AjfFbConditionEditor;\n\n  private _fields: Observable<AjfField[]>;\n  get fields(): Observable<AjfField[]> { return this._fields; }\n\n  condition: string;\n\n  constructor(\n    service: AjfFormBuilderService,\n    public dialogRef: MatDialogRef<AjfFbConditionEditorDialog>\n  ) {\n    this._fields = service.flatFields.pipe(\n      map((fields: AjfField[]) => fields.sort((f1, f2) => f1.name.localeCompare(f2.name)))\n    );\n  }\n\n  saveCondition(): void {\n    if (this.editor == null) { return; }\n    const newValue = this.editor.editedValue;\n    this.dialogRef.close(newValue);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormStringIdentifier} from '@ajf/core/forms';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy,\n  ViewEncapsulation} from '@angular/core';\nimport {MatAutocompleteSelectedEvent} from '@angular/material/autocomplete';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Observable, Subscription} from 'rxjs';\nimport {map, shareReplay} from 'rxjs/operators';\n\nimport {AjfFormBuilderService} from './form-builder-service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-string-identifier-dialog',\n  templateUrl: 'string-identifier-dialog.html',\n  styleUrls: ['./string-identifier-dialog.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfFbStringIdentifierDialogComponent implements OnDestroy {\n  readonly dataSource: MatTableDataSource<AjfFormStringIdentifier>\n      = new MatTableDataSource<AjfFormStringIdentifier>();\n  readonly displayedColumns = ['label', 'value', 'delete'];\n  readonly fields$: Observable<string[]>;\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  private _stringIdentifierSub: Subscription = Subscription.EMPTY;\n\n  constructor(private _service: AjfFormBuilderService, private _cdr: ChangeDetectorRef) {\n    this._stringIdentifierSub = _service.stringIdentifier.subscribe(identifier => {\n      this.dataSource.data = [...identifier];\n    });\n    this.fields$ = _service.flatFields.pipe(\n      map(fields =>\n        fields.sort((f1, f2) => f1.name.localeCompare(f2.name)).map(f => f.name)\n          .filter(f => f.length > 0)),\n      shareReplay(1),\n    );\n  }\n\n  addRow(): void {\n    this.dataSource.data = [...this.dataSource.data, {label: '', value: []}];\n  }\n\n  deleteRow(rowIdx: number): void {\n    this.dataSource.data = [\n      ...this.dataSource.data.slice(0, rowIdx),\n      ...this.dataSource.data.slice(rowIdx + 1),\n    ];\n  }\n\n  addValue(\n    row: AjfFormStringIdentifier, evt: MatChipInputEvent, valueInput: HTMLInputElement\n  ): void {\n    if (evt.value.length === 0) { return; }\n    row.value = [...row.value, evt.value];\n    valueInput.value = '';\n    this._cdr.markForCheck();\n  }\n\n  removeValue(row: AjfFormStringIdentifier, value: string): void {\n    const idx = row.value.indexOf(value);\n    if (idx > -1) {\n      row.value = [\n        ...row.value.slice(0, idx),\n        ...row.value.slice(idx + 1),\n      ];\n      this._cdr.markForCheck();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._stringIdentifierSub.unsubscribe();\n  }\n\n  saveStringIdentifier(): void {\n    this._service.saveStringIdentifier(this.dataSource.data);\n  }\n\n  selected(\n    row: AjfFormStringIdentifier, evt: MatAutocompleteSelectedEvent\n  ): void {\n    row.value = [...row.value, evt.option.value];\n    this._cdr.markForCheck();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin, AjfForm} from '@ajf/core/forms';\nimport {AjfCondition} from '@ajf/core/models';\nimport {\n  AfterContentInit, AfterViewChecked, ChangeDetectionStrategy, Component, ElementRef, EventEmitter,\n  Input, OnDestroy, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {Observable, Subscription} from 'rxjs';\nimport {sample} from 'rxjs/operators';\n\nimport {AjfFbChoicesOriginEditorDialog} from './choices-origin-editor-dialog';\nimport {AjfFbConditionEditorDialog} from './condition-editor-dialog';\nimport {\n  AjfFormBuilderNodeEntry, AjfFormBuilderNodeTypeEntry, AjfFormBuilderService\n} from './form-builder-service';\nimport {AjfFbStringIdentifierDialogComponent} from './string-identifier-dialog';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-form-builder',\n  templateUrl: 'form-builder.html',\n  styleUrls: ['form-builder.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class AjfFormBuilder implements AfterViewChecked, AfterContentInit, OnDestroy {\n  @ViewChild('designer', {static: true}) designerCont: ElementRef;\n\n  private _form: AjfForm;\n  get form(): AjfForm { return this._form; }\n  @Input() set form(form: AjfForm) {\n    if (this._form !== form) {\n      this._form = form;\n      if (this._init) {\n        this._setCurrentForm();\n      }\n    }\n  }\n\n  private _nodeTypes: AjfFormBuilderNodeTypeEntry[];\n  get nodeTypes(): AjfFormBuilderNodeTypeEntry[] { return this._nodeTypes; }\n\n  private _nodeEntriesTree: Observable<AjfFormBuilderNodeEntry[]>;\n  get nodeEntriesTree(): Observable<AjfFormBuilderNodeEntry[]> { return this._nodeEntriesTree; }\n\n  private _choicesOrigins: Observable<AjfChoicesOrigin<any>[]>;\n  get choicesOrigins(): Observable<AjfChoicesOrigin<any>[]> {\n    return this._choicesOrigins;\n  }\n\n  private _vc: EventEmitter<void> = new EventEmitter<void>();\n\n  private _init = false;\n  private _editConditionSub: Subscription = Subscription.EMPTY;\n  private _editConditionDialog: MatDialogRef<AjfFbConditionEditorDialog> | null;\n  private _beforeNodesUpdateSub: Subscription = Subscription.EMPTY;\n  private _editChoicesOriginSub: Subscription = Subscription.EMPTY;\n  private _editChoicesOriginDialog: MatDialogRef<AjfFbChoicesOriginEditorDialog> | null;\n  private _stringIdentifierDialog: MatDialogRef<AjfFbStringIdentifierDialogComponent> | null;\n  private _stringIdentifierSub: Subscription = Subscription.EMPTY;\n\n  private _lastScrollTop: number;\n\n  constructor(\n    private _service: AjfFormBuilderService,\n    private _dialog: MatDialog\n  ) {\n    this._nodeTypes = _service.availableNodeTypes;\n    this._nodeEntriesTree = _service.nodeEntriesTree;\n    this._choicesOrigins = _service.choicesOrigins;\n    this._editConditionSub = this._service.editedCondition\n      .subscribe((condition: AjfCondition | null) => {\n        if (this._editConditionDialog != null) {\n          this._editConditionDialog.close();\n          this._editConditionDialog = null;\n        }\n        if (condition != null) {\n          this._editConditionDialog = this._dialog.open(\n            AjfFbConditionEditorDialog, {disableClose: true}\n          );\n        }\n      });\n    this._editChoicesOriginSub =\n        this._service.editedChoicesOrigin.subscribe((choicesOrigin: AjfChoicesOrigin<any>|null) => {\n          if (this._editChoicesOriginDialog != null) {\n            this._editChoicesOriginDialog.close();\n            this._editChoicesOriginDialog = null;\n          }\n          if (choicesOrigin != null) {\n            this._editChoicesOriginDialog =\n                this._dialog.open(AjfFbChoicesOriginEditorDialog, {disableClose: true});\n          }\n        });\n\n    this._beforeNodesUpdateSub = this._service.beforeNodesUpdate\n      .subscribe(() => {\n        if (this.designerCont == null) { return; }\n        this._lastScrollTop = this.designerCont.nativeElement.scrollTop;\n      });\n\n    this.nodeEntriesTree\n      .pipe(sample((<Observable<void>>this._vc)))\n      .subscribe(() => {\n        if (this.designerCont == null) { return; }\n        this.designerCont.nativeElement.scrollTop = this._lastScrollTop;\n      });\n\n    this._stringIdentifierSub = this._service.stringIdentifier.subscribe(() => {});\n  }\n\n  ngAfterViewChecked(): void {\n    this._vc.emit();\n  }\n\n  ngAfterContentInit(): void {\n    this._setCurrentForm();\n    this._init = true;\n  }\n\n  ngOnDestroy(): void {\n    this._editConditionSub.unsubscribe();\n    this._beforeNodesUpdateSub.unsubscribe();\n    this._editChoicesOriginSub.unsubscribe();\n    this._stringIdentifierSub.unsubscribe();\n    this._service.setForm(null);\n  }\n\n  createChoicesOrigin(): void {\n    this._service.createChoicesOrigin();\n  }\n\n  disableDropPredicate(): boolean {\n    return false;\n  }\n\n  editChoicesOrigin(choicesOrigin: AjfChoicesOrigin<any>): void {\n    this._service.editChoicesOrigin(choicesOrigin);\n  }\n\n  editStringIdentifier(): void {\n    if (this._stringIdentifierDialog != null) {\n      this._stringIdentifierDialog.close();\n      this._stringIdentifierDialog = null;\n    }\n    this._stringIdentifierDialog =\n        this._dialog.open(AjfFbStringIdentifierDialogComponent, {\n          disableClose: true,\n          width: '60%',\n          height: '60%'\n        });\n  }\n\n  private _setCurrentForm(): void {\n    this._service.setForm(this._form);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {isContainerNode} from '@ajf/core/forms';\nimport {CdkDrag, CdkDragDrop, CdkDropList} from '@angular/cdk/drag-drop';\nimport {\n  AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, Input, OnDestroy, QueryList,\n  ViewChildren, ViewEncapsulation\n} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\n\nimport {AjfFbBranchLine} from './branch-line';\nimport {\n  AjfFormBuilderEmptySlot, AjfFormBuilderNode, AjfFormBuilderNodeEntry,\n  AjfFormBuilderNodeTypeEntry, AjfFormBuilderService\n} from './form-builder-service';\n\n\nconst branchColors: string [] = [\n  '#F44336', // RED\n  '#4CAF50', // GREEN\n  '#3F51B5', // INDIGO\n  '#FFC107', // AMBER\n  '#795548', // BROWN\n];\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-node-entry',\n  templateUrl: 'node-entry.html',\n  styleUrls: ['node-entry.css'],\n  host: {\n    '(window.resize)': 'onResize()'\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbNodeEntry implements AfterViewInit, OnDestroy {\n  @ViewChildren(AjfFbBranchLine) branchLines: QueryList<AjfFbBranchLine>;\n  @ViewChildren(AjfFbNodeEntry, {read: ElementRef}) childEntries: QueryList<ElementRef>;\n\n  private _hasContent = false;\n  get hasContent(): boolean { return this._hasContent; }\n\n  private _isFirst = false;\n  get isFirst(): boolean { return this._isFirst; }\n  @Input() set isFirst(isFirst: boolean) { this._isFirst = isFirst; }\n\n  private _isNodeEntry = false;\n  get isNodeEntry(): boolean { return this._isNodeEntry; }\n\n  private _nodeEntry: AjfFormBuilderNode;\n  get nodeEntry(): AjfFormBuilderNode { return this._nodeEntry; }\n  @Input() set nodeEntry(nodeEntry: AjfFormBuilderNode) {\n    this._nodeEntry = nodeEntry;\n    if (nodeEntry != null && (<AjfFormBuilderNodeEntry>nodeEntry).node !== void 0) {\n      const ne = <AjfFormBuilderNodeEntry>nodeEntry;\n      this._isNodeEntry = true;\n      const node = ne.node;\n      this._hasContent = node != null && isContainerNode(node);\n    } else {\n      this._isNodeEntry = false;\n      this._hasContent = false;\n    }\n  }\n\n  private _level = 0;\n  get level(): number { return this._level; }\n  @Input() set level(value: number) { this._level = value; }\n\n  get realNodeEntry(): AjfFormBuilderNodeEntry {\n    return this._nodeEntry as AjfFormBuilderNodeEntry;\n  }\n\n  private _branchColors: string[] = branchColors.slice(0);\n  get branchColors(): string[] { return this._branchColors; }\n\n  private _dropZones: string[] = ['fbdz-node'];\n  get dropZones(): string[] { return this._dropZones; }\n\n  private _slideDropZones: string[] = ['fbdz-slide'];\n  get slideDropZones(): string[] { return this._slideDropZones; }\n\n  private _originOffset = 0;\n  get originOffset(): number { return this._originOffset; }\n  @Input() set originOffset(originOffset: number) {\n    this._originOffset = originOffset;\n    this._originLeftMargin = `${this._originOffset * 4}px`;\n  }\n  private _originLeftMargin = '0';\n  get originLeftMargin(): string { return this._originLeftMargin; }\n\n  private _firstBranchColor = branchColors[0];\n  get firstBranchColor(): string { return this._firstBranchColor; }\n  @Input() set firstBranchColor(firstBranchColor: string) {\n    const idx = branchColors.indexOf(firstBranchColor);\n    if (idx > 0) {\n      this._firstBranchColor = firstBranchColor;\n      this._branchColors = branchColors.slice(idx).concat(branchColors.slice(0, idx));\n    } else {\n      this._firstBranchColor = branchColors[0];\n      this._branchColors = branchColors.slice(0);\n    }\n  }\n\n  private _currentEditedNode: Observable<AjfFormBuilderNodeEntry | null>;\n  get currentEditedNode(): Observable<AjfFormBuilderNodeEntry | null> {\n    return this._currentEditedNode;\n  }\n\n  private _branchLinesSubscription: Subscription = Subscription.EMPTY;\n  private _childEntriesSubscription: Subscription = Subscription.EMPTY;\n\n  constructor(private _service: AjfFormBuilderService) {\n    this._currentEditedNode = this._service.editedNodeEntry;\n  }\n\n  onResize(): void {\n  }\n\n  edit(): void {\n    if (this.nodeEntry == null || !this.isNodeEntry) { return; }\n    this._service.editNodeEntry(<AjfFormBuilderNodeEntry>this.nodeEntry);\n  }\n\n  delete(): void {\n    if (this.nodeEntry == null || !this.isNodeEntry) { return; }\n    this._service.deleteNodeEntry(<AjfFormBuilderNodeEntry>this.nodeEntry);\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this._updateBranchHeights());\n    this._childEntriesSubscription = this.childEntries.changes\n      .subscribe(() => {\n        this._updateBranchHeights();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this._branchLinesSubscription.unsubscribe();\n    this._childEntriesSubscription.unsubscribe();\n  }\n\n  onDropSuccess(evt: CdkDragDrop<AjfFormBuilderNodeTypeEntry>, content = false): void {\n    const dd = evt.item.data as AjfFormBuilderNodeTypeEntry;\n    if (this._nodeEntry == null) {\n      this._service.insertNode(dd, null as any, 0, content);\n      return;\n    }\n    if (dd.nodeType !== void 0 && (!this.isNodeEntry || (this.isNodeEntry && content))) {\n      const emptySlot = content ?\n        {parent: (<AjfFormBuilderNodeEntry>this.nodeEntry).node, parentNode: 0} :\n        <AjfFormBuilderEmptySlot>this._nodeEntry;\n      this._service.insertNode(\n        <AjfFormBuilderNodeTypeEntry>dd,\n        emptySlot.parent,\n        emptySlot.parentNode,\n        content\n      );\n    }\n  }\n\n  disableSlideDropPredicate(item: CdkDrag<AjfFormBuilderNodeTypeEntry>): boolean {\n    return !item.data.isSlide;\n  }\n\n  emptyAreaDropPredicate(): (item: CdkDrag, _drop: CdkDropList) => boolean {\n    return (item: CdkDrag, _drop: CdkDropList): boolean => {\n      if (this._level > 0) {\n        return !item.data.isSlide;\n      }\n      return item.data.isSlide || false;\n    };\n  }\n\n  private _updateBranchHeights(): void {\n    if (\n      this.nodeEntry == null || !this.isNodeEntry\n      || this.branchLines == null || this.childEntries == null) { return; }\n    const nodeEntry = <AjfFormBuilderNodeEntry>this.nodeEntry;\n    const branchLines: AjfFbBranchLine[] = this.branchLines.toArray();\n    const sliceIdx = nodeEntry.content != null ? nodeEntry.content.length : 0;\n    const childEntries: ElementRef[] = this.childEntries.toArray().slice(sliceIdx);\n\n    if (branchLines.length != childEntries.length) { return; }\n\n    branchLines.forEach((bl: AjfFbBranchLine, idx: number) => {\n      const ce: ElementRef  = childEntries[idx];\n      bl.height = ce.nativeElement.offsetTop;\n    });\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AjfField} from '@ajf/core/forms';\n\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-validation-condition-editor-dialog',\n  templateUrl: 'validation-condition-editor-dialog.html',\n  styleUrls: ['validation-condition-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbValidationConditionEditorDialog {\n  @ViewChild(AjfFbConditionEditor, {static: true}) editor: AjfFbConditionEditor;\n\n  private _fields: Observable<AjfField[]>;\n  get fields(): Observable<AjfField[]> { return this._fields; }\n\n  condition: string;\n  errorMessage: string;\n\n  constructor(\n    service: AjfFormBuilderService,\n    public dialogRef: MatDialogRef<AjfFbValidationConditionEditorDialog>\n  ) {\n    this._fields = service.flatFields.pipe(\n      map((fields: AjfField[]) => fields.sort((f1, f2) => f1.name.localeCompare(f2.name)))\n    );\n  }\n\n  saveCondition(): void {\n    if (this.editor == null) { return; }\n    const newValue = this.editor.editedValue;\n    this.dialogRef.close({condition: newValue, errorMessage: this.errorMessage});\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AjfField} from '@ajf/core/forms';\n\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-warning-condition-editor-dialog',\n  templateUrl: 'warning-condition-editor-dialog.html',\n  styleUrls: ['warning-condition-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbWarningConditionEditorDialog {\n  @ViewChild(AjfFbConditionEditor, {static: true}) editor: AjfFbConditionEditor;\n\n  private _fields: Observable<AjfField[]>;\n  get fields(): Observable<AjfField[]> { return this._fields; }\n\n  condition: string;\n  warningMessage: string;\n\n  constructor(\n    service: AjfFormBuilderService,\n    public dialogRef: MatDialogRef<AjfFbWarningConditionEditorDialog>\n  ) {\n    this._fields = service.flatFields.pipe(\n      map((fields: AjfField[]) => fields.sort((f1, f2) => f1.name.localeCompare(f2.name)))\n    );\n  }\n\n  saveCondition(): void {\n    if (this.editor == null) { return; }\n    const newValue = this.editor.editedValue;\n    this.dialogRef.close({condition: newValue, warningMessage: this.warningMessage});\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfChoicesOrigin, AjfField, AjfFieldWithChoices, AjfNode, AjfNumberField,\n  AjfRepeatingContainerNode, isField, isFieldWithChoices, isNumberField,\n  isRepeatingContainerNode\n} from '@ajf/core/forms';\nimport {AjfCondition, alwaysCondition, neverCondition} from '@ajf/core/models';\nimport {\n  ChangeDetectionStrategy, Component, EventEmitter, OnDestroy, ViewEncapsulation\n} from '@angular/core';\nimport {AbstractControl, FormBuilder, FormGroup, ValidatorFn, Validators} from '@angular/forms';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {Observable, Subscription} from 'rxjs';\nimport {\n  distinctUntilChanged, filter, map, publishReplay, refCount, withLatestFrom\n} from 'rxjs/operators';\n\nimport {AjfFbConditionEditorDialog} from './condition-editor-dialog';\nimport {AjfFormBuilderNodeEntry, AjfFormBuilderService} from './form-builder-service';\nimport {AjfFbValidationConditionEditorDialog} from './validation-condition-editor-dialog';\nimport {AjfFbWarningConditionEditorDialog} from './warning-condition-editor-dialog';\n\n\nfunction checkRepsValidity(c: AbstractControl): {[key: string]: any} | null {\n  const minReps = c.value.minReps;\n  const maxReps = c.value.maxReps;\n  if (minReps != null && maxReps != null && minReps > maxReps) {\n    return {\n      reps: 'Min repetions cannot be greater than max repetitions'\n    };\n  }\n  return null;\n}\n\nfunction checkValueLimitsValidity(c: AbstractControl): {[key: string]: any} | null {\n  const minValue = c.value.minValue;\n  const maxValue = c.value.maxValue;\n  if (minValue != null && maxValue != null && minValue > maxValue) {\n    return {\n      valueLimit: 'Min value cannot be greater than max value'\n    };\n  }\n  return null;\n}\n\nfunction checkDigitsValidity(c: AbstractControl): {[key: string]: any} | null {\n  const minDigits = c.value.minDigits;\n  const maxDigits = c.value.maxDigits;\n  if (minDigits != null && maxDigits != null && minDigits > maxDigits) {\n    return {\n      digits: 'Min digits cannot be greater than max digits'\n    };\n  }\n  return null;\n}\n\nexport interface ValidationCondition {\n  condition: string;\n  errorMessage: string;\n}\n\nexport interface WarningCondition {\n  condition: string;\n  warningMessage: string;\n}\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-node-properties',\n  templateUrl: 'node-properties.html',\n  styleUrls: ['node-properties.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbNodeProperties implements OnDestroy {\n  private _fieldSizes: {label: string, value: string}[] = [\n    {label: 'Normal', value: 'normal'},\n    {label: 'Small', value: 'small'},\n    {label: 'Smaller', value: 'smaller'},\n    {label: 'Tiny', value: 'tiny'},\n    {label: 'Mini', value: 'mini'}\n  ];\n  get fieldSizes(): {label: string, value: string}[] { return this._fieldSizes; }\n\n  private _nodeEntry: Observable<AjfFormBuilderNodeEntry | null>;\n  get nodeEntry(): Observable<AjfFormBuilderNodeEntry | null> { return this._nodeEntry; }\n\n  private _choicesOrigins: AjfChoicesOrigin<any>[] = [];\n  get choicesOrigins(): AjfChoicesOrigin<any>[] {\n    return this._choicesOrigins;\n  }\n\n  private _enabled: Observable<boolean>;\n  get enabled(): Observable<boolean> { return this._enabled; }\n\n  private _propertiesForm: Observable<FormGroup>;\n  get propertiesForm(): Observable<FormGroup> { return this._propertiesForm; }\n\n  private _hasChoices: Observable<boolean>;\n  get hasChoices(): Observable<boolean> { return this._hasChoices; }\n\n  private _curVisibility: string | null;\n  get curVisibility(): string | null { return this._curVisibility; }\n\n  private _curFormulaReps: string | null;\n  get curFormulaReps(): string | null { return this._curFormulaReps; }\n\n  private _curChoicesFilter: string;\n  get curChoicesFilter(): string { return this._curChoicesFilter; }\n\n  private _curForceValue: string | null;\n  get curForceValue(): string | null { return this._curForceValue; }\n\n  private _curFormula: string | null;\n  get curFormula(): string | null { return this._curFormula; }\n\n  private _conditionalBranches: string[] = [];\n  get conditionalBranches(): string[] { return this._conditionalBranches; }\n\n  private _validationConditions: ValidationCondition[] = [];\n  get validationConditions(): ValidationCondition[] { return this._validationConditions; }\n\n  private _warningConditions: WarningCondition[] = [];\n  get warningConditions(): WarningCondition[] { return this._warningConditions; }\n\n  private _nextSlideCondition: string;\n  get nextSlideCondition(): string { return this._nextSlideCondition; }\n\n  private _triggerConditions: string[];\n  get triggerConditions(): string[] { return this._triggerConditions; }\n\n  isRepeatingContainerNode: (node: AjfNode) => boolean = isRepeatingContainerNode;\n\n  private _visibilitySub: Subscription = Subscription.EMPTY;\n  private _conditionalBranchesSub = Subscription.EMPTY;\n  private _formulaRepsSub = Subscription.EMPTY;\n  private _choicesFilterSub = Subscription.EMPTY;\n  private _formulaSub = Subscription.EMPTY;\n  private _forceValueSub = Subscription.EMPTY;\n  private _validationConditionsSub = Subscription.EMPTY;\n  private _warningConditionsSub = Subscription.EMPTY;\n  private _nextSlideConditionSub = Subscription.EMPTY;\n  private _choicesOriginsSub = Subscription.EMPTY;\n  private _triggerConditionsSub = Subscription.EMPTY;\n\n  private _editConditionDialog: MatDialogRef<AjfFbConditionEditorDialog> | null;\n  private _editConditionDialogSub: Subscription = Subscription.EMPTY;\n  private _editValidationConditionDialog: MatDialogRef<AjfFbValidationConditionEditorDialog> | null;\n  private _editValidationConditionDialogSub: Subscription = Subscription.EMPTY;\n  private _editWarningConditionDialog: MatDialogRef<AjfFbWarningConditionEditorDialog> | null;\n  private _editWarningConditionDialogSub: Subscription = Subscription.EMPTY;\n\n  private _editVisibilityEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editVisibilitySub = Subscription.EMPTY;\n\n  private _editConditionalBranchEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editConditionalBranchSub = Subscription.EMPTY;\n\n  private _editFormulaRepsEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editFormulaRepsSub = Subscription.EMPTY;\n\n  private _editChoicesFilterEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editChoicesFilterSub = Subscription.EMPTY;\n\n  private _editFormulaEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editFormulaSub = Subscription.EMPTY;\n\n  private _editForceValueEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editForceValueSub = Subscription.EMPTY;\n\n  private _editValidationConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editValidationConditionSub = Subscription.EMPTY;\n\n  private _addValidationConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _addValidationConditionSub = Subscription.EMPTY;\n\n  private _removeValidationConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _removeValidationConditionSub = Subscription.EMPTY;\n\n  private _editWarningConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editWarningConditionSub = Subscription.EMPTY;\n\n  private _addWarningConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _addWarningConditionSub = Subscription.EMPTY;\n\n  private _removeWarningConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _removeWarningConditionSub = Subscription.EMPTY;\n\n  private _editNextSlideConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editNextSlideConditionSub = Subscription.EMPTY;\n\n  private _editTriggerConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editTriggerConditionSub = Subscription.EMPTY;\n\n  private _addTriggerConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _addTriggerConditionSub = Subscription.EMPTY;\n\n  private _removeTriggerConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _removeTriggerConditionSub = Subscription.EMPTY;\n\n  private _saveEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _saveSub = Subscription.EMPTY;\n\n  constructor(\n    private _service: AjfFormBuilderService,\n    private _dialog: MatDialog,\n    private _fb: FormBuilder\n  ) {\n    this._nodeEntry = _service.editedNodeEntry;\n    this._choicesOriginsSub = _service.choicesOrigins\n      .subscribe((c) => this._choicesOrigins = c || []);\n\n    this._enabled = this._nodeEntry.pipe(map((n) => n != null));\n\n    this._initForm();\n    this._initVisibilityEdit();\n    this._initConditionalBranchEdit();\n    this._initFormulaRepsEdit();\n    this._initChoicesFilterEdit();\n    this._initFormulaEdit();\n    this._initForceValueEdit();\n    this._initValidationConditionEdit();\n    this._initAddValidationCondition();\n    this._initRemoveValidationCondition();\n    this._initWarningConditionEdit();\n    this._initAddWarningCondition();\n    this._initRemoveWarningCondition();\n    this._initNextSlideConditionEdit();\n    this._initTriggerConditionEdit();\n    this._initAddTriggerCondition();\n    this._initRemoveTriggerCondition();\n    this._initSave();\n  }\n\n  editVisibility(): void {\n    this._editVisibilityEvt.emit();\n  }\n\n  editConditionalBranch(idx: number): void {\n    if (idx < 0 || idx >= this._conditionalBranches.length) { return; }\n    this._editConditionalBranchEvt.emit(idx);\n  }\n\n  editFormulaReps(): void {\n    this._editFormulaRepsEvt.emit();\n  }\n\n  editChoicesFilter(): void {\n    this._editChoicesFilterEvt.emit();\n  }\n\n  editFormula(): void {\n    this._editFormulaEvt.emit();\n  }\n\n  editForceValue(): void {\n    this._editForceValueEvt.emit();\n  }\n\n  editValidationCondition(idx: number): void {\n    if (idx < 0 || idx >= this._validationConditions.length) { return; }\n    this._editValidationConditionEvt.emit(idx);\n  }\n\n  addValidationCondition(): void {\n    this._addValidationConditionEvt.emit();\n  }\n\n  removeValidationCondition(idx: number): void {\n    if (idx < 0 || idx >= this._validationConditions.length) { return; }\n    this._removeValidationConditionEvt.emit(idx);\n  }\n\n  editWarningCondition(idx: number): void {\n    if (idx < 0 || idx >= this._warningConditions.length) { return; }\n    this._editWarningConditionEvt.emit(idx);\n  }\n\n  addWarningCondition(): void {\n    this._addWarningConditionEvt.emit();\n  }\n\n  removeWarningCondition(idx: number): void {\n    if (idx < 0 || idx >= this._warningConditions.length) { return; }\n    this._removeWarningConditionEvt.emit(idx);\n  }\n\n  editNextSlideCondition(): void {\n    this._editNextSlideConditionEvt.emit();\n  }\n\n  editTriggerCondition(idx: number): void {\n    if (idx < 0 || idx >= this._triggerConditions.length) { return; }\n    this._editTriggerConditionEvt.emit(idx);\n  }\n\n  addTriggerCondition(): void {\n    this._addTriggerConditionEvt.emit();\n  }\n\n  removeTriggerCondition(idx: number): void {\n    if (idx < 0 || idx >= this._triggerConditions.length) { return; }\n    this._removeTriggerConditionEvt.emit(idx);\n  }\n\n  isField(node: AjfNode): boolean {\n    return isField(node);\n  }\n\n  isNumericField(node: AjfNode): boolean {\n    return isField(node) && isNumberField(node as AjfField);\n  }\n\n  isFieldWithChoices(node: AjfNode): boolean {\n    return isField(node) && isFieldWithChoices(node as AjfField);\n  }\n\n  save(): void {\n    this._saveEvt.emit();\n  }\n\n  cancel(): void {\n    this._service.cancelNodeEntryEdit();\n  }\n\n  ngOnDestroy(): void {\n    this._choicesOriginsSub.unsubscribe();\n\n    this._visibilitySub.unsubscribe();\n    this._formulaRepsSub.unsubscribe();\n    this._choicesFilterSub.unsubscribe();\n    this._formulaSub.unsubscribe();\n    this._forceValueSub.unsubscribe();\n    this._validationConditionsSub.unsubscribe();\n    this._warningConditionsSub.unsubscribe();\n    this._triggerConditionsSub.unsubscribe();\n\n    this._editConditionDialogSub.unsubscribe();\n    this._editValidationConditionDialogSub.unsubscribe();\n    this._editWarningConditionDialogSub.unsubscribe();\n\n    this._editChoicesFilterSub.unsubscribe();\n    this._editConditionalBranchSub.unsubscribe();\n    this._editVisibilitySub.unsubscribe();\n    this._editFormulaRepsSub.unsubscribe();\n    this._editFormulaSub.unsubscribe();\n    this._editForceValueSub.unsubscribe();\n    this._editValidationConditionSub.unsubscribe();\n    this._editWarningConditionSub.unsubscribe();\n    this._nextSlideConditionSub.unsubscribe();\n\n    this._addTriggerConditionSub.unsubscribe();\n    this._addValidationConditionSub.unsubscribe();\n    this._addWarningConditionSub.unsubscribe();\n    this._editNextSlideConditionSub.unsubscribe();\n    this._editTriggerConditionSub.unsubscribe();\n    this._removeTriggerConditionSub.unsubscribe();\n    this._removeValidationConditionSub.unsubscribe();\n    this._removeWarningConditionSub.unsubscribe();\n\n    this._saveSub.unsubscribe();\n  }\n\n  private _initSave(): void {\n    this._saveSub = this._saveEvt.pipe(withLatestFrom(this.propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        const fg = r[1];\n        const val = {...fg.value,\n          conditionalBranches: this._conditionalBranches\n        };\n        this._service.saveNodeEntry(val);\n      });\n  }\n\n  private _initForm(): void {\n    this._propertiesForm = this._nodeEntry.pipe(\n      filter((n) => n != null),\n      map((n) => {\n        if (this._visibilitySub != null) { this._visibilitySub.unsubscribe(); }\n        if (this._conditionalBranchesSub != null) { this._conditionalBranchesSub.unsubscribe(); }\n        n = n!;\n\n        const visibility = n.node.visibility != null ?\n          n.node.visibility.condition : null;\n        const visibilityOpt = n.node.visibility != null ?\n          this._guessVisibilityOpt(n.node.visibility) : null;\n        let controls: any = {\n          name: [n.node.name, Validators.required],\n          label: n.node.label,\n          visibilityOpt: [visibilityOpt, Validators.required],\n          visibility: [visibility, Validators.required],\n          conditionalBranchesNum: n.node.conditionalBranches.length\n        };\n        const validators: ValidatorFn[] = [];\n\n        if (isRepeatingContainerNode(n.node)) {\n          const rn = <AjfRepeatingContainerNode>n.node;\n\n          const formulaReps = rn.formulaReps != null ? rn.formulaReps.formula : null;\n\n          controls.formulaReps = [formulaReps, Validators.required];\n          controls.minReps = rn.minReps;\n          controls.maxReps = rn.maxReps;\n\n          this._curFormulaReps = formulaReps;\n\n          validators.push(checkRepsValidity);\n        }\n\n        if (this.isField(n.node)) {\n          const field = <AjfField>n.node;\n\n          let forceValue: string | null = null;\n          let notEmpty: boolean = false;\n          let validationConditions: ValidationCondition[] = [];\n          if (field.validation != null) {\n            if (field.validation.forceValue != null) {\n              forceValue = field.validation.forceValue.condition;\n            }\n            notEmpty = field.validation.notEmpty != null;\n            validationConditions = (field.validation.conditions || [])\n              .map(c => {\n                return {\n                  condition: c.condition,\n                  errorMessage: c.errorMessage\n                };\n              });\n          }\n\n          let notEmptyW: boolean = false;\n          let warningConditions: WarningCondition[] = [];\n          if (field.warning != null) {\n            notEmptyW = field.warning.notEmpty != null;\n            warningConditions = (field.warning.conditions || [])\n              .map(w => {\n                return {\n                  condition: w.condition,\n                  warningMessage: w.warningMessage\n                };\n              });\n          }\n          const formula = field.formula != null ? field.formula.formula : null;\n\n          controls.description = field.description;\n          controls.defaultValue = field.defaultValue;\n          controls.size = field.size;\n          controls.formula = formula;\n          controls.forceValue = forceValue;\n          controls.notEmpty = notEmpty;\n          controls.validationConditions = [validationConditions, []];\n          controls.notEmptyWarning = notEmptyW;\n          controls.warningConditions = [warningConditions, []];\n          controls.nextSlideCondition = [field.nextSlideCondition];\n\n          this._curForceValue = forceValue;\n          this._curFormula = formula;\n          this._validationConditions = validationConditions;\n          this._warningConditions = warningConditions;\n        }\n\n        if (this.isNumericField(n.node)) {\n          const numField = <AjfNumberField>n.node;\n\n          let minValue: any;\n          let maxValue: any;\n          let minDigits: any;\n          let maxDigits: any;\n          if (numField.validation != null) {\n            if (numField.validation.minValue != null) {\n              minValue = (numField.validation.minValue.condition || '').replace('$value >= ', '');\n            }\n            if (numField.validation.maxValue != null) {\n              maxValue = (numField.validation.maxValue.condition || '').replace('$value <= ', '');\n            }\n            if (numField.validation.minDigits != null) {\n              minDigits = (numField.validation.minDigits.condition || '')\n                .replace('$value.toString().length >= ', '');\n            }\n            if (numField.validation.maxDigits != null) {\n              maxDigits = (numField.validation.maxDigits.condition || '')\n                .replace('$value.toString().length <= ', '');\n            }\n          }\n\n          controls.minValue = minValue;\n          controls.maxValue = maxValue;\n          controls.minDigits = minDigits;\n          controls.maxDigits = maxDigits;\n\n          validators.push(checkValueLimitsValidity);\n          validators.push(checkDigitsValidity);\n        }\n\n        if (this.isFieldWithChoices(n.node)) {\n          const fieldWithChoices = <AjfFieldWithChoices<any>>n.node;\n\n          let triggerConditions: string[] = (fieldWithChoices.triggerConditions || [])\n            .map((c) => c.condition);\n\n          controls.choicesOriginRef = (fieldWithChoices as any).choicesOriginRef;\n          controls.choicesFilter = fieldWithChoices.choicesFilter != null ?\n            fieldWithChoices.choicesFilter.formula : null;\n          controls.forceExpanded = fieldWithChoices.forceExpanded;\n          controls.forceNarrow = fieldWithChoices.forceNarrow;\n          controls.triggerConditions = triggerConditions;\n\n          this._triggerConditions = triggerConditions;\n        }\n\n        const fg = this._fb.group(controls);\n        fg.setValidators(validators);\n\n        this._conditionalBranches = n.node.conditionalBranches.map(c => c.condition);\n        this._curVisibility = n.node.visibility != null ? n.node.visibility.condition : null;\n\n        this._handleConditionalBranchesChange(fg);\n        this._handleVisibilityChange(fg);\n        this._handleFormulaRepsChange(fg);\n        this._handleChoicesFilterChange(fg);\n        this._handleFormulaChange(fg);\n        this._handleForceValueChange(fg);\n        this._handleValidationCondtionsChange(fg);\n        this._handleWarningCondtionsChange(fg);\n        this._handleNextSlideConditionChange(fg);\n        this._handleTriggerCondtionsChange(fg);\n\n        return fg;\n      }),\n      publishReplay(1),\n      refCount()\n    );\n  }\n\n  private _destroyConditionDialog(): void {\n    if (this._editConditionDialogSub != null) {\n      this._editConditionDialogSub.unsubscribe();\n      this._editConditionDialogSub = Subscription.EMPTY;\n    }\n    if (this._editConditionDialog != null) {\n      this._editConditionDialog.close();\n      this._editConditionDialog = null;\n    }\n  }\n\n  private _destroyValidationConditionDialog(): void {\n    if (this._editValidationConditionDialogSub != null) {\n      this._editValidationConditionDialogSub.unsubscribe();\n      this._editValidationConditionDialogSub = Subscription.EMPTY;\n    }\n    if (this._editValidationConditionDialog != null) {\n      this._editValidationConditionDialog.close();\n      this._editValidationConditionDialog = null;\n    }\n  }\n\n  private _destroyWarningConditionDialog(): void {\n    if (this._editWarningConditionDialogSub != null) {\n      this._editWarningConditionDialogSub.unsubscribe();\n      this._editWarningConditionDialogSub = Subscription.EMPTY;\n    }\n    if (this._editWarningConditionDialog != null) {\n      this._editWarningConditionDialog.close();\n      this._editWarningConditionDialog = null;\n    }\n  }\n\n  private _initRemoveTriggerCondition(): void {\n    this._removeTriggerConditionSub = (<Observable<number>>this._removeTriggerConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['triggerConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        if (vcIdx < 0 || vcIdx >= vcs.length) { return; }\n        vcs.splice(vcIdx, 1);\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initAddTriggerCondition(): void {\n    this._addTriggerConditionSub = (<Observable<void>>this._addTriggerConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['triggerConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        vcs.push('');\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initTriggerConditionEdit(): void {\n    this._editTriggerConditionSub = (<Observable<number>>this._editTriggerConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        this._destroyConditionDialog();\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (vcIdx < 0 || vcIdx >= this._triggerConditions.length || fg == null) { return; }\n        this._editConditionDialog = this._dialog\n          .open(AjfFbConditionEditorDialog);\n        const cmp = this._editConditionDialog.componentInstance;\n        cmp.condition = this._triggerConditions[vcIdx];\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              this._triggerConditions[vcIdx] = cond;\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initRemoveWarningCondition(): void {\n    this._removeWarningConditionSub = (<Observable<number>>this._removeWarningConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['warningConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        if (vcIdx < 0 || vcIdx >= vcs.length) { return; }\n        vcs.splice(vcIdx, 1);\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initAddWarningCondition(): void {\n    this._addWarningConditionSub = (<Observable<void>>this._addWarningConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['warningConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        vcs.push({condition: '', errorMessage: ''});\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initWarningConditionEdit(): void {\n    this._editWarningConditionSub = (<Observable<number>>this._editWarningConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        this._destroyWarningConditionDialog();\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (vcIdx < 0 || vcIdx >= this._warningConditions.length || fg == null) { return; }\n        this._editWarningConditionDialog = this._dialog\n          .open(AjfFbWarningConditionEditorDialog);\n        const cmp = this._editWarningConditionDialog.componentInstance;\n        const w = this._warningConditions[vcIdx];\n        cmp.condition = w.condition;\n        cmp.warningMessage = w.warningMessage;\n        this._editWarningConditionDialogSub = this._editWarningConditionDialog.afterClosed()\n          .subscribe((cond: WarningCondition) => {\n            if (cond !== void 0) {\n              this._warningConditions[vcIdx] = cond;\n            }\n            this._editWarningConditionDialogSub.unsubscribe();\n            this._editWarningConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initRemoveValidationCondition(): void {\n    this._removeValidationConditionSub = (<Observable<number>>this._removeValidationConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['validationConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        if (vcIdx < 0 || vcIdx >= vcs.length) { return; }\n        vcs.splice(vcIdx, 1);\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initAddValidationCondition(): void {\n    this._addValidationConditionSub = (<Observable<void>>this._addValidationConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['validationConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        vcs.push({condition: '', errorMessage: ''});\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initValidationConditionEdit(): void {\n    this._editValidationConditionSub = (<Observable<number>>this._editValidationConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        this._destroyValidationConditionDialog();\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (vcIdx < 0 || vcIdx >= this._validationConditions.length || fg == null) { return; }\n        this._editValidationConditionDialog = this._dialog\n          .open(AjfFbValidationConditionEditorDialog);\n        const cmp = this._editValidationConditionDialog.componentInstance;\n        const v = this._validationConditions[vcIdx];\n        cmp.condition = v.condition;\n        cmp.errorMessage = v.errorMessage;\n        this._editValidationConditionDialogSub = this._editValidationConditionDialog.afterClosed()\n          .subscribe((cond: ValidationCondition) => {\n            if (cond !== void 0) {\n              this._validationConditions[vcIdx] = cond;\n            }\n            this._editValidationConditionDialogSub.unsubscribe();\n            this._editValidationConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initForceValueEdit(): void {\n    this._editForceValueSub = (<Observable<void>>this._editForceValueEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['forceValue'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initNextSlideConditionEdit(): void {\n    this._editNextSlideConditionSub = (<Observable<void>>this._editNextSlideConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['nextSlideCondition'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initFormulaEdit(): void {\n    this._editFormulaSub = (<Observable<void>>this._editFormulaEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['formula'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initFormulaRepsEdit(): void {\n    this._editFormulaRepsSub = (<Observable<void>>this._editFormulaRepsEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['formulaReps'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initChoicesFilterEdit(): void {\n    this._editChoicesFilterSub = (<Observable<void>>this._editChoicesFilterEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['choicesFilter'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initConditionalBranchEdit(): void {\n    this._editConditionalBranchSub = (<Observable<number>>this._editConditionalBranchEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        this._destroyConditionDialog();\n        const cbIdx = r[0];\n        const fg = r[1];\n        if (cbIdx < 0 || cbIdx >= this._conditionalBranches.length || fg == null) { return; }\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = this._conditionalBranches[cbIdx];\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              this._conditionalBranches[cbIdx] = cond;\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initVisibilityEdit(): void {\n    this._editVisibilitySub = (<Observable<void>>this._editVisibilityEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['visibility'];\n        const condition = ctrl.value;\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = condition;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _handleTriggerCondtionsChange(fg: FormGroup): void {\n    this._triggerConditionsSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) =>\n        JSON.stringify(v1.triggerConditions) === JSON.stringify(v2.triggerConditions)))\n      .subscribe((v: any) => {\n        this._triggerConditions = v.triggerConditions;\n      });\n  }\n\n  private _handleWarningCondtionsChange(fg: FormGroup): void {\n    this._warningConditionsSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) =>\n        JSON.stringify(v1.warningConditions) === JSON.stringify(v2.warningConditions)))\n      .subscribe((v: any) => {\n        this._warningConditions = v.warningConditions;\n      });\n  }\n\n  private _handleValidationCondtionsChange(fg: FormGroup): void {\n    this._validationConditionsSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) =>\n        JSON.stringify(v1.validationConditions) === JSON.stringify(v2.validationConditions)))\n      .subscribe((v: any) => {\n        this._validationConditions = v.validationConditions;\n      });\n  }\n\n  private _handleForceValueChange(fg: FormGroup): void {\n    this._forceValueSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.forceValue === v2.forceValue))\n      .subscribe((v: any) => {\n        this._curForceValue = v.forceValue;\n      });\n  }\n\n  private _handleNextSlideConditionChange(fg: FormGroup): void {\n    this._formulaSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.nextSlideCondition === v2.nextSlideCondition))\n      .subscribe((v: any) => {\n        this._nextSlideCondition = v.nextSlideCondition;\n      });\n  }\n\n  private _handleFormulaChange(fg: FormGroup): void {\n    this._formulaSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.formula === v2.formula))\n      .subscribe((v: any) => {\n        this._curFormula = v.formula;\n      });\n  }\n\n  private _handleFormulaRepsChange(fg: FormGroup): void {\n    this._formulaRepsSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.formulaReps === v2.formulaReps))\n      .subscribe((v: any) => {\n        this._curFormulaReps = v.formulaReps;\n      });\n  }\n\n  private _handleChoicesFilterChange(fg: FormGroup): void {\n    this._choicesFilterSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.choicesFilter === v2.choicesFilter))\n      .subscribe((v: any) => {\n        this._curChoicesFilter = v.choicesFilter;\n      });\n  }\n\n  private _handleConditionalBranchesChange(fg: FormGroup): void {\n    this._conditionalBranchesSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) =>\n          v1.conditionalBranchesNum === v2.conditionalBranchesNum))\n      .subscribe((v: any) => {\n        const cbNum: number = v.conditionalBranchesNum;\n        const curCbNum = this._conditionalBranches.length;\n        if (curCbNum < cbNum) {\n          let newCbs: string[] = [];\n          for (let i = curCbNum ; i < cbNum ; i++) {\n            newCbs.push(alwaysCondition().condition);\n          }\n          this._conditionalBranches = this._conditionalBranches.concat(newCbs);\n        } else if (curCbNum > cbNum) {\n          this._conditionalBranches.splice(0, curCbNum - cbNum);\n        }\n      });\n  }\n\n  private _handleVisibilityChange(fg: FormGroup): void {\n    this._visibilitySub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.visibilityOpt === v2.visibilityOpt))\n      .subscribe((v) => {\n        const visibilityOpt = v.visibilityOpt;\n        let newCondition: string | null;\n        switch (visibilityOpt) {\n          case 'always':\n            newCondition = alwaysCondition().condition;\n            break;\n          case 'never':\n            newCondition = neverCondition().condition;\n            break;\n          default:\n          newCondition = null;\n        }\n        this._curVisibility = newCondition;\n        fg.controls['visibility'].setValue(newCondition);\n      });\n  }\n\n  private _guessVisibilityOpt(condition: AjfCondition): string {\n    if (condition.condition.localeCompare(alwaysCondition().condition) === 0) {\n      return 'always';\n    }\n    if (condition.condition.localeCompare(neverCondition().condition) === 0) {\n      return 'never';\n    }\n    return 'condition';\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation\n} from '@angular/core';\n\nimport {AjfFormBuilderNodeTypeEntry} from './form-builder-service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-node-type-entry',\n  templateUrl: 'node-type-entry.html',\n  styleUrls: ['node-type-entry.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbNodeTypeEntry {\n  private _nodeType: AjfFormBuilderNodeTypeEntry;\n  get nodeType(): AjfFormBuilderNodeTypeEntry { return this._nodeType; }\n  @Input()\n  set nodeType(nodeType: AjfFormBuilderNodeTypeEntry) {\n    this._nodeType = nodeType;\n    this._cdr.markForCheck();\n  }\n\n  constructor(private _cdr: ChangeDetectorRef) { }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\nimport {TranslateModule} from '@ngx-translate/core';\n\nimport {AjfMonacoEditorModule} from '@ajf/material/monaco-editor';\nimport {AjfNodeIconModule} from '@ajf/material/node-icon';\n\nimport {AjfFbBranchLine} from './branch-line';\nimport {AjfFbChoicesOriginEditorDialog} from './choices-origin-editor-dialog';\nimport {AjfFbChoicesOriginEditor} from './choices-origin-editor';\nimport {AjfFbConditionEditorDialog} from './condition-editor-dialog';\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilder} from './form-builder';\nimport {AjfFormBuilderService} from './form-builder-service';\nimport {AjfFbNodeEntry} from './node-entry';\nimport {AjfFbNodeProperties} from './node-properties';\nimport {AjfFbNodeTypeEntry} from './node-type-entry';\nimport {AjfFbStringIdentifierDialogComponent} from './string-identifier-dialog';\nimport {AjfFbValidationConditionEditorDialog} from './validation-condition-editor-dialog';\nimport {AjfFbWarningConditionEditorDialog} from './warning-condition-editor-dialog';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatTableModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    TranslateModule,\n    AjfMonacoEditorModule,\n    AjfNodeIconModule,\n  ],\n  declarations: [\n    AjfFbBranchLine,\n    AjfFbChoicesOriginEditorDialog,\n    AjfFbChoicesOriginEditor,\n    AjfFbConditionEditorDialog,\n    AjfFbConditionEditor,\n    AjfFbNodeEntry,\n    AjfFbNodeProperties,\n    AjfFbNodeTypeEntry,\n    AjfFbStringIdentifierDialogComponent,\n    AjfFbValidationConditionEditorDialog,\n    AjfFbWarningConditionEditorDialog,\n    AjfFormBuilder,\n  ],\n  exports: [\n    AjfFormBuilder,\n  ],\n  entryComponents: [\n    AjfFbChoicesOriginEditorDialog,\n    AjfFbConditionEditorDialog,\n    AjfFbStringIdentifierDialogComponent,\n    AjfFbValidationConditionEditorDialog,\n    AjfFbWarningConditionEditorDialog,\n  ],\n  providers: [\n    AjfFormBuilderService\n  ]\n})\nexport class AjfFormBuilderModule { }\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","AjfFbBranchLine","defineProperty","offset","_offset","_updateOffset","color","_color","_updateColor","height","_height","_updateHeight","Math","max","_renderer","setStyle","_el","nativeElement","margin","type","Component","args","selector","template","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","propDecorators","Input","_super","ChoicesOriginDataSource","DataSource","create","__","connect","_choicesObs","disconnect","updateChoices","choices","_choices","next","constructor","_this","BehaviorSubject","asObservable","AjfFbChoicesOriginEditor","_displayedColumns","_choicesOrigin","choicesOrigin","name","label","canEditChoices","isChoicesFixedOrigin","_choicesArr","updateValue","evt","cell","_value","rowIdx","editing","target","value","deleteRow","splice","addRow","push","getNodeContainer","c","node","nodes","indexOf","cns","filter","isContainerNode","len","cn","buildFormBuilderNodesSubtree","parent","ignoreConditionalBranches","entries","id","sort","n1","n2","parentNode","map","children","content","buildFormBuilderNodesContent","entriesNum","cbs","conditionalBranches","_nodes","flattenNodes","flatNodes","forEach","concat","getDescendants","branch","deleteNodeSubtree","delNodes","descendants","removeNodes","ids","container","nodeUniqueId","AjfFormBuilderService","_availableNodeTypes","_formObs","_attachmentsOrigins","_choicesOrigins","_stringIdentifier","_flatNodes","_flatFields","_nodeEntriesTree","_editedNodeEntryObs","_editedConditionObs","_editedChoicesOriginObs","_beforeNodesUpdateObs","_afterNodeUpdateObs","setForm","form","_form","getValue","editNodeEntry","nodeEntry","_editedNodeEntry","editCondition","condition","_editedCondition","saveCurrentCondition","cancelConditionEdit","_editedChoicesOrigin","insertNode","nodeType","inContent","isFieldNode","field","createField","AjfNodeType","AjfField","fieldType","createContainerNode","_beforeNodesUpdate","emit","_nodesUpdates","replaceNodes","newNodes","slice","saveNodeEntry","properties","_saveNodeEntryEvent","cancelNodeEntryEdit","deleteNodeEntry","_deleteNodeEntryEvent","getCurrentForm","combineLatest","attachmentsOrigins","choicesOrigins","stringIdentifier","pipe","_a","createForm","supplementaryInformations","editChoicesOrigin","createChoicesOrigin","createChoicesFixedOrigin","cancelChoicesOriginEdit","saveChoicesOrigin","params","_choicesOriginsUpdates","idx","saveStringIdentifier","identifier","_stringIdentifierUpdates","_findMaxNodeId","_curMaxId","maxId","_initFormStreams","subscribe","_attachmentsOriginsUpdates","_","_initChoicesOriginsStreams","scan","op","publishReplay","refCount","_initAttachmentsOriginsStreams","_initStringIdentifierStreams","_initNodesStreams","rootNodes","rootNode","isSlidesNode","tree","Error","_initSaveNode","withLatestFrom","editedNodeEntry","origNode","deepCopy","visibility","createCondition","oldConditionalBranches","alwaysCondition","newConditionalBranches","isRepeatingContainerNode","repNode","formulaReps","createFormula","formula","undefined","minReps","maxReps","isField","description","defaultValue","forceValue","notEmpty","validationConditions","minValue","parseInt","maxValue","minDigits","maxDigits","isNaN","validation","createValidationGroup","notEmptyValidation","minValidation","maxValidation","minDigitsValidation","maxDigitsValidation","conditions","createValidation","errorMessage","notEmptyWarn","notEmptyWarning","warningConditions","warning","createWarningGroup","w","createWarning","warningMessage","nextSlideCondition","size","isFieldWithChoices","fwc","choicesOriginRef","forceExpanded","forceNarrow","triggerConditions","_initDeleteNode","Injectable","icon","fontSet","fontIcon","AjfSlide","isSlide","AjfRepeatingSlide","AjfFieldType","String","Text","Number","Boolean","SingleChoice","MultipleChoice","Formula","Date","DateInput","Time","Table","EventEmitter","_afterNodeUpdate","Subject","AjfFbChoicesOriginEditorDialog","_service","editor","choicesArr","editedChoicesOrigin","AjfFbConditionEditor","_fields","fields","_updateVariables","insertVariable","variable","monacoEditor","split","position","getPosition","ln","lineNumber","line","col","column","substring","join","setPosition","focus","editedValue","onEditorInit","monaco","languages","typescript","javascriptDefaults","setDiagnosticsOptions","noSemanticValidation","noSyntaxValidation","setCompilerOptions","ScriptTarget","ES2015","allowNonTsExtensions","allowJs","module","ModuleKind","addExtraLib","e","_extraLibs","_updateFunctions","_fieldVarType","AjfExpressionUtils","UTIL_FUNCTIONS","Empty","AjfFbConditionEditorDialog","saveCondition","newValue","dialogRef","close","service","flatFields","f1","f2","localeCompare","AjfFbStringIdentifierDialogComponent","dataSource","data","addValue","row","valueInput","_cdr","markForCheck","removeValue","ngOnDestroy","_stringIdentifierSub","unsubscribe","selected","option","MatTableDataSource","displayedColumns","separatorKeysCodes","ENTER","COMMA","Subscription","EMPTY","fields$","f","shareReplay","AjfFormBuilder","_init","_setCurrentForm","_nodeTypes","ngAfterViewChecked","_vc","ngAfterContentInit","_editConditionSub","_beforeNodesUpdateSub","_editChoicesOriginSub","disableDropPredicate","editStringIdentifier","_stringIdentifierDialog","_dialog","open","disableClose","width","availableNodeTypes","nodeEntriesTree","editedCondition","_editConditionDialog","_editChoicesOriginDialog","beforeNodesUpdate","designerCont","_lastScrollTop","scrollTop","sample","branchColors","AjfFbNodeEntry","_hasContent","_isFirst","isFirst","_isNodeEntry","_nodeEntry","ne","_level","_branchColors","_dropZones","_slideDropZones","_originOffset","originOffset","_originLeftMargin","_firstBranchColor","firstBranchColor","_currentEditedNode","onResize","edit","isNodeEntry","delete","ngAfterViewInit","setTimeout","_updateBranchHeights","_childEntriesSubscription","childEntries","changes","_branchLinesSubscription","onDropSuccess","dd","item","emptySlot","disableSlideDropPredicate","emptyAreaDropPredicate","_drop","branchLines","toArray","sliceIdx","bl","ce","offsetTop","host","(window.resize)","level","AjfFbValidationConditionEditorDialog","AjfFbWarningConditionEditorDialog","checkRepsValidity","reps","checkValueLimitsValidity","valueLimit","checkDigitsValidity","digits","AjfFbNodeProperties","_fieldSizes","_enabled","_propertiesForm","_hasChoices","_curVisibility","_curFormulaReps","_curChoicesFilter","_curForceValue","_curFormula","_conditionalBranches","_validationConditions","_warningConditions","_nextSlideCondition","_triggerConditions","editVisibility","_editVisibilityEvt","editConditionalBranch","_editConditionalBranchEvt","editFormulaReps","_editFormulaRepsEvt","editChoicesFilter","_editChoicesFilterEvt","editFormula","_editFormulaEvt","editForceValue","_editForceValueEvt","editValidationCondition","_editValidationConditionEvt","addValidationCondition","_addValidationConditionEvt","removeValidationCondition","_removeValidationConditionEvt","editWarningCondition","_editWarningConditionEvt","addWarningCondition","_addWarningConditionEvt","removeWarningCondition","_removeWarningConditionEvt","editNextSlideCondition","_editNextSlideConditionEvt","editTriggerCondition","_editTriggerConditionEvt","addTriggerCondition","_addTriggerConditionEvt","removeTriggerCondition","_removeTriggerConditionEvt","isNumericField","isNumberField","save","_saveEvt","cancel","_choicesOriginsSub","_visibilitySub","_formulaRepsSub","_choicesFilterSub","_formulaSub","_forceValueSub","_validationConditionsSub","_warningConditionsSub","_triggerConditionsSub","_editConditionDialogSub","_editValidationConditionDialogSub","_editWarningConditionDialogSub","_editChoicesFilterSub","_editConditionalBranchSub","_editVisibilitySub","_editFormulaRepsSub","_editFormulaSub","_editForceValueSub","_editValidationConditionSub","_editWarningConditionSub","_nextSlideConditionSub","_addTriggerConditionSub","_addValidationConditionSub","_addWarningConditionSub","_editNextSlideConditionSub","_editTriggerConditionSub","_removeTriggerConditionSub","_removeValidationConditionSub","_removeWarningConditionSub","_saveSub","_initSave","propertiesForm","r","fg","val","tslib_1.__assign","_initForm","_conditionalBranchesSub","visibilityOpt","_guessVisibilityOpt","controls","Validators","required","conditionalBranchesNum","validators","rn","notEmptyW","numField","replace","fieldWithChoices","choicesFilter","_fb","group","setValidators","_handleConditionalBranchesChange","_handleVisibilityChange","_handleFormulaRepsChange","_handleChoicesFilterChange","_handleFormulaChange","_handleForceValueChange","_handleValidationCondtionsChange","_handleWarningCondtionsChange","_handleNextSlideConditionChange","_handleTriggerCondtionsChange","_destroyConditionDialog","_destroyValidationConditionDialog","_editValidationConditionDialog","_destroyWarningConditionDialog","_editWarningConditionDialog","_initRemoveTriggerCondition","vcIdx","ctrl","vcs","setValue","_initAddTriggerCondition","_initTriggerConditionEdit","componentInstance","afterClosed","cond","_initRemoveWarningCondition","_initAddWarningCondition","_initWarningConditionEdit","cmp","_initRemoveValidationCondition","_initAddValidationCondition","_initValidationConditionEdit","v","_initForceValueEdit","_initNextSlideConditionEdit","_initFormulaEdit","_initFormulaRepsEdit","_initChoicesFilterEdit","_initConditionalBranchEdit","cbIdx","_initVisibilityEdit","valueChanges","distinctUntilChanged","v1","v2","JSON","stringify","cbNum","curCbNum","newCbs","newCondition","neverCondition","FormBuilder","AjfFbNodeTypeEntry","_nodeType","AjfFormBuilderModule","NgModule","imports","CommonModule","FormsModule","ReactiveFormsModule","DragDropModule","MatAutocompleteModule","MatButtonModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatTableModule","MatToolbarModule","MatTooltipModule","TranslateModule","AjfMonacoEditorModule","AjfNodeIconModule","declarations","exports","entryComponents","providers"],"mappings":"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"}