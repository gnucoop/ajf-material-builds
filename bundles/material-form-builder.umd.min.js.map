{"version":3,"sources":["src/material/material-form-builder.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ajf","material","formBuilder","monacoEditor","nodeIcon","ng","cdk","dragDrop","common","core","forms","autocomplete","button","card","checkbox","chips","dialog","expansionPanel","formField","icon","input","list","menu","select","sidenav","slideToggle","slider","table","toolbar","tooltip","ngxTranslate","collections","rxjs","operators","models","utils","keycodes","this","expansion","core$1","forms$1","AjfFbBranchLine","_el","_renderer","_offset","_height","Object","defineProperty","prototype","set","offset","_updateOffset","enumerable","configurable","color","_color","_updateColor","height","_updateHeight","Math","max","setStyle","nativeElement","margin","decorators","type","Component","args","selector","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","styles","ctorParameters","ElementRef","Renderer2","propDecorators","Input","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","call","__read","o","n","m","Symbol","iterator","r","e","i","ar","next","done","push","value","error","__spread","arguments","length","concat","ChoicesOriginDataSource","_super","_this","_choices","BehaviorSubject","_choicesObs","__extends","TypeError","String","__","constructor","create","connect","disconnect","updateChoices","choices","DataSource","AjfFbChoicesOriginEditor","_displayedColumns","editing","_choicesArr","get","_choicesOrigin","choicesOrigin","name","label","canEditChoices","isChoicesFixedOrigin","updateValue","evt","cell","_value","rowIdx","target","deleteRow","splice","addRow","getNodeContainer","c","node","nodes","indexOf","cns","filter","isContainerNode","len","cn","buildFormBuilderNodesSubtree","parent","ignoreConditionalBranches","entries","id","sort","n1","n2","parentNode","map","children","content","buildFormBuilderNodesContent","cbs","conditionalBranches","_nodes","flattenNodes","flatNodes","forEach","getDescendants","branch","deleteNodeSubtree","delNodes","descendants","removeNodes","ids","nodeUniqueId","AjfFormBuilderService","_availableNodeTypes","fontSet","fontIcon","nodeType","AjfNodeType","AjfSlide","isSlide","AjfRepeatingSlide","AjfField","field","AjfFieldType","Text","Number","Boolean","SingleChoice","MultipleChoice","Formula","Date","DateInput","Time","Table","_form","_formObs","_connectedDropLists","_editedNodeEntry","_editedNodeEntryObs","_editedCondition","_editedConditionObs","_editedChoicesOrigin","_editedChoicesOriginObs","_beforeNodesUpdate","EventEmitter","_beforeNodesUpdateObs","_afterNodeUpdate","_afterNodeUpdateObs","_nodesUpdates","Subject","_attachmentsOriginsUpdates","_choicesOriginsUpdates","_stringIdentifierUpdates","_saveNodeEntryEvent","_deleteNodeEntryEvent","_moveNodeEntryEvent","_moveNodeSub","Subscription","EMPTY","_initChoicesOriginsStreams","_initAttachmentsOriginsStreams","_initStringIdentifierStreams","_initNodesStreams","_initFormStreams","_initSaveNode","_initMoveNode","_initDeleteNode","_attachmentsOrigins","_choicesOrigins","_stringIdentifier","_flatNodes","_flatFields","_nodeEntriesTree","setForm","form","getValue","editNodeEntry","nodeEntry","editCondition","condition","saveCurrentCondition","cancelConditionEdit","assignListId","empty","listId","_connectDropList","insertNode","inContent","insertInIndex","_a","isFieldNode","createField","fieldType","createContainerNode","emit","newNodes","slice","_updateNodesList","saveNodeEntry","properties","cancelNodeEntryEdit","deleteNodeEntry","moveNodeEntry","from","to","fromIndex","toIndex","getCurrentForm","combineLatest","_nodesWithoutChoiceOrigins","attachmentsOrigins","choicesOrigins","stringIdentifier","pipe","_b","_c","createForm","supplementaryInformations","editChoicesOrigin","createChoicesOrigin","createChoicesFixedOrigin","cancelChoicesOriginEdit","saveChoicesOrigin","params","idx","saveStringIdentifier","identifier","_buildFormBuilderNodesTree","rootNodes","rootNode","isSlidesNode","tree","container","Error","connectedLists","_findMaxNodeId","_curMaxId","maxId","subscribe","_","scan","op","publishReplay","refCount","slides","slide","isFieldWithChoices","fwc","deepCopy","withLatestFrom","editedNodeEntry","ne","origNode","visibility","createCondition","oldConditionalBranches","alwaysCondition","newConditionalBranches","isRepeatingContainerNode","repNode","formulaReps","createFormula","formula","undefined","minReps","maxReps","isField","description","defaultValue","forceValue","notEmpty","validationConditions","minValue","parseInt","maxValue","minDigits","maxDigits","isNaN","validation","createValidationGroup","notEmptyValidation","minValidation","maxValidation","minDigitsValidation","maxDigitsValidation","conditions","createValidation","errorMessage","notEmptyWarn","notEmptyWarning","warningConditions","warning","createWarningGroup","w","createWarning","warningMessage","nextSlideCondition","size","choicesOriginRef","forceExpanded","forceNarrow","triggerConditions","t","replaceNodes","unsubscribe","moveEvent","moveItemInArray","containerId","nodesList","contId","currentNode","Injectable","AjfFbChoicesOriginEditorDialog","_service","editedChoicesOrigin","editor","choicesArr","ViewChild","static","AjfFbConditionEditor","_fields","fields","_updateVariables","insertVariable","variable","split","position","getPosition","ln","lineNumber","line","col","column","substring","join","setPosition","focus","editedValue","onEditorInit","monaco","languages","typescript","javascriptDefaults","setDiagnosticsOptions","noSemanticValidation","noSyntaxValidation","setCompilerOptions","ScriptTarget","ES2015","allowNonTsExtensions","allowJs","ModuleKind","addExtraLib","_extraLibs","_updateFunctions","_fieldVarType","AjfExpressionUtils","UTIL_FUNCTIONS","Empty","AjfValidationService","AjfMonacoEditor","AjfFbConditionEditorDialog","service","dialogRef","flatFields","f1","f2","localeCompare","saveCondition","close","onDropProcess","event","fbService","itemData","item","data","previousIndex","currentIndex","emptySlot","disableSlideDropPredicate","disableFieldDropPredicate","MatDialogRef","AjfFbStringIdentifierDialogComponent","_cdr","dataSource","MatTableDataSource","displayedColumns","separatorKeysCodes","ENTER","COMMA","_stringIdentifierSub","fields$","f","shareReplay","addValue","row","valueInput","markForCheck","removeValue","ngOnDestroy","selected","option","ChangeDetectorRef","AjfFormBuilder","_dialog","_globalExpanded","connectedDropLists","_vc","_init","_editConditionSub","_beforeNodesUpdateSub","_editChoicesOriginSub","_nodeTypes","availableNodeTypes","nodeEntriesTree","editedCondition","_editConditionDialog","open","disableClose","_editChoicesOriginDialog","beforeNodesUpdate","designerCont","_lastScrollTop","scrollTop","sample","_setCurrentForm","ngAfterViewChecked","ngAfterContentInit","disableDrop","disableFieldDrop","onDrop","editStringIdentifier","_stringIdentifierDialog","width","expandAll","collapseAll","expandToggle","checked","MatDialog","branchColors","AjfFbNodeEntry","_hasContent","_isFirst","_isNodeEntry","_isExpanded","_level","_isDraggable","_branchColors","_dropZones","_slideDropZones","_originOffset","_originLeftMargin","_firstBranchColor","_branchLinesSubscription","_childEntriesSubscription","_currentEditedNode","isFirst","exp","setTimeout","_updateBranchHeights","_nodeEntry","draggable","originOffset","firstBranchColor","onResize","edit","stopPropagation","isNodeEntry","delete","isLastNode","realNodeEntry","ngAfterViewInit","childEntries","changes","assignId","disableSlideDrop","emptyAreaDropPredicate","_drop","branchLines","toArray","sliceIdx","bl","offsetTop","host","(window.resize)","ViewChildren","read","isExpanded","level","isDraggable","AjfFbValidationConditionEditorDialog","AjfFbWarningConditionEditorDialog","checkRepsValidity","reps","checkValueLimitsValidity","valueLimit","checkDigitsValidity","digits","AjfFbNodeProperties","_fb","_fieldSizes","_conditionalBranches","_validationConditions","_warningConditions","_visibilityOptSub","_visibilitySub","_conditionalBranchesSub","_formulaRepsSub","_choicesFilterSub","_formulaSub","_forceValueSub","_validationConditionsSub","_warningConditionsSub","_nextSlideConditionSub","_choicesOriginsSub","_triggerConditionsSub","_editConditionDialogSub","_editValidationConditionDialogSub","_editWarningConditionDialogSub","_editVisibilityEvt","_editVisibilitySub","_editConditionalBranchEvt","_editConditionalBranchSub","_editFormulaRepsEvt","_editFormulaRepsSub","_editChoicesFilterEvt","_editChoicesFilterSub","_editFormulaEvt","_editFormulaSub","_editForceValueEvt","_editForceValueSub","_editValidationConditionEvt","_editValidationConditionSub","_addValidationConditionEvt","_addValidationConditionSub","_removeValidationConditionEvt","_removeValidationConditionSub","_editWarningConditionEvt","_editWarningConditionSub","_addWarningConditionEvt","_addWarningConditionSub","_removeWarningConditionEvt","_removeWarningConditionSub","_editNextSlideConditionEvt","_editNextSlideConditionSub","_editTriggerConditionEvt","_editTriggerConditionSub","_addTriggerConditionEvt","_addTriggerConditionSub","_removeTriggerConditionEvt","_removeTriggerConditionSub","_saveEvt","_saveSub","_enabled","_initForm","_initVisibilityEdit","_initConditionalBranchEdit","_initFormulaRepsEdit","_initChoicesFilterEdit","_initFormulaEdit","_initForceValueEdit","_initValidationConditionEdit","_initAddValidationCondition","_initRemoveValidationCondition","_initWarningConditionEdit","_initAddWarningCondition","_initRemoveWarningCondition","_initNextSlideConditionEdit","_initTriggerConditionEdit","_initAddTriggerCondition","_initRemoveTriggerCondition","_initSave","_propertiesForm","_hasChoices","_curVisibility","_curFormulaReps","_curChoicesFilter","_curForceValue","_curFormula","_nextSlideCondition","_triggerConditions","editVisibility","editConditionalBranch","editFormulaReps","editChoicesFilter","editFormula","editForceValue","editValidationCondition","addValidationCondition","removeValidationCondition","editWarningCondition","addWarningCondition","removeWarningCondition","editNextSlideCondition","editTriggerCondition","addTriggerCondition","removeTriggerCondition","isNumericField","isNumberField","save","cancel","propertiesForm","val","assign","visibilityOpt","_guessVisibilityOpt","controls","Validators","required","conditionalBranchesNum","validators","rn","notEmptyW","hint","numField","replace","fieldWithChoices","choicesFilter","fg","group","setValidators","_handleConditionalBranchesChange","_handleVisibilityChange","_handleFormulaRepsChange","_handleChoicesFilterChange","_handleFormulaChange","_handleForceValueChange","_handleValidationCondtionsChange","_handleWarningCondtionsChange","_handleNextSlideConditionChange","_handleTriggerCondtionsChange","_destroyConditionDialog","_destroyValidationConditionDialog","_editValidationConditionDialog","_destroyWarningConditionDialog","_editWarningConditionDialog","vcIdx","formGroup","ctrl","vcs","setValue","componentInstance","afterClosed","cond","cmp","v","cbIdx","valueChanges","distinctUntilChanged","v1","v2","JSON","stringify","cbNum","curCbNum","newCbs","newCondition","neverCondition","FormBuilder","AjfFormBuilderModule","AjfFbNodeTypeEntry","_nodeType","NgModule","imports","AjfMonacoEditorModule","AjfNodeIconModule","CommonModule","DragDropModule","FormsModule","MatAutocompleteModule","MatButtonModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatTableModule","MatToolbarModule","MatTooltipModule","ReactiveFormsModule","TranslateModule","MatExpansionModule","MatSlideToggleModule","declarations","providers","ɵgc_ajf_src_material_form_builder_form_builder_a","ɵgc_ajf_src_material_form_builder_form_builder_b","ɵgc_ajf_src_material_form_builder_form_builder_c","ɵgc_ajf_src_material_form_builder_form_builder_d","ɵgc_ajf_src_material_form_builder_form_builder_e","ɵgc_ajf_src_material_form_builder_form_builder_f","ɵgc_ajf_src_material_form_builder_form_builder_g","ɵgc_ajf_src_material_form_builder_form_builder_h","ɵgc_ajf_src_material_form_builder_form_builder_i","ɵgc_ajf_src_material_form_builder_form_builder_j","ɵgc_ajf_src_material_form_builder_form_builder_k"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@ajf/material/monaco-editor'), require('@ajf/material/node-icon'), require('@angular/cdk/drag-drop'), require('@angular/common'), require('@angular/core'), require('@angular/forms'), require('@angular/material/autocomplete'), require('@angular/material/button'), require('@angular/material/card'), require('@angular/material/checkbox'), require('@angular/material/chips'), require('@angular/material/dialog'), require('@angular/material/expansion'), require('@angular/material/form-field'), require('@angular/material/icon'), require('@angular/material/input'), require('@angular/material/list'), require('@angular/material/menu'), require('@angular/material/select'), require('@angular/material/sidenav'), require('@angular/material/slide-toggle'), require('@angular/material/slider'), require('@angular/material/table'), require('@angular/material/toolbar'), require('@angular/material/tooltip'), require('@ngx-translate/core'), require('@ajf/core/forms'), require('@angular/cdk/collections'), require('rxjs'), require('rxjs/operators'), require('@ajf/core/models'), require('@ajf/core/utils'), require('@angular/cdk/keycodes')) :\n    typeof define === 'function' && define.amd ? define('@ajf/material/form-builder', ['exports', '@ajf/material/monaco-editor', '@ajf/material/node-icon', '@angular/cdk/drag-drop', '@angular/common', '@angular/core', '@angular/forms', '@angular/material/autocomplete', '@angular/material/button', '@angular/material/card', '@angular/material/checkbox', '@angular/material/chips', '@angular/material/dialog', '@angular/material/expansion', '@angular/material/form-field', '@angular/material/icon', '@angular/material/input', '@angular/material/list', '@angular/material/menu', '@angular/material/select', '@angular/material/sidenav', '@angular/material/slide-toggle', '@angular/material/slider', '@angular/material/table', '@angular/material/toolbar', '@angular/material/tooltip', '@ngx-translate/core', '@ajf/core/forms', '@angular/cdk/collections', 'rxjs', 'rxjs/operators', '@ajf/core/models', '@ajf/core/utils', '@angular/cdk/keycodes'], factory) :\n    (global = global || self, factory((global.ajf = global.ajf || {}, global.ajf.material = global.ajf.material || {}, global.ajf.material.formBuilder = {}), global.ajf.material.monacoEditor, global.ajf.material.nodeIcon, global.ng.cdk.dragDrop, global.ng.common, global.ng.core, global.ng.forms, global.ng.material.autocomplete, global.ng.material.button, global.ng.material.card, global.ng.material.checkbox, global.ng.material.chips, global.ng.material.dialog, global.ng.material.expansionPanel, global.ng.material.formField, global.ng.material.icon, global.ng.material.input, global.ng.material.list, global.ng.material.menu, global.ng.material.select, global.ng.material.sidenav, global.ng.material.slideToggle, global.ng.material.slider, global.ng.material.table, global.ng.material.toolbar, global.ng.material.tooltip, global.ngxTranslate.core, global.ajf.core.forms, global.ng.cdk.collections, global.rxjs, global.rxjs.operators, global.ajf.core.models, global.ajf.core.utils, global.ng.cdk.keycodes));\n}(this, (function (exports, monacoEditor, nodeIcon, dragDrop, common, core, forms, autocomplete, button, card, checkbox, chips, dialog, expansion, formField, icon, input, list, menu, select, sidenav, slideToggle, slider, table, toolbar, tooltip, core$1, forms$1, collections, rxjs, operators, models, utils, keycodes) { 'use strict';\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFbBranchLine = /** @class */ (function () {\n        function AjfFbBranchLine(_el, _renderer) {\n            this._el = _el;\n            this._renderer = _renderer;\n            this._offset = 0;\n            this._height = 0;\n        }\n        Object.defineProperty(AjfFbBranchLine.prototype, \"offset\", {\n            set: function (offset) {\n                this._offset = offset;\n                this._updateOffset();\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbBranchLine.prototype, \"color\", {\n            set: function (color) {\n                this._color = color;\n                this._updateColor();\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbBranchLine.prototype, \"height\", {\n            set: function (height) {\n                this._height = height;\n                this._updateHeight();\n            },\n            enumerable: false,\n            configurable: true\n        });\n        AjfFbBranchLine.prototype._updateHeight = function () {\n            var height = Math.max(0, this._height - 25) + \"px\";\n            this._renderer.setStyle(this._el.nativeElement, 'height', height);\n        };\n        AjfFbBranchLine.prototype._updateOffset = function () {\n            var margin = this._offset * 4 + \"px\";\n            this._renderer.setStyle(this._el.nativeElement, 'margin-top', margin);\n            this._renderer.setStyle(this._el.nativeElement, 'margin-left', margin);\n        };\n        AjfFbBranchLine.prototype._updateColor = function () {\n            this._renderer.setStyle(this._el.nativeElement, 'border-color', this._color);\n        };\n        return AjfFbBranchLine;\n    }());\n    AjfFbBranchLine.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'ajf-fb-branch-line',\n                    template: \"\",\n                    encapsulation: core.ViewEncapsulation.None,\n                    changeDetection: core.ChangeDetectionStrategy.OnPush,\n                    styles: [\"ajf-fb-branch-line{display:block;position:absolute;top:25px;left:25px;width:25px;border-top:2px solid;border-left:2px solid;border-top-left-radius:6px;transition:height .5s ease-in-out}\\n\"]\n                },] }\n    ];\n    AjfFbBranchLine.ctorParameters = function () { return [\n        { type: core.ElementRef },\n        { type: core.Renderer2 }\n    ]; };\n    AjfFbBranchLine.propDecorators = {\n        offset: [{ type: core.Input }],\n        color: [{ type: core.Input }],\n        height: [{ type: core.Input }]\n    };\n\n    /*! *****************************************************************************\n    Copyright (c) Microsoft Corporation.\n\n    Permission to use, copy, modify, and/or distribute this software for any\n    purpose with or without fee is hereby granted.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n    PERFORMANCE OF THIS SOFTWARE.\n    ***************************************************************************** */\n    /* global Reflect, Promise */\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b)\n                if (Object.prototype.hasOwnProperty.call(b, p))\n                    d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    function __extends(d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    }\n    var __assign = function () {\n        __assign = Object.assign || function __assign(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s)\n                    if (Object.prototype.hasOwnProperty.call(s, p))\n                        t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign.apply(this, arguments);\n    };\n    function __rest(s, e) {\n        var t = {};\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n                t[p] = s[p];\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                    t[p[i]] = s[p[i]];\n            }\n        return t;\n    }\n    function __decorate(decorators, target, key, desc) {\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n            r = Reflect.decorate(decorators, target, key, desc);\n        else\n            for (var i = decorators.length - 1; i >= 0; i--)\n                if (d = decorators[i])\n                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\n    }\n    function __param(paramIndex, decorator) {\n        return function (target, key) { decorator(target, key, paramIndex); };\n    }\n    function __metadata(metadataKey, metadataValue) {\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\")\n            return Reflect.metadata(metadataKey, metadataValue);\n    }\n    function __awaiter(thisArg, _arguments, P, generator) {\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) { try {\n                step(generator.next(value));\n            }\n            catch (e) {\n                reject(e);\n            } }\n            function rejected(value) { try {\n                step(generator[\"throw\"](value));\n            }\n            catch (e) {\n                reject(e);\n            } }\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    }\n    function __generator(thisArg, body) {\n        var _ = { label: 0, sent: function () { if (t[0] & 1)\n                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () { return this; }), g;\n        function verb(n) { return function (v) { return step([n, v]); }; }\n        function step(op) {\n            if (f)\n                throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                        return t;\n                    if (y = 0, t)\n                        op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2])\n                                _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                }\n                catch (e) {\n                    op = [6, e];\n                    y = 0;\n                }\n                finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5)\n                throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    }\n    var __createBinding = Object.create ? (function (o, m, k, k2) {\n        if (k2 === undefined)\n            k2 = k;\n        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });\n    }) : (function (o, m, k, k2) {\n        if (k2 === undefined)\n            k2 = k;\n        o[k2] = m[k];\n    });\n    function __exportStar(m, o) {\n        for (var p in m)\n            if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p))\n                __createBinding(o, m, p);\n    }\n    function __values(o) {\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n        if (m)\n            return m.call(o);\n        if (o && typeof o.length === \"number\")\n            return {\n                next: function () {\n                    if (o && i >= o.length)\n                        o = void 0;\n                    return { value: o && o[i++], done: !o };\n                }\n            };\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n    }\n    function __read(o, n) {\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n        if (!m)\n            return o;\n        var i = m.call(o), r, ar = [], e;\n        try {\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)\n                ar.push(r.value);\n        }\n        catch (error) {\n            e = { error: error };\n        }\n        finally {\n            try {\n                if (r && !r.done && (m = i[\"return\"]))\n                    m.call(i);\n            }\n            finally {\n                if (e)\n                    throw e.error;\n            }\n        }\n        return ar;\n    }\n    /** @deprecated */\n    function __spread() {\n        for (var ar = [], i = 0; i < arguments.length; i++)\n            ar = ar.concat(__read(arguments[i]));\n        return ar;\n    }\n    /** @deprecated */\n    function __spreadArrays() {\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++)\n            s += arguments[i].length;\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n                r[k] = a[j];\n        return r;\n    }\n    function __spreadArray(to, from) {\n        for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n            to[j] = from[i];\n        return to;\n    }\n    function __await(v) {\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\n    }\n    function __asyncGenerator(thisArg, _arguments, generator) {\n        if (!Symbol.asyncIterator)\n            throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n        function verb(n) { if (g[n])\n            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n        function resume(n, v) { try {\n            step(g[n](v));\n        }\n        catch (e) {\n            settle(q[0][3], e);\n        } }\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n        function fulfill(value) { resume(\"next\", value); }\n        function reject(value) { resume(\"throw\", value); }\n        function settle(f, v) { if (f(v), q.shift(), q.length)\n            resume(q[0][0], q[0][1]); }\n    }\n    function __asyncDelegator(o) {\n        var i, p;\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\n    }\n    function __asyncValues(o) {\n        if (!Symbol.asyncIterator)\n            throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n        var m = o[Symbol.asyncIterator], i;\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }\n    }\n    function __makeTemplateObject(cooked, raw) {\n        if (Object.defineProperty) {\n            Object.defineProperty(cooked, \"raw\", { value: raw });\n        }\n        else {\n            cooked.raw = raw;\n        }\n        return cooked;\n    }\n    ;\n    var __setModuleDefault = Object.create ? (function (o, v) {\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n    }) : function (o, v) {\n        o[\"default\"] = v;\n    };\n    function __importStar(mod) {\n        if (mod && mod.__esModule)\n            return mod;\n        var result = {};\n        if (mod != null)\n            for (var k in mod)\n                if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k))\n                    __createBinding(result, mod, k);\n        __setModuleDefault(result, mod);\n        return result;\n    }\n    function __importDefault(mod) {\n        return (mod && mod.__esModule) ? mod : { default: mod };\n    }\n    function __classPrivateFieldGet(receiver, privateMap) {\n        if (!privateMap.has(receiver)) {\n            throw new TypeError(\"attempted to get private field on non-instance\");\n        }\n        return privateMap.get(receiver);\n    }\n    function __classPrivateFieldSet(receiver, privateMap, value) {\n        if (!privateMap.has(receiver)) {\n            throw new TypeError(\"attempted to set private field on non-instance\");\n        }\n        privateMap.set(receiver, value);\n        return value;\n    }\n\n    var ChoicesOriginDataSource = /** @class */ (function (_super) {\n        __extends(ChoicesOriginDataSource, _super);\n        function ChoicesOriginDataSource() {\n            var _this = _super.call(this) || this;\n            _this._choices = new rxjs.BehaviorSubject([]);\n            _this._choicesObs = _this._choices;\n            return _this;\n        }\n        ChoicesOriginDataSource.prototype.connect = function () {\n            return this._choicesObs;\n        };\n        ChoicesOriginDataSource.prototype.disconnect = function () { };\n        ChoicesOriginDataSource.prototype.updateChoices = function (choices) {\n            this._choices.next(choices);\n        };\n        return ChoicesOriginDataSource;\n    }(collections.DataSource));\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFbChoicesOriginEditor = /** @class */ (function () {\n        function AjfFbChoicesOriginEditor() {\n            this._displayedColumns = ['label', 'value', 'delete'];\n            this.editing = {};\n            this._choices = new ChoicesOriginDataSource();\n            this._choicesArr = [];\n        }\n        Object.defineProperty(AjfFbChoicesOriginEditor.prototype, \"displayedColumns\", {\n            get: function () {\n                return this._displayedColumns;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbChoicesOriginEditor.prototype, \"choicesOrigin\", {\n            get: function () {\n                return this._choicesOrigin;\n            },\n            set: function (choicesOrigin) {\n                this._choicesOrigin = choicesOrigin;\n                this.name = choicesOrigin.name;\n                this.label = choicesOrigin.label;\n                this.canEditChoices = forms$1.isChoicesFixedOrigin(choicesOrigin);\n                this._choicesArr = choicesOrigin.choices;\n                this._choices.updateChoices(this._choicesArr);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbChoicesOriginEditor.prototype, \"choices\", {\n            get: function () {\n                return this._choices;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbChoicesOriginEditor.prototype, \"choicesArr\", {\n            get: function () {\n                return this._choicesArr;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        AjfFbChoicesOriginEditor.prototype.updateValue = function (evt, cell, _value, rowIdx) {\n            this.editing[rowIdx + '-' + cell] = false;\n            this._choicesArr[rowIdx][cell] = evt.target.value;\n            this._choices.updateChoices(this._choicesArr);\n        };\n        AjfFbChoicesOriginEditor.prototype.deleteRow = function (rowIdx) {\n            this._choicesArr.splice(rowIdx, 1);\n            this._choices.updateChoices(this._choicesArr);\n        };\n        AjfFbChoicesOriginEditor.prototype.addRow = function () {\n            this._choicesArr.push({ label: '', value: '' });\n            this._choices.updateChoices(this._choicesArr);\n        };\n        return AjfFbChoicesOriginEditor;\n    }());\n    AjfFbChoicesOriginEditor.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'ajf-fb-choices-origin-editor',\n                    template: \"<div>\\n  <mat-form-field>\\n    <input matInput [(ngModel)]=\\\"name\\\"\\n        [placeholder]=\\\"'Name' | translate\\\">\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input matInput [(ngModel)]=\\\"label\\\"\\n        [placeholder]=\\\"'Label' | translate\\\">\\n  </mat-form-field>\\n  <ng-template [ngIf]=\\\"canEditChoices\\\">\\n    <button (click)=\\\"addRow()\\\" mat-button>\\n      <mat-icon>add</mat-icon>\\n      <span translate>Add value</span>\\n    </button>\\n    <mat-table [dataSource]=\\\"choices\\\">\\n      <ng-container matColumnDef=\\\"label\\\">\\n        <mat-header-cell *matHeaderCellDef translate>Label</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row; let idx = index\\\">\\n          <input matInput [(ngModel)]=\\\"row.label\\\" type=\\\"text\\\">\\n        </mat-cell>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"value\\\">\\n        <mat-header-cell *matHeaderCellDef translate>Value</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row; let idx = index\\\">\\n          <input matInput [(ngModel)]=\\\"row.value\\\" type=\\\"text\\\">\\n        </mat-cell>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"delete\\\">\\n        <mat-header-cell *matHeaderCellDef translate>Delete</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row; let idx = index\\\">\\n            <mat-icon (click)=\\\"deleteRow(idx)\\\">delete</mat-icon>\\n        </mat-cell>\\n      </ng-container>\\n\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    </mat-table>\\n  </ng-template>\\n</div>\\n\",\n                    encapsulation: core.ViewEncapsulation.None,\n                    changeDetection: core.ChangeDetectionStrategy.OnPush,\n                    styles: [\"ajf-fb-choices-origin-editor mat-form-field+mat-form-field{margin-left:1em}ajf-fb-choices-origin-editor mat-table{max-height:300px}ajf-fb-choices-origin-editor mat-table mat-icon{cursor:pointer}\\n\"]\n                },] }\n    ];\n    AjfFbChoicesOriginEditor.propDecorators = {\n        choicesOrigin: [{ type: core.Input }]\n    };\n\n    function getNodeContainer(c, node) {\n        if (c.nodes.indexOf(node) > -1) {\n            return c;\n        }\n        var cns = c.nodes.filter(function (n) { return forms$1.isContainerNode(n); });\n        var len = cns.length;\n        for (var i = 0; i < len; i++) {\n            var cn = getNodeContainer(cns[i], node);\n            if (cn != null) {\n                return cn;\n            }\n        }\n        return null;\n    }\n    function buildFormBuilderNodesSubtree(nodes, parent, ignoreConditionalBranches) {\n        if (ignoreConditionalBranches === void 0) { ignoreConditionalBranches = false; }\n        var entries = nodes.filter(function (n) { return n.parent === parent.id; })\n            .sort(function (n1, n2) { return n1.parentNode - n2.parentNode; })\n            .map(function (n) {\n            var children = buildFormBuilderNodesSubtree(nodes, n);\n            if (children.length === 0) {\n                children.push({ parent: n, parentNode: 0 });\n            }\n            return {\n                node: n,\n                children: children,\n                content: buildFormBuilderNodesContent(nodes, n)\n            };\n        });\n        if (!ignoreConditionalBranches) {\n            var entriesNum = entries.length;\n            var cbs = parent.conditionalBranches.length;\n            for (var i = entriesNum; i < cbs; i++) {\n                entries.push({ parent: parent, parentNode: i });\n            }\n        }\n        return entries;\n    }\n    function buildFormBuilderNodesContent(_nodes, node) {\n        if (forms$1.isContainerNode(node)) {\n            return buildFormBuilderNodesSubtree(node.nodes, node, true);\n        }\n        return [];\n    }\n    function flattenNodes(nodes) {\n        var flatNodes = [];\n        nodes.forEach(function (node) {\n            if (forms$1.isContainerNode(node)) {\n                flatNodes = flatNodes.concat(flattenNodes(node.nodes));\n            }\n            flatNodes.push(node);\n        });\n        return flatNodes;\n    }\n    function getDescendants(flatNodes, parentNode, branch) {\n        if (branch === void 0) { branch = null; }\n        return branch != null ?\n            flatNodes.filter(function (n) { return n.parent === parentNode.id && n.parentNode === branch; }) :\n            flatNodes.filter(function (n) { return n.parent === parentNode.id; });\n    }\n    function removeNodes(nodes, ids) {\n        var len = nodes.length;\n        for (var i = 0; i < len; i++) {\n            var node = nodes[i];\n            if (forms$1.isContainerNode(node)) {\n                var container = node;\n                container.nodes = removeNodes(container.nodes, ids);\n            }\n        }\n        return nodes.filter(function (n) { return ids.indexOf(n.id) === -1; });\n    }\n    function deleteNodeSubtree(nodes, parentNode, branch) {\n        if (branch === void 0) { branch = null; }\n        var flatNodes = flattenNodes(nodes);\n        var delNodes = [];\n        var descendants = getDescendants(flatNodes, parentNode, branch);\n        var len = descendants.length;\n        for (var i = 0; i < len; i++) {\n            delNodes = delNodes.concat(getDescendants(flatNodes, descendants[i]));\n        }\n        delNodes = delNodes.concat(descendants);\n        return removeNodes(nodes, delNodes.map(function (n) { return n.id; }));\n    }\n    var nodeUniqueId = 0;\n    var AjfFormBuilderService = /** @class */ (function () {\n        function AjfFormBuilderService() {\n            this._availableNodeTypes = [\n                {\n                    label: 'Slide',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-slide' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfSlide },\n                    isSlide: true\n                },\n                {\n                    label: 'Repeating slide',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-repeatingslide' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfRepeatingSlide },\n                    isSlide: true\n                },\n                {\n                    label: 'String',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-string' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfField, field: forms$1.AjfFieldType.String }\n                },\n                {\n                    label: 'Text',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-text' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfField, field: forms$1.AjfFieldType.Text }\n                },\n                {\n                    label: 'Number',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-number' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfField, field: forms$1.AjfFieldType.Number }\n                },\n                {\n                    label: 'Boolean',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-boolean' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfField, field: forms$1.AjfFieldType.Boolean }\n                },\n                {\n                    label: 'Single choice',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-singlechoice' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfField, field: forms$1.AjfFieldType.SingleChoice }\n                },\n                {\n                    label: 'Multiple choice',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-multiplechoice' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfField, field: forms$1.AjfFieldType.MultipleChoice }\n                },\n                {\n                    label: 'Formula',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-formula' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfField, field: forms$1.AjfFieldType.Formula }\n                },\n                {\n                    label: 'Date',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-date' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfField, field: forms$1.AjfFieldType.Date }\n                },\n                {\n                    label: 'Date input',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-dateinput' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfField, field: forms$1.AjfFieldType.DateInput }\n                },\n                {\n                    label: 'Time',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-time' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfField, field: forms$1.AjfFieldType.Time }\n                },\n                {\n                    label: 'Table',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-table' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfField, field: forms$1.AjfFieldType.Table }\n                }\n            ];\n            this._form = new rxjs.BehaviorSubject(null);\n            this._formObs = this._form;\n            /**\n             * A list of the ids of the dropLists connected to the source list.\n             */\n            this._connectedDropLists = new rxjs.BehaviorSubject([]);\n            this._editedNodeEntry = new rxjs.BehaviorSubject(null);\n            this._editedNodeEntryObs = this._editedNodeEntry;\n            this._editedCondition = new rxjs.BehaviorSubject(null);\n            this._editedConditionObs = this._editedCondition;\n            this._editedChoicesOrigin = new rxjs.BehaviorSubject(null);\n            this._editedChoicesOriginObs = this._editedChoicesOrigin;\n            this._beforeNodesUpdate = new core.EventEmitter();\n            this._beforeNodesUpdateObs = this._beforeNodesUpdate;\n            this._afterNodeUpdate = new core.EventEmitter();\n            this._afterNodeUpdateObs = this._afterNodeUpdate;\n            this._nodesUpdates = new rxjs.Subject();\n            this._attachmentsOriginsUpdates = new rxjs.Subject();\n            this._choicesOriginsUpdates = new rxjs.Subject();\n            this._stringIdentifierUpdates = new rxjs.Subject();\n            this._saveNodeEntryEvent = new core.EventEmitter();\n            this._deleteNodeEntryEvent = new core.EventEmitter();\n            /**\n             * Event fired when the position of a node in a tree changes.\n             */\n            this._moveNodeEntryEvent = new core.EventEmitter();\n            /**\n             * Subscribes to the moveNodeEntryEvent event emitter;\n             */\n            this._moveNodeSub = rxjs.Subscription.EMPTY;\n            this._initChoicesOriginsStreams();\n            this._initAttachmentsOriginsStreams();\n            this._initStringIdentifierStreams();\n            this._initNodesStreams();\n            this._initFormStreams();\n            this._initSaveNode();\n            this._initMoveNode();\n            this._initDeleteNode();\n        }\n        Object.defineProperty(AjfFormBuilderService.prototype, \"availableNodeTypes\", {\n            /**\n             * Available node types\n             *\n             * @readonly\n             * @memberOf AjfFormBuilderService\n             */\n            get: function () {\n                return this._availableNodeTypes;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"form\", {\n            /**\n             * Current edited form stream\n             *\n             * @readonly\n             * @memberOf AjfFormBuilderService\n             */\n            get: function () {\n                return this._formObs;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"attachmentsOrigins\", {\n            get: function () {\n                return this._attachmentsOrigins;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"choicesOrigins\", {\n            get: function () {\n                return this._choicesOrigins;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"stringIdentifier\", {\n            get: function () {\n                return this._stringIdentifier;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"nodes\", {\n            get: function () {\n                return this._nodes;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"flatNodes\", {\n            get: function () {\n                return this._flatNodes;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"flatFields\", {\n            get: function () {\n                return this._flatFields;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"nodeEntriesTree\", {\n            get: function () {\n                return this._nodeEntriesTree;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"connectedDropLists\", {\n            get: function () {\n                return this._connectedDropLists;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"editedNodeEntry\", {\n            get: function () {\n                return this._editedNodeEntryObs;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"editedCondition\", {\n            get: function () {\n                return this._editedConditionObs;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"editedChoicesOrigin\", {\n            get: function () {\n                return this._editedChoicesOriginObs;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"beforeNodesUpdate\", {\n            get: function () {\n                return this._beforeNodesUpdateObs;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"afterNodeUpdate\", {\n            get: function () {\n                return this._afterNodeUpdateObs;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /**\n         * Sets the current edited form\n         *\n         * @param form\n         *\n         * @memberOf AjfFormBuilderService\n         */\n        AjfFormBuilderService.prototype.setForm = function (form) {\n            if (form !== this._form.getValue()) {\n                this._form.next(form);\n            }\n        };\n        AjfFormBuilderService.prototype.editNodeEntry = function (nodeEntry) {\n            this._editedNodeEntry.next(nodeEntry);\n        };\n        AjfFormBuilderService.prototype.editCondition = function (condition) {\n            this._editedCondition.next(condition);\n        };\n        AjfFormBuilderService.prototype.saveCurrentCondition = function (condition) {\n            var c = this._editedCondition.getValue();\n            if (c == null) {\n                return;\n            }\n            c.condition = condition;\n            this._editedCondition.next(null);\n        };\n        AjfFormBuilderService.prototype.cancelConditionEdit = function () {\n            this._editedChoicesOrigin.next(null);\n        };\n        AjfFormBuilderService.prototype.assignListId = function (node, empty) {\n            if (empty === void 0) { empty = false; }\n            if (node.nodeType === forms$1.AjfNodeType.AjfSlide || node.nodeType === forms$1.AjfNodeType.AjfRepeatingSlide) {\n                var listId = empty ? \"empty_fields_list_\" + node.id : \"fields_list_\" + node.id;\n                if (this._connectedDropLists.value.indexOf(listId) == -1) {\n                    this._connectDropList(listId);\n                }\n                return listId;\n            }\n            return '';\n        };\n        AjfFormBuilderService.prototype.insertNode = function (nodeType, parent, parentNode, inContent, insertInIndex) {\n            var _this = this;\n            if (inContent === void 0) { inContent = false; }\n            if (insertInIndex === void 0) { insertInIndex = 0; }\n            var _a;\n            var node;\n            var id = ++nodeUniqueId;\n            var isFieldNode = ((_a = nodeType.nodeType) === null || _a === void 0 ? void 0 : _a.field) != null;\n            if (isFieldNode) {\n                node = forms$1.createField({\n                    id: id,\n                    nodeType: forms$1.AjfNodeType.AjfField,\n                    fieldType: nodeType.nodeType.field,\n                    parent: parent.id,\n                    parentNode: parentNode,\n                    name: '',\n                });\n            }\n            else {\n                node = forms$1.createContainerNode({\n                    id: id,\n                    nodeType: nodeType.nodeType.node,\n                    parent: 0,\n                    parentNode: parentNode,\n                    name: '',\n                    nodes: [],\n                });\n            }\n            this._beforeNodesUpdate.emit();\n            this._nodesUpdates.next(function (nodes) {\n                var cn = forms$1.isContainerNode(parent) && inContent ?\n                    parent :\n                    getNodeContainer({ nodes: nodes }, parent);\n                if (!isFieldNode) {\n                    var newNodes = nodes.slice(0);\n                    newNodes.splice(insertInIndex, 0, node);\n                    newNodes = _this._updateNodesList(0, newNodes);\n                    return newNodes;\n                }\n                else {\n                    var newNodes = cn.nodes.slice(0);\n                    newNodes.splice(insertInIndex, 0, node);\n                    newNodes = _this._updateNodesList(cn.id, newNodes);\n                    cn.nodes = newNodes;\n                }\n                return nodes;\n            });\n        };\n        AjfFormBuilderService.prototype.saveNodeEntry = function (properties) {\n            this._saveNodeEntryEvent.emit(properties);\n        };\n        AjfFormBuilderService.prototype.cancelNodeEntryEdit = function () {\n            this._editedNodeEntry.next(null);\n        };\n        AjfFormBuilderService.prototype.deleteNodeEntry = function (nodeEntry) {\n            this._deleteNodeEntryEvent.next(nodeEntry);\n        };\n        /**\n         * Triggers the moveNode event when a node is moved in the formbuilder.\n         * @param nodeEntry The node to be moved.\n         */\n        AjfFormBuilderService.prototype.moveNodeEntry = function (nodeEntry, from, to) {\n            var moveEvent = { nodeEntry: nodeEntry, fromIndex: from, toIndex: to };\n            this._moveNodeEntryEvent.next(moveEvent);\n        };\n        AjfFormBuilderService.prototype.getCurrentForm = function () {\n            return rxjs.combineLatest([\n                this.form, this._nodesWithoutChoiceOrigins, this.attachmentsOrigins,\n                this.choicesOrigins, this.stringIdentifier\n            ])\n                .pipe(operators.filter(function (_b) {\n                var _c = __read(_b, 1), form = _c[0];\n                return form != null;\n            }), operators.map(function (_b) {\n                var _c = __read(_b, 5), form = _c[0], nodes = _c[1], attachmentsOrigins = _c[2], choicesOrigins = _c[3], stringIdentifier = _c[4];\n                return forms$1.createForm({\n                    choicesOrigins: choicesOrigins.slice(0),\n                    attachmentsOrigins: attachmentsOrigins.slice(0),\n                    stringIdentifier: (stringIdentifier || []).slice(0),\n                    nodes: nodes.slice(0),\n                    supplementaryInformations: form.supplementaryInformations,\n                });\n            }));\n        };\n        AjfFormBuilderService.prototype.editChoicesOrigin = function (choicesOrigin) {\n            this._editedChoicesOrigin.next(choicesOrigin);\n        };\n        AjfFormBuilderService.prototype.createChoicesOrigin = function () {\n            this._editedChoicesOrigin.next(forms$1.createChoicesFixedOrigin({ name: '' }));\n        };\n        AjfFormBuilderService.prototype.cancelChoicesOriginEdit = function () {\n            this._editedChoicesOrigin.next(null);\n        };\n        AjfFormBuilderService.prototype.saveChoicesOrigin = function (params) {\n            var choicesOrigin = this._editedChoicesOrigin.getValue();\n            if (choicesOrigin != null) {\n                choicesOrigin.label = params.label;\n                choicesOrigin.name = params.name;\n                if (forms$1.isChoicesFixedOrigin(choicesOrigin)) {\n                    choicesOrigin.choices = params.choices;\n                }\n                this._choicesOriginsUpdates.next(function (choicesOrigins) {\n                    var idx = choicesOrigins.indexOf(choicesOrigin);\n                    if (idx > -1) {\n                        choicesOrigins = __spread(choicesOrigins.slice(0, idx), [\n                            choicesOrigin\n                        ], choicesOrigins.slice(idx + 1));\n                    }\n                    else {\n                        choicesOrigins = __spread(choicesOrigins, [choicesOrigin]);\n                    }\n                    return choicesOrigins;\n                });\n            }\n            this._editedChoicesOrigin.next(null);\n        };\n        AjfFormBuilderService.prototype.saveStringIdentifier = function (identifier) {\n            this._stringIdentifierUpdates.next(function () { return __spread(identifier); });\n        };\n        AjfFormBuilderService.prototype._buildFormBuilderNodesTree = function (nodes) {\n            this._updateNodesList(0, nodes);\n            var rootNodes = nodes.filter(function (n) { return n.nodeType == forms$1.AjfNodeType.AjfSlide || n.nodeType == forms$1.AjfNodeType.AjfRepeatingSlide; });\n            if (rootNodes.length === 0) {\n                return [null];\n            }\n            var rootNode = rootNodes[0];\n            if (forms$1.isSlidesNode(rootNode)) {\n                var tree = [];\n                tree.push({\n                    node: rootNode,\n                    container: null,\n                    children: buildFormBuilderNodesSubtree(nodes, rootNode),\n                    content: buildFormBuilderNodesContent(nodes, rootNode)\n                });\n                return tree;\n            }\n            throw new Error('Invalid form definition');\n        };\n        /**\n         * Adds the id of a dropList to be connected with the FormBuilder source list.\n         * @param listId The id of the list to connect.\n         */\n        AjfFormBuilderService.prototype._connectDropList = function (listId) {\n            var connectedLists = this._connectedDropLists.value.slice(0);\n            this._connectedDropLists.next(__spread(connectedLists, [listId]));\n        };\n        AjfFormBuilderService.prototype._findMaxNodeId = function (nodes, _curMaxId) {\n            var _this = this;\n            if (_curMaxId === void 0) { _curMaxId = 0; }\n            var maxId = 0;\n            nodes.forEach(function (n) {\n                maxId = Math.max(maxId, n.id);\n                if (forms$1.isContainerNode(n)) {\n                    maxId = Math.max(maxId, _this._findMaxNodeId(n.nodes));\n                }\n            });\n            return maxId;\n        };\n        AjfFormBuilderService.prototype._initFormStreams = function () {\n            var _this = this;\n            this._form.subscribe(function (form) {\n                nodeUniqueId = 0;\n                if (form != null && form.nodes != null && form.nodes.length > 0) {\n                    nodeUniqueId = _this._findMaxNodeId(form.nodes);\n                }\n                _this._nodesUpdates.next(function (_nodes) {\n                    return form != null && form.nodes != null ? form.nodes.slice(0) : [];\n                });\n                _this._attachmentsOriginsUpdates.next(function (_attachmentsOrigins) {\n                    return form != null && form.attachmentsOrigins != null ?\n                        form.attachmentsOrigins.slice(0) :\n                        [];\n                });\n                _this._choicesOriginsUpdates.next(function (_choicesOrigins) {\n                    return form != null && form.choicesOrigins != null ? form.choicesOrigins.slice(0) : [];\n                });\n                _this._stringIdentifierUpdates.next(function (_) {\n                    return form != null && form.stringIdentifier != null ? form.stringIdentifier.slice(0) :\n                        [];\n                });\n            });\n        };\n        AjfFormBuilderService.prototype._initChoicesOriginsStreams = function () {\n            this._choicesOrigins =\n                this._choicesOriginsUpdates\n                    .pipe(operators.scan(function (choicesOrigins, op) {\n                    return op(choicesOrigins);\n                }, []), operators.publishReplay(1), operators.refCount());\n        };\n        AjfFormBuilderService.prototype._initAttachmentsOriginsStreams = function () {\n            this._attachmentsOrigins = this._attachmentsOriginsUpdates.pipe(operators.scan(function (attachmentsOrigins, op) {\n                return op(attachmentsOrigins);\n            }, []), operators.publishReplay(1), operators.refCount());\n        };\n        AjfFormBuilderService.prototype._initStringIdentifierStreams = function () {\n            this._stringIdentifier = this._stringIdentifierUpdates.pipe(operators.scan(function (stringIdentifier, op) {\n                return op(stringIdentifier);\n            }, []), operators.publishReplay(1), operators.refCount());\n        };\n        AjfFormBuilderService.prototype._initNodesStreams = function () {\n            var _this = this;\n            this._nodes = this._nodesUpdates\n                .pipe(operators.scan(function (nodes, op) {\n                return op(nodes);\n            }, []), operators.publishReplay(1), operators.refCount());\n            this._nodesWithoutChoiceOrigins =\n                this._nodes.pipe(operators.map(function (slides) { return slides.map(function (slide) {\n                    slide.nodes = slide.nodes.map(function (node) {\n                        if (forms$1.isFieldWithChoices(node)) {\n                            var fwc = utils.deepCopy(node);\n                            if (fwc && fwc.choices) {\n                                delete fwc.choices;\n                            }\n                            if (fwc && fwc.choicesOrigin) {\n                                delete fwc.choicesOrigin;\n                            }\n                            return fwc;\n                        }\n                        return node;\n                    });\n                    return slide;\n                }); }));\n            this._flatNodes = this._nodes.pipe(operators.map(function (nodes) { return flattenNodes(nodes); }), operators.publishReplay(1), operators.refCount());\n            this._flatFields = this._flatNodes.pipe(operators.map(function (nodes) { return nodes.filter(function (n) { return !forms$1.isContainerNode(n); }); }), operators.publishReplay(1), operators.refCount());\n            this._nodeEntriesTree = this._nodes.pipe(operators.map(function (nodes) { return _this._buildFormBuilderNodesTree(nodes); }), operators.publishReplay(1), operators.refCount());\n        };\n        AjfFormBuilderService.prototype._initSaveNode = function () {\n            var _this = this;\n            this._saveNodeEntryEvent\n                .pipe(operators.withLatestFrom(this.editedNodeEntry, this.choicesOrigins, this.attachmentsOrigins), operators.filter(function (_b) {\n                var _c = __read(_b, 2), _ = _c[0], nodeEntry = _c[1];\n                return nodeEntry != null;\n            }), operators.map(function (_b) {\n                var _c = __read(_b, 2), properties = _c[0], ne = _c[1];\n                _this._beforeNodesUpdate.emit();\n                var nodeEntry = ne;\n                var origNode = nodeEntry.node;\n                var node = utils.deepCopy(origNode);\n                node.id = nodeEntry.node.id;\n                node.name = properties.name;\n                node.label = properties.label;\n                node.visibility = properties.visibility != null ?\n                    models.createCondition({ condition: properties.visibility }) :\n                    null;\n                var oldConditionalBranches = node.conditionalBranches.length;\n                node.conditionalBranches = properties.conditionalBranches != null ?\n                    properties.conditionalBranches.map(function (condition) { return models.createCondition({ condition: condition }); }) :\n                    [models.alwaysCondition()];\n                var newConditionalBranches = node.conditionalBranches.length;\n                if (forms$1.isRepeatingContainerNode(node)) {\n                    var repNode = node;\n                    repNode.formulaReps = properties.formulaReps != null ?\n                        models.createFormula({ formula: properties.formulaReps }) :\n                        undefined;\n                    repNode.minReps = properties.minReps;\n                    repNode.maxReps = properties.maxReps;\n                }\n                if (forms$1.isField(node)) {\n                    var field = node;\n                    field.description = properties.description;\n                    field.defaultValue = properties.defaultValue;\n                    field.formula = properties.formula != null ?\n                        models.createFormula({ formula: properties.formula }) :\n                        undefined;\n                    var forceValue = properties.value;\n                    var notEmpty = properties.notEmpty;\n                    var validationConditions = properties.validationConditions;\n                    var minValue = parseInt(properties.minValue, 10);\n                    var maxValue = parseInt(properties.maxValue, 10);\n                    var minDigits = parseInt(properties.minDigits, 10);\n                    var maxDigits = parseInt(properties.maxDigits, 10);\n                    if (isNaN(minValue)) {\n                        minValue = null;\n                    }\n                    if (isNaN(maxValue)) {\n                        maxValue = null;\n                    }\n                    if (isNaN(minDigits)) {\n                        minDigits = null;\n                    }\n                    if (isNaN(maxDigits)) {\n                        maxDigits = null;\n                    }\n                    if (forceValue != null || notEmpty != null ||\n                        (validationConditions != null && validationConditions.length > 0) ||\n                        minValue != null || maxValue != null || minDigits != null ||\n                        maxDigits != null) {\n                        var validation = field.validation || forms$1.createValidationGroup({});\n                        validation.forceValue = forceValue;\n                        validation.notEmpty = notEmpty ? forms$1.notEmptyValidation() : undefined;\n                        validation.minValue = minValue != null ? forms$1.minValidation(minValue) : undefined;\n                        validation.maxValue = maxValue != null ? forms$1.maxValidation(maxValue) : undefined;\n                        validation.minDigits =\n                            minDigits != null ? forms$1.minDigitsValidation(minDigits) : undefined;\n                        validation.maxDigits =\n                            maxDigits != null ? forms$1.maxDigitsValidation(maxDigits) : undefined;\n                        validation.conditions =\n                            (validationConditions ||\n                                []).map(function (c) { return forms$1.createValidation({\n                                condition: c.condition,\n                                errorMessage: c.errorMessage\n                            }); });\n                        field.validation = validation;\n                    }\n                    else {\n                        field.validation = undefined;\n                    }\n                    var notEmptyWarn = properties.notEmptyWarning;\n                    var warningConditions = properties.warningConditions;\n                    if (notEmptyWarn != null ||\n                        (warningConditions != null && warningConditions.length > 0)) {\n                        var warning = field.warning || forms$1.createWarningGroup({});\n                        warning.notEmpty = notEmptyWarn ? forms$1.notEmptyWarning() : undefined;\n                        warning.conditions =\n                            (warningConditions ||\n                                []).map(function (w) { return forms$1.createWarning({\n                                condition: w.condition,\n                                warningMessage: w.warningMessage\n                            }); });\n                        field.warning = warning;\n                    }\n                    else {\n                        field.warning = undefined;\n                    }\n                    field.nextSlideCondition = properties.nextSlideCondition != null ?\n                        models.createCondition({ condition: properties.nextSlideCondition }) :\n                        undefined;\n                    field.size = properties.size;\n                    field.defaultValue = properties.defaultValue;\n                    if (forms$1.isFieldWithChoices(field)) {\n                        var fwc = field;\n                        fwc.choicesOriginRef = properties.choicesOriginRef;\n                        fwc.forceExpanded = properties.forceExpanded;\n                        fwc.forceNarrow = properties.forceNarrow;\n                        fwc.triggerConditions = (properties.triggerConditions ||\n                            []).map(function (t) { return models.createCondition({ condition: t }); });\n                    }\n                }\n                _this._editedNodeEntry.next(null);\n                return function (nodes) {\n                    var cn = getNodeContainer({ nodes: nodes }, origNode);\n                    if (cn != null) {\n                        // TODO: @trik check this, was always true?\n                        // if (cn instanceof AjfNode) {\n                        var replaceNodes = cn.nodes === nodes;\n                        var idx = cn.nodes.indexOf(origNode);\n                        var newNodes = cn.nodes.slice(0, idx);\n                        newNodes.push(node);\n                        newNodes = newNodes.concat(cn.nodes.slice(idx + 1));\n                        cn.nodes = newNodes;\n                        if (replaceNodes) {\n                            nodes = newNodes;\n                        }\n                        else {\n                            nodes = nodes.slice(0);\n                        }\n                        // } else {\n                        //   const idx = nodes.indexOf(origNode);\n                        //   nodes = nodes.slice(0, idx).concat([node]).concat(nodes.slice(idx + 1));\n                        // }\n                        if (newConditionalBranches < oldConditionalBranches) {\n                            for (var i = newConditionalBranches; i < oldConditionalBranches; i++) {\n                                nodes = deleteNodeSubtree(nodes, node, i);\n                            }\n                        }\n                    }\n                    return nodes;\n                };\n            }))\n                .subscribe(this._nodesUpdates);\n        };\n        AjfFormBuilderService.prototype._initDeleteNode = function () {\n            var _this = this;\n            this._deleteNodeEntryEvent\n                .pipe(operators.map(function (nodeEntry) {\n                _this._beforeNodesUpdate.emit();\n                return function (nodes) {\n                    var node = nodeEntry.node;\n                    var cn = getNodeContainer({ nodes: nodes }, node);\n                    if (cn != null) {\n                        var replaceNodes = cn.nodes === nodes;\n                        var idx = cn.nodes.indexOf(node);\n                        var newNodes = cn.nodes.slice(0, idx);\n                        newNodes = newNodes.concat(cn.nodes.slice(idx + 1));\n                        cn.nodes = newNodes;\n                        if (replaceNodes) {\n                            nodes = newNodes;\n                        }\n                        else {\n                            nodes = nodes.slice(0);\n                        }\n                    }\n                    return nodes;\n                };\n            }))\n                .subscribe(this._nodesUpdates);\n        };\n        /**\n         * Initializes the subscription to the moveNodeEntryEvent.\n         */\n        AjfFormBuilderService.prototype._initMoveNode = function () {\n            var _this = this;\n            this._moveNodeSub.unsubscribe();\n            this._moveNodeSub =\n                this._moveNodeEntryEvent\n                    .pipe(operators.map(function (moveEvent) {\n                    _this._beforeNodesUpdate.emit();\n                    return function (nodes) {\n                        var nodeEntry = moveEvent.nodeEntry;\n                        var node = nodeEntry.node;\n                        var cn = getNodeContainer({ nodes: nodes }, node);\n                        var newNodes = nodes;\n                        if (cn != null) {\n                            var replaceNodes = cn.nodes === nodes;\n                            newNodes = cn.nodes;\n                            dragDrop.moveItemInArray(newNodes, moveEvent.fromIndex, moveEvent.toIndex);\n                            newNodes = _this._updateNodesList(cn.id, newNodes);\n                            cn.nodes = newNodes;\n                            if (replaceNodes) {\n                                nodes = newNodes;\n                            }\n                            else {\n                                nodes = nodes.slice(0);\n                            }\n                        }\n                        return nodes;\n                    };\n                }))\n                    .subscribe(this._nodesUpdates);\n        };\n        /**\n         * Updates the \"id\" and \"parent\" fields of a modified or rearranged list of nodes.\n         * @param containerId The id of the parent container of the list.\n         * @param nodesList The list of nodes to be updated.\n         */\n        AjfFormBuilderService.prototype._updateNodesList = function (containerId, nodesList) {\n            if (!nodesList.length) {\n                return [];\n            }\n            var contId = containerId != undefined ? containerId : 0;\n            for (var idx = 0; idx < nodesList.length; idx++) {\n                var currentNode = nodesList[idx];\n                currentNode.id = (contId * 1000) + idx + 1;\n                currentNode.parent = idx == 0 ? contId : (contId * 1000) + idx;\n                if (currentNode.nodeType == forms$1.AjfNodeType.AjfSlide ||\n                    currentNode.nodeType == forms$1.AjfNodeType.AjfRepeatingSlide) {\n                    var currentSlide = currentNode;\n                    if (currentSlide.nodes) {\n                        this._updateNodesList(currentSlide.id, currentSlide.nodes);\n                    }\n                }\n            }\n            return nodesList;\n        };\n        return AjfFormBuilderService;\n    }());\n    AjfFormBuilderService.decorators = [\n        { type: core.Injectable }\n    ];\n    AjfFormBuilderService.ctorParameters = function () { return []; };\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFbChoicesOriginEditorDialog = /** @class */ (function () {\n        function AjfFbChoicesOriginEditorDialog(_service) {\n            this._service = _service;\n            this._choicesOrigin =\n                this._service.editedChoicesOrigin.pipe(operators.filter(function (c) { return c != null; }), operators.map(function (c) { return c; }));\n        }\n        Object.defineProperty(AjfFbChoicesOriginEditorDialog.prototype, \"choicesOrigin\", {\n            get: function () {\n                return this._choicesOrigin;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        AjfFbChoicesOriginEditorDialog.prototype.saveChoicesOrigin = function () {\n            this._service.saveChoicesOrigin({ label: this.editor.label, name: this.editor.name, choices: this.editor.choicesArr });\n        };\n        AjfFbChoicesOriginEditorDialog.prototype.cancelChoicesOriginEdit = function () {\n            this._service.cancelChoicesOriginEdit();\n        };\n        return AjfFbChoicesOriginEditorDialog;\n    }());\n    AjfFbChoicesOriginEditorDialog.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'ajf-fb-choices-origin-editor-dialog',\n                    template: \"<h3 matDialogTitle translate>Edit choices origin</h3>\\n<mat-dialog-content>\\n  <ajf-fb-choices-origin-editor\\n      *ngIf=\\\"choicesOrigin|async as co\\\"\\n      [choicesOrigin]=\\\"co!\\\"></ajf-fb-choices-origin-editor>\\n</mat-dialog-content>\\n<mat-dialog-actions>\\n  <button mat-button translate (click)=\\\"saveChoicesOrigin()\\\">Save</button>\\n  <button mat-button translate (click)=\\\"cancelChoicesOriginEdit()\\\">Close</button>\\n</mat-dialog-actions>\\n\",\n                    encapsulation: core.ViewEncapsulation.None,\n                    changeDetection: core.ChangeDetectionStrategy.OnPush,\n                    styles: [\"\\n\"]\n                },] }\n    ];\n    AjfFbChoicesOriginEditorDialog.ctorParameters = function () { return [\n        { type: AjfFormBuilderService }\n    ]; };\n    AjfFbChoicesOriginEditorDialog.propDecorators = {\n        editor: [{ type: core.ViewChild, args: [AjfFbChoicesOriginEditor, { static: false },] }]\n    };\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFbConditionEditor = /** @class */ (function () {\n        function AjfFbConditionEditor(_) {\n        }\n        Object.defineProperty(AjfFbConditionEditor.prototype, \"fields\", {\n            get: function () {\n                return this._fields;\n            },\n            set: function (fields) {\n                this._fields = fields;\n                this._updateVariables();\n            },\n            enumerable: false,\n            configurable: true\n        });\n        AjfFbConditionEditor.prototype.insertVariable = function (variable) {\n            if (this.monacoEditor != null && this.monacoEditor.editor != null) {\n                var editor = this.monacoEditor.editor;\n                var value = editor.getValue().split('\\n');\n                var position = editor.getPosition();\n                var ln = position.lineNumber - 1;\n                var line = value[ln];\n                var col = position.column - 1;\n                line = line.substring(0, col) + variable + line.substring(col);\n                value[ln] = line;\n                position.column += variable.length;\n                this.monacoEditor.value = value.join('\\n');\n                editor.setPosition(position);\n                editor.focus();\n                this.editedValue = editor.getValue();\n            }\n        };\n        AjfFbConditionEditor.prototype.onEditorInit = function () {\n            monaco.languages.typescript.javascriptDefaults.setDiagnosticsOptions({ noSemanticValidation: false, noSyntaxValidation: false });\n            monaco.languages.typescript.javascriptDefaults.setCompilerOptions({\n                target: monaco.languages.typescript.ScriptTarget.ES2015,\n                allowNonTsExtensions: true,\n                allowJs: true,\n                module: monaco.languages.typescript.ModuleKind.None\n            });\n            try {\n                monaco.languages.typescript.javascriptDefaults.addExtraLib('', 'condition-editor-variables.d.ts');\n            }\n            catch (e) {\n                monaco.languages.typescript.javascriptDefaults._extraLibs['condition-editor-variables.d.ts'] =\n                    '';\n            }\n            try {\n                monaco.languages.typescript.javascriptDefaults.addExtraLib('', 'condition-editor-functions.d.ts');\n            }\n            catch (e) {\n                monaco.languages.typescript.javascriptDefaults._extraLibs['condition-editor-functions.d.ts'] =\n                    '';\n            }\n            this._updateVariables();\n            this._updateFunctions();\n        };\n        AjfFbConditionEditor.prototype._updateVariables = function () {\n            var _this = this;\n            if (this._fields == null) {\n                return;\n            }\n            try {\n                monaco.languages.typescript.javascriptDefaults._extraLibs['condition-editor-variables.d.ts'] =\n                    this._fields\n                        .map(function (field) {\n                        return \"declare const \" + field.name + \": \" + _this._fieldVarType(field.fieldType) + \";\";\n                    })\n                        .join('\\n');\n            }\n            catch (e) {\n            }\n        };\n        AjfFbConditionEditor.prototype._updateFunctions = function () {\n            try {\n                monaco.languages.typescript.javascriptDefaults._extraLibs['condition-editor-functions.d.ts'] =\n                    models.AjfExpressionUtils.UTIL_FUNCTIONS;\n            }\n            catch (e) {\n            }\n        };\n        AjfFbConditionEditor.prototype._fieldVarType = function (fieldType) {\n            switch (fieldType) {\n                case forms$1.AjfFieldType.Boolean:\n                    return 'boolean';\n                case forms$1.AjfFieldType.Date:\n                case forms$1.AjfFieldType.DateInput:\n                case forms$1.AjfFieldType.Time:\n                    return 'Date';\n                case forms$1.AjfFieldType.Empty:\n                    return 'void';\n                case forms$1.AjfFieldType.Formula:\n                    return 'number';\n                case forms$1.AjfFieldType.MultipleChoice:\n                case forms$1.AjfFieldType.SingleChoice:\n                    return 'any';\n                case forms$1.AjfFieldType.Number:\n                    return 'number';\n                case forms$1.AjfFieldType.Table:\n                    return 'Array';\n                case forms$1.AjfFieldType.String:\n                case forms$1.AjfFieldType.Text:\n                    return 'string';\n            }\n            return null;\n        };\n        return AjfFbConditionEditor;\n    }());\n    AjfFbConditionEditor.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'ajf-condition-editor',\n                    template: \"<div class=\\\"ajf-editor\\\">\\n  <ajf-monaco-editor\\n      (init)=\\\"onEditorInit()\\\"\\n      (valueChange)=\\\"editedValue = $event\\\"\\n      [value]=\\\"condition\\\" language=\\\"javascript\\\"></ajf-monaco-editor>\\n</div>\\n<div class=\\\"ajf-editor-panel\\\">\\n  <ng-container *ngIf=\\\"fields as curFields\\\">\\n    <mat-nav-list dense *ngIf=\\\"curFields!.length > 0\\\">\\n      <a mat-list-item\\n          (click)=\\\"insertVariable(field.name)\\\"\\n          [matTooltip]=\\\"field.label\\\"\\n          *ngFor=\\\"let field of curFields!\\\">\\n        <ajf-node-icon [node]=\\\"field\\\"></ajf-node-icon>\\n        {{ field.name }}\\n      </a>\\n    </mat-nav-list>\\n  </ng-container>\\n</div>\\n\",\n                    changeDetection: core.ChangeDetectionStrategy.OnPush,\n                    encapsulation: core.ViewEncapsulation.None,\n                    styles: [\"ajf-condition-editor{display:flex;flex-direction:row;align-items:stretch;max-height:512px}ajf-condition-editor .ajf-editor{flex:.75 0 auto;display:flex;flex-direction:row;align-items:stretch}ajf-condition-editor .ajf-editor monaco-editor{flex:1 0 auto;min-width:512px;min-height:256px}ajf-condition-editor .ajf-editor-panel{flex:.25 0 auto;overflow-y:auto}ajf-condition-editor ajf-monaco-editor{min-width:400px}\\n\"]\n                },] }\n    ];\n    AjfFbConditionEditor.ctorParameters = function () { return [\n        { type: forms$1.AjfValidationService }\n    ]; };\n    AjfFbConditionEditor.propDecorators = {\n        monacoEditor: [{ type: core.ViewChild, args: [monacoEditor.AjfMonacoEditor, { static: true },] }],\n        fields: [{ type: core.Input }],\n        condition: [{ type: core.Input }]\n    };\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFbConditionEditorDialog = /** @class */ (function () {\n        function AjfFbConditionEditorDialog(service, dialogRef) {\n            this.dialogRef = dialogRef;\n            this._fields = service.flatFields.pipe(operators.map(function (fields) { return fields.sort(function (f1, f2) { return f1.name.localeCompare(f2.name); }); }));\n        }\n        Object.defineProperty(AjfFbConditionEditorDialog.prototype, \"fields\", {\n            get: function () {\n                return this._fields;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        AjfFbConditionEditorDialog.prototype.saveCondition = function () {\n            if (this.editor == null) {\n                return;\n            }\n            var newValue = this.editor.editedValue;\n            this.dialogRef.close(newValue);\n        };\n        return AjfFbConditionEditorDialog;\n    }());\n    AjfFbConditionEditorDialog.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'ajf-condition-editor-dialog',\n                    template: \"<h3 matDialogTitle translate>Edit condition</h3>\\n<mat-dialog-content>\\n  <ajf-condition-editor\\n      *ngIf=\\\"fields|async as curFields\\\"\\n      [fields]=\\\"curFields!\\\"\\n      [condition]=\\\"condition\\\"></ajf-condition-editor>\\n</mat-dialog-content>\\n<mat-dialog-actions>\\n  <button mat-button translate (click)=\\\"saveCondition()\\\">Save</button>\\n  <button mat-button translate matDialogClose>Close</button>\\n</mat-dialog-actions>\\n\",\n                    encapsulation: core.ViewEncapsulation.None,\n                    changeDetection: core.ChangeDetectionStrategy.OnPush,\n                    styles: [\"ajf-condition-editor-dialog mat-dialog-content{overflow:visible}\\n\"]\n                },] }\n    ];\n    AjfFbConditionEditorDialog.ctorParameters = function () { return [\n        { type: AjfFormBuilderService },\n        { type: dialog.MatDialogRef }\n    ]; };\n    AjfFbConditionEditorDialog.propDecorators = {\n        editor: [{ type: core.ViewChild, args: [AjfFbConditionEditor, { static: false },] }]\n    };\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    /**\n     * Triggers when a field or slide node is moved or inserted by drag&dropping in the formbuilder.\n     * @param event The drop event.\n     * @param fbService The AjfFormBuilderService.\n     * @param nodeEntry The current nodeEntry, if present.\n     * @param content True if the current nodeEntry contains other nodeEntries.\n     */\n    function onDropProcess(event, fbService, nodeEntry, content) {\n        if (content === void 0) { content = false; }\n        var itemData = event.item.data;\n        var containerId = event.container.id;\n        if (!itemData.node) {\n            if (nodeEntry == null && containerId === 'slides-list') {\n                fbService.insertNode(itemData, null, 0, content, event.currentIndex);\n                return;\n            }\n            var emptySlot = content ? { parent: nodeEntry.node, parentNode: 0 } :\n                nodeEntry;\n            fbService.insertNode(itemData, emptySlot.parent, emptySlot.parentNode, content, event.currentIndex);\n            return;\n        }\n        var previousIndex = event.previousIndex;\n        var currentIndex = event.currentIndex;\n        fbService.moveNodeEntry(event.item.data, previousIndex, currentIndex);\n    }\n    /**\n     * Disables the drag&drop of Slide items.\n     * @param item The dragged item.\n     */\n    function disableSlideDropPredicate(item) {\n        return !item.data.isSlide;\n    }\n    /**\n     * Disables the drag&drop of Field items.\n     * @param item The dragged item.\n     */\n    function disableFieldDropPredicate(item) {\n        if (!item.data.isSlide) {\n            return false;\n        }\n        return true;\n    }\n\n    var AjfFbStringIdentifierDialogComponent = /** @class */ (function () {\n        function AjfFbStringIdentifierDialogComponent(_service, _cdr) {\n            var _this = this;\n            this._service = _service;\n            this._cdr = _cdr;\n            this.dataSource = new table.MatTableDataSource();\n            this.displayedColumns = ['label', 'value', 'delete'];\n            this.separatorKeysCodes = [keycodes.ENTER, keycodes.COMMA];\n            this._stringIdentifierSub = rxjs.Subscription.EMPTY;\n            this._stringIdentifierSub = _service.stringIdentifier.subscribe(function (identifier) {\n                _this.dataSource.data = __spread(identifier);\n            });\n            this.fields$ = _service.flatFields.pipe(operators.map(function (fields) { return fields.sort(function (f1, f2) { return f1.name.localeCompare(f2.name); })\n                .map(function (f) { return f.name; })\n                .filter(function (f) { return f.length > 0; }); }), operators.shareReplay(1));\n        }\n        AjfFbStringIdentifierDialogComponent.prototype.addRow = function () {\n            this.dataSource.data = __spread(this.dataSource.data, [{ label: '', value: [] }]);\n        };\n        AjfFbStringIdentifierDialogComponent.prototype.deleteRow = function (rowIdx) {\n            this.dataSource.data = __spread(this.dataSource.data.slice(0, rowIdx), this.dataSource.data.slice(rowIdx + 1));\n        };\n        AjfFbStringIdentifierDialogComponent.prototype.addValue = function (row, evt, valueInput) {\n            if (evt.value.length === 0) {\n                return;\n            }\n            row.value = __spread(row.value, [evt.value]);\n            valueInput.value = '';\n            this._cdr.markForCheck();\n        };\n        AjfFbStringIdentifierDialogComponent.prototype.removeValue = function (row, value) {\n            var idx = row.value.indexOf(value);\n            if (idx > -1) {\n                row.value = __spread(row.value.slice(0, idx), row.value.slice(idx + 1));\n                this._cdr.markForCheck();\n            }\n        };\n        AjfFbStringIdentifierDialogComponent.prototype.ngOnDestroy = function () {\n            this._stringIdentifierSub.unsubscribe();\n        };\n        AjfFbStringIdentifierDialogComponent.prototype.saveStringIdentifier = function () {\n            this._service.saveStringIdentifier(this.dataSource.data);\n        };\n        AjfFbStringIdentifierDialogComponent.prototype.selected = function (row, evt) {\n            row.value = __spread(row.value, [evt.option.value]);\n            this._cdr.markForCheck();\n        };\n        return AjfFbStringIdentifierDialogComponent;\n    }());\n    AjfFbStringIdentifierDialogComponent.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'ajf-fb-string-identifier-dialog',\n                    template: \"<h3 matDialogTitle translate>Edit identifier</h3>\\n<mat-dialog-content>\\n  <button (click)=\\\"addRow()\\\" mat-button>\\n    <mat-icon>add</mat-icon>\\n    <span translate>Add value</span>\\n  </button>\\n  <mat-table [dataSource]=\\\"dataSource\\\">\\n    <ng-container matColumnDef=\\\"label\\\">\\n      <mat-header-cell *matHeaderCellDef translate>Label</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row; let idx = index\\\">\\n        <mat-form-field>\\n          <input matInput [placeholder]=\\\"'Label'|translate\\\" autofocus [(ngModel)]=\\\"row.label\\\">\\n        </mat-form-field>\\n      </mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"value\\\">\\n      <mat-header-cell *matHeaderCellDef translate>Value</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row; let idx = index\\\">\\n        <mat-form-field>\\n          <mat-chip-list #chipList>\\n            <mat-chip\\n                *ngFor=\\\"let field of row.value\\\"\\n                (removed)=\\\"removeValue(row, field)\\\"\\n            >\\n              {{ field }}\\n              <mat-icon matChipRemove>cancel</mat-icon>\\n            </mat-chip>\\n          </mat-chip-list>\\n          <input\\n              #valueInput\\n              [ngModel]=\\\"row.value\\\"\\n              [matAutocomplete]=\\\"valueAc\\\"\\n              [matChipInputFor]=\\\"chipList\\\"\\n              [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\n              [matChipInputAddOnBlur]=\\\"true\\\"\\n              (matChipInputTokenEnd)=\\\"addValue(row, $event, valueInput)\\\"\\n              [placeholder]=\\\"'Value'|translate\\\">\\n          <mat-autocomplete #valueAc=\\\"matAutocomplete\\\"\\n              (optionSelected)=\\\"selected(row, $event)\\\">\\n            <mat-option *ngFor=\\\"let field of fields$ | async\\\" [value]=\\\"field\\\">{{field}}</mat-option>\\n          </mat-autocomplete>\\n        </mat-form-field>\\n      </mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"delete\\\">\\n      <mat-header-cell *matHeaderCellDef translate>Delete</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row; let idx = index\\\">\\n          <mat-icon (click)=\\\"deleteRow(idx)\\\">delete</mat-icon>\\n      </mat-cell>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n  </mat-table>\\n</mat-dialog-content>\\n<mat-dialog-actions>\\n  <button mat-button translate matDialogClose (click)=\\\"saveStringIdentifier()\\\">Save</button>\\n</mat-dialog-actions>\\n\",\n                    changeDetection: core.ChangeDetectionStrategy.OnPush,\n                    encapsulation: core.ViewEncapsulation.None,\n                    styles: [\"\\n\"]\n                },] }\n    ];\n    AjfFbStringIdentifierDialogComponent.ctorParameters = function () { return [\n        { type: AjfFormBuilderService },\n        { type: core.ChangeDetectorRef }\n    ]; };\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFormBuilder = /** @class */ (function () {\n        function AjfFormBuilder(_service, _dialog) {\n            var _this = this;\n            this._service = _service;\n            this._dialog = _dialog;\n            this._globalExpanded = false;\n            /**\n             * The list of the ids of all the dropLists connected to the formbuilder source list.\n             */\n            this._connectedDropLists = this._service.connectedDropLists;\n            this._vc = new core.EventEmitter();\n            this._init = false;\n            this._editConditionSub = rxjs.Subscription.EMPTY;\n            this._beforeNodesUpdateSub = rxjs.Subscription.EMPTY;\n            this._editChoicesOriginSub = rxjs.Subscription.EMPTY;\n            this._stringIdentifierSub = rxjs.Subscription.EMPTY;\n            this._nodeTypes = _service.availableNodeTypes;\n            this._nodeEntriesTree = _service.nodeEntriesTree;\n            this._choicesOrigins = _service.choicesOrigins;\n            this._editConditionSub =\n                this._service.editedCondition.subscribe(function (condition) {\n                    if (_this._editConditionDialog != null) {\n                        _this._editConditionDialog.close();\n                        _this._editConditionDialog = null;\n                    }\n                    if (condition != null) {\n                        _this._editConditionDialog =\n                            _this._dialog.open(AjfFbConditionEditorDialog, { disableClose: true });\n                    }\n                });\n            this._editChoicesOriginSub =\n                this._service.editedChoicesOrigin.subscribe(function (choicesOrigin) {\n                    if (_this._editChoicesOriginDialog != null) {\n                        _this._editChoicesOriginDialog.close();\n                        _this._editChoicesOriginDialog = null;\n                    }\n                    if (choicesOrigin != null) {\n                        _this._editChoicesOriginDialog =\n                            _this._dialog.open(AjfFbChoicesOriginEditorDialog, { disableClose: true });\n                    }\n                });\n            this._beforeNodesUpdateSub = this._service.beforeNodesUpdate.subscribe(function () {\n                if (_this.designerCont == null) {\n                    return;\n                }\n                _this._lastScrollTop = _this.designerCont.nativeElement.scrollTop;\n            });\n            this.nodeEntriesTree.pipe(operators.sample(this._vc)).subscribe(function () {\n                if (_this.designerCont == null) {\n                    return;\n                }\n                _this.designerCont.nativeElement.scrollTop = _this._lastScrollTop;\n            });\n            this._stringIdentifierSub = this._service.stringIdentifier.subscribe(function () { });\n        }\n        Object.defineProperty(AjfFormBuilder.prototype, \"form\", {\n            get: function () {\n                return this._form;\n            },\n            set: function (form) {\n                if (this._form !== form) {\n                    this._form = form;\n                    if (this._init) {\n                        this._setCurrentForm();\n                    }\n                }\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilder.prototype, \"nodeTypes\", {\n            get: function () {\n                return this._nodeTypes;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilder.prototype, \"nodeEntriesTree\", {\n            get: function () {\n                return this._nodeEntriesTree;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilder.prototype, \"choicesOrigins\", {\n            get: function () {\n                return this._choicesOrigins;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilder.prototype, \"isGlobalExpanded\", {\n            get: function () {\n                return this._globalExpanded;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilder.prototype, \"connectedDropLists\", {\n            get: function () {\n                return this._connectedDropLists;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        AjfFormBuilder.prototype.ngAfterViewChecked = function () {\n            this._vc.emit();\n        };\n        AjfFormBuilder.prototype.ngAfterContentInit = function () {\n            this._setCurrentForm();\n            this._init = true;\n        };\n        AjfFormBuilder.prototype.ngOnDestroy = function () {\n            this._editConditionSub.unsubscribe();\n            this._beforeNodesUpdateSub.unsubscribe();\n            this._editChoicesOriginSub.unsubscribe();\n            this._stringIdentifierSub.unsubscribe();\n            this._service.setForm(null);\n        };\n        AjfFormBuilder.prototype.createChoicesOrigin = function () {\n            this._service.createChoicesOrigin();\n        };\n        AjfFormBuilder.prototype.disableDrop = function () {\n            return false;\n        };\n        AjfFormBuilder.prototype.disableFieldDrop = function (item) {\n            return disableFieldDropPredicate(item);\n        };\n        /**\n         * Triggers when a field or slide node is moved or inserted by drag&dropping in the formbuilder.\n         * @param event The drop event.\n         * @param content True if the current nodeEntry contains other nodeEntries.\n         */\n        AjfFormBuilder.prototype.onDrop = function (event, content) {\n            if (content === void 0) { content = false; }\n            onDropProcess(event, this._service, null, content);\n        };\n        AjfFormBuilder.prototype.editChoicesOrigin = function (choicesOrigin) {\n            this._service.editChoicesOrigin(choicesOrigin);\n        };\n        AjfFormBuilder.prototype.editStringIdentifier = function () {\n            if (this._stringIdentifierDialog != null) {\n                this._stringIdentifierDialog.close();\n                this._stringIdentifierDialog = null;\n            }\n            this._stringIdentifierDialog = this._dialog.open(AjfFbStringIdentifierDialogComponent, { disableClose: true, width: '60%', height: '60%' });\n        };\n        AjfFormBuilder.prototype.expandAll = function () {\n            this._globalExpanded = true;\n        };\n        AjfFormBuilder.prototype.collapseAll = function () {\n            this._globalExpanded = false;\n        };\n        AjfFormBuilder.prototype.expandToggle = function (evt) {\n            if (evt.checked) {\n                this.expandAll();\n            }\n            else {\n                this.collapseAll();\n            }\n        };\n        AjfFormBuilder.prototype._setCurrentForm = function () {\n            this._service.setForm(this._form);\n        };\n        return AjfFormBuilder;\n    }());\n    AjfFormBuilder.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'ajf-form-builder',\n                    template: \"<mat-toolbar>\\n  <button mat-icon-button (click)=\\\"leftSidenav.toggle()\\\">\\n    <mat-icon>add_box</mat-icon>\\n  </button>\\n  <button mat-button [matMenuTriggerFor]=\\\"choicesMenu\\\" translate>Choices</button>\\n  <button mat-button (click)=\\\"editStringIdentifier()\\\" translate>Identifier</button>\\n  <button mat-icon-button aria-label=\\\"Collapsed\\\" matTooltip=\\\"Keep slides collapsed\\\">\\n    <mat-icon>unfold_less</mat-icon>\\n  </button>\\n  <mat-slide-toggle color=\\\"primary\\\" (change)=\\\"expandToggle($event)\\\"></mat-slide-toggle> \\n  <button mat-icon-button aria-label=\\\"Expanded\\\" matTooltip=\\\"Keep slides expanded\\\">\\n    <mat-icon>unfold_more</mat-icon>\\n  </button>\\n  <mat-menu #choicesMenu>\\n    <button (click)=\\\"createChoicesOrigin()\\\" mat-menu-item translate>New..</button>\\n    <ng-container *ngIf=\\\"choicesOrigins|async as cos\\\">\\n      <button *ngFor=\\\"let choicesOrigin of cos\\\"\\n          (click)=\\\"editChoicesOrigin(choicesOrigin)\\\" mat-menu-item>\\n        {{ choicesOrigin.label || choicesOrigin.name }}\\n      </button>\\n    </ng-container>\\n  </mat-menu>\\n  <span class=\\\"ajf-spacer\\\"></span>\\n  <button mat-icon-button (click)=\\\"rightSidenav.toggle()\\\">\\n    <mat-icon>settings</mat-icon>\\n  </button>\\n</mat-toolbar>\\n<mat-drawer-container cdkDropListGroup>\\n  <mat-drawer #leftSidenav position=\\\"start\\\" mode=\\\"over\\\">\\n    <div #sourceDropList cdkDropList\\n        [cdkDropListConnectedTo]=\\\"(connectedDropLists|async)!\\\"\\n        [cdkDropListEnterPredicate]=\\\"disableDrop\\\"\\n        [cdkDropListData]=\\\"nodeTypes\\\">\\n      <ajf-fb-node-type-entry *ngFor=\\\"let nodeType of nodeTypes\\\"\\n          cdkDrag\\n          [cdkDragData]=\\\"nodeType\\\"\\n          (cdkDragStarted)=\\\"leftSidenav.close()\\\"\\n          [nodeType]=\\\"nodeType\\\"></ajf-fb-node-type-entry>\\n    </div>\\n  </mat-drawer>\\n  <mat-drawer #rightSidenav position=\\\"end\\\" mode=\\\"side\\\" [opened]=\\\"true\\\">\\n    <ajf-fb-node-properties></ajf-fb-node-properties>\\n  </mat-drawer>\\n  <div #designer class=\\\"ajf-designer\\\">\\n    <ajf-fb-node-entry id=\\\"slides-list\\\"\\n        cdkDropList\\n        (cdkDropListDropped)=\\\"onDrop($event)\\\"\\n        [cdkDropListEnterPredicate]=\\\"disableFieldDrop\\\"\\n        *ngFor=\\\"let nodeEntry of (nodeEntriesTree|async); let isFirst = first\\\"\\n        [isExpanded]=\\\"isGlobalExpanded\\\"\\n        [isFirst]=\\\"isFirst\\\"\\n        [nodeEntry]=\\\"nodeEntry\\\"></ajf-fb-node-entry>\\n  </div>\\n</mat-drawer-container>\\n\",\n                    changeDetection: core.ChangeDetectionStrategy.OnPush,\n                    encapsulation: core.ViewEncapsulation.None,\n                    styles: [\"ajf-form-builder{display:flex;position:relative;min-height:300px;flex-direction:column;align-items:stretch}ajf-form-builder mat-toolbar mat-menu div[mat-menu-item]>button[mat-button]{flex:1 0 auto}ajf-form-builder mat-toolbar mat-menu div[mat-menu-item]>button[mat-icon-button]{flex:0 0 auto}ajf-form-builder mat-drawer-container{flex:1}ajf-form-builder mat-drawer-container mat-drawer{max-width:20%}ajf-form-builder mat-drawer-container .ajf-designer{padding:1em}ajf-form-builder mat-toolbar .ajf-spacer{flex:1 1 auto}\\n\"]\n                },] }\n    ];\n    AjfFormBuilder.ctorParameters = function () { return [\n        { type: AjfFormBuilderService },\n        { type: dialog.MatDialog }\n    ]; };\n    AjfFormBuilder.propDecorators = {\n        designerCont: [{ type: core.ViewChild, args: ['designer', { static: true },] }],\n        form: [{ type: core.Input }]\n    };\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var branchColors = [\n        '#F44336',\n        '#4CAF50',\n        '#3F51B5',\n        '#FFC107',\n        '#795548',\n    ];\n    var AjfFbNodeEntry = /** @class */ (function () {\n        function AjfFbNodeEntry(_service) {\n            this._service = _service;\n            this._hasContent = false;\n            this._isFirst = false;\n            this._isNodeEntry = false;\n            this._isExpanded = false;\n            this._level = 0;\n            this._isDraggable = true;\n            this._branchColors = branchColors.slice(0);\n            this._dropZones = ['fbdz-node'];\n            this._slideDropZones = ['fbdz-slide'];\n            this._originOffset = 0;\n            this._originLeftMargin = '0';\n            this._firstBranchColor = branchColors[0];\n            this._branchLinesSubscription = rxjs.Subscription.EMPTY;\n            this._childEntriesSubscription = rxjs.Subscription.EMPTY;\n            this._currentEditedNode = this._service.editedNodeEntry;\n        }\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"hasContent\", {\n            get: function () {\n                return this._hasContent;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"isFirst\", {\n            get: function () {\n                return this._isFirst;\n            },\n            set: function (isFirst) {\n                this._isFirst = isFirst;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"isNodeEntry\", {\n            get: function () {\n                return this._isNodeEntry;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"isExpanded\", {\n            get: function () {\n                return this._isExpanded;\n            },\n            set: function (exp) {\n                var _this = this;\n                this._isExpanded = exp;\n                setTimeout(function () { return _this._updateBranchHeights(); }, 400);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"nodeEntry\", {\n            get: function () {\n                return this._nodeEntry;\n            },\n            set: function (nodeEntry) {\n                this._nodeEntry = nodeEntry;\n                if (nodeEntry != null && nodeEntry.node !== void 0) {\n                    var ne = nodeEntry;\n                    this._isNodeEntry = true;\n                    var node = ne.node;\n                    this._hasContent = node != null && forms$1.isContainerNode(node);\n                }\n                else {\n                    this._isNodeEntry = false;\n                    this._hasContent = false;\n                }\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"level\", {\n            get: function () {\n                return this._level;\n            },\n            set: function (value) {\n                this._level = value;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"isDraggable\", {\n            get: function () {\n                return this._isDraggable;\n            },\n            set: function (draggable) {\n                this._isDraggable = draggable;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"realNodeEntry\", {\n            get: function () {\n                return this._nodeEntry;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"branchColors\", {\n            get: function () {\n                return this._branchColors;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"dropZones\", {\n            get: function () {\n                return this._dropZones;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"slideDropZones\", {\n            get: function () {\n                return this._slideDropZones;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"originOffset\", {\n            get: function () {\n                return this._originOffset;\n            },\n            set: function (originOffset) {\n                this._originOffset = originOffset;\n                this._originLeftMargin = this._originOffset * 4 + \"px\";\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"originLeftMargin\", {\n            get: function () {\n                return this._originLeftMargin;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"firstBranchColor\", {\n            get: function () {\n                return this._firstBranchColor;\n            },\n            set: function (firstBranchColor) {\n                var idx = branchColors.indexOf(firstBranchColor);\n                if (idx > 0) {\n                    this._firstBranchColor = firstBranchColor;\n                    this._branchColors = branchColors.slice(idx).concat(branchColors.slice(0, idx));\n                }\n                else {\n                    this._firstBranchColor = branchColors[0];\n                    this._branchColors = branchColors.slice(0);\n                }\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"currentEditedNode\", {\n            get: function () {\n                return this._currentEditedNode;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        AjfFbNodeEntry.prototype.onResize = function () { };\n        AjfFbNodeEntry.prototype.edit = function (evt) {\n            evt.stopPropagation();\n            if (this.nodeEntry == null || !this.isNodeEntry) {\n                return;\n            }\n            this._service.editNodeEntry(this.nodeEntry);\n        };\n        AjfFbNodeEntry.prototype.delete = function (evt) {\n            evt.stopPropagation();\n            if (this.nodeEntry == null || !this.isNodeEntry) {\n                return;\n            }\n            this._service.deleteNodeEntry(this.nodeEntry);\n        };\n        AjfFbNodeEntry.prototype.isLastNode = function () {\n            if (!this.realNodeEntry || !this.realNodeEntry.children) {\n                return false;\n            }\n            return !this.realNodeEntry.children[0].children;\n        };\n        AjfFbNodeEntry.prototype.isSlide = function (node) {\n            return forms$1.isSlidesNode(node);\n        };\n        AjfFbNodeEntry.prototype.ngAfterViewInit = function () {\n            var _this = this;\n            setTimeout(function () { return _this._updateBranchHeights(); });\n            this._childEntriesSubscription = this.childEntries.changes.subscribe(function () {\n                _this._updateBranchHeights();\n            });\n        };\n        AjfFbNodeEntry.prototype.ngOnDestroy = function () {\n            this._branchLinesSubscription.unsubscribe();\n            this._childEntriesSubscription.unsubscribe();\n        };\n        /**\n         * Triggers when a field or slide node is moved or inserted by drag&dropping in the formbuilder.\n         * @param event The drop event.\n         * @param content True if the current nodeEntry contains other nodeEntries.\n         */\n        AjfFbNodeEntry.prototype.onDrop = function (event, content) {\n            if (content === void 0) { content = false; }\n            onDropProcess(event, this._service, this._nodeEntry, content);\n        };\n        /**\n         * Assigns a progressive id to the dropList, to connect it to the FormBuilder source list.\n         * @param empty True if the list is marked as empty.\n         */\n        AjfFbNodeEntry.prototype.assignId = function (empty) {\n            if (empty === void 0) { empty = false; }\n            return this._service.assignListId(this.realNodeEntry.node, empty);\n        };\n        AjfFbNodeEntry.prototype.disableSlideDrop = function (item) {\n            return disableSlideDropPredicate(item);\n        };\n        AjfFbNodeEntry.prototype.disableFieldDrop = function (item) {\n            return disableFieldDropPredicate(item);\n        };\n        AjfFbNodeEntry.prototype.emptyAreaDropPredicate = function () {\n            var _this = this;\n            return function (item, _drop) {\n                if (_this._level > 0) {\n                    return !item.data.isSlide;\n                }\n                return item.data.isSlide || false;\n            };\n        };\n        AjfFbNodeEntry.prototype._updateBranchHeights = function () {\n            if (this.nodeEntry == null || !this.isNodeEntry || this.branchLines == null ||\n                this.childEntries == null) {\n                return;\n            }\n            var nodeEntry = this.nodeEntry;\n            var branchLines = this.branchLines.toArray();\n            var sliceIdx = nodeEntry.content != null ? nodeEntry.content.length : 0;\n            var childEntries = this.childEntries.toArray().slice(sliceIdx);\n            if (branchLines.length != childEntries.length) {\n                return;\n            }\n            branchLines.forEach(function (bl, idx) {\n                var ce = childEntries[idx];\n                bl.height = ce.nativeElement.offsetTop;\n            });\n        };\n        return AjfFbNodeEntry;\n    }());\n    AjfFbNodeEntry.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'ajf-fb-node-entry',\n                    template: \"<ng-container *ngIf=\\\"nodeEntry != null ; else rootEmpty\\\">\\n  <ng-template [ngIf]=\\\"isNodeEntry && !isLastNode()\\\">\\n    <ajf-fb-branch-line\\n      *ngFor=\\\"let childNodeEntry of realNodeEntry.children; let idx = index\\\"\\n      [offset]=\\\"idx\\\"\\n      [color]=\\\"branchColors[idx]\\\"\\n    ></ajf-fb-branch-line>\\n  </ng-template>\\n\\n  <div\\n    class=\\\"mat-card-container\\\"\\n    [class.ajf-highlight]=\\\"(currentEditedNode|async) == nodeEntry\\\"\\n  >\\n    <div\\n      *ngIf=\\\"!isFirst\\\"\\n      class=\\\"ajf-origin-line\\\"\\n      [style.margin-left]=\\\"originLeftMargin\\\"\\n      [style.border-color]=\\\"firstBranchColor\\\"\\n    ></div>\\n    <ng-template [ngIf]=\\\"isNodeEntry\\\">\\n      <ng-container *ngIf=\\\"!isDraggable; else draggable\\\">\\n        <mat-card>\\n          <ng-container *ngTemplateOutlet=\\\"cardTitle\\\"></ng-container>\\n          <ng-container *ngTemplateOutlet=\\\"cardContent\\\"></ng-container>\\n        </mat-card>\\n      </ng-container>\\n\\n      <ng-template #draggable>\\n        <mat-card cdkDrag [cdkDragData]=\\\"realNodeEntry\\\" class=\\\"ajf-draggable-box\\\">\\n          <ng-container\\n            *ngIf=\\\"isSlide(realNodeEntry.node); else fieldPanel\\\"\\n          >\\n            <ng-container *ngTemplateOutlet=\\\"slidePanel\\\"></ng-container>\\n          </ng-container>\\n        </mat-card>\\n      </ng-template>\\n\\n      <ng-template #slidePanel>\\n        <mat-expansion-panel\\n          [expanded]=\\\"isExpanded\\\"\\n          (opened)=\\\"isExpanded = true\\\"\\n          (closed)=\\\"isExpanded = false\\\"\\n          class=\\\"mat-elevation-z\\\"\\n        >\\n          <mat-expansion-panel-header>\\n            <ng-container *ngTemplateOutlet=\\\"cardTitle\\\"></ng-container>\\n          </mat-expansion-panel-header>\\n          <ng-container *ngTemplateOutlet=\\\"cardContent\\\"></ng-container>\\n        </mat-expansion-panel>\\n      </ng-template>\\n\\n      <ng-template #fieldPanel>\\n        <ng-container *ngTemplateOutlet=\\\"cardTitle\\\"></ng-container>\\n        <ng-container *ngTemplateOutlet=\\\"cardContent\\\"></ng-container>\\n      </ng-template>\\n\\n      <ng-template #cardTitle>\\n        <div class=\\\"ajf-title-row\\\">\\n          <ajf-node-icon [node]=\\\"realNodeEntry.node\\\"></ajf-node-icon>\\n          <span\\n            class=\\\"ajf-title\\\"\\n            [innerHTML]=\\\"(realNodeEntry.node.label || realNodeEntry.node.name)  | translate\\\"\\n          ></span>\\n          <span\\n            *ngIf=\\\"realNodeEntry.node.visibility && realNodeEntry.node.visibility?.condition !== 'true'\\\"\\n            class=\\\"ajf-visibility-condition\\\"\\n            [innerHTML]=\\\"'Condition: (' + realNodeEntry.node.visibility?.condition + ')'\\\"\\n          >\\n          </span>\\n          <span class=\\\"ajf-actions\\\">\\n            <button\\n              [disabled]=\\\"(currentEditedNode|async) == nodeEntry\\\"\\n              (click)=\\\"edit($event)\\\"\\n              mat-icon-button\\n            >\\n              <mat-icon>edit</mat-icon>\\n            </button>\\n            <button\\n              [disabled]=\\\"(currentEditedNode|async) == null\\\"\\n              (click)=\\\"delete($event)\\\"\\n              mat-icon-button\\n            >\\n              <mat-icon>delete</mat-icon>\\n            </button>\\n          </span>\\n        </div>\\n      </ng-template>\\n\\n      <ng-template #cardContent>\\n        <div *ngIf=\\\"hasContent\\\">\\n          <ajf-fb-node-entry\\n            cdkDropList\\n            class=\\\"ajf-fields-list\\\"\\n            *ngFor=\\\"let contentEntry of realNodeEntry.content; let isFirstChild = first; let idx = index\\\"\\n            [id]=\\\"assignId()\\\"\\n            [level]=\\\"level + 1\\\"\\n            [isFirst]=\\\"isFirstChild\\\"\\n            [firstBranchColor]=\\\"branchColors[idx]\\\"\\n            [nodeEntry]=\\\"contentEntry\\\"\\n            [cdkDropListEnterPredicate]=\\\"disableSlideDrop\\\"\\n            (cdkDropListDropped)=\\\"onDrop($event, true)\\\"\\n            [isExpanded]=\\\"isExpanded\\\"\\n          ></ajf-fb-node-entry>\\n          <mat-card\\n            class=\\\"ajf-empty\\\"\\n            *ngIf=\\\"realNodeEntry.content.length === 0\\\"\\n            cdkDropList\\n            [id]=\\\"assignId(true)\\\"\\n            [cdkDropListEnterPredicate]=\\\"disableSlideDrop\\\"\\n            (cdkDropListDropped)=\\\"onDrop($event, true)\\\"\\n            ><mat-card-title>Drop your fields here</mat-card-title></mat-card\\n          >\\n        </div>\\n      </ng-template>\\n    </ng-template>\\n  </div>\\n\\n  <ng-template [ngIf]=\\\"isNodeEntry\\\">\\n    <ng-container\\n      *ngFor=\\\"let childNodeEntry of realNodeEntry.children; let idx = index\\\"\\n    >\\n      <ajf-fb-node-entry\\n        *ngIf=\\\"!isLastNode()\\\"\\n        [level]=\\\"level\\\"\\n        [originOffset]=\\\"idx\\\"\\n        [firstBranchColor]=\\\"branchColors[idx]\\\"\\n        [nodeEntry]=\\\"childNodeEntry\\\"\\n        [isExpanded]=\\\"isExpanded\\\"\\n      ></ajf-fb-node-entry>\\n    </ng-container>\\n  </ng-template>\\n</ng-container>\\n\\n<ng-template #rootEmpty>\\n  <div class=\\\"mat-card-container\\\">\\n    <mat-card\\n      class=\\\"ajf-empty\\\"\\n      cdkDropList\\n      [cdkDropListEnterPredicate]=\\\"emptyAreaDropPredicate()\\\"\\n      (cdkDropListDropped)=\\\"onDrop($event)\\\"\\n      ><mat-card-title>Drop your slides here</mat-card-title>\\n    </mat-card>\\n  </div>\\n</ng-template>\\n\",\n                    host: { '(window.resize)': 'onResize()' },\n                    encapsulation: core.ViewEncapsulation.None,\n                    changeDetection: core.ChangeDetectionStrategy.OnPush,\n                    styles: [\"ajf-fb-node-entry{display:block;position:relative}ajf-fb-node-entry .mat-card-container{position:relative}ajf-fb-node-entry .mat-card-container .ajf-origin-line{position:absolute;top:0;left:25px;width:25px;height:25px;border-bottom:2px solid;border-left:2px solid;border-bottom-left-radius:.5em}ajf-fb-node-entry .mat-card-container mat-card{margin-left:50px;padding:.5em 1em;margin-top:.2em;margin-bottom:.2em;background-color:#fff}ajf-fb-node-entry .mat-card-container mat-card .ajf-title-row{display:flex;flex:1 1 auto;flex-direction:row;align-items:center}ajf-fb-node-entry .mat-card-container mat-card .ajf-title-row>.ajf-title{flex:1 1 auto}ajf-fb-node-entry .mat-card-container mat-card .ajf-title-row>.ajf-visibility-condition{flex:1 1 auto;font-size:10px;color:#999}ajf-fb-node-entry .mat-card-container mat-card .ajf-title-row>.ajf-actions{flex:0 0 auto;white-space:nowrap}ajf-fb-node-entry .mat-card-container mat-card.ajf-empty{line-height:36px;border:2px dashed;box-shadow:none;box-sizing:border-box;text-align:center;color:#ccc}ajf-fb-node-entry .mat-card-container mat-card.ajf-draggable-box{padding:20px 10px;border-bottom:solid 1px #ccc;border-right:solid 1px #ccc;color:rgba(0,0,0,.87);box-sizing:border-box;cursor:move;background:#fff;font-size:14px}ajf-fb-node-entry .mat-card-container.ajf-highlight>mat-card{background-color:#fff9c4}ajf-fb-node-entry.ajf-fields-list{max-width:80%;min-height:60px;display:block;background:#fff;border-radius:4px;overflow:hidden}ajf-fb-node-entry .cdk-drag-placeholder{opacity:0;min-height:60px}ajf-fb-node-entry .ajf-fields-list.cdk-drop-list-dragging .ajf-draggable-box:not(.cdk-drag-placeholder),ajf-fb-node-entry .cdk-drag-animating{transition:transform 250ms cubic-bezier(0, 0, 0.2, 1)}\\n\"]\n                },] }\n    ];\n    AjfFbNodeEntry.ctorParameters = function () { return [\n        { type: AjfFormBuilderService }\n    ]; };\n    AjfFbNodeEntry.propDecorators = {\n        branchLines: [{ type: core.ViewChildren, args: [AjfFbBranchLine,] }],\n        childEntries: [{ type: core.ViewChildren, args: [AjfFbNodeEntry, { read: core.ElementRef },] }],\n        isFirst: [{ type: core.Input }],\n        isExpanded: [{ type: core.Input }],\n        nodeEntry: [{ type: core.Input }],\n        level: [{ type: core.Input }],\n        isDraggable: [{ type: core.Input }],\n        originOffset: [{ type: core.Input }],\n        firstBranchColor: [{ type: core.Input }]\n    };\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFbValidationConditionEditorDialog = /** @class */ (function () {\n        function AjfFbValidationConditionEditorDialog(service, dialogRef) {\n            this.dialogRef = dialogRef;\n            this._fields = service.flatFields.pipe(operators.map(function (fields) { return fields.sort(function (f1, f2) { return f1.name.localeCompare(f2.name); }); }));\n        }\n        Object.defineProperty(AjfFbValidationConditionEditorDialog.prototype, \"fields\", {\n            get: function () {\n                return this._fields;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        AjfFbValidationConditionEditorDialog.prototype.saveCondition = function () {\n            if (this.editor == null) {\n                return;\n            }\n            var newValue = this.editor.editedValue;\n            this.dialogRef.close({ condition: newValue, errorMessage: this.errorMessage });\n        };\n        return AjfFbValidationConditionEditorDialog;\n    }());\n    AjfFbValidationConditionEditorDialog.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'ajf-fb-validation-condition-editor-dialog',\n                    template: \"<h3 matDialogTitle translate>Edit condition</h3>\\n<mat-dialog-content>\\n  <mat-form-field>\\n    <input matInput [(ngModel)]=\\\"errorMessage\\\" [placeholder]=\\\"'Error message' | translate\\\">\\n  </mat-form-field>\\n  <ajf-condition-editor\\n      *ngIf=\\\"fields|async as curFields\\\"\\n      [fields]=\\\"curFields!\\\"\\n      [condition]=\\\"condition\\\"></ajf-condition-editor>\\n</mat-dialog-content>\\n<mat-dialog-actions>\\n  <button mat-button translate (click)=\\\"saveCondition()\\\">Save</button>\\n  <button mat-button translate matDialogClose>Close</button>\\n</mat-dialog-actions>\\n\",\n                    encapsulation: core.ViewEncapsulation.None,\n                    changeDetection: core.ChangeDetectionStrategy.OnPush,\n                    styles: [\"ajf-fb-validation-condition-editor-dialog mat-dialog-content{overflow:visible}\\n\"]\n                },] }\n    ];\n    AjfFbValidationConditionEditorDialog.ctorParameters = function () { return [\n        { type: AjfFormBuilderService },\n        { type: dialog.MatDialogRef }\n    ]; };\n    AjfFbValidationConditionEditorDialog.propDecorators = {\n        editor: [{ type: core.ViewChild, args: [AjfFbConditionEditor, { static: false },] }]\n    };\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFbWarningConditionEditorDialog = /** @class */ (function () {\n        function AjfFbWarningConditionEditorDialog(service, dialogRef) {\n            this.dialogRef = dialogRef;\n            this._fields = service.flatFields.pipe(operators.map(function (fields) { return fields.sort(function (f1, f2) { return f1.name.localeCompare(f2.name); }); }));\n        }\n        Object.defineProperty(AjfFbWarningConditionEditorDialog.prototype, \"fields\", {\n            get: function () {\n                return this._fields;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        AjfFbWarningConditionEditorDialog.prototype.saveCondition = function () {\n            if (this.editor == null) {\n                return;\n            }\n            var newValue = this.editor.editedValue;\n            this.dialogRef.close({ condition: newValue, warningMessage: this.warningMessage });\n        };\n        return AjfFbWarningConditionEditorDialog;\n    }());\n    AjfFbWarningConditionEditorDialog.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'ajf-fb-warning-condition-editor-dialog',\n                    template: \"<h3 matDialogTitle translate>Edit condition</h3>\\n<mat-dialog-content>\\n  <mat-form-field>\\n    <input matInput [(ngModel)]=\\\"warningMessage\\\"\\n      [placeholder]=\\\"'Warning message' | translate\\\">\\n  </mat-form-field>\\n  <ajf-condition-editor\\n      *ngIf=\\\"fields|async as curFields\\\"\\n      [fields]=\\\"curFields!\\\"\\n      [condition]=\\\"condition\\\"></ajf-condition-editor>\\n</mat-dialog-content>\\n<mat-dialog-actions>\\n  <button mat-button translate (click)=\\\"saveCondition()\\\">Save</button>\\n  <button mat-button translate matDialogClose>Close</button>\\n</mat-dialog-actions>\\n\",\n                    encapsulation: core.ViewEncapsulation.None,\n                    changeDetection: core.ChangeDetectionStrategy.OnPush,\n                    styles: [\"ajf-fb-warning-condition-editor-dialog mat-dialog-content{overflow:visible}\\n\"]\n                },] }\n    ];\n    AjfFbWarningConditionEditorDialog.ctorParameters = function () { return [\n        { type: AjfFormBuilderService },\n        { type: dialog.MatDialogRef }\n    ]; };\n    AjfFbWarningConditionEditorDialog.propDecorators = {\n        editor: [{ type: core.ViewChild, args: [AjfFbConditionEditor, { static: false },] }]\n    };\n\n    function checkRepsValidity(c) {\n        var minReps = c.value.minReps;\n        var maxReps = c.value.maxReps;\n        if (minReps != null && maxReps != null && minReps > maxReps) {\n            return { reps: 'Min repetions cannot be greater than max repetitions' };\n        }\n        return null;\n    }\n    function checkValueLimitsValidity(c) {\n        var minValue = c.value.minValue;\n        var maxValue = c.value.maxValue;\n        if (minValue != null && maxValue != null && minValue > maxValue) {\n            return { valueLimit: 'Min value cannot be greater than max value' };\n        }\n        return null;\n    }\n    function checkDigitsValidity(c) {\n        var minDigits = c.value.minDigits;\n        var maxDigits = c.value.maxDigits;\n        if (minDigits != null && maxDigits != null && minDigits > maxDigits) {\n            return { digits: 'Min digits cannot be greater than max digits' };\n        }\n        return null;\n    }\n    var AjfFbNodeProperties = /** @class */ (function () {\n        function AjfFbNodeProperties(_cdr, _service, _dialog, _fb) {\n            var _this = this;\n            this._cdr = _cdr;\n            this._service = _service;\n            this._dialog = _dialog;\n            this._fb = _fb;\n            this._fieldSizes = [\n                { label: 'Normal', value: 'normal' }, { label: 'Small', value: 'small' },\n                { label: 'Smaller', value: 'smaller' }, { label: 'Tiny', value: 'tiny' },\n                { label: 'Mini', value: 'mini' }\n            ];\n            this._choicesOrigins = [];\n            this._conditionalBranches = [];\n            this._validationConditions = [];\n            this._warningConditions = [];\n            this.isRepeatingContainerNode = function (nodeEntry) {\n                return nodeEntry != null && forms$1.isRepeatingContainerNode(nodeEntry.node);\n            };\n            this._visibilityOptSub = rxjs.Subscription.EMPTY;\n            this._visibilitySub = rxjs.Subscription.EMPTY;\n            this._conditionalBranchesSub = rxjs.Subscription.EMPTY;\n            this._formulaRepsSub = rxjs.Subscription.EMPTY;\n            this._choicesFilterSub = rxjs.Subscription.EMPTY;\n            this._formulaSub = rxjs.Subscription.EMPTY;\n            this._forceValueSub = rxjs.Subscription.EMPTY;\n            this._validationConditionsSub = rxjs.Subscription.EMPTY;\n            this._warningConditionsSub = rxjs.Subscription.EMPTY;\n            this._nextSlideConditionSub = rxjs.Subscription.EMPTY;\n            this._choicesOriginsSub = rxjs.Subscription.EMPTY;\n            this._triggerConditionsSub = rxjs.Subscription.EMPTY;\n            this._editConditionDialogSub = rxjs.Subscription.EMPTY;\n            this._editValidationConditionDialogSub = rxjs.Subscription.EMPTY;\n            this._editWarningConditionDialogSub = rxjs.Subscription.EMPTY;\n            this._editVisibilityEvt = new core.EventEmitter();\n            this._editVisibilitySub = rxjs.Subscription.EMPTY;\n            this._editConditionalBranchEvt = new core.EventEmitter();\n            this._editConditionalBranchSub = rxjs.Subscription.EMPTY;\n            this._editFormulaRepsEvt = new core.EventEmitter();\n            this._editFormulaRepsSub = rxjs.Subscription.EMPTY;\n            this._editChoicesFilterEvt = new core.EventEmitter();\n            this._editChoicesFilterSub = rxjs.Subscription.EMPTY;\n            this._editFormulaEvt = new core.EventEmitter();\n            this._editFormulaSub = rxjs.Subscription.EMPTY;\n            this._editForceValueEvt = new core.EventEmitter();\n            this._editForceValueSub = rxjs.Subscription.EMPTY;\n            this._editValidationConditionEvt = new core.EventEmitter();\n            this._editValidationConditionSub = rxjs.Subscription.EMPTY;\n            this._addValidationConditionEvt = new core.EventEmitter();\n            this._addValidationConditionSub = rxjs.Subscription.EMPTY;\n            this._removeValidationConditionEvt = new core.EventEmitter();\n            this._removeValidationConditionSub = rxjs.Subscription.EMPTY;\n            this._editWarningConditionEvt = new core.EventEmitter();\n            this._editWarningConditionSub = rxjs.Subscription.EMPTY;\n            this._addWarningConditionEvt = new core.EventEmitter();\n            this._addWarningConditionSub = rxjs.Subscription.EMPTY;\n            this._removeWarningConditionEvt = new core.EventEmitter();\n            this._removeWarningConditionSub = rxjs.Subscription.EMPTY;\n            this._editNextSlideConditionEvt = new core.EventEmitter();\n            this._editNextSlideConditionSub = rxjs.Subscription.EMPTY;\n            this._editTriggerConditionEvt = new core.EventEmitter();\n            this._editTriggerConditionSub = rxjs.Subscription.EMPTY;\n            this._addTriggerConditionEvt = new core.EventEmitter();\n            this._addTriggerConditionSub = rxjs.Subscription.EMPTY;\n            this._removeTriggerConditionEvt = new core.EventEmitter();\n            this._removeTriggerConditionSub = rxjs.Subscription.EMPTY;\n            this._saveEvt = new core.EventEmitter();\n            this._saveSub = rxjs.Subscription.EMPTY;\n            this._nodeEntry = _service.editedNodeEntry;\n            this._choicesOriginsSub =\n                _service.choicesOrigins.subscribe(function (c) { return _this._choicesOrigins = c || []; });\n            this._enabled = this._nodeEntry.pipe(operators.map(function (n) { return n != null; }));\n            this._initForm();\n            this._initVisibilityEdit();\n            this._initConditionalBranchEdit();\n            this._initFormulaRepsEdit();\n            this._initChoicesFilterEdit();\n            this._initFormulaEdit();\n            this._initForceValueEdit();\n            this._initValidationConditionEdit();\n            this._initAddValidationCondition();\n            this._initRemoveValidationCondition();\n            this._initWarningConditionEdit();\n            this._initAddWarningCondition();\n            this._initRemoveWarningCondition();\n            this._initNextSlideConditionEdit();\n            this._initTriggerConditionEdit();\n            this._initAddTriggerCondition();\n            this._initRemoveTriggerCondition();\n            this._initSave();\n        }\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"fieldSizes\", {\n            get: function () {\n                return this._fieldSizes;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"nodeEntry\", {\n            get: function () {\n                return this._nodeEntry;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"choicesOrigins\", {\n            get: function () {\n                return this._choicesOrigins;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"enabled\", {\n            get: function () {\n                return this._enabled;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"propertiesForm\", {\n            get: function () {\n                return this._propertiesForm;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"hasChoices\", {\n            get: function () {\n                return this._hasChoices;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"curVisibility\", {\n            get: function () {\n                return this._curVisibility;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"curFormulaReps\", {\n            get: function () {\n                return this._curFormulaReps;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"curChoicesFilter\", {\n            get: function () {\n                return this._curChoicesFilter;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"curForceValue\", {\n            get: function () {\n                return this._curForceValue;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"curFormula\", {\n            get: function () {\n                return this._curFormula;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"conditionalBranches\", {\n            get: function () {\n                return this._conditionalBranches;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"validationConditions\", {\n            get: function () {\n                return this._validationConditions;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"warningConditions\", {\n            get: function () {\n                return this._warningConditions;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"nextSlideCondition\", {\n            get: function () {\n                return this._nextSlideCondition;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"triggerConditions\", {\n            get: function () {\n                return this._triggerConditions;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        AjfFbNodeProperties.prototype.editVisibility = function () {\n            this._editVisibilityEvt.emit();\n        };\n        AjfFbNodeProperties.prototype.editConditionalBranch = function (idx) {\n            if (idx < 0 || idx >= this._conditionalBranches.length) {\n                return;\n            }\n            this._editConditionalBranchEvt.emit(idx);\n        };\n        AjfFbNodeProperties.prototype.editFormulaReps = function () {\n            this._editFormulaRepsEvt.emit();\n        };\n        AjfFbNodeProperties.prototype.editChoicesFilter = function () {\n            this._editChoicesFilterEvt.emit();\n        };\n        AjfFbNodeProperties.prototype.editFormula = function () {\n            this._editFormulaEvt.emit();\n        };\n        AjfFbNodeProperties.prototype.editForceValue = function () {\n            this._editForceValueEvt.emit();\n        };\n        AjfFbNodeProperties.prototype.editValidationCondition = function (idx) {\n            if (idx < 0 || idx >= this._validationConditions.length) {\n                return;\n            }\n            this._editValidationConditionEvt.emit(idx);\n        };\n        AjfFbNodeProperties.prototype.addValidationCondition = function () {\n            this._addValidationConditionEvt.emit();\n        };\n        AjfFbNodeProperties.prototype.removeValidationCondition = function (idx) {\n            if (idx < 0 || idx >= this._validationConditions.length) {\n                return;\n            }\n            this._removeValidationConditionEvt.emit(idx);\n        };\n        AjfFbNodeProperties.prototype.editWarningCondition = function (idx) {\n            if (idx < 0 || idx >= this._warningConditions.length) {\n                return;\n            }\n            this._editWarningConditionEvt.emit(idx);\n        };\n        AjfFbNodeProperties.prototype.addWarningCondition = function () {\n            this._addWarningConditionEvt.emit();\n        };\n        AjfFbNodeProperties.prototype.removeWarningCondition = function (idx) {\n            if (idx < 0 || idx >= this._warningConditions.length) {\n                return;\n            }\n            this._removeWarningConditionEvt.emit(idx);\n        };\n        AjfFbNodeProperties.prototype.editNextSlideCondition = function () {\n            this._editNextSlideConditionEvt.emit();\n        };\n        AjfFbNodeProperties.prototype.editTriggerCondition = function (idx) {\n            if (idx < 0 || idx >= this._triggerConditions.length) {\n                return;\n            }\n            this._editTriggerConditionEvt.emit(idx);\n        };\n        AjfFbNodeProperties.prototype.addTriggerCondition = function () {\n            this._addTriggerConditionEvt.emit();\n        };\n        AjfFbNodeProperties.prototype.removeTriggerCondition = function (idx) {\n            if (idx < 0 || idx >= this._triggerConditions.length) {\n                return;\n            }\n            this._removeTriggerConditionEvt.emit(idx);\n        };\n        AjfFbNodeProperties.prototype.isField = function (nodeEntry) {\n            return nodeEntry != null && forms$1.isField(nodeEntry.node);\n        };\n        AjfFbNodeProperties.prototype.isNumericField = function (node) {\n            return forms$1.isField(node) && forms$1.isNumberField(node);\n        };\n        AjfFbNodeProperties.prototype.isFieldWithChoices = function (node) {\n            return forms$1.isField(node) && forms$1.isFieldWithChoices(node);\n        };\n        AjfFbNodeProperties.prototype.save = function () {\n            this._saveEvt.emit();\n        };\n        AjfFbNodeProperties.prototype.cancel = function () {\n            this._service.cancelNodeEntryEdit();\n        };\n        AjfFbNodeProperties.prototype.ngOnDestroy = function () {\n            this._choicesOriginsSub.unsubscribe();\n            this._visibilityOptSub.unsubscribe();\n            this._visibilitySub.unsubscribe();\n            this._formulaRepsSub.unsubscribe();\n            this._choicesFilterSub.unsubscribe();\n            this._formulaSub.unsubscribe();\n            this._forceValueSub.unsubscribe();\n            this._validationConditionsSub.unsubscribe();\n            this._warningConditionsSub.unsubscribe();\n            this._triggerConditionsSub.unsubscribe();\n            this._editConditionDialogSub.unsubscribe();\n            this._editValidationConditionDialogSub.unsubscribe();\n            this._editWarningConditionDialogSub.unsubscribe();\n            this._editChoicesFilterSub.unsubscribe();\n            this._editConditionalBranchSub.unsubscribe();\n            this._editVisibilitySub.unsubscribe();\n            this._editFormulaRepsSub.unsubscribe();\n            this._editFormulaSub.unsubscribe();\n            this._editForceValueSub.unsubscribe();\n            this._editValidationConditionSub.unsubscribe();\n            this._editWarningConditionSub.unsubscribe();\n            this._nextSlideConditionSub.unsubscribe();\n            this._addTriggerConditionSub.unsubscribe();\n            this._addValidationConditionSub.unsubscribe();\n            this._addWarningConditionSub.unsubscribe();\n            this._editNextSlideConditionSub.unsubscribe();\n            this._editTriggerConditionSub.unsubscribe();\n            this._removeTriggerConditionSub.unsubscribe();\n            this._removeValidationConditionSub.unsubscribe();\n            this._removeWarningConditionSub.unsubscribe();\n            this._saveSub.unsubscribe();\n        };\n        AjfFbNodeProperties.prototype._initSave = function () {\n            var _this = this;\n            this._saveSub = this._saveEvt\n                .pipe(operators.withLatestFrom(this.propertiesForm))\n                .subscribe(function (_a) {\n                var _b = __read(_a, 2), _ = _b[0], formGroup = _b[1];\n                var fg = formGroup;\n                var val = Object.assign(Object.assign({}, fg.value), { conditionalBranches: _this._conditionalBranches });\n                _this._service.saveNodeEntry(val);\n            });\n        };\n        AjfFbNodeProperties.prototype._initForm = function () {\n            var _this = this;\n            this._propertiesForm = this._nodeEntry.pipe(operators.filter(function (n) { return n != null; }), operators.map(function (n) {\n                if (_this._visibilityOptSub != null) {\n                    _this._visibilityOptSub.unsubscribe();\n                }\n                if (_this._visibilitySub != null) {\n                    _this._visibilitySub.unsubscribe();\n                }\n                if (_this._conditionalBranchesSub != null) {\n                    _this._conditionalBranchesSub.unsubscribe();\n                }\n                n = n;\n                var visibility = n.node.visibility != null ? n.node.visibility.condition : null;\n                var visibilityOpt = n.node.visibility != null ? _this._guessVisibilityOpt(n.node.visibility) : null;\n                var controls = {\n                    name: [n.node.name, forms.Validators.required],\n                    label: n.node.label,\n                    visibilityOpt: [visibilityOpt, forms.Validators.required],\n                    visibility: [visibility, forms.Validators.required],\n                    conditionalBranchesNum: n.node.conditionalBranches.length\n                };\n                var validators = [];\n                if (forms$1.isRepeatingContainerNode(n.node)) {\n                    var rn = n.node;\n                    var formulaReps = rn.formulaReps != null ? rn.formulaReps.formula : null;\n                    controls.formulaReps = [formulaReps, forms.Validators.required];\n                    controls.minReps = rn.minReps;\n                    controls.maxReps = rn.maxReps;\n                    _this._curFormulaReps = formulaReps;\n                    validators.push(checkRepsValidity);\n                }\n                if (_this.isField(n)) {\n                    var field = n.node;\n                    var forceValue = null;\n                    var notEmpty = false;\n                    var validationConditions = [];\n                    if (field.validation != null) {\n                        if (field.validation.forceValue != null) {\n                            forceValue = field.validation.forceValue.condition;\n                        }\n                        notEmpty = field.validation.notEmpty != null;\n                        validationConditions = (field.validation.conditions || []).map(function (c) {\n                            return { condition: c.condition, errorMessage: c.errorMessage };\n                        });\n                    }\n                    var notEmptyW = false;\n                    var warningConditions = [];\n                    if (field.warning != null) {\n                        notEmptyW = field.warning.notEmpty != null;\n                        warningConditions = (field.warning.conditions || []).map(function (w) {\n                            return { condition: w.condition, warningMessage: w.warningMessage };\n                        });\n                    }\n                    var formula = field.formula != null ? field.formula.formula : null;\n                    controls.description = field.description;\n                    controls.defaultValue = field.defaultValue;\n                    controls.hint = field.hint;\n                    controls.size = field.size;\n                    controls.formula = formula;\n                    controls.forceValue = forceValue;\n                    controls.notEmpty = notEmpty;\n                    controls.validationConditions = [validationConditions, []];\n                    controls.notEmptyWarning = notEmptyW;\n                    controls.warningConditions = [warningConditions, []];\n                    controls.nextSlideCondition = [field.nextSlideCondition];\n                    _this._curForceValue = forceValue;\n                    _this._curFormula = formula;\n                    _this._validationConditions = validationConditions;\n                    _this._warningConditions = warningConditions;\n                }\n                if (_this.isNumericField(n.node)) {\n                    var numField = n.node;\n                    var minValue = void 0;\n                    var maxValue = void 0;\n                    var minDigits = void 0;\n                    var maxDigits = void 0;\n                    if (numField.validation != null) {\n                        if (numField.validation.minValue != null) {\n                            minValue = (numField.validation.minValue.condition || '').replace('$value >= ', '');\n                        }\n                        if (numField.validation.maxValue != null) {\n                            maxValue = (numField.validation.maxValue.condition || '').replace('$value <= ', '');\n                        }\n                        if (numField.validation.minDigits != null) {\n                            minDigits = (numField.validation.minDigits.condition ||\n                                '').replace('$value.toString().length >= ', '');\n                        }\n                        if (numField.validation.maxDigits != null) {\n                            maxDigits = (numField.validation.maxDigits.condition ||\n                                '').replace('$value.toString().length <= ', '');\n                        }\n                    }\n                    controls.minValue = minValue;\n                    controls.maxValue = maxValue;\n                    controls.minDigits = minDigits;\n                    controls.maxDigits = maxDigits;\n                    validators.push(checkValueLimitsValidity);\n                    validators.push(checkDigitsValidity);\n                }\n                if (_this.isFieldWithChoices(n.node)) {\n                    var fieldWithChoices = n.node;\n                    var triggerConditions = (fieldWithChoices.triggerConditions || []).map(function (c) { return c.condition; });\n                    controls.choicesOriginRef = fieldWithChoices.choicesOriginRef;\n                    controls.choicesFilter = fieldWithChoices.choicesFilter != null ?\n                        fieldWithChoices.choicesFilter.formula :\n                        null;\n                    controls.forceExpanded = fieldWithChoices.forceExpanded;\n                    controls.forceNarrow = fieldWithChoices.forceNarrow;\n                    controls.triggerConditions = triggerConditions;\n                    _this._triggerConditions = triggerConditions;\n                }\n                var fg = _this._fb.group(controls);\n                fg.setValidators(validators);\n                _this._conditionalBranches = n.node.conditionalBranches.map(function (c) { return c.condition; });\n                _this._curVisibility = n.node.visibility != null ? n.node.visibility.condition : null;\n                _this._handleConditionalBranchesChange(fg);\n                _this._handleVisibilityChange(fg);\n                _this._handleFormulaRepsChange(fg);\n                _this._handleChoicesFilterChange(fg);\n                _this._handleFormulaChange(fg);\n                _this._handleForceValueChange(fg);\n                _this._handleValidationCondtionsChange(fg);\n                _this._handleWarningCondtionsChange(fg);\n                _this._handleNextSlideConditionChange(fg);\n                _this._handleTriggerCondtionsChange(fg);\n                return fg;\n            }), operators.publishReplay(1), operators.refCount());\n        };\n        AjfFbNodeProperties.prototype._destroyConditionDialog = function () {\n            if (this._editConditionDialogSub != null) {\n                this._editConditionDialogSub.unsubscribe();\n                this._editConditionDialogSub = rxjs.Subscription.EMPTY;\n            }\n            if (this._editConditionDialog != null) {\n                this._editConditionDialog.close();\n                this._editConditionDialog = null;\n            }\n        };\n        AjfFbNodeProperties.prototype._destroyValidationConditionDialog = function () {\n            if (this._editValidationConditionDialogSub != null) {\n                this._editValidationConditionDialogSub.unsubscribe();\n                this._editValidationConditionDialogSub = rxjs.Subscription.EMPTY;\n            }\n            if (this._editValidationConditionDialog != null) {\n                this._editValidationConditionDialog.close();\n                this._editValidationConditionDialog = null;\n            }\n        };\n        AjfFbNodeProperties.prototype._destroyWarningConditionDialog = function () {\n            if (this._editWarningConditionDialogSub != null) {\n                this._editWarningConditionDialogSub.unsubscribe();\n                this._editWarningConditionDialogSub = rxjs.Subscription.EMPTY;\n            }\n            if (this._editWarningConditionDialog != null) {\n                this._editWarningConditionDialog.close();\n                this._editWarningConditionDialog = null;\n            }\n        };\n        AjfFbNodeProperties.prototype._initRemoveTriggerCondition = function () {\n            this._removeTriggerConditionSub = this._removeTriggerConditionEvt\n                .pipe(operators.withLatestFrom(this._propertiesForm))\n                .subscribe(function (_a) {\n                var _b = __read(_a, 2), vcIdx = _b[0], formGroup = _b[1];\n                if (formGroup == null) {\n                    return;\n                }\n                var fg = formGroup;\n                var ctrl = fg.controls['triggerConditions'];\n                var vcs = (ctrl.value || []).slice(0);\n                if (vcIdx < 0 || vcIdx >= vcs.length) {\n                    return;\n                }\n                vcs.splice(vcIdx, 1);\n                ctrl.setValue(vcs);\n            });\n        };\n        AjfFbNodeProperties.prototype._initAddTriggerCondition = function () {\n            this._addTriggerConditionSub = this._addTriggerConditionEvt\n                .pipe(operators.withLatestFrom(this._propertiesForm))\n                .subscribe(function (_a) {\n                var _b = __read(_a, 2), _ = _b[0], formGroup = _b[1];\n                if (formGroup == null) {\n                    return;\n                }\n                var fg = formGroup;\n                var ctrl = fg.controls['triggerConditions'];\n                var vcs = (ctrl.value || []).slice(0);\n                vcs.push('');\n                ctrl.setValue(vcs);\n            });\n        };\n        AjfFbNodeProperties.prototype._initTriggerConditionEdit = function () {\n            var _this = this;\n            this._editConditionDialogSub = rxjs.Subscription.EMPTY;\n            this._cdr.markForCheck();\n            this._editTriggerConditionSub =\n                this._editTriggerConditionEvt\n                    .pipe(operators.withLatestFrom(this._propertiesForm))\n                    .subscribe(function (_a) {\n                    var _b = __read(_a, 2), vcIdx = _b[0], fg = _b[1];\n                    _this._destroyConditionDialog();\n                    if (vcIdx < 0 || vcIdx >= _this._triggerConditions.length || fg == null) {\n                        return;\n                    }\n                    _this._editConditionDialog = _this._dialog.open(AjfFbConditionEditorDialog);\n                    var cmp = _this._editConditionDialog.componentInstance;\n                    cmp.condition = _this._triggerConditions[vcIdx];\n                    _this._editConditionDialogSub =\n                        _this._editConditionDialog.afterClosed().subscribe(function (cond) {\n                            if (cond !== void 0) {\n                                _this._triggerConditions[vcIdx] = cond;\n                            }\n                            _this._editConditionDialogSub.unsubscribe();\n                            _this._editConditionDialogSub = rxjs.Subscription.EMPTY;\n                            _this._cdr.markForCheck();\n                        });\n                });\n        };\n        AjfFbNodeProperties.prototype._initRemoveWarningCondition = function () {\n            this._removeWarningConditionSub = this._removeWarningConditionEvt\n                .pipe(operators.withLatestFrom(this._propertiesForm))\n                .subscribe(function (_a) {\n                var _b = __read(_a, 2), vcIdx = _b[0], formGroup = _b[1];\n                if (formGroup == null) {\n                    return;\n                }\n                var fg = formGroup;\n                var ctrl = fg.controls['warningConditions'];\n                var vcs = (ctrl.value || []).slice(0);\n                if (vcIdx < 0 || vcIdx >= vcs.length) {\n                    return;\n                }\n                vcs.splice(vcIdx, 1);\n                ctrl.setValue(vcs);\n            });\n        };\n        AjfFbNodeProperties.prototype._initAddWarningCondition = function () {\n            this._addWarningConditionSub = this._addWarningConditionEvt\n                .pipe(operators.withLatestFrom(this._propertiesForm))\n                .subscribe(function (_a) {\n                var _b = __read(_a, 2), _ = _b[0], formGroup = _b[1];\n                if (formGroup == null) {\n                    return;\n                }\n                var fg = formGroup;\n                var ctrl = fg.controls['warningConditions'];\n                var vcs = (ctrl.value || []).slice(0);\n                vcs.push({ condition: '', errorMessage: '' });\n                ctrl.setValue(vcs);\n            });\n        };\n        AjfFbNodeProperties.prototype._initWarningConditionEdit = function () {\n            var _this = this;\n            this._editWarningConditionSub =\n                this._editWarningConditionEvt\n                    .pipe(operators.withLatestFrom(this._propertiesForm))\n                    .subscribe(function (_a) {\n                    var _b = __read(_a, 2), vcIdx = _b[0], fg = _b[1];\n                    _this._destroyWarningConditionDialog();\n                    if (vcIdx < 0 || vcIdx >= _this._warningConditions.length || fg == null) {\n                        return;\n                    }\n                    _this._editWarningConditionDialog =\n                        _this._dialog.open(AjfFbWarningConditionEditorDialog);\n                    var cmp = _this._editWarningConditionDialog.componentInstance;\n                    var w = _this._warningConditions[vcIdx];\n                    cmp.condition = w.condition;\n                    cmp.warningMessage = w.warningMessage;\n                    _this._editWarningConditionDialogSub =\n                        _this._editWarningConditionDialog.afterClosed().subscribe(function (cond) {\n                            if (cond !== void 0) {\n                                _this._warningConditions[vcIdx] = cond;\n                            }\n                            _this._editWarningConditionDialogSub.unsubscribe();\n                            _this._editWarningConditionDialogSub = rxjs.Subscription.EMPTY;\n                            _this._cdr.markForCheck();\n                        });\n                });\n        };\n        AjfFbNodeProperties.prototype._initRemoveValidationCondition = function () {\n            this._removeValidationConditionSub = this._removeValidationConditionEvt\n                .pipe(operators.withLatestFrom(this._propertiesForm))\n                .subscribe(function (_a) {\n                var _b = __read(_a, 2), vcIdx = _b[0], formGroup = _b[1];\n                if (formGroup == null) {\n                    return;\n                }\n                var fg = formGroup;\n                var ctrl = fg.controls['validationConditions'];\n                var vcs = (ctrl.value || []).slice(0);\n                if (vcIdx < 0 || vcIdx >= vcs.length) {\n                    return;\n                }\n                vcs.splice(vcIdx, 1);\n                ctrl.setValue(vcs);\n            });\n        };\n        AjfFbNodeProperties.prototype._initAddValidationCondition = function () {\n            this._addValidationConditionSub = this._addValidationConditionEvt\n                .pipe(operators.withLatestFrom(this._propertiesForm))\n                .subscribe(function (_a) {\n                var _b = __read(_a, 2), _ = _b[0], formGroup = _b[1];\n                if (formGroup == null) {\n                    return;\n                }\n                var fg = formGroup;\n                var ctrl = fg.controls['validationConditions'];\n                var vcs = (ctrl.value || []).slice(0);\n                vcs.push({ condition: '', errorMessage: '' });\n                ctrl.setValue(vcs);\n            });\n        };\n        AjfFbNodeProperties.prototype._initValidationConditionEdit = function () {\n            var _this = this;\n            this._editValidationConditionSub =\n                this._editValidationConditionEvt\n                    .pipe(operators.withLatestFrom(this._propertiesForm))\n                    .subscribe(function (_a) {\n                    var _b = __read(_a, 2), vcIdx = _b[0], fg = _b[1];\n                    _this._destroyValidationConditionDialog();\n                    if (vcIdx < 0 || vcIdx >= _this._validationConditions.length || fg == null) {\n                        return;\n                    }\n                    _this._editValidationConditionDialog =\n                        _this._dialog.open(AjfFbValidationConditionEditorDialog);\n                    var cmp = _this._editValidationConditionDialog.componentInstance;\n                    var v = _this._validationConditions[vcIdx];\n                    cmp.condition = v.condition;\n                    cmp.errorMessage = v.errorMessage;\n                    _this._editValidationConditionDialogSub =\n                        _this._editValidationConditionDialog.afterClosed().subscribe(function (cond) {\n                            if (cond !== void 0) {\n                                _this._validationConditions[vcIdx] = cond;\n                            }\n                            _this._editValidationConditionDialogSub.unsubscribe();\n                            _this._editValidationConditionDialogSub = rxjs.Subscription.EMPTY;\n                            _this._cdr.markForCheck();\n                        });\n                });\n        };\n        AjfFbNodeProperties.prototype._initForceValueEdit = function () {\n            var _this = this;\n            this._editForceValueSub =\n                this._editForceValueEvt\n                    .pipe(operators.withLatestFrom(this._propertiesForm))\n                    .subscribe(function (_a) {\n                    var _b = __read(_a, 2), _ = _b[0], formGroup = _b[1];\n                    _this._destroyConditionDialog();\n                    if (formGroup == null) {\n                        return;\n                    }\n                    var fg = formGroup;\n                    var ctrl = fg.controls['forceValue'];\n                    _this._editConditionDialog = _this._dialog.open(AjfFbConditionEditorDialog);\n                    _this._editConditionDialog.componentInstance.condition = ctrl.value;\n                    _this._editConditionDialogSub =\n                        _this._editConditionDialog.afterClosed().subscribe(function (cond) {\n                            if (cond !== void 0) {\n                                ctrl.setValue(cond);\n                            }\n                            _this._editConditionDialogSub.unsubscribe();\n                            _this._editConditionDialogSub = rxjs.Subscription.EMPTY;\n                            _this._cdr.markForCheck();\n                        });\n                });\n        };\n        AjfFbNodeProperties.prototype._initNextSlideConditionEdit = function () {\n            var _this = this;\n            this._editNextSlideConditionSub =\n                this._editNextSlideConditionEvt\n                    .pipe(operators.withLatestFrom(this._propertiesForm))\n                    .subscribe(function (_a) {\n                    var _b = __read(_a, 2), _ = _b[0], formGroup = _b[1];\n                    _this._destroyConditionDialog();\n                    if (formGroup == null) {\n                        return;\n                    }\n                    var fg = formGroup;\n                    var ctrl = fg.controls['nextSlideCondition'];\n                    _this._editConditionDialog = _this._dialog.open(AjfFbConditionEditorDialog);\n                    _this._editConditionDialog.componentInstance.condition = ctrl.value;\n                    _this._editConditionDialogSub =\n                        _this._editConditionDialog.afterClosed().subscribe(function (cond) {\n                            if (cond !== void 0) {\n                                ctrl.setValue(cond);\n                            }\n                            _this._editConditionDialogSub.unsubscribe();\n                            _this._editConditionDialogSub = rxjs.Subscription.EMPTY;\n                            _this._cdr.markForCheck();\n                        });\n                });\n        };\n        AjfFbNodeProperties.prototype._initFormulaEdit = function () {\n            var _this = this;\n            this._editConditionDialogSub = rxjs.Subscription.EMPTY;\n            this._cdr.markForCheck();\n            this._editFormulaSub =\n                this._editFormulaEvt\n                    .pipe(operators.withLatestFrom(this._propertiesForm))\n                    .subscribe(function (_a) {\n                    var _b = __read(_a, 2), _ = _b[0], formGroup = _b[1];\n                    _this._destroyConditionDialog();\n                    if (formGroup == null) {\n                        return;\n                    }\n                    var fg = formGroup;\n                    var ctrl = fg.controls['formula'];\n                    _this._editConditionDialog = _this._dialog.open(AjfFbConditionEditorDialog);\n                    _this._editConditionDialog.componentInstance.condition = ctrl.value;\n                    _this._editConditionDialogSub =\n                        _this._editConditionDialog.afterClosed().subscribe(function (cond) {\n                            if (cond !== void 0) {\n                                ctrl.setValue(cond);\n                            }\n                            _this._editConditionDialogSub.unsubscribe();\n                            _this._editConditionDialogSub = rxjs.Subscription.EMPTY;\n                            _this._cdr.markForCheck();\n                        });\n                });\n        };\n        AjfFbNodeProperties.prototype._initFormulaRepsEdit = function () {\n            var _this = this;\n            this._editFormulaRepsSub =\n                this._editFormulaRepsEvt\n                    .pipe(operators.withLatestFrom(this._propertiesForm))\n                    .subscribe(function (_a) {\n                    var _b = __read(_a, 2), _ = _b[0], formGroup = _b[1];\n                    _this._destroyConditionDialog();\n                    if (formGroup == null) {\n                        return;\n                    }\n                    var fg = formGroup;\n                    var ctrl = fg.controls['formulaReps'];\n                    _this._editConditionDialog = _this._dialog.open(AjfFbConditionEditorDialog);\n                    _this._editConditionDialog.componentInstance.condition = ctrl.value;\n                    _this._editConditionDialogSub =\n                        _this._editConditionDialog.afterClosed().subscribe(function (cond) {\n                            if (cond !== void 0) {\n                                ctrl.setValue(cond);\n                            }\n                            _this._editConditionDialogSub.unsubscribe();\n                            _this._editConditionDialogSub = rxjs.Subscription.EMPTY;\n                            _this._cdr.markForCheck();\n                        });\n                });\n        };\n        AjfFbNodeProperties.prototype._initChoicesFilterEdit = function () {\n            var _this = this;\n            this._editChoicesFilterSub =\n                this._editChoicesFilterEvt\n                    .pipe(operators.withLatestFrom(this._propertiesForm))\n                    .subscribe(function (_a) {\n                    var _b = __read(_a, 2), _ = _b[0], formGroup = _b[1];\n                    _this._destroyConditionDialog();\n                    if (formGroup == null) {\n                        return;\n                    }\n                    var fg = formGroup;\n                    var ctrl = fg.controls['choicesFilter'];\n                    _this._editConditionDialog = _this._dialog.open(AjfFbConditionEditorDialog);\n                    _this._editConditionDialog.componentInstance.condition = ctrl.value;\n                    _this._editConditionDialogSub =\n                        _this._editConditionDialog.afterClosed().subscribe(function (cond) {\n                            if (cond !== void 0) {\n                                ctrl.setValue(cond);\n                            }\n                            _this._editConditionDialogSub.unsubscribe();\n                            _this._editConditionDialogSub = rxjs.Subscription.EMPTY;\n                            _this._cdr.markForCheck();\n                        });\n                });\n        };\n        AjfFbNodeProperties.prototype._initConditionalBranchEdit = function () {\n            var _this = this;\n            this._editConditionalBranchSub =\n                this._editConditionalBranchEvt\n                    .pipe(operators.withLatestFrom(this._propertiesForm))\n                    .subscribe(function (_a) {\n                    var _b = __read(_a, 2), cbIdx = _b[0], fg = _b[1];\n                    _this._destroyConditionDialog();\n                    if (cbIdx < 0 || cbIdx >= _this._conditionalBranches.length || fg == null) {\n                        return;\n                    }\n                    _this._editConditionDialog = _this._dialog.open(AjfFbConditionEditorDialog);\n                    _this._editConditionDialog.componentInstance.condition =\n                        _this._conditionalBranches[cbIdx];\n                    _this._editConditionDialogSub =\n                        _this._editConditionDialog.afterClosed().subscribe(function (cond) {\n                            if (cond !== void 0) {\n                                _this._conditionalBranches[cbIdx] = cond;\n                            }\n                            _this._editConditionDialogSub.unsubscribe();\n                            _this._editConditionDialogSub = rxjs.Subscription.EMPTY;\n                            _this._cdr.markForCheck();\n                        });\n                });\n        };\n        AjfFbNodeProperties.prototype._initVisibilityEdit = function () {\n            var _this = this;\n            this._editVisibilitySub =\n                this._editVisibilityEvt\n                    .pipe(operators.withLatestFrom(this._propertiesForm))\n                    .subscribe(function (_a) {\n                    var _b = __read(_a, 2), _ = _b[0], formGroup = _b[1];\n                    _this._destroyConditionDialog();\n                    if (formGroup == null) {\n                        return;\n                    }\n                    var fg = formGroup;\n                    var ctrl = fg.controls['visibility'];\n                    var condition = ctrl.value;\n                    _this._editConditionDialog = _this._dialog.open(AjfFbConditionEditorDialog);\n                    _this._editConditionDialog.componentInstance.condition = condition;\n                    _this._editConditionDialogSub =\n                        _this._editConditionDialog.afterClosed().subscribe(function (cond) {\n                            if (cond !== void 0) {\n                                ctrl.setValue(cond);\n                            }\n                            _this._editConditionDialogSub.unsubscribe();\n                            _this._editConditionDialogSub = rxjs.Subscription.EMPTY;\n                            _this._cdr.markForCheck();\n                        });\n                });\n        };\n        AjfFbNodeProperties.prototype._handleTriggerCondtionsChange = function (fg) {\n            var _this = this;\n            this._triggerConditionsSub = fg.valueChanges\n                .pipe(operators.distinctUntilChanged(function (v1, v2) { return JSON.stringify(v1.triggerConditions) ===\n                JSON.stringify(v2.triggerConditions); }))\n                .subscribe(function (v) {\n                _this._triggerConditions = v.triggerConditions;\n                _this._cdr.markForCheck();\n            });\n        };\n        AjfFbNodeProperties.prototype._handleWarningCondtionsChange = function (fg) {\n            var _this = this;\n            this._warningConditionsSub = fg.valueChanges\n                .pipe(operators.distinctUntilChanged(function (v1, v2) { return JSON.stringify(v1.warningConditions) ===\n                JSON.stringify(v2.warningConditions); }))\n                .subscribe(function (v) {\n                _this._warningConditions = v.warningConditions;\n                _this._cdr.markForCheck();\n            });\n        };\n        AjfFbNodeProperties.prototype._handleValidationCondtionsChange = function (fg) {\n            var _this = this;\n            this._validationConditionsSub =\n                fg.valueChanges\n                    .pipe(operators.distinctUntilChanged(function (v1, v2) { return JSON.stringify(v1.validationConditions) ===\n                    JSON.stringify(v2.validationConditions); }))\n                    .subscribe(function (v) {\n                    _this._validationConditions = v.validationConditions;\n                    _this._cdr.markForCheck();\n                });\n        };\n        AjfFbNodeProperties.prototype._handleForceValueChange = function (fg) {\n            var _this = this;\n            this._forceValueSub =\n                fg.valueChanges.pipe(operators.distinctUntilChanged(function (v1, v2) { return v1.forceValue === v2.forceValue; }))\n                    .subscribe(function (v) {\n                    _this._curForceValue = v.forceValue;\n                    _this._cdr.markForCheck();\n                });\n        };\n        AjfFbNodeProperties.prototype._handleNextSlideConditionChange = function (fg) {\n            var _this = this;\n            this._formulaSub =\n                fg.valueChanges\n                    .pipe(operators.distinctUntilChanged(function (v1, v2) { return v1.nextSlideCondition === v2.nextSlideCondition; }))\n                    .subscribe(function (v) {\n                    _this._nextSlideCondition = v.nextSlideCondition;\n                    _this._cdr.markForCheck();\n                });\n            this._formulaSub =\n                fg.valueChanges\n                    .pipe(operators.distinctUntilChanged(function (v1, v2) { return v1.nextSlideCondition === v2.nextSlideCondition; }))\n                    .subscribe(function (v) {\n                    _this._nextSlideCondition = v.nextSlideCondition;\n                    _this._cdr.markForCheck();\n                });\n        };\n        AjfFbNodeProperties.prototype._handleFormulaChange = function (fg) {\n            var _this = this;\n            this._formulaSub =\n                fg.valueChanges.pipe(operators.distinctUntilChanged(function (v1, v2) { return v1.formula === v2.formula; }))\n                    .subscribe(function (v) {\n                    _this._curFormula = v.formula;\n                    _this._cdr.markForCheck();\n                });\n        };\n        AjfFbNodeProperties.prototype._handleFormulaRepsChange = function (fg) {\n            var _this = this;\n            this._formulaRepsSub =\n                fg.valueChanges.pipe(operators.distinctUntilChanged(function (v1, v2) { return v1.formulaReps === v2.formulaReps; }))\n                    .subscribe(function (v) {\n                    _this._curFormulaReps = v.formulaReps;\n                    _this._cdr.markForCheck();\n                });\n        };\n        AjfFbNodeProperties.prototype._handleChoicesFilterChange = function (fg) {\n            var _this = this;\n            this._choicesFilterSub =\n                fg.valueChanges\n                    .pipe(operators.distinctUntilChanged(function (v1, v2) { return v1.choicesFilter === v2.choicesFilter; }))\n                    .subscribe(function (v) {\n                    _this._curChoicesFilter = v.choicesFilter;\n                    _this._cdr.markForCheck();\n                });\n        };\n        AjfFbNodeProperties.prototype._handleConditionalBranchesChange = function (fg) {\n            var _this = this;\n            this._conditionalBranchesSub =\n                fg.valueChanges\n                    .pipe(operators.distinctUntilChanged(function (v1, v2) { return v1.conditionalBranchesNum === v2.conditionalBranchesNum; }))\n                    .subscribe(function (v) {\n                    var cbNum = v.conditionalBranchesNum;\n                    var curCbNum = _this._conditionalBranches.length;\n                    if (curCbNum < cbNum) {\n                        var newCbs = [];\n                        for (var i = curCbNum; i < cbNum; i++) {\n                            newCbs.push(models.alwaysCondition().condition);\n                        }\n                        _this._conditionalBranches = _this._conditionalBranches.concat(newCbs);\n                    }\n                    else if (curCbNum > cbNum) {\n                        _this._conditionalBranches.splice(0, curCbNum - cbNum);\n                    }\n                    _this._cdr.markForCheck();\n                });\n        };\n        AjfFbNodeProperties.prototype._handleVisibilityChange = function (fg) {\n            var _this = this;\n            this._visibilitySub =\n                fg.valueChanges\n                    .pipe(operators.distinctUntilChanged(function (v1, v2) { return v1.visibilityOpt === v2.visibilityOpt; }))\n                    .subscribe(function (v) {\n                    var visibilityOpt = v.visibilityOpt;\n                    var newCondition;\n                    switch (visibilityOpt) {\n                        case 'always':\n                            newCondition = models.alwaysCondition().condition;\n                            break;\n                        case 'never':\n                            newCondition = models.neverCondition().condition;\n                            break;\n                        default:\n                            newCondition = null;\n                    }\n                    _this._curVisibility = newCondition;\n                    fg.controls['visibility'].setValue(newCondition);\n                });\n            this._visibilitySub = fg.valueChanges\n                .pipe(operators.filter(function (v) { return v.visibilityOpt === 'condition'; }), operators.distinctUntilChanged(function (v1, v2) { return v1.visibility === v2.visibility; }))\n                .subscribe(function (v) {\n                _this._curVisibility = v.visibility;\n                _this._cdr.markForCheck();\n            });\n        };\n        AjfFbNodeProperties.prototype._guessVisibilityOpt = function (condition) {\n            if (condition.condition.localeCompare(models.alwaysCondition().condition) === 0) {\n                return 'always';\n            }\n            if (condition.condition.localeCompare(models.neverCondition().condition) === 0) {\n                return 'never';\n            }\n            return 'condition';\n        };\n        return AjfFbNodeProperties;\n    }());\n    AjfFbNodeProperties.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'ajf-fb-node-properties',\n                    template: \"<div [style.display]=\\\"(enabled|async) ? 'none' : 'block'\\\" class=\\\"ajf-disabled-overlay\\\"></div>\\n<div class=\\\"ajf-header\\\">\\n  <h3 translate>Properties</h3>\\n  <mat-icon (click)=\\\"save()\\\">save</mat-icon>\\n  <mat-icon (click)=\\\"cancel()\\\">cancel</mat-icon>\\n</div>\\n<ng-container *ngIf=\\\"nodeEntry|async as ne\\\">\\n  <ng-container *ngIf=\\\"propertiesForm|async as pf\\\">\\n    <form [formGroup]=\\\"pf!\\\" novalidate>\\n      <div class=\\\"ajf-prop\\\">\\n        <mat-form-field>\\n          <input matInput formControlName=\\\"name\\\" [placeholder]=\\\"'Name' | translate\\\">\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"ajf-prop\\\">\\n        <mat-form-field>\\n          <input matInput formControlName=\\\"label\\\" [placeholder]=\\\"'Label' | translate\\\">\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"ajf-prop\\\">\\n        <mat-form-field>\\n          <mat-label translate>Visibility</mat-label>\\n          <mat-select\\n              formControlName=\\\"visibilityOpt\\\" [placeholder]=\\\"'Visible' | translate\\\">\\n            <mat-option value=\\\"always\\\" translate>Always</mat-option>\\n            <mat-option value=\\\"never\\\" translate>Never</mat-option>\\n            <mat-option value=\\\"condition\\\" translate>Condition...</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <button (click)=\\\"editVisibility()\\\"\\n            [disabled]=\\\"pf!.value.visibilityOpt != 'condition'\\\"\\n            mat-raised-button [matTooltip]=\\\"curVisibility || ''\\\">\\n          <div class=\\\"ajf-icon-cont\\\">\\n            <mat-icon>edit</mat-icon>\\n            <span>{{ curVisibility }}</span>\\n          </div>\\n        </button>\\n      </div>\\n      <div class=\\\"ajf-prop\\\">\\n        <div><label translate>Branches</label></div>\\n        <div>\\n          <mat-slider formControlName=\\\"conditionalBranchesNum\\\"\\n              thumbLabel tickInterval=\\\"auto\\\" min=\\\"1\\\" max=\\\"5\\\" step=\\\"1\\\"></mat-slider>\\n        </div>\\n        <div *ngFor=\\\"let branch of conditionalBranches; let idx = index\\\">\\n          <button (click)=\\\"editConditionalBranch(idx)\\\" mat-raised-button [matTooltip]=\\\"branch\\\">\\n            <div class=\\\"ajf-icon-cont\\\">\\n              <mat-icon>edit</mat-icon>\\n              <span>{{ branch }}</span>\\n            </div>\\n          </button>\\n        </div>\\n      </div>\\n      <ng-template [ngIf]=\\\"isRepeatingContainerNode(ne)\\\">\\n        <div class=\\\"ajf-prop\\\">\\n          <div><label translate>Repetitions</label></div>\\n          <div>\\n            <button (click)=\\\"editFormulaReps()\\\" mat-raised-button [matTooltip]=\\\"curFormulaReps || ''\\\">\\n              <div class=\\\"ajf-icon-cont\\\">\\n                <mat-icon>edit</mat-icon>\\n                <span>{{ curFormulaReps }}</span>\\n              </div>\\n            </button>\\n          </div>\\n          <div><label translate>Min repetitions</label></div>\\n          <div>\\n            <mat-slider formControlName=\\\"minReps\\\"\\n                thumbLabel tickInterval=\\\"auto\\\" min=\\\"1\\\" max=\\\"5\\\" step=\\\"1\\\"></mat-slider>\\n          </div>\\n          <div><label translate>Max repetitions</label></div>\\n          <div>\\n            <mat-slider formControlName=\\\"maxReps\\\"\\n                thumbLabel tickInterval=\\\"auto\\\" min=\\\"1\\\" max=\\\"5\\\" step=\\\"1\\\"></mat-slider>\\n          </div>\\n        </div>\\n      </ng-template>\\n      <ng-template [ngIf]=\\\"isField(ne)\\\">\\n        <div class=\\\"ajf-prop\\\">\\n          <mat-form-field>\\n            <mat-label translate>Field size</mat-label>\\n            <mat-select formControlName=\\\"size\\\"\\n                [placeholder]=\\\"'Size' | translate\\\">\\n              <mat-option *ngFor=\\\"let fieldSize of fieldSizes\\\"\\n                [value]=\\\"fieldSize.value\\\">\\n                {{ fieldSize.label }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n        <div class=\\\"ajf-prop\\\">\\n          <mat-form-field>\\n            <input matInput formControlName=\\\"hint\\\" [placeholder]=\\\"'Hint' | translate\\\">\\n          </mat-form-field>\\n        </div>\\n        <div class=\\\"ajf-prop\\\">\\n          <mat-form-field>\\n            <textarea matInput formControlName=\\\"description\\\"\\n                [placeholder]=\\\"'Description' | translate\\\"></textarea>\\n          </mat-form-field>\\n        </div>\\n        <div class=\\\"ajf-prop\\\">\\n          <mat-form-field>\\n            <input matInput formControlName=\\\"defaultValue\\\"\\n              [placeholder]=\\\"'Default value' | translate\\\">\\n          </mat-form-field>\\n        </div>\\n        <div class=\\\"ajf-prop\\\">\\n          <div><label translate>Formula</label></div>\\n          <div>\\n            <button (click)=\\\"editFormula()\\\" mat-raised-button [matTooltip]=\\\"curFormula || ''\\\">\\n              <div class=\\\"ajf-icon-cont\\\">\\n                <mat-icon>edit</mat-icon>\\n                <span>{{ curFormula }}</span>\\n              </div>\\n            </button>\\n          </div>\\n        </div>\\n        <!-- <div class=\\\"ajf-prop\\\">\\n          <div><label translate>Force value</label></div>\\n          <div>\\n            <button (click)=\\\"editForceValue()\\\" mat-raised-button [matTooltip]=\\\"curForceValue\\\">\\n              <div class=\\\"ajf-icon-cont\\\">\\n                <mat-icon>edit</mat-icon>\\n                <span>{{ curForceValue }}</span>\\n              </div>\\n            </button>\\n          </div>\\n        </div> -->\\n        <div class=\\\"ajf-prop\\\">\\n          <mat-checkbox formControlName=\\\"notEmpty\\\" translate>Not empty</mat-checkbox>\\n        </div>\\n        <ng-template [ngIf]=\\\"isNumericField(ne!.node)\\\">\\n          <div class=\\\"ajf-prop\\\">\\n            <mat-form-field>\\n              <input matInput formControlName=\\\"minValue\\\"\\n                [placeholder]=\\\"'Min value' | translate\\\">\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"ajf-prop\\\">\\n            <mat-form-field>\\n              <input matInput formControlName=\\\"maxValue\\\"\\n                [placeholder]=\\\"'Max value' | translate\\\">\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"ajf-prop\\\">\\n            <mat-form-field>\\n              <input matInput formControlName=\\\"minDigits\\\"\\n                [placeholder]=\\\"'Min digits' | translate\\\">\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"ajf-prop\\\">\\n            <mat-form-field>\\n              <input matInput formControlName=\\\"maxDigits\\\"\\n                [placeholder]=\\\"'Max digits' | translate\\\">\\n            </mat-form-field>\\n          </div>\\n        </ng-template>\\n        <div class=\\\"ajf-prop\\\">\\n          <div class=\\\"ajf-header\\\">\\n            <label>{{ 'Validation' | translate }}</label>\\n            <mat-icon class=\\\"ajf-pointer\\\" (click)=\\\"addValidationCondition()\\\">add_circle_outline</mat-icon>\\n          </div>\\n          <div *ngIf=\\\"validationConditions == null || validationConditions.length == 0\\\"\\n              class=\\\"ajf-validation-row ajf-emph\\\" translate>No conditions</div>\\n          <div class=\\\"ajf-validation-row\\\" *ngFor=\\\"let validationCondition of validationConditions; let idx = index\\\">\\n            <button (click)=\\\"editValidationCondition(idx)\\\"\\n                mat-raised-button [matTooltip]=\\\"validationCondition.condition\\\">\\n              <div class=\\\"ajf-icon-cont\\\">\\n                <mat-icon>edit</mat-icon>\\n                <span>{{ validationCondition.condition }}</span>\\n              </div>\\n            </button>\\n            <mat-icon class=\\\"ajf-pointer\\\" (click)=\\\"removeValidationCondition(idx)\\\">remove_circle_outline</mat-icon>\\n          </div>\\n        </div>\\n        <div class=\\\"ajf-prop\\\">\\n          <mat-checkbox formControlName=\\\"notEmptyWarning\\\" translate>Not empty warning</mat-checkbox>\\n        </div>\\n        <div class=\\\"ajf-prop\\\">\\n          <div class=\\\"ajf-header\\\">\\n            <label translate>Warnings</label>\\n            <mat-icon class=\\\"ajf-pointer\\\" (click)=\\\"addWarningCondition()\\\">add_circle_outline</mat-icon>\\n          </div>\\n          <div  *ngIf=\\\"warningConditions == null || warningConditions.length == 0\\\"\\n              class=\\\"ajf-validation-row ajf-emph\\\" translate>No warnings</div>\\n          <div class=\\\"ajf-validation-row\\\" *ngFor=\\\"let warningCondition of warningConditions; let idx = index\\\">\\n            <button (click)=\\\"editWarningCondition(idx)\\\"\\n                mat-raised-button [matTooltip]=\\\"warningCondition.condition\\\">\\n              <div class=\\\"ajf-icon-cont\\\">\\n                <mat-icon>edit</mat-icon>\\n                <span>{{ warningCondition.condition }}</span>\\n              </div>\\n            </button>\\n            <mat-icon class=\\\"ajf-pointer\\\" (click)=\\\"removeWarningCondition(idx)\\\">remove_circle_outline</mat-icon>\\n          </div>\\n        </div>\\n        <div class=\\\"ajf-prop\\\">\\n          <div><label translate>Go to next slide condition</label></div>\\n          <div>\\n            <button (click)=\\\"editNextSlideCondition()\\\" mat-raised-button [matTooltip]=\\\"nextSlideCondition\\\">\\n              <div class=\\\"ajf-icon-cont\\\">\\n                <mat-icon>edit</mat-icon>\\n                <span>{{ nextSlideCondition }}</span>\\n              </div>\\n            </button>\\n          </div>\\n        </div>\\n        <ng-template [ngIf]=\\\"isFieldWithChoices(ne!.node)\\\">\\n          <div class=\\\"ajf-prop\\\">\\n            <mat-form-field>\\n              <mat-label translate>Choices origins</mat-label>\\n              <mat-select formControlName=\\\"choicesOriginRef\\\" [placeholder]=\\\"'Choices' | translate\\\">\\n                <mat-option *ngFor=\\\"let choicesOrigin of choicesOrigins\\\" [value]=\\\"choicesOrigin.name\\\">\\n                  {{ choicesOrigin.label || choicesOrigin.name }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"ajf-prop\\\">\\n            <div><label translate>Choices filter</label></div>\\n            <div>\\n              <button (click)=\\\"editChoicesFilter()\\\" mat-raised-button [matTooltip]=\\\"curChoicesFilter\\\">\\n                <div class=\\\"ajf-icon-cont\\\">\\n                  <mat-icon>edit</mat-icon>\\n                  <span>{{ curChoicesFilter }}</span>\\n                </div>\\n              </button>\\n            </div>\\n          </div>\\n          <div class=\\\"ajf-prop\\\">\\n            <mat-checkbox formControlName=\\\"forceExpanded\\\" translate>Force expanded selection</mat-checkbox>\\n          </div>\\n          <div class=\\\"ajf-prop\\\">\\n            <mat-checkbox formControlName=\\\"forceNarrow\\\" translate>Force narrow selection</mat-checkbox>\\n          </div>\\n          <div class=\\\"ajf-prop\\\">\\n            <div class=\\\"ajf-header\\\">\\n              <label translate>Trigger selection</label>\\n              <mat-icon class=\\\"ajf-pointer\\\" (click)=\\\"addTriggerCondition()\\\">add_circle_outline</mat-icon>\\n            </div>\\n            <div *ngIf=\\\"triggerConditions == null || triggerConditions.length == 0\\\"\\n                class=\\\"ajf-validation-row ajf-emph\\\" translate>No trigger condition </div>\\n            <div class=\\\"ajf-validation-row\\\" *ngFor=\\\"let triggerCondition of triggerConditions; let idx = index\\\">\\n              <button (click)=\\\"editTriggerCondition(idx)\\\"\\n                  mat-raised-button [matTooltip]=\\\"triggerCondition\\\">\\n                <div class=\\\"ajf-icon-cont\\\">\\n                  <mat-icon>edit</mat-icon>\\n                  <span>{{ triggerCondition }}</span>\\n                </div>\\n              </button>\\n              <mat-icon class=\\\"pointer\\\" (click)=\\\"removeTriggerCondition(idx)\\\">remove_circle_outline</mat-icon>\\n            </div>\\n          </div>\\n        </ng-template>\\n      </ng-template>\\n    </form>\\n  </ng-container>\\n</ng-container>\\n\",\n                    encapsulation: core.ViewEncapsulation.None,\n                    changeDetection: core.ChangeDetectionStrategy.OnPush,\n                    styles: [\"ajf-fb-node-properties{display:block;padding:1em;position:relative}ajf-fb-node-properties mat-icon{cursor:pointer}ajf-fb-node-properties .ajf-header{display:flex;flex-direction:row;align-items:center;flex-wrap:nowrap}ajf-fb-node-properties .ajf-header>h3,ajf-fb-node-properties .ajf-header>label{flex:1 0 auto;margin-right:.5em}ajf-fb-node-properties .ajf-header>mat-icon{flex:0 0 auto;margin-left:.5em}ajf-fb-node-properties .ajf-disabled-overlay{position:absolute;top:0;right:0;bottom:0;left:0;opacity:.4;background-color:#fff}ajf-fb-node-properties .ajf-emph{font-style:italic}ajf-fb-node-properties [mat-raised-button]{margin:.5em 0}ajf-fb-node-properties [mat-raised-button].ajf-pointer{cursor:pointer}ajf-fb-node-properties [mat-raised-button] .ajf-icon-cont{display:flex;flex-direction:row;align-items:center}ajf-fb-node-properties [mat-raised-button] .ajf-icon-cont span{flex:1 1 auto;overflow:hidden;text-overflow:ellipsis;display:block;min-height:36px}ajf-fb-node-properties .ajf-validation-row{margin:.5em 0;display:flex;flex-direction:row;align-items:center}ajf-fb-node-properties .ajf-validation-row button{flex:1 1 auto}ajf-fb-node-properties .ajf-validation-row mat-icon{flex:0 0 auto}ajf-fb-node-properties .ajf-prop{margin:.5em 0}ajf-fb-node-properties mat-form-field,ajf-fb-node-properties mat-slider,ajf-fb-node-properties [mat-raised-button]{width:100%}\\n\"]\n                },] }\n    ];\n    AjfFbNodeProperties.ctorParameters = function () { return [\n        { type: core.ChangeDetectorRef },\n        { type: AjfFormBuilderService },\n        { type: dialog.MatDialog },\n        { type: forms.FormBuilder }\n    ]; };\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFbNodeTypeEntry = /** @class */ (function () {\n        function AjfFbNodeTypeEntry(_cdr) {\n            this._cdr = _cdr;\n        }\n        Object.defineProperty(AjfFbNodeTypeEntry.prototype, \"nodeType\", {\n            get: function () {\n                return this._nodeType;\n            },\n            set: function (nodeType) {\n                this._nodeType = nodeType;\n                this._cdr.markForCheck();\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return AjfFbNodeTypeEntry;\n    }());\n    AjfFbNodeTypeEntry.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'ajf-fb-node-type-entry',\n                    template: \"<ng-container *ngIf=\\\"nodeType\\\">\\n  <mat-icon\\n    [fontSet]=\\\"nodeType.icon.fontSet\\\" [fontIcon]=\\\"nodeType.icon.fontIcon\\\"></mat-icon>\\n  {{ nodeType.label }}\\n</ng-container>\\n\",\n                    encapsulation: core.ViewEncapsulation.None,\n                    changeDetection: core.ChangeDetectionStrategy.OnPush,\n                    styles: [\"ajf-fb-node-type-entry{display:block;padding:1em 1.5em}ajf-fb-node-type-entry mat-icon{vertical-align:middle}\\n\"]\n                },] }\n    ];\n    AjfFbNodeTypeEntry.ctorParameters = function () { return [\n        { type: core.ChangeDetectorRef }\n    ]; };\n    AjfFbNodeTypeEntry.propDecorators = {\n        nodeType: [{ type: core.Input }]\n    };\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFormBuilderModule = /** @class */ (function () {\n        function AjfFormBuilderModule() {\n        }\n        return AjfFormBuilderModule;\n    }());\n    AjfFormBuilderModule.decorators = [\n        { type: core.NgModule, args: [{\n                    imports: [\n                        monacoEditor.AjfMonacoEditorModule, nodeIcon.AjfNodeIconModule, common.CommonModule, dragDrop.DragDropModule,\n                        forms.FormsModule, autocomplete.MatAutocompleteModule, button.MatButtonModule, card.MatCardModule,\n                        checkbox.MatCheckboxModule, chips.MatChipsModule, dialog.MatDialogModule, formField.MatFormFieldModule,\n                        icon.MatIconModule, input.MatInputModule, list.MatListModule, menu.MatMenuModule,\n                        select.MatSelectModule, sidenav.MatSidenavModule, slider.MatSliderModule, table.MatTableModule,\n                        toolbar.MatToolbarModule, tooltip.MatTooltipModule, forms.ReactiveFormsModule, core$1.TranslateModule,\n                        expansion.MatExpansionModule, slideToggle.MatSlideToggleModule,\n                    ],\n                    declarations: [\n                        AjfFbBranchLine,\n                        AjfFbChoicesOriginEditor,\n                        AjfFbChoicesOriginEditorDialog,\n                        AjfFbConditionEditor,\n                        AjfFbConditionEditorDialog,\n                        AjfFbNodeEntry,\n                        AjfFbNodeProperties,\n                        AjfFbNodeTypeEntry,\n                        AjfFbStringIdentifierDialogComponent,\n                        AjfFbValidationConditionEditorDialog,\n                        AjfFbWarningConditionEditorDialog,\n                        AjfFormBuilder,\n                    ],\n                    exports: [\n                        AjfFormBuilder,\n                    ],\n                    providers: [\n                        AjfFormBuilderService,\n                    ],\n                },] }\n    ];\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.AjfFormBuilder = AjfFormBuilder;\n    exports.AjfFormBuilderModule = AjfFormBuilderModule;\n    exports.AjfFormBuilderService = AjfFormBuilderService;\n    exports.disableFieldDropPredicate = disableFieldDropPredicate;\n    exports.disableSlideDropPredicate = disableSlideDropPredicate;\n    exports.flattenNodes = flattenNodes;\n    exports.onDropProcess = onDropProcess;\n    exports.ɵgc_ajf_src_material_form_builder_form_builder_a = AjfFbBranchLine;\n    exports.ɵgc_ajf_src_material_form_builder_form_builder_b = AjfFbChoicesOriginEditor;\n    exports.ɵgc_ajf_src_material_form_builder_form_builder_c = AjfFbChoicesOriginEditorDialog;\n    exports.ɵgc_ajf_src_material_form_builder_form_builder_d = AjfFbConditionEditor;\n    exports.ɵgc_ajf_src_material_form_builder_form_builder_e = AjfFbConditionEditorDialog;\n    exports.ɵgc_ajf_src_material_form_builder_form_builder_f = AjfFbNodeEntry;\n    exports.ɵgc_ajf_src_material_form_builder_form_builder_g = AjfFbNodeProperties;\n    exports.ɵgc_ajf_src_material_form_builder_form_builder_h = AjfFbNodeTypeEntry;\n    exports.ɵgc_ajf_src_material_form_builder_form_builder_i = AjfFbStringIdentifierDialogComponent;\n    exports.ɵgc_ajf_src_material_form_builder_form_builder_j = AjfFbValidationConditionEditorDialog;\n    exports.ɵgc_ajf_src_material_form_builder_form_builder_k = AjfFbWarningConditionEditorDialog;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-form-builder.umd.js.map\n"]}