{"version":3,"file":"material-form-builder.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/material/form-builder/branch-line.ts","../../src/material/form-builder/choices-origin-data-source.ts","../../src/material/form-builder/choices-origin-editor.ts","../../src/material/form-builder/form-builder-service.ts","../../src/material/form-builder/choices-origin-editor-dialog.ts","../../src/material/form-builder/condition-editor.ts","../../src/material/form-builder/condition-editor-dialog.ts","../../src/material/form-builder/form-builder.ts","../../src/material/form-builder/node-entry.ts","../../src/material/form-builder/validation-condition-editor-dialog.ts","../../src/material/form-builder/warning-condition-editor-dialog.ts","../../src/material/form-builder/node-properties.ts","../../src/material/form-builder/node-type-entry.ts","../../src/material/form-builder/form-builder-module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, ViewEncapsulation\n} from '@angular/core';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-branch-line',\n  templateUrl: 'branch-line.html',\n  styleUrls: ['branch-line.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbBranchLine {\n  private _offset = 0;\n  @Input() set offset(offset: number) {\n    this._offset = offset;\n    this._updateOffset();\n  }\n\n  private _color: string;\n  @Input() set color(color: string) {\n    this._color = color;\n    this._updateColor();\n  }\n\n  private _height = 0;\n  @Input() set height(height: number) {\n    this._height = height;\n    this._updateHeight();\n  }\n\n  constructor(private _el: ElementRef, private _renderer: Renderer2) { }\n\n  private _updateHeight(): void {\n    const height = `${Math.max(0, this._height - 25)}px`;\n    this._renderer.setStyle(this._el.nativeElement, 'height', height);\n  }\n\n  private _updateOffset(): void {\n    const margin = `${this._offset * 4}px`;\n    this._renderer.setStyle(this._el.nativeElement, 'margin-top', margin);\n    this._renderer.setStyle(this._el.nativeElement, 'margin-left', margin);\n  }\n\n  private _updateColor(): void {\n    this._renderer.setStyle(this._el.nativeElement, 'border-color', this._color);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {DataSource} from '@angular/cdk/collections';\n\nimport {BehaviorSubject, Observable} from 'rxjs';\n\n\nexport type ChoicesOriginChoiceEntry = {label: string, value: string};\n\nexport class ChoicesOriginDataSource\n    extends DataSource<ChoicesOriginChoiceEntry> {\n  private _choices: BehaviorSubject<ChoicesOriginChoiceEntry[]> =\n      new BehaviorSubject<ChoicesOriginChoiceEntry[]>([]);\n  private _choicesObs: Observable<ChoicesOriginChoiceEntry[]>;\n\n  constructor() {\n    super();\n    this._choicesObs = this._choices.asObservable();\n  }\n\n  connect(): Observable<ChoicesOriginChoiceEntry[]> {\n    return this._choicesObs;\n  }\n\n  disconnect() {}\n\n  updateChoices(choices: ChoicesOriginChoiceEntry[]) {\n    this._choices.next(choices);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\n\nimport {IAjfChoicesOrigin, AjfChoicesFixedOrigin} from '@ajf/core/forms';\n\nimport {ChoicesOriginChoiceEntry, ChoicesOriginDataSource} from './choices-origin-data-source';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-choices-origin-editor',\n  templateUrl: 'choices-origin-editor.html',\n  styleUrls: ['choices-origin-editor.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbChoicesOriginEditor {\n  private _displayedColumns: string[] = ['label', 'value', 'delete'];\n  get displayedColumns(): string[] { return this._displayedColumns; }\n\n  private _choicesOrigin: IAjfChoicesOrigin;\n  get choicesOrigin(): IAjfChoicesOrigin { return this._choicesOrigin; }\n  @Input()\n  set choicesOrigin(choicesOrigin: IAjfChoicesOrigin) {\n    this._choicesOrigin = choicesOrigin;\n    this.name = choicesOrigin.getName();\n    this.label = choicesOrigin.getLabel();\n\n    this.canEditChoices = choicesOrigin instanceof AjfChoicesFixedOrigin;\n    this._choicesArr = choicesOrigin.getChoices();\n    this._choices.updateChoices(this._choicesArr);\n  }\n\n  editing: {[key: string]: boolean} = {};\n  name: string;\n  label: string;\n  canEditChoices: boolean;\n\n  private _choices: ChoicesOriginDataSource = new ChoicesOriginDataSource();\n  get choices(): ChoicesOriginDataSource { return this._choices; }\n\n  private _choicesArr: ChoicesOriginChoiceEntry[] = [];\n  get choicesArr(): ChoicesOriginChoiceEntry[] { return this._choicesArr; }\n\n  updateValue(evt: any, cell: string, _value: any, rowIdx: number): void {\n    this.editing[rowIdx + '-' + cell] = false;\n    (this._choicesArr[rowIdx] as any)[cell] = evt.target.value;\n    this._choices.updateChoices(this._choicesArr);\n  }\n\n  deleteRow(rowIdx: number): void {\n    this._choicesArr.splice(rowIdx, 1);\n    this._choices.updateChoices(this._choicesArr);\n  }\n\n  addRow(): void {\n    this._choicesArr.push({label: '', value: ''});\n    this._choices.updateChoices(this._choicesArr);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Injectable, EventEmitter} from '@angular/core';\n\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {\n  filter, map, publishReplay, refCount, scan, withLatestFrom\n} from 'rxjs/operators';\n\nimport {\n  AjfCondition,\n  AjfFormula,\n} from '@ajf/core/models';\nimport {\n  AjfAttachmentsOrigin,\n  AjfBooleanField,\n  AjfChoicesFixedOrigin,\n  AjfDateField,\n  AjfDateInputField,\n  AjfField,\n  AjfFieldWithChoices,\n  AjfForm,\n  AjfFormulaField,\n  AjfMultipleChoiceField,\n  AjfNode,\n  AjfNodeGroup,\n  AjfNumberField,\n  AjfRepeatingSlide,\n  AjfSingleChoiceField,\n  AjfSlide,\n  AjfStringField,\n  AjfTableField,\n  AjfTextField,\n  AjfTimeField,\n  AjfValidation,\n  AjfValidationGroup,\n  AjfWarning,\n  AjfWarningGroup,\n  IAjfChoicesOrigin,\n  IAjfNodesOperation,\n} from '@ajf/core/forms';\nimport {\n  IAjfAttachmentsOriginsOperation, IAjfChoicesOriginsOperation\n} from './operations';\n\n\nexport interface AjfFormBuilderNodeTypeEntry {\n  label: string;\n  icon: {\n    fontSet: string;\n    fontIcon: string;\n  };\n  nodeType: typeof AjfNode;\n  isSlide?: boolean;\n}\n\n\nexport interface AjfFormBuilderNodeEntry {\n  node: AjfNode;\n  container: AjfContainerNode | null;\n  children: AjfFormBuilderNodeEntry[];\n  content: AjfFormBuilderNodeEntry[];\n}\n\n\nexport interface AjfFormBuilderEmptySlot {\n  parent: AjfNode;\n  parentNode: number;\n}\n\n\nexport type AjfFormBuilderNode = AjfFormBuilderNodeEntry | AjfFormBuilderEmptySlot;\n\n\nexport function isContainerNode(node: AjfNode): boolean {\n  return node != null && (\n    node instanceof AjfSlide ||\n    node instanceof AjfRepeatingSlide ||\n    node instanceof AjfNodeGroup\n  );\n}\nexport type AjfContainerNode = AjfSlide | AjfRepeatingSlide | AjfNodeGroup;\n\nexport function isRepeatingContainerNode(node: AjfNode): boolean {\n  return node != null && (\n    node instanceof AjfRepeatingSlide ||\n    node instanceof AjfNodeGroup\n  );\n}\nexport type AjfRepeatingContainerNode = AjfRepeatingSlide | AjfNodeGroup;\n\nexport function isSlideNode(node: AjfNode): boolean {\n  return node != null && (\n    node instanceof AjfSlide ||\n    node instanceof AjfRepeatingSlide\n  );\n}\n\n\nfunction getNodeContainer(c: {nodes: AjfNode[]}, node: AjfNode): {nodes: AjfNode[]} | null {\n  if (c.nodes.indexOf(node) > -1) {\n    return c;\n  }\n  const cns = c.nodes.filter(n => isContainerNode(n));\n  const len = cns.length;\n  for (let i = 0 ; i < len ; i++) {\n    const cn = getNodeContainer(<AjfContainerNode>cns[i], node);\n    if (cn != null) { return cn; }\n  }\n  return null;\n}\n\n\nfunction buildFormBuilderNodesSubtree(\n  nodes: AjfNode[], parent: AjfNode, ignoreConditionalBranches = false\n): AjfFormBuilderNode[] {\n  const entries: AjfFormBuilderNode[] = nodes\n    .filter(n => n.parent === parent.id)\n    .sort((n1, n2) => n1.parentNode - n2.parentNode)\n    .map(n => <AjfFormBuilderNodeEntry>{\n      node: n,\n      children: buildFormBuilderNodesSubtree(nodes, n),\n      content: buildFormBuilderNodesContent(nodes, n)\n    });\n  if (!ignoreConditionalBranches) {\n    const entriesNum = entries.length;\n    const cbs = parent.conditionalBranches.length;\n    for (let i = entriesNum ; i < cbs ; i++) {\n      entries.push({\n        parent: parent,\n        parentNode: i\n      });\n    }\n  }\n  return entries;\n}\n\nfunction buildFormBuilderNodesContent(_nodes: AjfNode[], node: AjfNode): AjfFormBuilderNode[] {\n  if (isContainerNode(node)) {\n    return buildFormBuilderNodesSubtree((<AjfContainerNode>node).nodes, node, true);\n  }\n  return [];\n}\n\n\nfunction buildFormBuilderNodesTree(nodes: AjfNode[]): (AjfFormBuilderNode | null)[] {\n  const rootNodes = nodes.filter(n => n.parent == null);\n  if (rootNodes.length === 1) {\n    const rootNode = rootNodes[0];\n    if (rootNode instanceof AjfRepeatingSlide || rootNode instanceof AjfSlide) {\n      const tree: AjfFormBuilderNode[] = [];\n      tree.push(<AjfFormBuilderNodeEntry>{\n        node: rootNode,\n        container: null,\n        children: buildFormBuilderNodesSubtree(nodes, rootNode),\n        content: buildFormBuilderNodesContent(nodes, rootNode)\n      });\n      return tree;\n    }\n  } else if (rootNodes.length === 0) {\n    return [null];\n  }\n  throw new Error('Invalid form definition');\n}\n\nexport function flattenNodes(nodes: AjfNode[]): AjfNode[] {\n  let flatNodes: AjfNode[] = [];\n\n  nodes.forEach((node: AjfNode) => {\n    if (isContainerNode(node)) {\n      flatNodes = flatNodes.concat(flattenNodes((<AjfContainerNode>node).nodes));\n    }\n    flatNodes.push(node);\n  });\n\n  return flatNodes;\n}\n\nfunction getDescendants(\n  flatNodes: AjfNode[], parentNode: AjfNode, branch: number | null = null\n): AjfNode[] {\n  return branch != null ?\n    flatNodes.filter(n => n.parent === parentNode.id && n.parentNode === branch) :\n    flatNodes.filter(n => n.parent === parentNode.id);\n}\n\nfunction removeNodes(nodes: AjfNode[], ids: number[]): AjfNode[] {\n  const len = nodes.length;\n  for (let i = 0 ; i < len ; i++) {\n    const node = nodes[i];\n    if (isContainerNode(node)) {\n      const container = (<AjfContainerNode>node);\n      container.nodes = removeNodes(container.nodes, ids);\n    }\n  }\n  return nodes.filter(n => ids.indexOf(n.id) === -1);\n}\n\nfunction deleteNodeSubtree(\n  nodes: AjfNode[], parentNode: AjfNode, branch: number | null = null\n): AjfNode[] {\n  const flatNodes = flattenNodes(nodes);\n  let delNodes: AjfNode[] = [];\n  let descendants = getDescendants(flatNodes, parentNode, branch);\n  const len = descendants.length;\n  for (let i = 0 ; i < len ; i++) {\n    delNodes = delNodes.concat(getDescendants(flatNodes, descendants[i]));\n  }\n  delNodes = delNodes.concat(descendants);\n  return removeNodes(nodes, delNodes.map(n => n.id));\n}\n\nlet nodeUniqueId = 0;\n\n\n@Injectable()\nexport class AjfFormBuilderService {\n  private _availableNodeTypes: AjfFormBuilderNodeTypeEntry[] = [\n    { label: 'Slide', icon: {fontSet: 'ajf-icon', fontIcon: 'field-slide' }, nodeType: AjfSlide,\n      isSlide: true },\n    { label: 'Repeating slide', icon: { fontSet: 'ajf-icon', fontIcon: 'field-repeatingslide' },\n      nodeType: AjfRepeatingSlide, isSlide: true },\n    { label: 'String', icon: { fontSet: 'ajf-icon', fontIcon: 'field-string' },\n      nodeType: AjfStringField },\n    { label: 'Text', icon: { fontSet: 'ajf-icon', fontIcon: 'field-text' },\n      nodeType: AjfTextField },\n    { label: 'Number', icon: { fontSet: 'ajf-icon', fontIcon: 'field-number' },\n      nodeType: AjfNumberField },\n    { label: 'Boolean', icon: { fontSet: 'ajf-icon', fontIcon: 'field-boolean' },\n      nodeType: AjfBooleanField },\n    { label: 'Single choice', icon: { fontSet: 'ajf-icon', fontIcon: 'field-singlechoice' },\n      nodeType: AjfSingleChoiceField },\n    { label: 'Multiple choice', icon: { fontSet: 'ajf-icon', fontIcon: 'field-multiplechoice' },\n      nodeType: AjfMultipleChoiceField },\n    { label: 'Formula', icon: { fontSet: 'ajf-icon', fontIcon: 'field-formula' },\n      nodeType: AjfFormulaField },\n    { label: 'Date', icon: { fontSet: 'ajf-icon', fontIcon: 'field-date' },\n      nodeType: AjfDateField },\n    { label: 'Date input', icon: { fontSet: 'ajf-icon', fontIcon: 'field-dateinput' },\n      nodeType: AjfDateInputField },\n    { label: 'Time', icon: { fontSet: 'ajf-icon', fontIcon: 'field-time' },\n      nodeType: AjfTimeField },\n    { label: 'Table', icon: { fontSet: 'ajf-icon', fontIcon: 'field-table' },\n      nodeType: AjfTableField }\n  ];\n  /**\n   * Available node types\n   *\n   * @readonly\n   * @memberOf AjfFormBuilderService\n   */\n  get availableNodeTypes(): AjfFormBuilderNodeTypeEntry[] { return this._availableNodeTypes; }\n\n  private _form: BehaviorSubject<AjfForm | null> = new BehaviorSubject<AjfForm | null>(null);\n  private _formObs: Observable<AjfForm | null> = this._form.asObservable();\n  /**\n   * Current edited form stream\n   *\n   * @readonly\n   * @memberOf AjfFormBuilderService\n   */\n  get form(): Observable<AjfForm | null> { return this._formObs; }\n\n  private _attachmentsOrigins: Observable<AjfAttachmentsOrigin[]>;\n  get attachmentsOrigins(): Observable<AjfAttachmentsOrigin[]> { return this._attachmentsOrigins; }\n\n  private _choicesOrigins: Observable<IAjfChoicesOrigin[]>;\n  get choicesOrigins(): Observable<IAjfChoicesOrigin[]> { return this._choicesOrigins; }\n\n  private _nodes: Observable<AjfNode[]>;\n  get nodes(): Observable<AjfNode[]> { return this._nodes; }\n\n  private _flatNodes: Observable<AjfNode[]>;\n  get flatNodes(): Observable<AjfNode[]> {\n    return this._flatNodes;\n  }\n\n  private _flatFields: Observable<AjfField[]>;\n  get flatFields(): Observable<AjfField[]> { return this._flatFields; }\n\n  private _nodeEntriesTree: Observable<AjfFormBuilderNodeEntry[]>;\n  get nodeEntriesTree(): Observable<AjfFormBuilderNodeEntry[]> { return this._nodeEntriesTree; }\n\n  private _editedNodeEntry: BehaviorSubject<AjfFormBuilderNodeEntry | null> =\n    new BehaviorSubject<AjfFormBuilderNodeEntry | null>(null);\n  private _editedNodeEntryObs: Observable<AjfFormBuilderNodeEntry | null> =\n    this._editedNodeEntry.asObservable();\n  get editedNodeEntry(): Observable<AjfFormBuilderNodeEntry | null> {\n    return this._editedNodeEntryObs;\n  }\n\n  private _editedCondition: BehaviorSubject<AjfCondition | null> =\n    new BehaviorSubject<AjfCondition | null>(null);\n  private _editedConditionObs: Observable<AjfCondition | null> =\n    this._editedCondition.asObservable();\n  get editedCondition(): Observable<AjfCondition | null> { return this._editedConditionObs; }\n\n  private _editedChoicesOrigin: BehaviorSubject<IAjfChoicesOrigin | null> =\n    new BehaviorSubject<IAjfChoicesOrigin | null>(null);\n  private _editedChoicesOriginObs: Observable<IAjfChoicesOrigin | null> =\n    this._editedChoicesOrigin.asObservable();\n  get editedChoicesOrigin(): Observable<IAjfChoicesOrigin | null> {\n    return this._editedChoicesOriginObs;\n  }\n\n  private _beforeNodesUpdate: EventEmitter<void> = new EventEmitter<void>();\n  private _beforeNodesUpdateObs: Observable<void> = this._beforeNodesUpdate.asObservable();\n  get beforeNodesUpdate(): Observable<void> { return this._beforeNodesUpdateObs; }\n  private _afterNodeUpdate: EventEmitter<void> = new EventEmitter<void>();\n  private _afterNodeUpdateObs: Observable<void> = this._afterNodeUpdate.asObservable();\n  get afterNodeUpdate(): Observable<void> { return this._afterNodeUpdateObs; }\n\n  private _nodesUpdates: Subject<IAjfNodesOperation> = new Subject<IAjfNodesOperation>();\n  private _attachmentsOriginsUpdates: Subject<IAjfAttachmentsOriginsOperation> =\n    new Subject<IAjfAttachmentsOriginsOperation>();\n  private _choicesOriginsUpdates: Subject<IAjfChoicesOriginsOperation> =\n    new Subject<IAjfChoicesOriginsOperation>();\n\n  private _saveNodeEntryEvent: EventEmitter<any> = new EventEmitter<any>();\n  private _deleteNodeEntryEvent: EventEmitter<AjfFormBuilderNodeEntry> =\n    new EventEmitter<AjfFormBuilderNodeEntry>();\n\n  constructor() {\n    this._initChoicesOriginsStreams();\n    this._initAttachmentsOriginsStreams();\n    this._initNodesStreams();\n    this._initFormStreams();\n    this._initSaveNode();\n    this._initDeleteNode();\n  }\n\n  /**\n   * Sets the current edited form\n   *\n   * @param form\n   *\n   * @memberOf AjfFormBuilderService\n   */\n  setForm(form: AjfForm | null): void {\n    if (form !== this._form.getValue()) {\n      this._form.next(form);\n    }\n  }\n\n  editNodeEntry(nodeEntry: AjfFormBuilderNodeEntry): void {\n    this._editedNodeEntry.next(nodeEntry);\n  }\n\n  editCondition(condition: AjfCondition): void {\n    this._editedCondition.next(condition);\n  }\n\n  saveCurrentCondition(condition: string): void {\n    let c = this._editedCondition.getValue();\n    if (c == null) { return; }\n    c.condition = condition;\n    this._editedCondition.next(null);\n  }\n\n  cancelConditionEdit(): void {\n    this._editedChoicesOrigin.next(null);\n  }\n\n  insertNode(\n    nodeType: AjfFormBuilderNodeTypeEntry,\n    parent: AjfNode,\n    parentNode: number,\n    inContent = false\n  ): void {\n    let node = new nodeType.nodeType({\n      id: ++nodeUniqueId,\n      parent: parent.id,\n      parentNode\n    });\n    this._beforeNodesUpdate.emit();\n    this._nodesUpdates.next((nodes: AjfNode[]): AjfNode[] => {\n      const cn = isContainerNode(parent) && inContent ?\n        (<AjfContainerNode>parent) :\n        getNodeContainer({nodes}, parent);\n      if (cn != null) {\n        if (cn instanceof AjfNode) {\n          const newNodes = cn.nodes.slice(0);\n          newNodes.push(node);\n          cn.nodes = newNodes;\n        } else {\n          cn.nodes.push(node);\n        }\n      }\n      return nodes;\n    });\n  }\n\n  saveNodeEntry(properties: any): void {\n    this._saveNodeEntryEvent.emit(properties);\n  }\n\n  cancelNodeEntryEdit(): void {\n    this._editedNodeEntry.next(null);\n  }\n\n  deleteNodeEntry(nodeEntry: AjfFormBuilderNodeEntry): void {\n    this._deleteNodeEntryEvent.next(nodeEntry);\n  }\n\n  getCurrentForm(): Observable<AjfForm> {\n    return this._form.pipe(\n      withLatestFrom(this._nodes),\n      filter((r) => r[0] != null),\n      map((r: [AjfForm | null, AjfNode[]]) => {\n        const form = r[0]!;\n        const nodes = r[1];\n        return new AjfForm({\n          choicesOrigins: form.choicesOrigins.slice(0),\n          attachmentsOrigins: form.attachmentsOrigins.slice(0),\n          stringIdentifier: form.stringIdentifier.slice(0),\n          nodes: nodes.slice(0)\n        });\n      })\n    );\n  }\n\n  editChoicesOrigin(choicesOrigin: IAjfChoicesOrigin): void {\n    this._editedChoicesOrigin.next(choicesOrigin);\n  }\n\n  createChoicesOrigin(): void {\n    this._editedChoicesOrigin.next(new AjfChoicesFixedOrigin<any>());\n  }\n\n  cancelChoicesOriginEdit(): void {\n    this._editedChoicesOrigin.next(null);\n  }\n\n  saveChoicesOrigin(params: {label: string, name: string, choices: any[]}): void {\n    const choicesOrigin = this._editedChoicesOrigin.getValue();\n    if (choicesOrigin != null) {\n      choicesOrigin.setLabel(params.label);\n      choicesOrigin.setName(params.name);\n      if (choicesOrigin instanceof AjfChoicesFixedOrigin) {\n        choicesOrigin.setChoices(params.choices);\n      }\n    }\n    this._editedChoicesOrigin.next(null);\n  }\n\n  private _findMaxNodeId(nodes: AjfNode[], _curMaxId = 0): number {\n    let maxId = 0;\n    nodes.forEach((n) => {\n      maxId = Math.max(maxId, n.id);\n      if (isContainerNode(n)) {\n        maxId = Math.max(maxId, this._findMaxNodeId((<AjfContainerNode>n).nodes));\n      }\n    });\n    return maxId;\n  }\n\n  private _initFormStreams(): void {\n    this._form\n      .subscribe((form: AjfForm | null) => {\n        nodeUniqueId = 0;\n        if (form != null && form.nodes != null && form.nodes.length > 0) {\n          nodeUniqueId = this._findMaxNodeId(form.nodes);\n        }\n        this._nodesUpdates.next(\n          (_nodes: AjfNode[]): AjfNode[] => {\n            return form != null && form.nodes != null ? form.nodes.slice(0) : [];\n          }\n        );\n        this._attachmentsOriginsUpdates.next(\n          (_attachmentsOrigins: AjfAttachmentsOrigin[]): AjfAttachmentsOrigin[] => {\n            return form != null && form.attachmentsOrigins != null ?\n              form.attachmentsOrigins.slice(0) : [];\n          }\n        );\n        this._choicesOriginsUpdates.next(\n          (_choicesOrigins: IAjfChoicesOrigin[]): IAjfChoicesOrigin[] => {\n            return form != null && form.choicesOrigins != null ? form.choicesOrigins.slice(0) : [];\n          }\n        );\n      });\n  }\n\n  private _initChoicesOriginsStreams(): void {\n    this._choicesOrigins = (<Observable<IAjfChoicesOriginsOperation>>this._choicesOriginsUpdates)\n      .pipe(\n        scan((choicesOrigins: IAjfChoicesOrigin[], op: IAjfChoicesOriginsOperation) => {\n          return op(choicesOrigins);\n        }, []),\n        publishReplay(1),\n        refCount()\n      );\n  }\n\n  private _initAttachmentsOriginsStreams(): void {\n    this._attachmentsOrigins =\n      (<Observable<IAjfAttachmentsOriginsOperation>>this._attachmentsOriginsUpdates).pipe(\n        scan((attachmentsOrigins: AjfAttachmentsOrigin[], op: IAjfAttachmentsOriginsOperation) => {\n          return op(attachmentsOrigins);\n        }, []),\n        publishReplay(1),\n        refCount()\n      );\n  }\n\n  private _initNodesStreams(): void {\n    this._nodes = (<Observable<IAjfNodesOperation>>this._nodesUpdates).pipe(\n      scan((nodes: AjfNode[], op: IAjfNodesOperation) => {\n        return op(nodes);\n      }, []),\n      publishReplay(1),\n      refCount()\n    );\n\n    this._flatNodes = this._nodes.pipe(\n      map((nodes: AjfNode[]) => flattenNodes(nodes)),\n      publishReplay(1),\n      refCount()\n    );\n\n    this._flatFields = this._flatNodes.pipe(\n      map((nodes: AjfNode[]) => <AjfField[]>nodes.filter(n => !isContainerNode(n))),\n      publishReplay(1),\n      refCount()\n    );\n\n    this._nodeEntriesTree = this._nodes.pipe(\n      map(nodes => <AjfFormBuilderNodeEntry[]>buildFormBuilderNodesTree(nodes)),\n      publishReplay(1),\n      refCount()\n    );\n  }\n\n  private _initSaveNode(): void {\n    this._saveNodeEntryEvent.pipe(\n      withLatestFrom(this.editedNodeEntry, this.choicesOrigins, this.attachmentsOrigins),\n      filter((r) => r[1] != null),\n      map((r: [\n        any, AjfFormBuilderNodeEntry | null, IAjfChoicesOrigin[], AjfAttachmentsOrigin[]\n      ]) => {\n        this._beforeNodesUpdate.emit();\n        const properties = r[0];\n        const nodeEntry = r[1]!;\n        const choicesOrigins = r[2];\n        const attachmentsOrigins = r[3];\n        const origNode = nodeEntry.node;\n        const node = AjfNode.fromJson(origNode.toJson(), choicesOrigins, attachmentsOrigins);\n        node.id = nodeEntry.node.id;\n        node.name = properties['name'];\n        node.label = properties['label'];\n        node.visibility = properties['visibility'] != null ?\n          new AjfCondition({ condition: properties['visibility'] }) : null;\n\n        const oldConditionalBranches = node.conditionalBranches.length;\n        node.conditionalBranches = properties['conditionalBranches'] != null\n          ? properties['conditionalBranches']\n            .map((condition: string) => new AjfCondition({condition}))\n          : [AjfCondition.alwaysCondition()];\n        const newConditionalBranches = node.conditionalBranches.length;\n\n        if (isRepeatingContainerNode(node)) {\n          const repNode = <AjfRepeatingContainerNode>node;\n          repNode.formulaReps = properties['formulaReps'] != null ?\n            new AjfFormula({formula: properties['formulaReps']}) : null;\n          repNode.minReps = properties['minReps'];\n          repNode.maxReps = properties['maxReps'];\n        }\n\n        if (nodeEntry.node instanceof AjfField) {\n          const field = <AjfField>nodeEntry.node;\n          field.description = properties['description'];\n          field.defaultValue = properties['defaultValue'];\n          field.formula = properties['formula'] != null ?\n            new AjfFormula({formula: properties['formula']}) : null;\n          const forceValue = properties['value'];\n          const notEmpty = properties['notEmpty'];\n          const validationConditions = properties['validationConditions'];\n          let minValue: number | null = parseInt(properties['minValue'], 10);\n          let maxValue: number | null = parseInt(properties['maxValue'], 10);\n          let minDigits: number | null = parseInt(properties['minDigits'], 10);\n          let maxDigits: number | null = parseInt(properties['maxDigits'], 10);\n          if (isNaN(minValue)) { minValue = null; }\n          if (isNaN(maxValue)) { maxValue = null; }\n          if (isNaN(minDigits)) { minDigits = null; }\n          if (isNaN(maxDigits)) { maxDigits = null; }\n          if (\n            forceValue != null || notEmpty != null ||\n            (validationConditions != null && validationConditions.length > 0) ||\n            minValue != null || maxValue != null || minDigits != null || maxDigits != null\n          ) {\n            const validation = field.validation || new AjfValidationGroup();\n            validation.forceValue = forceValue;\n            validation.notEmpty = notEmpty ? AjfValidation.getNotEmptyCondition() : null;\n            validation.minValue = minValue != null ? AjfValidation.getMinCondition(minValue) : null;\n            validation.maxValue = maxValue != null ? AjfValidation.getMaxCondition(maxValue) : null;\n            validation.minDigits = minDigits != null ?\n              AjfValidation.getMinDigitsCondition(minDigits) : null;\n            validation.maxDigits = maxDigits != null ?\n              AjfValidation.getMaxDigitsCondition(maxDigits) : null;\n            validation.conditions = (validationConditions || [])\n              .map((c: {condition: string, errorMessage: string}) => new AjfValidation({\n                condition: c.condition,\n                errorMessage: c.errorMessage\n              }));\n            field.validation = validation;\n          } else {\n            field.validation = null;\n          }\n          const notEmptyWarning = properties['notEmptyWarning'];\n          const warningConditions = properties['warningConditions'];\n          if (\n            notEmptyWarning != null ||\n            (warningConditions != null && warningConditions.length > 0)\n          ) {\n            const warning = field.warning || new AjfWarningGroup();\n            warning.notEmpty = notEmptyWarning ? AjfWarning.getNotEmptyWarning() : null;\n            warning.conditions = (warningConditions || [])\n              .map((w: {condition: string, warningMessage: string}) => new AjfWarning({\n                condition: w.condition, warningMessage: w.warningMessage\n              }));\n            field.warning = warning;\n          } else {\n            field.warning = null;\n          }\n          field.nextSlideCondition = properties['nextSlideCondition'] != null ?\n            new AjfCondition({ condition: properties['nextSlideCondition'] }) : null;\n\n          if (field instanceof AjfFieldWithChoices) {\n            const fwc = <AjfFieldWithChoices>field;\n            let choicesOrigin: IAjfChoicesOrigin | null = null;\n            let coIdx = 0;\n            const coNum: number = choicesOrigins.length;\n            while (choicesOrigin == null && coIdx < coNum) {\n              if (choicesOrigins[coIdx].getName() === properties['choicesOrigin']) {\n                choicesOrigin = choicesOrigins[coIdx];\n              }\n              coIdx++;\n            }\n            if (choicesOrigin != null) {\n              fwc.choicesOrigin = choicesOrigin;\n            }\n            fwc.forceExpanded = properties['forceExpanded'];\n            fwc.forceNarrow = properties['forceNarrow'];\n            fwc.triggerConditions = (properties['triggerConditions'] || [])\n              .map((t: string) => new AjfCondition({condition: t}));\n          }\n        }\n\n        this._editedNodeEntry.next(null);\n\n        return (nodes: AjfNode[]): AjfNode[] => {\n          let cn = getNodeContainer({nodes}, origNode);\n          if (cn != null) {\n            if (cn instanceof AjfNode) {\n              const idx = cn.nodes.indexOf(origNode);\n              let newNodes = cn.nodes.slice(0, idx);\n              newNodes.push(node);\n              newNodes = newNodes.concat(cn.nodes.slice(idx + 1));\n              cn.nodes = newNodes;\n              nodes = nodes.slice(0);\n            } else {\n              const idx = nodes.indexOf(origNode);\n              nodes = nodes.slice(0, idx).concat([node]).concat(nodes.slice(idx + 1));\n            }\n            if (newConditionalBranches < oldConditionalBranches) {\n              for (let i = newConditionalBranches ; i < oldConditionalBranches ; i++) {\n                nodes = deleteNodeSubtree(nodes, node, i);\n              }\n            }\n          }\n          return nodes;\n        };\n      })\n    ).subscribe(this._nodesUpdates);\n  }\n\n  private _initDeleteNode(): void {\n    (<Observable<AjfFormBuilderNodeEntry>>this._deleteNodeEntryEvent).pipe(\n      map((nodeEntry: AjfFormBuilderNodeEntry) => {\n        this._beforeNodesUpdate.emit();\n        return (nodes: AjfNode[]): AjfNode[] => {\n          const node = nodeEntry.node;\n          let cn = getNodeContainer({nodes}, node);\n          if (cn != null) {\n            if (cn instanceof AjfNode) {\n              const idx = cn.nodes.indexOf(node);\n              let newNodes = cn.nodes.slice(0, idx);\n              newNodes = newNodes.concat(cn.nodes.slice(idx + 1));\n              cn.nodes = newNodes;\n              nodes = nodes.slice(0);\n            } else {\n              const idx = nodes.indexOf(node);\n              nodes = nodes.slice(0, idx).concat(nodes.slice(idx + 1));\n            }\n            nodes = deleteNodeSubtree(nodes, node);\n          }\n          return nodes;\n        };\n      })\n    ).subscribe(this._nodesUpdates);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\n\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {IAjfChoicesOrigin} from '@ajf/core/forms';\n\nimport {AjfFbChoicesOriginEditor} from './choices-origin-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-choices-origin-editor-dialog',\n  templateUrl: 'choices-origin-editor-dialog.html',\n  styleUrls: ['choices-origin-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbChoicesOriginEditorDialog {\n  @ViewChild(AjfFbChoicesOriginEditor) editor: AjfFbChoicesOriginEditor;\n\n  private _choicesOrigin: Observable<IAjfChoicesOrigin>;\n  get choicesOrigin(): Observable<IAjfChoicesOrigin> { return this._choicesOrigin; }\n\n  constructor(private _service: AjfFormBuilderService) {\n    this._choicesOrigin = this._service.editedChoicesOrigin.pipe(\n      filter(c => c != null),\n      map(c => c!)\n    );\n  }\n\n  saveChoicesOrigin(): void {\n    this._service.saveChoicesOrigin({\n      label: this.editor.label,\n      name: this.editor.name,\n      choices: this.editor.choicesArr\n    });\n  }\n\n  cancelChoicesOriginEdit(): void {\n    this._service.cancelChoicesOriginEdit();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  Component, ChangeDetectionStrategy, Input, ViewChild, ViewEncapsulation\n} from '@angular/core';\n\nimport {AjfValidatedProperty} from '@ajf/core/models';\nimport {AjfField, AjfFieldType, AjfValidationService} from '@ajf/core/forms';\nimport {AjfMonacoEditor} from '@ajf/material/monaco-editor';\n\n\ndeclare var monaco: any;\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-condition-editor',\n  templateUrl: 'fb-condition-editor.html',\n  styleUrls: ['fb-condition-editor.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class AjfFbConditionEditor {\n  @ViewChild(AjfMonacoEditor) monacoEditor: AjfMonacoEditor;\n\n  private _fields: AjfField[];\n  get fields(): AjfField[] { return this._fields; }\n  @Input() set fields(fields: AjfField[]) {\n    this._fields = fields;\n    this._updateVariables();\n  }\n  @Input() condition: string;\n\n  editedValue: string;\n\n  constructor(_: AjfValidationService) { }\n\n  insertVariable(variable: string): void {\n    if (this.monacoEditor != null && this.monacoEditor.editor != null) {\n      const editor = this.monacoEditor.editor;\n      let value: string[] = editor.getValue().split('\\n');\n      let position: {column: number, lineNumber: number} = editor.getPosition();\n      const ln = position.lineNumber - 1;\n      let line = value[ln];\n      let col = position.column - 1;\n      line = line.substring(0, col) + variable + line.substring(col);\n      value[ln] = line;\n      position.column += variable.length;\n      this.monacoEditor.value = value.join('\\n');\n      editor.setPosition(position);\n      editor.focus();\n      this.editedValue = editor.getValue();\n    }\n  }\n\n  onEditorInit(): void {\n    monaco.languages.typescript.javascriptDefaults.setDiagnosticsOptions({\n      noSemanticValidation: false,\n      noSyntaxValidation: false\n    });\n\n    monaco.languages.typescript.javascriptDefaults.setCompilerOptions({\n      target: monaco.languages.typescript.ScriptTarget.ES2015,\n      allowNonTsExtensions: true,\n      allowJs: true,\n      module: monaco.languages.typescript.ModuleKind.None\n    });\n\n    try {\n      monaco.languages.typescript.javascriptDefaults.addExtraLib(\n        '', 'condition-editor-variables.d.ts'\n      );\n    } catch (e) {\n      monaco.languages.typescript.javascriptDefaults\n          ._extraLibs['condition-editor-variables.d.ts'] = '';\n    }\n\n    try {\n      monaco.languages.typescript.javascriptDefaults.addExtraLib(\n        '', 'condition-editor-functions.d.ts'\n      );\n    } catch (e) {\n      monaco.languages.typescript.javascriptDefaults\n          ._extraLibs['condition-editor-functions.d.ts'] = '';\n    }\n\n    this._updateVariables();\n    this._updateFunctions();\n  }\n\n  private _updateVariables(): void {\n    if (this._fields == null) { return; }\n    try {\n      monaco.languages.typescript.javascriptDefaults\n        ._extraLibs['condition-editor-variables.d.ts'] =\n          this._fields\n            .map((field: AjfField) => {\n              return `declare const ${field.name}: ${this._fieldVarType(field.fieldType)};`;\n            })\n            .join('\\n');\n    } catch (e) { }\n  }\n\n  private _updateFunctions(): void {\n    try {\n      monaco.languages.typescript.javascriptDefaults\n        ._extraLibs['condition-editor-functions.d.ts'] = AjfValidatedProperty.UTIL_FUNCTIONS;\n    } catch (e) { }\n  }\n\n  private _fieldVarType(fieldType: AjfFieldType): string | null {\n    switch (fieldType) {\n      case AjfFieldType.Boolean:\n      return 'boolean';\n      case AjfFieldType.Date:\n      case AjfFieldType.DateInput:\n      case AjfFieldType.Time:\n      return 'Date';\n      case AjfFieldType.Empty:\n      return 'void';\n      case AjfFieldType.Formula:\n      return 'number';\n      case AjfFieldType.MultipleChoice:\n      case AjfFieldType.SingleChoice:\n      return 'any';\n      case AjfFieldType.Number:\n      return 'number';\n      case AjfFieldType.Table:\n      return 'Array';\n      case AjfFieldType.String:\n      case AjfFieldType.Text:\n      return 'string';\n    }\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AjfField} from '@ajf/core/forms';\n\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-condition-editor-dialog',\n  templateUrl: 'condition-editor-dialog.html',\n  styleUrls: ['condition-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbConditionEditorDialog {\n  @ViewChild(AjfFbConditionEditor) editor: AjfFbConditionEditor;\n\n  private _fields: Observable<AjfField[]>;\n  get fields(): Observable<AjfField[]> { return this._fields; }\n\n  condition: string;\n\n  constructor(\n    service: AjfFormBuilderService,\n    public dialogRef: MatDialogRef<AjfFbConditionEditorDialog>\n  ) {\n    this._fields = service.flatFields.pipe(\n      map((fields: AjfField[]) => fields.sort((f1, f2) => f1.name.localeCompare(f2.name)))\n    );\n  }\n\n  saveCondition(): void {\n    if (this.editor == null) { return; }\n    const newValue = this.editor.editedValue;\n    this.dialogRef.close(newValue);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterViewChecked, AfterContentInit, ChangeDetectionStrategy,\n  Component, ElementRef, EventEmitter, Input, OnDestroy,\n  ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\n\nimport {Observable, Subscription} from 'rxjs';\nimport {sample} from 'rxjs/operators';\n\nimport {AjfCondition} from '@ajf/core/models';\nimport {AjfForm, IAjfChoicesOrigin} from '@ajf/core/forms';\nimport {\n  AjfFormBuilderNodeEntry, AjfFormBuilderNodeTypeEntry, AjfFormBuilderService\n} from './form-builder-service';\n\nimport {AjfFbConditionEditorDialog} from './condition-editor-dialog';\nimport {AjfFbChoicesOriginEditorDialog} from './choices-origin-editor-dialog';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-form-builder',\n  templateUrl: 'form-builder.html',\n  styleUrls: ['form-builder.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class AjfFormBuilder implements AfterViewChecked, AfterContentInit, OnDestroy {\n  @ViewChild('designer') designerCont: ElementRef;\n\n  private _form: AjfForm;\n  get form(): AjfForm { return this._form; }\n  @Input() set form(form: AjfForm) {\n    if (this._form !== form) {\n      this._form = form;\n      if (this._init) {\n        this._setCurrentForm();\n      }\n    }\n  }\n\n  private _nodeTypes: AjfFormBuilderNodeTypeEntry[];\n  get nodeTypes(): AjfFormBuilderNodeTypeEntry[] { return this._nodeTypes; }\n\n  private _nodeEntriesTree: Observable<AjfFormBuilderNodeEntry[]>;\n  get nodeEntriesTree(): Observable<AjfFormBuilderNodeEntry[]> { return this._nodeEntriesTree; }\n\n  private _choicesOrigins: Observable<IAjfChoicesOrigin[]>;\n  get choicesOrigins(): Observable<IAjfChoicesOrigin[]> { return this._choicesOrigins; }\n\n  private _vc: EventEmitter<void> = new EventEmitter<void>();\n\n  private _init = false;\n  private _editConditionSub: Subscription = Subscription.EMPTY;\n  private _editConditionDialog: MatDialogRef<AjfFbConditionEditorDialog> | null;\n  private _beforeNodesUpdateSub: Subscription = Subscription.EMPTY;\n  private _editChoicesOriginSub: Subscription = Subscription.EMPTY;\n  private _editChoicesOriginDialog: MatDialogRef<AjfFbChoicesOriginEditorDialog> | null;\n\n  private _lastScrollTop: number;\n\n  constructor(\n    private _service: AjfFormBuilderService,\n    private _dialog: MatDialog\n  ) {\n    this._nodeTypes = _service.availableNodeTypes;\n    this._nodeEntriesTree = _service.nodeEntriesTree;\n    this._choicesOrigins = _service.choicesOrigins;\n    this._editConditionSub = this._service.editedCondition\n      .subscribe((condition: AjfCondition | null) => {\n        if (this._editConditionDialog != null) {\n          this._editConditionDialog.close();\n          this._editConditionDialog = null;\n        }\n        if (condition != null) {\n          this._editConditionDialog = this._dialog.open(\n            AjfFbConditionEditorDialog, {disableClose: true}\n          );\n        }\n      });\n    this._editChoicesOriginSub = this._service.editedChoicesOrigin\n      .subscribe((choicesOrigin: IAjfChoicesOrigin | null) => {\n        if (this._editChoicesOriginDialog != null) {\n          this._editChoicesOriginDialog.close();\n          this._editChoicesOriginDialog = null;\n        }\n        if (choicesOrigin != null) {\n          this._editChoicesOriginDialog = this._dialog.open(\n            AjfFbChoicesOriginEditorDialog, {disableClose: true}\n          );\n        }\n      });\n\n    this._beforeNodesUpdateSub = this._service.beforeNodesUpdate\n      .subscribe(() => {\n        if (this.designerCont == null) { return; }\n        this._lastScrollTop = this.designerCont.nativeElement.scrollTop;\n      });\n\n    this.nodeEntriesTree\n      .pipe(sample((<Observable<void>>this._vc)))\n      .subscribe(() => {\n        if (this.designerCont == null) { return; }\n        this.designerCont.nativeElement.scrollTop = this._lastScrollTop;\n      });\n  }\n\n  ngAfterViewChecked(): void {\n    this._vc.emit();\n  }\n\n  ngAfterContentInit(): void {\n    this._setCurrentForm();\n    this._init = true;\n  }\n\n  ngOnDestroy(): void {\n    this._service.setForm(null);\n    this._editConditionSub.unsubscribe();\n    this._beforeNodesUpdateSub.unsubscribe();\n    this._editChoicesOriginSub.unsubscribe();\n  }\n\n  createChoicesOrigin(): void {\n    this._service.createChoicesOrigin();\n  }\n\n  disableDropPredicate(): boolean {\n    return false;\n  }\n\n  editChoicesOrigin(choicesOrigin: IAjfChoicesOrigin): void {\n    this._service.editChoicesOrigin(choicesOrigin);\n  }\n\n  private _setCurrentForm(): void {\n    this._service.setForm(this._form);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterViewInit, ChangeDetectionStrategy, Component, ElementRef,\n  Input, OnDestroy, QueryList, ViewChildren, ViewEncapsulation\n} from '@angular/core';\nimport {CdkDrag, CdkDragDrop} from '@angular/cdk/drag-drop';\n\nimport {Observable, Subscription} from 'rxjs';\n\nimport {isContainerNode} from '@ajf/core/forms';\nimport {AjfFbBranchLine} from './branch-line';\nimport {\n  AjfFormBuilderEmptySlot, AjfFormBuilderNode, AjfFormBuilderNodeEntry,\n  AjfFormBuilderNodeTypeEntry, AjfFormBuilderService, isSlideNode\n} from './form-builder-service';\n\n\nconst branchColors: string [] = [\n  '#F44336', // RED\n  '#4CAF50', // GREEN\n  '#3F51B5', // INDIGO\n  '#FFC107', // AMBER\n  '#795548', // BROWN\n];\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-node-entry',\n  templateUrl: 'node-entry.html',\n  styleUrls: ['node-entry.css'],\n  host: {\n    '(window.resize)': 'onResize()'\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbNodeEntry implements AfterViewInit, OnDestroy {\n  @ViewChildren(AjfFbBranchLine) branchLines: QueryList<AjfFbBranchLine>;\n  @ViewChildren(AjfFbNodeEntry, {read: ElementRef}) childEntries: QueryList<ElementRef>;\n\n  private _hasContent = false;\n  get hasContent(): boolean { return this._hasContent; }\n\n  private _isFirst = false;\n  get isFirst(): boolean { return this._isFirst; }\n  @Input() set isFirst(isFirst: boolean) { this._isFirst = isFirst; }\n\n  private _isNodeEntry = false;\n  get isNodeEntry(): boolean { return this._isNodeEntry; }\n\n  private _nodeEntry: AjfFormBuilderNode;\n  get nodeEntry(): AjfFormBuilderNode { return this._nodeEntry; }\n  @Input() set nodeEntry(nodeEntry: AjfFormBuilderNode) {\n    this._nodeEntry = nodeEntry;\n    if (nodeEntry != null && (<AjfFormBuilderNodeEntry>nodeEntry).node !== void 0) {\n      const ne = <AjfFormBuilderNodeEntry>nodeEntry;\n      this._isNodeEntry = true;\n      const node = ne.node;\n      this._hasContent = node != null && isContainerNode(node);\n      this._isSlide = false;\n    } else {\n      this._isNodeEntry = false;\n      this._hasContent = false;\n      this._isSlide = isSlideNode((<AjfFormBuilderEmptySlot>nodeEntry).parent);\n    }\n  }\n\n  get realNodeEntry(): AjfFormBuilderNodeEntry {\n    return this._nodeEntry as AjfFormBuilderNodeEntry;\n  }\n\n  private _branchColors: string[] = branchColors.slice(0);\n  get branchColors(): string[] { return this._branchColors; }\n\n  private _dropZones: string[] = ['fbdz-node'];\n  get dropZones(): string[] { return this._dropZones; }\n\n  private _slideDropZones: string[] = ['fbdz-slide'];\n  get slideDropZones(): string[] { return this._slideDropZones; }\n\n  private _originOffset = 0;\n  get originOffset(): number { return this._originOffset; }\n  @Input() set originOffset(originOffset: number) {\n    this._originOffset = originOffset;\n    this._originLeftMargin = `${this._originOffset * 4}px`;\n  }\n  private _originLeftMargin = '0';\n  get originLeftMargin(): string { return this._originLeftMargin; }\n\n  private _firstBranchColor = branchColors[0];\n  get firstBranchColor(): string { return this._firstBranchColor; }\n  @Input() set firstBranchColor(firstBranchColor: string) {\n    const idx = branchColors.indexOf(firstBranchColor);\n    if (idx > 0) {\n      this._firstBranchColor = firstBranchColor;\n      this._branchColors = branchColors.slice(idx).concat(branchColors.slice(0, idx));\n    } else {\n      this._firstBranchColor = branchColors[0];\n      this._branchColors = branchColors.slice(0);\n    }\n  }\n\n  private _currentEditedNode: Observable<AjfFormBuilderNodeEntry | null>;\n  get currentEditedNode(): Observable<AjfFormBuilderNodeEntry | null> {\n    return this._currentEditedNode;\n  }\n\n  private _isSlide = false;\n  private _branchLinesSubscription: Subscription = Subscription.EMPTY;\n  private _childEntriesSubscription: Subscription = Subscription.EMPTY;\n\n  constructor(private _service: AjfFormBuilderService) {\n    this._currentEditedNode = this._service.editedNodeEntry;\n  }\n\n  onResize(): void {\n  }\n\n  edit(): void {\n    if (this.nodeEntry == null || !this.isNodeEntry) { return; }\n    this._service.editNodeEntry(<AjfFormBuilderNodeEntry>this.nodeEntry);\n  }\n\n  delete(): void {\n    if (this.nodeEntry == null || !this.isNodeEntry) { return; }\n    this._service.deleteNodeEntry(<AjfFormBuilderNodeEntry>this.nodeEntry);\n  }\n\n  ngAfterViewInit(): void {\n    this._updateBranchHeights();\n    this._childEntriesSubscription = this.childEntries.changes\n      .subscribe(() => {\n        this._updateBranchHeights();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this._branchLinesSubscription.unsubscribe();\n    this._childEntriesSubscription.unsubscribe();\n  }\n\n  onDropSuccess(evt: CdkDragDrop<AjfFormBuilderNodeTypeEntry>, content = false): void {\n    if (this._nodeEntry == null) { return; }\n    const dd = evt.item.data as AjfFormBuilderNodeTypeEntry;\n    if (dd.nodeType !== void 0 && (!this.isNodeEntry || (this.isNodeEntry && content))) {\n      const emptySlot = content ?\n        {parent: (<AjfFormBuilderNodeEntry>this.nodeEntry).node, parentNode: 0} :\n        <AjfFormBuilderEmptySlot>this._nodeEntry;\n      this._service.insertNode(\n        <AjfFormBuilderNodeTypeEntry>dd,\n        emptySlot.parent,\n        emptySlot.parentNode,\n        content\n      );\n    }\n  }\n\n  disableSlideDropPredicate(item: CdkDrag<AjfFormBuilderNodeTypeEntry>): boolean {\n    return !item.data.isSlide;\n  }\n\n  emptyAreaDropPredicate(item: CdkDrag<AjfFormBuilderNodeTypeEntry>): boolean {\n    if (this._isSlide) {\n      return item.data.isSlide || false;\n    }\n    return !item.data.isSlide;\n  }\n\n  private _updateBranchHeights(): void {\n    if (this.nodeEntry == null || !this.isNodeEntry) { return; }\n    const nodeEntry = <AjfFormBuilderNodeEntry>this.nodeEntry;\n    const branchLines: AjfFbBranchLine[] = this.branchLines.toArray();\n    const sliceIdx = nodeEntry.content != null ? nodeEntry.content.length : 0;\n    const childEntries: ElementRef[] = this.childEntries.toArray().slice(sliceIdx);\n\n    if (branchLines.length != childEntries.length) { return; }\n\n    branchLines.forEach((bl: AjfFbBranchLine, idx: number) => {\n      const ce: ElementRef  = childEntries[idx];\n      bl.height = ce.nativeElement.offsetTop;\n    });\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AjfField} from '@ajf/core/forms';\n\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-validation-condition-editor-dialog',\n  templateUrl: 'validation-condition-editor-dialog.html',\n  styleUrls: ['validation-condition-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbValidationConditionEditorDialog {\n  @ViewChild(AjfFbConditionEditor) editor: AjfFbConditionEditor;\n\n  private _fields: Observable<AjfField[]>;\n  get fields(): Observable<AjfField[]> { return this._fields; }\n\n  condition: string;\n  errorMessage: string;\n\n  constructor(\n    service: AjfFormBuilderService,\n    public dialogRef: MatDialogRef<AjfFbValidationConditionEditorDialog>\n  ) {\n    this._fields = service.flatFields.pipe(\n      map((fields: AjfField[]) => fields.sort((f1, f2) => f1.name.localeCompare(f2.name)))\n    );\n  }\n\n  saveCondition(): void {\n    if (this.editor == null) { return; }\n    const newValue = this.editor.editedValue;\n    this.dialogRef.close({condition: newValue, errorMessage: this.errorMessage});\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AjfField} from '@ajf/core/forms';\n\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-warning-condition-editor-dialog',\n  templateUrl: 'warning-condition-editor-dialog.html',\n  styleUrls: ['warning-condition-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbWarningConditionEditorDialog {\n  @ViewChild(AjfFbConditionEditor) editor: AjfFbConditionEditor;\n\n  private _fields: Observable<AjfField[]>;\n  get fields(): Observable<AjfField[]> { return this._fields; }\n\n  condition: string;\n  warningMessage: string;\n\n  constructor(\n    service: AjfFormBuilderService,\n    public dialogRef: MatDialogRef<AjfFbWarningConditionEditorDialog>\n  ) {\n    this._fields = service.flatFields.pipe(\n      map((fields: AjfField[]) => fields.sort((f1, f2) => f1.name.localeCompare(f2.name)))\n    );\n  }\n\n  saveCondition(): void {\n    if (this.editor == null) { return; }\n    const newValue = this.editor.editedValue;\n    this.dialogRef.close({condition: newValue, warningMessage: this.warningMessage});\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy, Component, EventEmitter, OnDestroy, ViewEncapsulation\n} from '@angular/core';\nimport {AbstractControl, FormBuilder, FormGroup, ValidatorFn, Validators} from '@angular/forms';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\n\nimport {Observable, Subscription} from 'rxjs';\nimport {\n  distinctUntilChanged, filter, map, publishReplay, refCount, withLatestFrom\n} from 'rxjs/operators';\n\nimport {AjfCondition} from '@ajf/core/models';\nimport {\n  AjfField, AjfFieldWithChoices, AjfNode, AjfNumberField, IAjfChoicesOrigin,\n} from '@ajf/core/forms';\n\nimport {AjfFbConditionEditorDialog} from './condition-editor-dialog';\nimport {\n  AjfFormBuilderNodeEntry, AjfFormBuilderService,\n  AjfRepeatingContainerNode, isRepeatingContainerNode\n} from './form-builder-service';\nimport {AjfFbValidationConditionEditorDialog} from './validation-condition-editor-dialog';\nimport {AjfFbWarningConditionEditorDialog} from './warning-condition-editor-dialog';\n\n\nfunction checkRepsValidity(c: AbstractControl): {[key: string]: any} | null {\n  const minReps = c.value.minReps;\n  const maxReps = c.value.maxReps;\n  if (minReps != null && maxReps != null && minReps > maxReps) {\n    return {\n      reps: 'Min repetions cannot be greater than max repetitions'\n    };\n  }\n  return null;\n}\n\nfunction checkValueLimitsValidity(c: AbstractControl): {[key: string]: any} | null {\n  const minValue = c.value.minValue;\n  const maxValue = c.value.maxValue;\n  if (minValue != null && maxValue != null && minValue > maxValue) {\n    return {\n      valueLimit: 'Min value cannot be greater than max value'\n    };\n  }\n  return null;\n}\n\nfunction checkDigitsValidity(c: AbstractControl): {[key: string]: any} | null {\n  const minDigits = c.value.minDigits;\n  const maxDigits = c.value.maxDigits;\n  if (minDigits != null && maxDigits != null && minDigits > maxDigits) {\n    return {\n      digits: 'Min digits cannot be greater than max digits'\n    };\n  }\n  return null;\n}\n\nexport interface ValidationCondition {\n  condition: string;\n  errorMessage: string;\n}\n\nexport interface WarningCondition {\n  condition: string;\n  warningMessage: string;\n}\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-node-properties',\n  templateUrl: 'node-properties.html',\n  styleUrls: ['node-properties.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbNodeProperties implements OnDestroy {\n  private _fieldSizes: {label: string, value: string}[] = [\n    {label: 'Normal', value: 'normal'},\n    {label: 'Small', value: 'small'},\n    {label: 'Smaller', value: 'smaller'},\n    {label: 'Tiny', value: 'tiny'},\n    {label: 'Mini', value: 'mini'}\n  ];\n  get fieldSizes(): {label: string, value: string}[] { return this._fieldSizes; }\n\n  private _nodeEntry: Observable<AjfFormBuilderNodeEntry | null>;\n  get nodeEntry(): Observable<AjfFormBuilderNodeEntry | null> { return this._nodeEntry; }\n\n  private _choicesOrigins: IAjfChoicesOrigin[] = [];\n  get choicesOrigins(): IAjfChoicesOrigin[] { return this._choicesOrigins; }\n\n  private _enabled: Observable<boolean>;\n  get enabled(): Observable<boolean> { return this._enabled; }\n\n  private _propertiesForm: Observable<FormGroup>;\n  get propertiesForm(): Observable<FormGroup> { return this._propertiesForm; }\n\n  private _hasChoices: Observable<boolean>;\n  get hasChoices(): Observable<boolean> { return this._hasChoices; }\n\n  private _curVisibility: string | null;\n  get curVisibility(): string | null { return this._curVisibility; }\n\n  private _curFormulaReps: string | null;\n  get curFormulaReps(): string | null { return this._curFormulaReps; }\n\n  private _curChoicesFilter: string;\n  get curChoicesFilter(): string { return this._curChoicesFilter; }\n\n  private _curForceValue: string | null;\n  get curForceValue(): string | null { return this._curForceValue; }\n\n  private _curFormula: string | null;\n  get curFormula(): string | null { return this._curFormula; }\n\n  private _conditionalBranches: string[] = [];\n  get conditionalBranches(): string[] { return this._conditionalBranches; }\n\n  private _validationConditions: ValidationCondition[] = [];\n  get validationConditions(): ValidationCondition[] { return this._validationConditions; }\n\n  private _warningConditions: WarningCondition[] = [];\n  get warningConditions(): WarningCondition[] { return this._warningConditions; }\n\n  private _nextSlideCondition: string;\n  get nextSlideCondition(): string { return this._nextSlideCondition; }\n\n  private _triggerConditions: string[];\n  get triggerConditions(): string[] { return this._triggerConditions; }\n\n  isRepeatingContainerNode: (node: AjfNode) => boolean = isRepeatingContainerNode;\n\n  private _visibilitySub: Subscription = Subscription.EMPTY;\n  private _conditionalBranchesSub = Subscription.EMPTY;\n  private _formulaRepsSub = Subscription.EMPTY;\n  private _choicesFilterSub = Subscription.EMPTY;\n  private _formulaSub = Subscription.EMPTY;\n  private _forceValueSub = Subscription.EMPTY;\n  private _validationConditionsSub = Subscription.EMPTY;\n  private _warningConditionsSub = Subscription.EMPTY;\n  private _nextSlideConditionSub = Subscription.EMPTY;\n  private _choicesOriginsSub = Subscription.EMPTY;\n  private _triggerConditionsSub = Subscription.EMPTY;\n\n  private _editConditionDialog: MatDialogRef<AjfFbConditionEditorDialog> | null;\n  private _editConditionDialogSub: Subscription = Subscription.EMPTY;\n  private _editValidationConditionDialog: MatDialogRef<AjfFbValidationConditionEditorDialog> | null;\n  private _editValidationConditionDialogSub: Subscription = Subscription.EMPTY;\n  private _editWarningConditionDialog: MatDialogRef<AjfFbWarningConditionEditorDialog> | null;\n  private _editWarningConditionDialogSub: Subscription = Subscription.EMPTY;\n\n  private _editVisibilityEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editVisibilitySub = Subscription.EMPTY;\n\n  private _editConditionalBranchEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editConditionalBranchSub = Subscription.EMPTY;\n\n  private _editFormulaRepsEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editFormulaRepsSub = Subscription.EMPTY;\n\n  private _editChoicesFilterEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editChoicesFilterSub = Subscription.EMPTY;\n\n  private _editFormulaEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editFormulaSub = Subscription.EMPTY;\n\n  private _editForceValueEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editForceValueSub = Subscription.EMPTY;\n\n  private _editValidationConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editValidationConditionSub = Subscription.EMPTY;\n\n  private _addValidationConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _addValidationConditionSub = Subscription.EMPTY;\n\n  private _removeValidationConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _removeValidationConditionSub = Subscription.EMPTY;\n\n  private _editWarningConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editWarningConditionSub = Subscription.EMPTY;\n\n  private _addWarningConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _addWarningConditionSub = Subscription.EMPTY;\n\n  private _removeWarningConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _removeWarningConditionSub = Subscription.EMPTY;\n\n  private _editNextSlideConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editNextSlideConditionSub = Subscription.EMPTY;\n\n  private _editTriggerConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editTriggerConditionSub = Subscription.EMPTY;\n\n  private _addTriggerConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _addTriggerConditionSub = Subscription.EMPTY;\n\n  private _removeTriggerConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _removeTriggerConditionSub = Subscription.EMPTY;\n\n  private _saveEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _saveSub = Subscription.EMPTY;\n\n  constructor(\n    private _service: AjfFormBuilderService,\n    private _dialog: MatDialog,\n    private _fb: FormBuilder\n  ) {\n    this._nodeEntry = _service.editedNodeEntry;\n    this._choicesOriginsSub = _service.choicesOrigins\n      .subscribe((c) => this._choicesOrigins = c || []);\n\n    this._enabled = this._nodeEntry.pipe(map((n) => n != null));\n\n    this._initForm();\n    this._initVisibilityEdit();\n    this._initConditionalBranchEdit();\n    this._initFormulaRepsEdit();\n    this._initChoicesFilterEdit();\n    this._initFormulaEdit();\n    this._initForceValueEdit();\n    this._initValidationConditionEdit();\n    this._initAddValidationCondition();\n    this._initRemoveValidationCondition();\n    this._initWarningConditionEdit();\n    this._initAddWarningCondition();\n    this._initRemoveWarningCondition();\n    this._initNextSlideConditionEdit();\n    this._initTriggerConditionEdit();\n    this._initAddTriggerCondition();\n    this._initRemoveTriggerCondition();\n    this._initSave();\n  }\n\n  editVisibility(): void {\n    this._editVisibilityEvt.emit();\n  }\n\n  editConditionalBranch(idx: number): void {\n    if (idx < 0 || idx >= this._conditionalBranches.length) { return; }\n    this._editConditionalBranchEvt.emit(idx);\n  }\n\n  editFormulaReps(): void {\n    this._editFormulaRepsEvt.emit();\n  }\n\n  editChoicesFilter(): void {\n    this._editChoicesFilterEvt.emit();\n  }\n\n  editFormula(): void {\n    this._editFormulaEvt.emit();\n  }\n\n  editForceValue(): void {\n    this._editForceValueEvt.emit();\n  }\n\n  editValidationCondition(idx: number): void {\n    if (idx < 0 || idx >= this._validationConditions.length) { return; }\n    this._editValidationConditionEvt.emit(idx);\n  }\n\n  addValidationCondition(): void {\n    this._addValidationConditionEvt.emit();\n  }\n\n  removeValidationCondition(idx: number): void {\n    if (idx < 0 || idx >= this._validationConditions.length) { return; }\n    this._removeValidationConditionEvt.emit(idx);\n  }\n\n  editWarningCondition(idx: number): void {\n    if (idx < 0 || idx >= this._warningConditions.length) { return; }\n    this._editWarningConditionEvt.emit(idx);\n  }\n\n  addWarningCondition(): void {\n    this._addWarningConditionEvt.emit();\n  }\n\n  removeWarningCondition(idx: number): void {\n    if (idx < 0 || idx >= this._warningConditions.length) { return; }\n    this._removeWarningConditionEvt.emit(idx);\n  }\n\n  editNextSlideCondition(): void {\n    this._editNextSlideConditionEvt.emit();\n  }\n\n  editTriggerCondition(idx: number): void {\n    if (idx < 0 || idx >= this._triggerConditions.length) { return; }\n    this._editTriggerConditionEvt.emit(idx);\n  }\n\n  addTriggerCondition(): void {\n    this._addTriggerConditionEvt.emit();\n  }\n\n  removeTriggerCondition(idx: number): void {\n    if (idx < 0 || idx >= this._triggerConditions.length) { return; }\n    this._removeTriggerConditionEvt.emit(idx);\n  }\n\n  isField(node: AjfNode): boolean {\n    return node != null && node instanceof AjfField;\n  }\n\n  isNumericField(node: AjfNode): boolean {\n    return node != null && node instanceof AjfNumberField;\n  }\n\n  isFieldWithChoices(node: AjfNode): boolean {\n    return node != null && node instanceof AjfFieldWithChoices;\n  }\n\n  save(): void {\n    this._saveEvt.emit();\n  }\n\n  cancel(): void {\n    this._service.cancelNodeEntryEdit();\n  }\n\n  ngOnDestroy(): void {\n    this._choicesOriginsSub.unsubscribe();\n\n    this._visibilitySub.unsubscribe();\n    this._formulaRepsSub.unsubscribe();\n    this._choicesFilterSub.unsubscribe();\n    this._formulaSub.unsubscribe();\n    this._forceValueSub.unsubscribe();\n    this._validationConditionsSub.unsubscribe();\n    this._warningConditionsSub.unsubscribe();\n    this._triggerConditionsSub.unsubscribe();\n\n    this._editConditionDialogSub.unsubscribe();\n    this._editValidationConditionDialogSub.unsubscribe();\n    this._editWarningConditionDialogSub.unsubscribe();\n\n    this._editChoicesFilterSub.unsubscribe();\n    this._editConditionalBranchSub.unsubscribe();\n    this._editVisibilitySub.unsubscribe();\n    this._editFormulaRepsSub.unsubscribe();\n    this._editFormulaSub.unsubscribe();\n    this._editForceValueSub.unsubscribe();\n    this._editValidationConditionSub.unsubscribe();\n    this._editWarningConditionSub.unsubscribe();\n    this._nextSlideConditionSub.unsubscribe();\n\n    this._addTriggerConditionSub.unsubscribe();\n    this._addValidationConditionSub.unsubscribe();\n    this._addWarningConditionSub.unsubscribe();\n    this._editNextSlideConditionSub.unsubscribe();\n    this._editTriggerConditionSub.unsubscribe();\n    this._removeTriggerConditionSub.unsubscribe();\n    this._removeValidationConditionSub.unsubscribe();\n    this._removeWarningConditionSub.unsubscribe();\n\n    this._saveSub.unsubscribe();\n  }\n\n  private _initSave(): void {\n    this._saveSub = (<Observable<void>>this._saveEvt)\n      .pipe(withLatestFrom(this.propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        const fg = r[1];\n        const val = {...fg.value,\n          conditionalBranches: this._conditionalBranches\n        };\n        this._service.saveNodeEntry(val);\n      });\n  }\n\n  private _initForm(): void {\n    this._propertiesForm = this._nodeEntry.pipe(\n      filter((n) => n != null),\n      map((n) => {\n        if (this._visibilitySub != null) { this._visibilitySub.unsubscribe(); }\n        if (this._conditionalBranchesSub != null) { this._conditionalBranchesSub.unsubscribe(); }\n        n = n!;\n\n        const visibility = n.node.visibility != null ?\n          n.node.visibility.condition : null;\n        const visibilityOpt = n.node.visibility != null ?\n          this._guessVisibilityOpt(n.node.visibility) : null;\n        let controls: any = {\n          name: [n.node.name, Validators.required],\n          label: n.node.label,\n          visibilityOpt: [visibilityOpt, Validators.required],\n          visibility: [visibility, Validators.required],\n          conditionalBranchesNum: n.node.conditionalBranches.length\n        };\n        const validators: ValidatorFn[] = [];\n\n        if (isRepeatingContainerNode(n.node)) {\n          const rn = <AjfRepeatingContainerNode>n.node;\n\n          const formulaReps = rn.formulaReps != null ? rn.formulaReps.formula : null;\n\n          controls.formulaReps = [formulaReps, Validators.required];\n          controls.minReps = rn.minReps;\n          controls.maxReps = rn.maxReps;\n\n          this._curFormulaReps = formulaReps;\n\n          validators.push(checkRepsValidity);\n        }\n\n        if (this.isField(n.node)) {\n          const field = <AjfField>n.node;\n\n          let forceValue: string | null = null;\n          let notEmpty: boolean = false;\n          let validationConditions: ValidationCondition[] = [];\n          if (field.validation != null) {\n            if (field.validation.forceValue != null) {\n              forceValue = field.validation.forceValue.condition;\n            }\n            notEmpty = field.validation.notEmpty != null;\n            validationConditions = (field.validation.conditions || [])\n              .map(c => {\n                return {\n                  condition: c.condition,\n                  errorMessage: c.errorMessage\n                };\n              });\n          }\n\n          let notEmptyW: boolean = false;\n          let warningConditions: WarningCondition[] = [];\n          if (field.warning != null) {\n            notEmptyW = field.warning.notEmpty != null;\n            warningConditions = (field.warning.conditions || [])\n              .map(w => {\n                return {\n                  condition: w.condition,\n                  warningMessage: w.warningMessage\n                };\n              });\n          }\n          const formula = field.formula != null ? field.formula.formula : null;\n\n          controls.description = field.description;\n          controls.defaultValue = field.defaultValue;\n          controls.size = field.size;\n          controls.formula = formula;\n          controls.forceValue = forceValue;\n          controls.notEmpty = notEmpty;\n          controls.validationConditions = [validationConditions, []];\n          controls.notEmptyWarning = notEmptyW;\n          controls.warningConditions = [warningConditions, []];\n          controls.nextSlideCondition = [field.nextSlideCondition];\n\n          this._curForceValue = forceValue;\n          this._curFormula = formula;\n          this._validationConditions = validationConditions;\n          this._warningConditions = warningConditions;\n        }\n\n        if (this.isNumericField(n.node)) {\n          const numField = <AjfNumberField>n.node;\n\n          let minValue: any;\n          let maxValue: any;\n          let minDigits: any;\n          let maxDigits: any;\n          if (numField.validation != null) {\n            if (numField.validation.minValue != null) {\n              minValue = (numField.validation.minValue.condition || '').replace('$value >= ', '');\n            }\n            if (numField.validation.maxValue != null) {\n              maxValue = (numField.validation.maxValue.condition || '').replace('$value <= ', '');\n            }\n            if (numField.validation.minDigits != null) {\n              minDigits = (numField.validation.minDigits.condition || '')\n                .replace('$value.toString().length >= ', '');\n            }\n            if (numField.validation.maxDigits != null) {\n              maxDigits = (numField.validation.maxDigits.condition || '')\n                .replace('$value.toString().length <= ', '');\n            }\n          }\n\n          controls.minValue = minValue;\n          controls.maxValue = maxValue;\n          controls.minDigits = minDigits;\n          controls.maxDigits = maxDigits;\n\n          validators.push(checkValueLimitsValidity);\n          validators.push(checkDigitsValidity);\n        }\n\n        if (this.isFieldWithChoices(n.node)) {\n          const fieldWithChoices = <AjfFieldWithChoices>n.node;\n\n          let triggerConditions: string[] = (fieldWithChoices.triggerConditions || [])\n            .map((c) => c.condition);\n\n          controls.choicesOrigin = fieldWithChoices.choicesOrigin.getName();\n          controls.choicesFilter = fieldWithChoices.choicesFilter != null ?\n            fieldWithChoices.choicesFilter.formula : null;\n          controls.forceExpanded = fieldWithChoices.forceExpanded;\n          controls.forceNarrow = fieldWithChoices.forceNarrow;\n          controls.triggerConditions = triggerConditions;\n\n          this._triggerConditions = triggerConditions;\n        }\n\n        const fg = this._fb.group(controls);\n        fg.setValidators(validators);\n\n        this._conditionalBranches = n.node.conditionalBranches.map(c => c.condition);\n        this._curVisibility = n.node.visibility != null ? n.node.visibility.condition : null;\n\n        this._handleConditionalBranchesChange(fg);\n        this._handleVisibilityChange(fg);\n        this._handleFormulaRepsChange(fg);\n        this._handleChoicesFilterChange(fg);\n        this._handleFormulaChange(fg);\n        this._handleForceValueChange(fg);\n        this._handleValidationCondtionsChange(fg);\n        this._handleWarningCondtionsChange(fg);\n        this._handleNextSlideConditionChange(fg);\n        this._handleTriggerCondtionsChange(fg);\n\n        return fg;\n      }),\n      publishReplay(1),\n      refCount()\n    );\n  }\n\n  private _destroyConditionDialog(): void {\n    if (this._editConditionDialogSub != null) {\n      this._editConditionDialogSub.unsubscribe();\n      this._editConditionDialogSub = Subscription.EMPTY;\n    }\n    if (this._editConditionDialog != null) {\n      this._editConditionDialog.close();\n      this._editConditionDialog = null;\n    }\n  }\n\n  private _destroyValidationConditionDialog(): void {\n    if (this._editValidationConditionDialogSub != null) {\n      this._editValidationConditionDialogSub.unsubscribe();\n      this._editValidationConditionDialogSub = Subscription.EMPTY;\n    }\n    if (this._editValidationConditionDialog != null) {\n      this._editValidationConditionDialog.close();\n      this._editValidationConditionDialog = null;\n    }\n  }\n\n  private _destroyWarningConditionDialog(): void {\n    if (this._editWarningConditionDialogSub != null) {\n      this._editWarningConditionDialogSub.unsubscribe();\n      this._editWarningConditionDialogSub = Subscription.EMPTY;\n    }\n    if (this._editWarningConditionDialog != null) {\n      this._editWarningConditionDialog.close();\n      this._editWarningConditionDialog = null;\n    }\n  }\n\n  private _initRemoveTriggerCondition(): void {\n    this._removeTriggerConditionSub = (<Observable<number>>this._removeTriggerConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['triggerConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        if (vcIdx < 0 || vcIdx >= vcs.length) { return; }\n        vcs.splice(vcIdx, 1);\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initAddTriggerCondition(): void {\n    this._addTriggerConditionSub = (<Observable<void>>this._addTriggerConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['triggerConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        vcs.push('');\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initTriggerConditionEdit(): void {\n    this._editTriggerConditionSub = (<Observable<number>>this._editTriggerConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        this._destroyConditionDialog();\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (vcIdx < 0 || vcIdx >= this._triggerConditions.length || fg == null) { return; }\n        this._editConditionDialog = this._dialog\n          .open(AjfFbConditionEditorDialog);\n        const cmp = this._editConditionDialog.componentInstance;\n        cmp.condition = this._triggerConditions[vcIdx];\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              this._triggerConditions[vcIdx] = cond;\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initRemoveWarningCondition(): void {\n    this._removeWarningConditionSub = (<Observable<number>>this._removeWarningConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['warningConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        if (vcIdx < 0 || vcIdx >= vcs.length) { return; }\n        vcs.splice(vcIdx, 1);\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initAddWarningCondition(): void {\n    this._addWarningConditionSub = (<Observable<void>>this._addWarningConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['warningConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        vcs.push({condition: '', errorMessage: ''});\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initWarningConditionEdit(): void {\n    this._editWarningConditionSub = (<Observable<number>>this._editWarningConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        this._destroyWarningConditionDialog();\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (vcIdx < 0 || vcIdx >= this._warningConditions.length || fg == null) { return; }\n        this._editWarningConditionDialog = this._dialog\n          .open(AjfFbWarningConditionEditorDialog);\n        const cmp = this._editWarningConditionDialog.componentInstance;\n        const w = this._warningConditions[vcIdx];\n        cmp.condition = w.condition;\n        cmp.warningMessage = w.warningMessage;\n        this._editWarningConditionDialogSub = this._editWarningConditionDialog.afterClosed()\n          .subscribe((cond: WarningCondition) => {\n            if (cond !== void 0) {\n              this._warningConditions[vcIdx] = cond;\n            }\n            this._editWarningConditionDialogSub.unsubscribe();\n            this._editWarningConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initRemoveValidationCondition(): void {\n    this._removeValidationConditionSub = (<Observable<number>>this._removeValidationConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['validationConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        if (vcIdx < 0 || vcIdx >= vcs.length) { return; }\n        vcs.splice(vcIdx, 1);\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initAddValidationCondition(): void {\n    this._addValidationConditionSub = (<Observable<void>>this._addValidationConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['validationConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        vcs.push({condition: '', errorMessage: ''});\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initValidationConditionEdit(): void {\n    this._editValidationConditionSub = (<Observable<number>>this._editValidationConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        this._destroyValidationConditionDialog();\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (vcIdx < 0 || vcIdx >= this._validationConditions.length || fg == null) { return; }\n        this._editValidationConditionDialog = this._dialog\n          .open(AjfFbValidationConditionEditorDialog);\n        const cmp = this._editValidationConditionDialog.componentInstance;\n        const v = this._validationConditions[vcIdx];\n        cmp.condition = v.condition;\n        cmp.errorMessage = v.errorMessage;\n        this._editValidationConditionDialogSub = this._editValidationConditionDialog.afterClosed()\n          .subscribe((cond: ValidationCondition) => {\n            if (cond !== void 0) {\n              this._validationConditions[vcIdx] = cond;\n            }\n            this._editValidationConditionDialogSub.unsubscribe();\n            this._editValidationConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initForceValueEdit(): void {\n    this._editForceValueSub = (<Observable<void>>this._editForceValueEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['forceValue'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initNextSlideConditionEdit(): void {\n    this._editNextSlideConditionSub = (<Observable<void>>this._editNextSlideConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['nextSlideCondition'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initFormulaEdit(): void {\n    this._editFormulaSub = (<Observable<void>>this._editFormulaEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['formula'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initFormulaRepsEdit(): void {\n    this._editFormulaRepsSub = (<Observable<void>>this._editFormulaRepsEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['formulaReps'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initChoicesFilterEdit(): void {\n    this._editChoicesFilterSub = (<Observable<void>>this._editChoicesFilterEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['choicesFilter'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initConditionalBranchEdit(): void {\n    this._editConditionalBranchSub = (<Observable<number>>this._editConditionalBranchEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        this._destroyConditionDialog();\n        const cbIdx = r[0];\n        const fg = r[1];\n        if (cbIdx < 0 || cbIdx >= this._conditionalBranches.length || fg == null) { return; }\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = this._conditionalBranches[cbIdx];\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              this._conditionalBranches[cbIdx] = cond;\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initVisibilityEdit(): void {\n    this._editVisibilitySub = (<Observable<void>>this._editVisibilityEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['visibility'];\n        const condition = ctrl.value;\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = condition;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _handleTriggerCondtionsChange(fg: FormGroup): void {\n    this._triggerConditionsSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) =>\n        JSON.stringify(v1.triggerConditions) === JSON.stringify(v2.triggerConditions)))\n      .subscribe((v: any) => {\n        this._triggerConditions = v.triggerConditions;\n      });\n  }\n\n  private _handleWarningCondtionsChange(fg: FormGroup): void {\n    this._warningConditionsSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) =>\n        JSON.stringify(v1.warningConditions) === JSON.stringify(v2.warningConditions)))\n      .subscribe((v: any) => {\n        this._warningConditions = v.warningConditions;\n      });\n  }\n\n  private _handleValidationCondtionsChange(fg: FormGroup): void {\n    this._validationConditionsSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) =>\n        JSON.stringify(v1.validationConditions) === JSON.stringify(v2.validationConditions)))\n      .subscribe((v: any) => {\n        this._validationConditions = v.validationConditions;\n      });\n  }\n\n  private _handleForceValueChange(fg: FormGroup): void {\n    this._forceValueSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.forceValue === v2.forceValue))\n      .subscribe((v: any) => {\n        this._curForceValue = v.forceValue;\n      });\n  }\n\n  private _handleNextSlideConditionChange(fg: FormGroup): void {\n    this._formulaSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.nextSlideCondition === v2.nextSlideCondition))\n      .subscribe((v: any) => {\n        this._nextSlideCondition = v.nextSlideCondition;\n      });\n  }\n\n  private _handleFormulaChange(fg: FormGroup): void {\n    this._formulaSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.formula === v2.formula))\n      .subscribe((v: any) => {\n        this._curFormula = v.formula;\n      });\n  }\n\n  private _handleFormulaRepsChange(fg: FormGroup): void {\n    this._formulaRepsSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.formulaReps === v2.formulaReps))\n      .subscribe((v: any) => {\n        this._curFormulaReps = v.formulaReps;\n      });\n  }\n\n  private _handleChoicesFilterChange(fg: FormGroup): void {\n    this._choicesFilterSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.choicesFilter === v2.choicesFilter))\n      .subscribe((v: any) => {\n        this._curChoicesFilter = v.choicesFilter;\n      });\n  }\n\n  private _handleConditionalBranchesChange(fg: FormGroup): void {\n    this._conditionalBranchesSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) =>\n          v1.conditionalBranchesNum === v2.conditionalBranchesNum))\n      .subscribe((v: any) => {\n        const cbNum: number = v.conditionalBranchesNum;\n        const curCbNum = this._conditionalBranches.length;\n        if (curCbNum < cbNum) {\n          let newCbs: string[] = [];\n          for (let i = curCbNum ; i < cbNum ; i++) {\n            newCbs.push(AjfCondition.alwaysCondition().condition);\n          }\n          this._conditionalBranches = this._conditionalBranches.concat(newCbs);\n        } else if (curCbNum > cbNum) {\n          this._conditionalBranches.splice(0, curCbNum - cbNum);\n        }\n      });\n  }\n\n  private _handleVisibilityChange(fg: FormGroup): void {\n    this._visibilitySub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.visibilityOpt === v2.visibilityOpt))\n      .subscribe((v) => {\n        const visibilityOpt = v.visibilityOpt;\n        let newCondition: string | null;\n        switch (visibilityOpt) {\n          case 'always':\n          newCondition = AjfCondition.alwaysCondition().condition;\n          break;\n          case 'never':\n          newCondition = AjfCondition.neverCondition().condition;\n          break;\n          default:\n          newCondition = null;\n        }\n        this._curVisibility = newCondition;\n        fg.controls['visibility'].setValue(newCondition);\n      });\n  }\n\n  private _guessVisibilityOpt(condition: AjfCondition): string {\n    if (condition.condition.localeCompare(AjfCondition.alwaysCondition().condition) === 0) {\n      return 'always';\n    }\n    if (condition.condition.localeCompare(AjfCondition.neverCondition().condition) === 0) {\n      return 'never';\n    }\n    return 'condition';\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation\n} from '@angular/core';\n\nimport {AjfFormBuilderNodeTypeEntry} from './form-builder-service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-node-type-entry',\n  templateUrl: 'node-type-entry.html',\n  styleUrls: ['node-type-entry.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbNodeTypeEntry {\n  private _nodeType: AjfFormBuilderNodeTypeEntry;\n  get nodeType(): AjfFormBuilderNodeTypeEntry { return this._nodeType; }\n  @Input()\n  set nodeType(nodeType: AjfFormBuilderNodeTypeEntry) {\n    this._nodeType = nodeType;\n    this._cdr.markForCheck();\n  }\n\n  constructor(private _cdr: ChangeDetectorRef) { }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\nimport {TranslateModule} from '@ngx-translate/core';\n\nimport {AjfMonacoEditorModule} from '@ajf/material/monaco-editor';\nimport {AjfNodeIconModule} from '@ajf/material/node-icon';\n\nimport {AjfFbBranchLine} from './branch-line';\nimport {AjfFbChoicesOriginEditorDialog} from './choices-origin-editor-dialog';\nimport {AjfFbChoicesOriginEditor} from './choices-origin-editor';\nimport {AjfFbConditionEditorDialog} from './condition-editor-dialog';\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilder} from './form-builder';\nimport {AjfFormBuilderService} from './form-builder-service';\nimport {AjfFbNodeEntry} from './node-entry';\nimport {AjfFbNodeProperties} from './node-properties';\nimport {AjfFbNodeTypeEntry} from './node-type-entry';\nimport {AjfFbValidationConditionEditorDialog} from './validation-condition-editor-dialog';\nimport {AjfFbWarningConditionEditorDialog} from './warning-condition-editor-dialog';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DragDropModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatTableModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    TranslateModule,\n    AjfMonacoEditorModule,\n    AjfNodeIconModule,\n  ],\n  declarations: [\n    AjfFbBranchLine,\n    AjfFbChoicesOriginEditorDialog,\n    AjfFbChoicesOriginEditor,\n    AjfFbConditionEditorDialog,\n    AjfFbConditionEditor,\n    AjfFbNodeEntry,\n    AjfFbNodeProperties,\n    AjfFbNodeTypeEntry,\n    AjfFbValidationConditionEditorDialog,\n    AjfFbWarningConditionEditorDialog,\n    AjfFormBuilder,\n  ],\n  exports: [\n    AjfFormBuilder,\n  ],\n  entryComponents: [\n    AjfFbChoicesOriginEditorDialog,\n    AjfFbConditionEditorDialog,\n    AjfFbValidationConditionEditorDialog,\n    AjfFbWarningConditionEditorDialog,\n  ],\n  providers: [\n    AjfFormBuilderService\n  ]\n})\nexport class AjfFormBuilderModule { }\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","AjfFbBranchLine","_el","_renderer","_offset","_height","defineProperty","offset","_updateOffset","color","_color","_updateColor","height","_updateHeight","Math","max","setStyle","nativeElement","margin","type","Component","args","selector","template","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","propDecorators","Input","ChoicesOriginDataSource","_super","_this","_choices","BehaviorSubject","_choicesObs","asObservable","__","constructor","create","tslib_1.__extends","connect","disconnect","updateChoices","choices","next","DataSource","AjfFbChoicesOriginEditor","_displayedColumns","editing","_choicesArr","_choicesOrigin","choicesOrigin","name","getName","label","getLabel","canEditChoices","AjfChoicesFixedOrigin","getChoices","updateValue","evt","cell","_value","rowIdx","target","value","deleteRow","splice","addRow","push","isContainerNode","node","AjfSlide","AjfRepeatingSlide","AjfNodeGroup","isRepeatingContainerNode","isSlideNode","getNodeContainer","c","nodes","indexOf","cns","filter","len","cn","buildFormBuilderNodesSubtree","parent","ignoreConditionalBranches","entries","id","sort","n1","n2","parentNode","map","children","content","buildFormBuilderNodesContent","entriesNum","cbs","conditionalBranches","_nodes","flattenNodes","flatNodes","forEach","concat","getDescendants","branch","deleteNodeSubtree","delNodes","descendants","removeNodes","ids","container","nodeUniqueId","AjfFormBuilderService","_availableNodeTypes","icon","fontSet","fontIcon","nodeType","isSlide","AjfStringField","AjfTextField","AjfNumberField","AjfBooleanField","AjfSingleChoiceField","AjfMultipleChoiceField","AjfFormulaField","AjfDateField","AjfDateInputField","AjfTimeField","AjfTableField","_form","_formObs","_editedNodeEntry","_editedNodeEntryObs","_editedCondition","_editedConditionObs","_editedChoicesOrigin","_editedChoicesOriginObs","_beforeNodesUpdate","EventEmitter","_beforeNodesUpdateObs","_afterNodeUpdate","_afterNodeUpdateObs","_nodesUpdates","Subject","_attachmentsOriginsUpdates","_choicesOriginsUpdates","_saveNodeEntryEvent","_deleteNodeEntryEvent","_initChoicesOriginsStreams","_initAttachmentsOriginsStreams","_initNodesStreams","_initFormStreams","_initSaveNode","_initDeleteNode","_attachmentsOrigins","_choicesOrigins","_flatNodes","_flatFields","_nodeEntriesTree","setForm","form","getValue","editNodeEntry","nodeEntry","editCondition","condition","saveCurrentCondition","cancelConditionEdit","insertNode","inContent","emit","AjfNode","newNodes","slice","saveNodeEntry","properties","cancelNodeEntryEdit","deleteNodeEntry","getCurrentForm","pipe","withLatestFrom","r","AjfForm","choicesOrigins","attachmentsOrigins","stringIdentifier","editChoicesOrigin","createChoicesOrigin","cancelChoicesOriginEdit","saveChoicesOrigin","params","setLabel","setName","setChoices","_findMaxNodeId","_curMaxId","maxId","subscribe","scan","op","publishReplay","refCount","rootNodes","rootNode","tree","Error","editedNodeEntry","origNode","fromJson","toJson","visibility","AjfCondition","oldConditionalBranches","alwaysCondition","newConditionalBranches","repNode","formulaReps","AjfFormula","formula","minReps","maxReps","AjfField","field","description","defaultValue","forceValue","notEmpty","validationConditions","minValue","parseInt","maxValue","minDigits","maxDigits","isNaN","validation","AjfValidationGroup","AjfValidation","getNotEmptyCondition","getMinCondition","getMaxCondition","getMinDigitsCondition","getMaxDigitsCondition","conditions","errorMessage","notEmptyWarning","warningConditions","warning","AjfWarningGroup","AjfWarning","getNotEmptyWarning","w","warningMessage","nextSlideCondition","AjfFieldWithChoices","fwc","coIdx","coNum","forceExpanded","forceNarrow","triggerConditions","idx","Injectable","AjfFbChoicesOriginEditorDialog","_service","editedChoicesOrigin","editor","choicesArr","AjfFbConditionEditor","_","_fields","fields","_updateVariables","insertVariable","variable","monacoEditor","split","position","getPosition","ln","lineNumber","line","col","column","substring","join","setPosition","focus","editedValue","onEditorInit","monaco","languages","typescript","javascriptDefaults","setDiagnosticsOptions","noSemanticValidation","noSyntaxValidation","setCompilerOptions","ScriptTarget","ES2015","allowNonTsExtensions","allowJs","module","ModuleKind","addExtraLib","e","_extraLibs","_updateFunctions","_fieldVarType","fieldType","AjfValidatedProperty","UTIL_FUNCTIONS","AjfFieldType","Boolean","Date","DateInput","Time","Empty","Formula","MultipleChoice","SingleChoice","Number","Table","String","Text","AjfFbConditionEditorDialog","service","dialogRef","flatFields","f1","f2","localeCompare","saveCondition","newValue","close","AjfFormBuilder","_dialog","_vc","_init","_editConditionSub","Subscription","EMPTY","_beforeNodesUpdateSub","_editChoicesOriginSub","_nodeTypes","availableNodeTypes","nodeEntriesTree","editedCondition","_editConditionDialog","open","disableClose","_editChoicesOriginDialog","beforeNodesUpdate","designerCont","_lastScrollTop","scrollTop","sample","_setCurrentForm","ngAfterViewChecked","ngAfterContentInit","ngOnDestroy","unsubscribe","disableDropPredicate","branchColors","AjfFbNodeEntry","_hasContent","_isFirst","_isNodeEntry","_branchColors","_dropZones","_slideDropZones","_originOffset","_originLeftMargin","_firstBranchColor","_isSlide","_branchLinesSubscription","_childEntriesSubscription","_currentEditedNode","isFirst","_nodeEntry","ne","originOffset","firstBranchColor","onResize","edit","isNodeEntry","delete","ngAfterViewInit","_updateBranchHeights","childEntries","changes","onDropSuccess","dd","item","emptySlot","disableSlideDropPredicate","data","emptyAreaDropPredicate","branchLines","toArray","sliceIdx","bl","ce","offsetTop","host","(window.resize)","AjfFbValidationConditionEditorDialog","AjfFbWarningConditionEditorDialog","checkRepsValidity","reps","checkValueLimitsValidity","valueLimit","checkDigitsValidity","digits","AjfFbNodeProperties","_fb","_fieldSizes","_conditionalBranches","_validationConditions","_warningConditions","_visibilitySub","_conditionalBranchesSub","_formulaRepsSub","_choicesFilterSub","_formulaSub","_forceValueSub","_validationConditionsSub","_warningConditionsSub","_nextSlideConditionSub","_choicesOriginsSub","_triggerConditionsSub","_editConditionDialogSub","_editValidationConditionDialogSub","_editWarningConditionDialogSub","_editVisibilityEvt","_editVisibilitySub","_editConditionalBranchEvt","_editConditionalBranchSub","_editFormulaRepsEvt","_editFormulaRepsSub","_editChoicesFilterEvt","_editChoicesFilterSub","_editFormulaEvt","_editFormulaSub","_editForceValueEvt","_editForceValueSub","_editValidationConditionEvt","_editValidationConditionSub","_addValidationConditionEvt","_addValidationConditionSub","_removeValidationConditionEvt","_removeValidationConditionSub","_editWarningConditionEvt","_editWarningConditionSub","_addWarningConditionEvt","_addWarningConditionSub","_removeWarningConditionEvt","_removeWarningConditionSub","_editNextSlideConditionEvt","_editNextSlideConditionSub","_editTriggerConditionEvt","_editTriggerConditionSub","_addTriggerConditionEvt","_addTriggerConditionSub","_removeTriggerConditionEvt","_removeTriggerConditionSub","_saveEvt","_saveSub","_enabled","_initForm","_initVisibilityEdit","_initConditionalBranchEdit","_initFormulaRepsEdit","_initChoicesFilterEdit","_initFormulaEdit","_initForceValueEdit","_initValidationConditionEdit","_initAddValidationCondition","_initRemoveValidationCondition","_initWarningConditionEdit","_initAddWarningCondition","_initRemoveWarningCondition","_initNextSlideConditionEdit","_initTriggerConditionEdit","_initAddTriggerCondition","_initRemoveTriggerCondition","_initSave","_propertiesForm","_hasChoices","_curVisibility","_curFormulaReps","_curChoicesFilter","_curForceValue","_curFormula","_nextSlideCondition","_triggerConditions","editVisibility","editConditionalBranch","editFormulaReps","editChoicesFilter","editFormula","editForceValue","editValidationCondition","addValidationCondition","removeValidationCondition","editWarningCondition","addWarningCondition","removeWarningCondition","editNextSlideCondition","editTriggerCondition","addTriggerCondition","removeTriggerCondition","isField","isNumericField","isFieldWithChoices","save","cancel","propertiesForm","fg","val","tslib_1.__assign","visibilityOpt","_guessVisibilityOpt","controls","Validators","required","conditionalBranchesNum","validators","rn","notEmptyW","size","numField","replace","fieldWithChoices","choicesFilter","group","setValidators","_handleConditionalBranchesChange","_handleVisibilityChange","_handleFormulaRepsChange","_handleChoicesFilterChange","_handleFormulaChange","_handleForceValueChange","_handleValidationCondtionsChange","_handleWarningCondtionsChange","_handleNextSlideConditionChange","_handleTriggerCondtionsChange","_destroyConditionDialog","_destroyValidationConditionDialog","_editValidationConditionDialog","_destroyWarningConditionDialog","_editWarningConditionDialog","vcIdx","ctrl","vcs","setValue","componentInstance","afterClosed","cond","cmp","v","cbIdx","valueChanges","distinctUntilChanged","v1","v2","JSON","stringify","cbNum","curCbNum","newCbs","newCondition","neverCondition","FormBuilder","AjfFbNodeTypeEntry","_cdr","_nodeType","markForCheck","AjfFormBuilderModule","NgModule","imports","CommonModule","FormsModule","ReactiveFormsModule","DragDropModule","MatButtonModule","MatCardModule","MatCheckboxModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatTableModule","MatToolbarModule","MatTooltipModule","TranslateModule","AjfMonacoEditorModule","AjfNodeIconModule","declarations","exports","entryComponents","providers"],"mappings":";;;;;;;;;;;;;;;;;;;;;u1EAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IASrB,IAAIO,EAAW,WAQlB,OAPAA,EAAWN,OAAOO,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIN,KADTK,EAAIG,UAAUF,GACOV,OAAOc,UAAUT,eAAeU,KAAKN,EAAGL,KAAII,EAAEJ,GAAKK,EAAEL,IAE9E,OAAOI,IAEKQ,MAAMC,KAAML,YCVhCM,EAAA,WA2BE,SAAFA,EAAsBC,EAAyBC,GAAzBH,KAAtBE,IAAsBA,EAAyBF,KAA/CG,UAA+CA,EAlBrCH,KAAVI,QAAoB,EAYVJ,KAAVK,QAAoB,EACpB,OAZEtB,OAAFuB,eAAeL,EAAfJ,UAAA,SAAA,KAAE,SAAoBU,GAClBP,KAAKI,QAAUG,EACfP,KAAKQ,iDAIPzB,OAAFuB,eAAeL,EAAfJ,UAAA,QAAA,KAAE,SAAmBY,GACjBT,KAAKU,OAASD,EACdT,KAAKW,gDAIP5B,OAAFuB,eAAeL,EAAfJ,UAAA,SAAA,KAAE,SAAoBe,GAClBZ,KAAKK,QAAUO,EACfZ,KAAKa,iDAKCZ,EAAVJ,UAAAgB,cAAE,WACF,IAAUD,EAAYE,KAAKC,IAAI,EAAGf,KAAKK,QAAU,IAAjD,KACIL,KAAKG,UAAUa,SAAShB,KAAKE,IAAIe,cAAe,SAAUL,IAGpDX,EAAVJ,UAAAW,cAAE,WACF,IAAUU,EAA2B,EAAflB,KAAKI,QAA3B,KACIJ,KAAKG,UAAUa,SAAShB,KAAKE,IAAIe,cAAe,aAAcC,GAC9DlB,KAAKG,UAAUa,SAAShB,KAAKE,IAAIe,cAAe,cAAeC,IAGzDjB,EAAVJ,UAAAc,aAAE,WACEX,KAAKG,UAAUa,SAAShB,KAAKE,IAAIe,cAAe,eAAgBjB,KAAKU,uBAzCzE,CAAAS,KAACC,EAADA,UAAAC,KAAA,CAAW,CAAXC,SAAA,qBACEC,SAAU,GACVC,OAAQ,CAAV,2JACEC,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,uFARA7B,EAAA8B,eAAA,gDAcAnB,OAAA,CAAA,CAAAO,KAAGa,EAAHA,SAYA/B,EAtBA,GCEAgC,EAAA,SAAAC,GAME,SAAFD,IAAE,IAAFE,EACID,EADJpC,KAAAE,OAAAA,YAJUmC,EAAVC,SACM,IAAIC,EADVA,gBACsD,IAKlDF,EAAKG,YAAcH,EAAKC,SAASG,iBAYrC,OF1BO,SAAmB1D,EAAGC,GAEzB,SAAS0D,IAAOxC,KAAKyC,YAAc5D,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEgB,UAAkB,OAANf,EAAaC,OAAO2D,OAAO5D,IAAM0D,EAAG3C,UAAYf,EAAEe,UAAW,IAAI2C,GEIvEG,CAAZV,EAAAC,GAUED,EAAFpC,UAAA+C,QAAE,WACE,OAAO5C,KAAKsC,aAGdL,EAAFpC,UAAAgD,WAAE,aAEAZ,EAAFpC,UAAAiD,cAAE,SAAcC,GACZ/C,KAAKoC,SAASY,KAAKD,IAEvBd,EApBA,CACYgB,EAmBZA,YCpBAC,EAAA,WAAA,SAAAA,IASUlD,KAAVmD,kBAAwC,CAAC,QAAS,QAAS,UAgBzDnD,KAAFoD,QAAsC,GAK5BpD,KAAVoC,SAA8C,IAAIH,EAGxCjC,KAAVqD,YAAoD,GAnBpD,OAJEtE,OAAFuB,eAAM4C,EAANrD,UAAA,mBAAA,KAAE,WAAmC,OAAOG,KAAKmD,mDAG/CpE,OAAFuB,eAAM4C,EAANrD,UAAA,gBAAA,KAAE,WAAyC,OAAOG,KAAKsD,oBACrD,SACkBC,GAChBvD,KAAKsD,eAAiBC,EACtBvD,KAAKwD,KAAOD,EAAcE,UAC1BzD,KAAK0D,MAAQH,EAAcI,WAE3B3D,KAAK4D,eAAiBL,aAAyBM,EAAnDA,sBACI7D,KAAKqD,YAAcE,EAAcO,aACjC9D,KAAKoC,SAASU,cAAc9C,KAAKqD,8CASnCtE,OAAFuB,eAAM4C,EAANrD,UAAA,UAAA,KAAE,WAAyC,OAAOG,KAAKoC,0CAGrDrD,OAAFuB,eAAM4C,EAANrD,UAAA,aAAA,KAAE,WAA+C,OAAOG,KAAKqD,6CAE3DH,EAAFrD,UAAAkE,YAAE,SAAYC,EAAUC,EAAcC,EAAaC,GAC/CnE,KAAKoD,QAAQe,EAAS,IAAMF,IAAQ,EACnCjE,KAAKqD,YAAYc,GAAgBF,GAAQD,EAAII,OAAOC,MACrDrE,KAAKoC,SAASU,cAAc9C,KAAKqD,cAGnCH,EAAFrD,UAAAyE,UAAE,SAAUH,GACRnE,KAAKqD,YAAYkB,OAAOJ,EAAQ,GAChCnE,KAAKoC,SAASU,cAAc9C,KAAKqD,cAGnCH,EAAFrD,UAAA2E,OAAE,WACExE,KAAKqD,YAAYoB,KAAK,CAACf,MAAO,GAAIW,MAAO,KACzCrE,KAAKoC,SAASU,cAAc9C,KAAKqD,4BAjDrC,CAAAlC,KAACC,EAADA,UAAAC,KAAA,CAAW,CAAXC,SAAA,+BACEC,SAAU,i4DACVC,OAAQ,CAAV,sMACEC,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,WAGAoB,EAAAnB,eAAA,iCAOAmB,EAdA,GCiEA,SAAgBwB,EAAgBC,GAC9B,OAAe,MAARA,IACLA,aAAgBC,EADpBA,UAEID,aAAgBE,EAApBA,mBACIF,aAAgBG,EAApBA,cAKA,SAAgBC,EAAyBJ,GACvC,OAAe,MAARA,IACLA,aAAgBE,EADpBA,mBAEIF,aAAgBG,EAApBA,cAKA,SAAgBE,EAAYL,GAC1B,OAAe,MAARA,IACLA,aAAgBC,EADpBA,UAEID,aAAgBE,EAApBA,mBAKA,SAASI,EAAiBC,EAAuBP,GAC/C,IAA6B,EAAzBO,EAAEC,MAAMC,QAAQT,GAClB,OAAOO,EAIT,IAFF,IAAQG,EAAMH,EAAEC,MAAMG,OAAtB,SAA6B5F,GAAK,OAAAgF,EAAgBhF,KAC1C6F,EAAMF,EAAIzF,OACPH,EAAI,EAAIA,EAAI8F,EAAM9F,IAAK,CAClC,IAAU+F,EAAKP,EAAmCI,EAAI5F,GAAIkF,GACtD,GAAU,MAANa,EAAc,OAAOA,EAE3B,OAAO,KAIT,SAASC,EACPN,EAAkBO,EAAiBC,QAArC,IAAAA,IAAqCA,GAArC,GAEA,IAAQC,EAAgCT,EACnCG,OAAL,SAAY5F,GAAK,OAAAA,EAAEgG,SAAWA,EAAOG,KAChCC,KAAL,SAAWC,EAAIC,GAAO,OAAAD,EAAGE,WAAaD,EAAGC,aACpCC,IAAL,SAASxG,GAAT,MAAA,CACMiF,KAAMjF,EACNyG,SAAUV,EAA6BN,EAAOzF,GAC9C0G,QAASC,EAA6BlB,EAAOzF,MAEjD,IAAKiG,EAGH,IAFJ,IAAUW,EAAaV,EAAQhG,OACrB2G,EAAMb,EAAOc,oBAAoB5G,OAC9BH,EAAI6G,EAAa7G,EAAI8G,EAAM9G,IAClCmG,EAAQnB,KAAK,CACXiB,OAAQA,EACRO,WAAYxG,IAIlB,OAAOmG,EAGT,SAASS,EAA6BI,EAAmB9B,GACvD,OAAID,EAAgBC,GACXc,EAA6B,EAAyBN,MAAOR,GAAM,GAErE,GAwBT,SAAgB+B,EAAavB,GAC7B,IAAMwB,EAAuB,GAS3B,OAPAxB,EAAMyB,QAAR,SAAiBjC,GACTD,EAAgBC,KAClBgC,EAAYA,EAAUE,OAAOH,EAAa,EAAyBvB,SAErEwB,EAAUlC,KAAKE,KAGVgC,EAGT,SAASG,EACPH,EAAsBV,EAAqBc,GAE3C,YAFF,IAAAA,IAA6CA,EAA7C,MAEmB,MAAVA,EACLJ,EAAUrB,OAAd,SAAqB5F,GAAK,OAAAA,EAAEgG,SAAWO,EAAWJ,IAAMnG,EAAEuG,aAAec,IACrEJ,EAAUrB,OAAd,SAAqB5F,GAAK,OAAAA,EAAEgG,SAAWO,EAAWJ,KAelD,SAASmB,EACP7B,EAAkBc,EAAqBc,QAAzC,IAAAA,IAAyCA,EAAzC,MAME,IAJF,IAAQJ,EAAYD,EAAavB,GAC3B8B,EAAsB,GACtBC,EAAcJ,EAAeH,EAAWV,EAAYc,GAClDxB,EAAM2B,EAAYtH,OACfH,EAAI,EAAIA,EAAI8F,EAAM9F,IACzBwH,EAAWA,EAASJ,OAAOC,EAAeH,EAAWO,EAAYzH,KAGnE,OAvBF,SAAS0H,EAAYhC,EAAkBiC,GAErC,IADF,IAAQ7B,EAAMJ,EAAMvF,OACTH,EAAI,EAAIA,EAAI8F,EAAM9F,IAAK,CAClC,IAAUkF,EAAOQ,EAAM1F,GACnB,GAAIiF,EAAgBC,GAAO,CAC/B,IAAY0C,EAAZ,EACMA,EAAUlC,MAAQgC,EAAYE,EAAUlC,MAAOiC,IAGnD,OAAOjC,EAAMG,OAAf,SAAsB5F,GAAK,OAAuB,IAAvB0H,EAAIhC,QAAQ1F,EAAEmG,MAchCsB,CAAYhC,GADnB8B,EAAWA,EAASJ,OAAOK,IACQhB,IAArC,SAAyCxG,GAAK,OAAAA,EAAEmG,MAGhD,IAAIyB,EAAe,EAGnBC,EAAA,WA2GE,SAAFA,IAzGUvH,KAAVwH,oBAA+D,CAC3D,CAAE9D,MAAO,QAAS+D,KAAM,CAACC,QAAS,WAAYC,SAAU,eAAiBC,SAAUhD,EAAvFA,SACMiD,SAAS,GACX,CAAEnE,MAAO,kBAAmB+D,KAAM,CAAEC,QAAS,WAAYC,SAAU,wBACjEC,SAAU/C,EAAhBA,kBAAmCgD,SAAS,GACxC,CAAEnE,MAAO,SAAU+D,KAAM,CAAEC,QAAS,WAAYC,SAAU,gBACxDC,SAAUE,EAAhBA,gBACI,CAAEpE,MAAO,OAAQ+D,KAAM,CAAEC,QAAS,WAAYC,SAAU,cACtDC,SAAUG,EAAhBA,cACI,CAAErE,MAAO,SAAU+D,KAAM,CAAEC,QAAS,WAAYC,SAAU,gBACxDC,SAAUI,EAAhBA,gBACI,CAAEtE,MAAO,UAAW+D,KAAM,CAAEC,QAAS,WAAYC,SAAU,iBACzDC,SAAUK,EAAhBA,iBACI,CAAEvE,MAAO,gBAAiB+D,KAAM,CAAEC,QAAS,WAAYC,SAAU,sBAC/DC,SAAUM,EAAhBA,sBACI,CAAExE,MAAO,kBAAmB+D,KAAM,CAAEC,QAAS,WAAYC,SAAU,wBACjEC,SAAUO,EAAhBA,wBACI,CAAEzE,MAAO,UAAW+D,KAAM,CAAEC,QAAS,WAAYC,SAAU,iBACzDC,SAAUQ,EAAhBA,iBACI,CAAE1E,MAAO,OAAQ+D,KAAM,CAAEC,QAAS,WAAYC,SAAU,cACtDC,SAAUS,EAAhBA,cACI,CAAE3E,MAAO,aAAc+D,KAAM,CAAEC,QAAS,WAAYC,SAAU,mBAC5DC,SAAUU,EAAhBA,mBACI,CAAE5E,MAAO,OAAQ+D,KAAM,CAAEC,QAAS,WAAYC,SAAU,cACtDC,SAAUW,EAAhBA,cACI,CAAE7E,MAAO,QAAS+D,KAAM,CAAEC,QAAS,WAAYC,SAAU,eACvDC,SAAUY,EAAhBA,gBAUUxI,KAAVyI,MAAmD,IAAIpG,EAAvDA,gBAAuF,MAC7ErC,KAAV0I,SAAiD1I,KAAKyI,MAAMlG,eA6BlDvC,KAAV2I,iBACI,IAAItG,EADRA,gBACwD,MAC9CrC,KAAV4I,oBACI5I,KAAK2I,iBAAiBpG,eAKhBvC,KAAV6I,iBACI,IAAIxG,EADRA,gBAC6C,MACnCrC,KAAV8I,oBACI9I,KAAK6I,iBAAiBtG,eAGhBvC,KAAV+I,qBACI,IAAI1G,EADRA,gBACkD,MACxCrC,KAAVgJ,wBACIhJ,KAAK+I,qBAAqBxG,eAKpBvC,KAAViJ,mBAAmD,IAAIC,EAAvDA,aACUlJ,KAAVmJ,sBAAoDnJ,KAAKiJ,mBAAmB1G,eAElEvC,KAAVoJ,iBAAiD,IAAIF,EAArDA,aACUlJ,KAAVqJ,oBAAkDrJ,KAAKoJ,iBAAiB7G,eAG9DvC,KAAVsJ,cAAuD,IAAIC,EAA3DA,QACUvJ,KAAVwJ,2BACI,IAAID,EADRA,QAEUvJ,KAAVyJ,uBACI,IAAIF,EADRA,QAGUvJ,KAAV0J,oBAAmD,IAAIR,EAAvDA,aACUlJ,KAAV2J,sBACI,IAAIT,EADRA,aAIIlJ,KAAK4J,6BACL5J,KAAK6J,iCACL7J,KAAK8J,oBACL9J,KAAK+J,mBACL/J,KAAKgK,gBACLhK,KAAKiK,kBAoXT,OAjcElL,OAAFuB,eAAMiH,EAAN1H,UAAA,qBAAA,KAAE,WAA0D,OAAOG,KAAKwH,qDAUtEzI,OAAFuB,eAAMiH,EAAN1H,UAAA,OAAA,KAAE,WAAyC,OAAOG,KAAK0I,0CAGrD3J,OAAFuB,eAAMiH,EAAN1H,UAAA,qBAAA,KAAE,WAA+D,OAAOG,KAAKkK,qDAG3EnL,OAAFuB,eAAMiH,EAAN1H,UAAA,iBAAA,KAAE,WAAwD,OAAOG,KAAKmK,iDAGpEpL,OAAFuB,eAAMiH,EAAN1H,UAAA,QAAA,KAAE,WAAqC,OAAOG,KAAKyG,wCAGjD1H,OAAFuB,eAAMiH,EAAN1H,UAAA,YAAA,KAAE,WACE,OAAOG,KAAKoK,4CAIdrL,OAAFuB,eAAMiH,EAAN1H,UAAA,aAAA,KAAE,WAA2C,OAAOG,KAAKqK,6CAGvDtL,OAAFuB,eAAMiH,EAAN1H,UAAA,kBAAA,KAAE,WAA+D,OAAOG,KAAKsK,kDAM3EvL,OAAFuB,eAAMiH,EAAN1H,UAAA,kBAAA,KAAE,WACE,OAAOG,KAAK4I,qDAOd7J,OAAFuB,eAAMiH,EAAN1H,UAAA,kBAAA,KAAE,WAAyD,OAAOG,KAAK8I,qDAMrE/J,OAAFuB,eAAMiH,EAAN1H,UAAA,sBAAA,KAAE,WACE,OAAOG,KAAKgJ,yDAKdjK,OAAFuB,eAAMiH,EAAN1H,UAAA,oBAAA,KAAE,WAA4C,OAAOG,KAAKmJ,uDAGxDpK,OAAFuB,eAAMiH,EAAN1H,UAAA,kBAAA,KAAE,WAA0C,OAAOG,KAAKqJ,qDA4BtD9B,EAAF1H,UAAA0K,QAAE,SAAQC,GACFA,IAASxK,KAAKyI,MAAMgC,YACtBzK,KAAKyI,MAAMzF,KAAKwH,IAIpBjD,EAAF1H,UAAA6K,cAAE,SAAcC,GACZ3K,KAAK2I,iBAAiB3F,KAAK2H,IAG7BpD,EAAF1H,UAAA+K,cAAE,SAAcC,GACZ7K,KAAK6I,iBAAiB7F,KAAK6H,IAG7BtD,EAAF1H,UAAAiL,qBAAE,SAAqBD,GACvB,IAAQ3F,EAAIlF,KAAK6I,iBAAiB4B,WACrB,MAALvF,IACJA,EAAE2F,UAAYA,EACd7K,KAAK6I,iBAAiB7F,KAAK,QAG7BuE,EAAF1H,UAAAkL,oBAAE,WACE/K,KAAK+I,qBAAqB/F,KAAK,OAGjCuE,EAAF1H,UAAAmL,WAAE,SACEpD,EACAlC,EACAO,EACAgF,QAAJ,IAAAA,IAAIA,GAAJ,GAEA,IAAQtG,EAAO,IAAIiD,EAASA,SAAS,CAC/B/B,KAAMyB,EACN5B,OAAQA,EAAOG,GACfI,WAANA,IAEIjG,KAAKiJ,mBAAmBiC,OACxBlL,KAAKsJ,cAActG,KAAvB,SAA6BmC,GAC7B,IAAYK,EAAKd,EAAgBgB,IAAWuF,EAC5C,EACQhG,EAAiB,CAACE,MAA1BA,GAAkCO,GAC5B,GAAU,MAANF,EACF,GAAIA,aAAc2F,EAA1BA,QAAmC,CACnC,IAAgBC,EAAW5F,EAAGL,MAAMkG,MAAM,GAChCD,EAAS3G,KAAKE,GACda,EAAGL,MAAQiG,OAEX5F,EAAGL,MAAMV,KAAKE,GAGlB,OAAOQ,KAIXoC,EAAF1H,UAAAyL,cAAE,SAAcC,GACZvL,KAAK0J,oBAAoBwB,KAAKK,IAGhChE,EAAF1H,UAAA2L,oBAAE,WACExL,KAAK2I,iBAAiB3F,KAAK,OAG7BuE,EAAF1H,UAAA4L,gBAAE,SAAgBd,GACd3K,KAAK2J,sBAAsB3G,KAAK2H,IAGlCpD,EAAF1H,UAAA6L,eAAE,WACE,OAAO1L,KAAKyI,MAAMkD,KAChBC,EADNA,eACqB5L,KAAKyG,QACpBnB,EAFNA,OAAA,SAEcuG,GAAM,OAAQ,MAARA,EAAE,KAChB3F,EADNA,IAAA,SACW2F,GACX,IAAcrB,EAAOqB,EAAE,GACT1G,EAAQ0G,EAAE,GAChB,OAAO,IAAIC,EAAnBA,QAA2B,CACjBC,eAAgBvB,EAAKuB,eAAeV,MAAM,GAC1CW,mBAAoBxB,EAAKwB,mBAAmBX,MAAM,GAClDY,iBAAkBzB,EAAKyB,iBAAiBZ,MAAM,GAC9ClG,MAAOA,EAAMkG,MAAM,SAM3B9D,EAAF1H,UAAAqM,kBAAE,SAAkB3I,GAChBvD,KAAK+I,qBAAqB/F,KAAKO,IAGjCgE,EAAF1H,UAAAsM,oBAAE,WACEnM,KAAK+I,qBAAqB/F,KAAK,IAAIa,EAAvCA,wBAGE0D,EAAF1H,UAAAuM,wBAAE,WACEpM,KAAK+I,qBAAqB/F,KAAK,OAGjCuE,EAAF1H,UAAAwM,kBAAE,SAAkBC,GACpB,IAAU/I,EAAgBvD,KAAK+I,qBAAqB0B,WAC3B,MAAjBlH,IACFA,EAAcgJ,SAASD,EAAO5I,OAC9BH,EAAciJ,QAAQF,EAAO9I,MACzBD,aAAyBM,EAAnCA,uBACQN,EAAckJ,WAAWH,EAAOvJ,UAGpC/C,KAAK+I,qBAAqB/F,KAAK,OAGzBuE,EAAV1H,UAAA6M,eAAE,SAAuBvH,EAAkBwH,GAAzC,IAAFxK,EAAAnC,UAAA,IAAA2M,IAA2CA,EAA3C,GACA,IAAQC,EAAQ,EAOZ,OANAzH,EAAMyB,QAAV,SAAmBlH,GACbkN,EAAQ9L,KAAKC,IAAI6L,EAAOlN,EAAEmG,IACtBnB,EAAgBhF,KAClBkN,EAAQ9L,KAAKC,IAAI6L,EAAOzK,EAAKuK,eAAe,EAAsBvH,WAG/DyH,GAGDrF,EAAV1H,UAAAkK,iBAAE,WAAA,IAAF5H,EAAAnC,KACIA,KAAKyI,MACFoE,UAAP,SAAkBrC,GACVlD,EAAe,EACH,MAARkD,GAA8B,MAAdA,EAAKrF,OAAqC,EAApBqF,EAAKrF,MAAMvF,SACnD0H,EAAenF,EAAKuK,eAAelC,EAAKrF,QAE1ChD,EAAKmH,cAActG,KAA3B,SACWyD,GACC,OAAe,MAAR+D,GAA8B,MAAdA,EAAKrF,MAAgBqF,EAAKrF,MAAMkG,MAAM,GAAK,KAGtElJ,EAAKqH,2BAA2BxG,KAAxC,SACWkH,GACC,OAAe,MAARM,GAA2C,MAA3BA,EAAKwB,mBAC1BxB,EAAKwB,mBAAmBX,MAAM,GAAK,KAGzClJ,EAAKsH,uBAAuBzG,KAApC,SACWmH,GACC,OAAe,MAARK,GAAuC,MAAvBA,EAAKuB,eAAyBvB,EAAKuB,eAAeV,MAAM,GAAK,QAMtF9D,EAAV1H,UAAA+J,2BAAE,WACE5J,KAAKmK,gBAA4DnK,KAArE,uBACO2L,KACCmB,EADRA,KAAA,SACcf,EAAqCgB,GACzC,OAAOA,EAAGhB,IACT,IACHiB,EADRA,cACsB,GACdC,EAFRA,aAMU1F,EAAV1H,UAAAgK,+BAAE,WACE7J,KAAKkK,oBAC2ClK,KAApD,2BAAqF2L,KAC7EmB,EADRA,KAAA,SACcd,EAA4Ce,GAChD,OAAOA,EAAGf,IACT,IACHgB,EADRA,cACsB,GACdC,EAFRA,aAMU1F,EAAV1H,UAAAiK,kBAAE,WACE9J,KAAKyG,OAA0CzG,KAAnD,cAAuE2L,KACjEmB,EADNA,KAAA,SACY3H,EAAkB4H,GACtB,OAAOA,EAAG5H,IACT,IACH6H,EADNA,cACoB,GACdC,EAFNA,YAKIjN,KAAKoK,WAAapK,KAAKyG,OAAOkF,KAC5BzF,EADNA,IAAA,SACWf,GAAqB,OAAAuB,EAAavB,KACvC6H,EADNA,cACoB,GACdC,EAFNA,YAKIjN,KAAKqK,YAAcrK,KAAKoK,WAAWuB,KACjCzF,EADNA,IAAA,SACWf,GAAX,OAA4CA,EAAMG,OAAlD,SAAyD5F,GAAK,OAACgF,EAAgBhF,OACzEsN,EADNA,cACoB,GACdC,EAFNA,YAKIjN,KAAKsK,iBAAmBtK,KAAKyG,OAAOkF,KAClCzF,EADNA,IAAA,SACUf,GAAV,OA7XA,SAAmCA,GACnC,IAAQ+H,EAAY/H,EAAMG,OAA1B,SAAiC5F,GAAK,OAAY,MAAZA,EAAEgG,SACtC,GAAyB,IAArBwH,EAAUtN,OAAc,CAC9B,IAAUuN,EAAWD,EAAU,GAC3B,GAAIC,aAAoBtI,EAA5BA,mBAAiDsI,aAAoBvI,EAArEA,SAA+E,CAC/E,IAAYwI,EAA6B,GAOnC,OANAA,EAAK3I,KAAX,CACQE,KAAMwI,EACN9F,UAAW,KACXlB,SAAUV,EAA6BN,EAAOgI,GAC9C/G,QAASC,EAA6BlB,EAAOgI,KAExCC,QAEJ,GAAyB,IAArBF,EAAUtN,OACnB,MAAO,CAAC,MAEV,MAAM,IAAIyN,MAAM,2BA4WlB,CAAwElI,KAClE6H,EADNA,cACoB,GACdC,EAFNA,aAMU1F,EAAV1H,UAAAmK,cAAE,WAAA,IAAF7H,EAAAnC,KACIA,KAAK0J,oBAAoBiC,KACvBC,EADNA,eACqB5L,KAAKsN,gBAAiBtN,KAAK+L,eAAgB/L,KAAKgM,oBAC/D1G,EAFNA,OAAA,SAEcuG,GAAM,OAAQ,MAARA,EAAE,KAChB3F,EADNA,IAAA,SACW2F,GAGH1J,EAAK8G,mBAAmBiC,OAChC,IAAcK,EAAaM,EAAE,GACflB,EAAYkB,EAAE,GACdE,EAAiBF,EAAE,GACnBG,EAAqBH,EAAE,GACvB0B,EAAW5C,EAAUhG,KACrBA,EAAOwG,EAArBA,QAA6BqC,SAASD,EAASE,SAAU1B,EAAgBC,GACjErH,EAAKkB,GAAK8E,EAAUhG,KAAKkB,GACzBlB,EAAKnB,KAAO+H,EAAiB,KAC7B5G,EAAKjB,MAAQ6H,EAAkB,MAC/B5G,EAAK+I,WAAyC,MAA5BnC,EAAuB,WACvC,IAAIoC,EAAdA,aAA2B,CAAE9C,UAAWU,EAAuB,aAAO,KAEtE,IAAcqC,EAAyBjJ,EAAK6B,oBAAoB5G,OACxD+E,EAAK6B,oBAA2D,MAArC+E,EAAgC,oBACvDA,EAAgC,oBAC/BrF,IAAb,SAAkB2E,GAAsB,OAAA,IAAI8C,EAA5CA,aAAyD,CAAC9C,UAA1DA,MACY,CAAC8C,EAAbA,aAA0BE,mBAC1B,IAAcC,EAAyBnJ,EAAK6B,oBAAoB5G,OAExD,GAAImF,EAAyBJ,GAAO,CAC5C,IAAgBoJ,EAAhB,EACUA,EAAQC,YAA2C,MAA7BzC,EAAwB,YAC5C,IAAI0C,EAAhBA,WAA2B,CAACC,QAAS3C,EAAwB,cAAM,KACzDwC,EAAQI,QAAU5C,EAAoB,QACtCwC,EAAQK,QAAU7C,EAAoB,QAGxC,GAAIZ,EAAUhG,gBAAgB0J,EAAtCA,SAAgD,CAChD,IAAgBC,EAAkB3D,EAAlC,KACU2D,EAAMC,YAAchD,EAAwB,YAC5C+C,EAAME,aAAejD,EAAyB,aAC9C+C,EAAMJ,QAAmC,MAAzB3C,EAAoB,QAClC,IAAI0C,EAAhBA,WAA2B,CAACC,QAAS3C,EAAoB,UAAM,KAC/D,IAAgBkD,EAAalD,EAAkB,MAC/BmD,EAAWnD,EAAqB,SAChCoD,EAAuBpD,EAAiC,qBAC1DqD,EAA0BC,SAAStD,EAAqB,SAAG,IAC3DuD,EAA0BD,SAAStD,EAAqB,SAAG,IAC3DwD,EAA2BF,SAAStD,EAAsB,UAAG,IAC7DyD,EAA2BH,SAAStD,EAAsB,UAAG,IAKjE,GAJI0D,MAAML,KAAaA,EAAW,MAC9BK,MAAMH,KAAaA,EAAW,MAC9BG,MAAMF,KAAcA,EAAY,MAChCE,MAAMD,KAAcA,EAAY,MAEpB,MAAdP,GAAkC,MAAZC,GACG,MAAxBC,GAA8D,EAA9BA,EAAqB/O,QAC1C,MAAZgP,GAAgC,MAAZE,GAAiC,MAAbC,GAAkC,MAAbC,EAC7D,CACZ,IAAkBE,EAAaZ,EAAMY,YAAc,IAAIC,EAAvDA,mBACYD,EAAWT,WAAaA,EACxBS,EAAWR,SAAWA,EAAWU,EAA7CA,cAA2DC,uBAAyB,KACxEH,EAAWN,SAAuB,MAAZA,EAAmBQ,EAArDA,cAAmEE,gBAAgBV,GAAY,KACnFM,EAAWJ,SAAuB,MAAZA,EAAmBM,EAArDA,cAAmEG,gBAAgBT,GAAY,KACnFI,EAAWH,UAAyB,MAAbA,EACrBK,EAAdA,cAA4BI,sBAAsBT,GAAa,KACnDG,EAAWF,UAAyB,MAAbA,EACrBI,EAAdA,cAA4BK,sBAAsBT,GAAa,KACnDE,EAAWQ,YAAcf,GAAwB,IAC9CzI,IAAf,SAAoBhB,GAAiD,OAAA,IAAIkK,EAAzEA,cAAuF,CACvEvE,UAAW3F,EAAE2F,UACb8E,aAAczK,EAAEyK,iBAEpBrB,EAAMY,WAAaA,OAEnBZ,EAAMY,WAAa,KAE/B,IAAgBU,EAAkBrE,EAA4B,gBAC9CsE,EAAoBtE,EAA8B,kBACxD,GACqB,MAAnBqE,GACsB,MAArBC,GAAwD,EAA3BA,EAAkBjQ,OAChD,CACZ,IAAkBkQ,EAAUxB,EAAMwB,SAAW,IAAIC,EAAjDA,gBACYD,EAAQpB,SAAWkB,EAAkBI,EAAjDA,WAA4DC,qBAAuB,KACvEH,EAAQJ,YAAcG,GAAqB,IACxC3J,IAAf,SAAoBgK,GAAmD,OAAA,IAAIF,EAA3EA,WAAsF,CACtEnF,UAAWqF,EAAErF,UAAWsF,eAAgBD,EAAEC,mBAE9C7B,EAAMwB,QAAUA,OAEhBxB,EAAMwB,QAAU,KAKlB,GAHAxB,EAAM8B,mBAAyD,MAApC7E,EAA+B,mBACxD,IAAIoC,EAAhBA,aAA6B,CAAE9C,UAAWU,EAA+B,qBAAO,KAElE+C,aAAiB+B,EAA/BA,oBAAoD,CAKxC,IAJZ,IAAkBC,EAAlB,EACgB/M,EAA0C,KAC1CgN,EAAQ,EACNC,EAAgBzE,EAAenM,OACb,MAAjB2D,GAAyBgN,EAAQC,GAClCzE,EAAewE,GAAO9M,YAAc8H,EAA0B,gBAChEhI,EAAgBwI,EAAewE,IAEjCA,IAEmB,MAAjBhN,IACF+M,EAAI/M,cAAgBA,GAEtB+M,EAAIG,cAAgBlF,EAA0B,cAC9C+E,EAAII,YAAcnF,EAAwB,YAC1C+E,EAAIK,mBAAqBpF,EAA8B,mBAAK,IACzDrF,IAAf,SAAoB3G,GAAc,OAAA,IAAIoO,EAAtCA,aAAmD,CAAC9C,UAAWtL,OAMvD,OAFA4C,EAAKwG,iBAAiB3F,KAAK,MAEnC,SAAgBmC,GAChB,IAAcK,EAAKP,EAAiB,CAACE,MAArCA,GAA6CoI,GACnC,GAAU,MAAN/H,EAAY,CACd,GAAIA,aAAc2F,EAA9BA,QAAuC,CACvC,IAAoByF,EAAMpL,EAAGL,MAAMC,QAAQmI,GACzBnC,EAAW5F,EAAGL,MAAMkG,MAAM,EAAGuF,GACjCxF,EAAS3G,KAAKE,GACdyG,EAAWA,EAASvE,OAAOrB,EAAGL,MAAMkG,MAAMuF,EAAM,IAChDpL,EAAGL,MAAQiG,EACXjG,EAAQA,EAAMkG,MAAM,OACf,CACCuF,EAAMzL,EAAMC,QAAQmI,GAC1BpI,EAAQA,EAAMkG,MAAM,EAAGuF,GAAK/J,OAAO,CAAClC,IAAOkC,OAAO1B,EAAMkG,MAAMuF,EAAM,IAEtE,GAAI9C,EAAyBF,EAC3B,IAAK,IAAInO,EAAIqO,EAAyBrO,EAAImO,EAAyBnO,IACjE0F,EAAQ6B,EAAkB7B,EAAOR,EAAMlF,GAI7C,OAAO0F,MAGX0H,UAAU7M,KAAKsJ,gBAGX/B,EAAV1H,UAAAoK,gBAAE,WAAA,IAAF9H,EAAAnC,KAC0CA,KAA1C,sBAAsE2L,KAChEzF,EADNA,IAAA,SACWyE,GAEH,OADAxI,EAAK8G,mBAAmBiC,OAChC,SAAgB/F,GAChB,IAAgBR,EAAOgG,EAAUhG,KACnBa,EAAKP,EAAiB,CAACE,MAArCA,GAA6CR,GACnC,GAAU,MAANa,EAAY,CACd,GAAIA,aAAc2F,EAA9BA,QAAuC,CACvC,IAAoByF,EAAMpL,EAAGL,MAAMC,QAAQT,GACzByG,EAAW5F,EAAGL,MAAMkG,MAAM,EAAGuF,GACjCxF,EAAWA,EAASvE,OAAOrB,EAAGL,MAAMkG,MAAMuF,EAAM,IAChDpL,EAAGL,MAAQiG,EACXjG,EAAQA,EAAMkG,MAAM,OACf,CACCuF,EAAMzL,EAAMC,QAAQT,GAC1BQ,EAAQA,EAAMkG,MAAM,EAAGuF,GAAK/J,OAAO1B,EAAMkG,MAAMuF,EAAM,IAEvDzL,EAAQ6B,EAAkB7B,EAAOR,GAEnC,OAAOQ,MAGX0H,UAAU7M,KAAKsJ,8BAnerB,CAAAnI,KAAC0P,EAADA,mDAqeAtJ,EAreA,GC1MAuJ,EAAA,WAcE,SAAFA,EAAsBC,GAAA/Q,KAAtB+Q,SAAsBA,EAClB/Q,KAAKsD,eAAiBtD,KAAK+Q,SAASC,oBAAoBrF,KACtDrG,EADNA,OAAA,SACaJ,GAAK,OAAK,MAALA,IACZgB,EADNA,IAAA,SACUhB,GAAV,OAAA,KARA,OAGEnG,OAAFuB,eAAMwQ,EAANjR,UAAA,gBAAA,KAAE,WAAqD,OAAOG,KAAKsD,gDASjEwN,EAAFjR,UAAAwM,kBAAE,WACErM,KAAK+Q,SAAS1E,kBAAkB,CAC9B3I,MAAO1D,KAAKiR,OAAOvN,MACnBF,KAAMxD,KAAKiR,OAAOzN,KAClBT,QAAS/C,KAAKiR,OAAOC,cAIzBJ,EAAFjR,UAAAuM,wBAAE,WACEpM,KAAK+Q,SAAS3E,yCA9BlB,CAAAjL,KAACC,EAADA,UAAAC,KAAA,CAAW,CAAXC,SAAA,sCACEC,SAAU,qYACVC,OAAQ,CAAV,IACEC,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,yDAPAgP,EAAA/O,eAAA,uCAYA+O,EATA,GCCAK,EAAA,WAqBE,SAAFA,EAAcC,IAJd,OALErS,OAAFuB,eAAM6Q,EAANtR,UAAA,SAAA,KAAE,WAA2B,OAAOG,KAAKqR,aACvC,SAAoBC,GAClBtR,KAAKqR,QAAUC,EACftR,KAAKuR,oDAQPJ,EAAFtR,UAAA2R,eAAE,SAAeC,GACb,GAAyB,MAArBzR,KAAK0R,cAAoD,MAA5B1R,KAAK0R,aAAaT,OAAgB,CACvE,IAAYA,EAASjR,KAAK0R,aAAaT,OAC7B5M,EAAkB4M,EAAOxG,WAAWkH,MAAM,MAC1CC,EAAiDX,EAAOY,cACtDC,EAAKF,EAASG,WAAa,EAC7BC,EAAO3N,EAAMyN,GACbG,EAAML,EAASM,OAAS,EAC5BF,EAAOA,EAAKG,UAAU,EAAGF,GAAOR,EAAWO,EAAKG,UAAUF,GAC1D5N,EAAMyN,GAAME,EACZJ,EAASM,QAAUT,EAAS7R,OAC5BI,KAAK0R,aAAarN,MAAQA,EAAM+N,KAAK,MACrCnB,EAAOoB,YAAYT,GACnBX,EAAOqB,QACPtS,KAAKuS,YAActB,EAAOxG,aAI9B0G,EAAFtR,UAAA2S,aAAE,WACEC,OAAOC,UAAUC,WAAWC,mBAAmBC,sBAAsB,CACnEC,sBAAsB,EACtBC,oBAAoB,IAGtBN,OAAOC,UAAUC,WAAWC,mBAAmBI,mBAAmB,CAChE5O,OAAQqO,OAAOC,UAAUC,WAAWM,aAAaC,OACjDC,sBAAsB,EACtBC,SAAS,EACTC,OAAQZ,OAAOC,UAAUC,WAAWW,WAAW3R,OAGjD,IACE8Q,OAAOC,UAAUC,WAAWC,mBAAmBW,YAC7C,GAAI,mCAEN,MAAOC,GACPf,OAAOC,UAAUC,WAAWC,mBACvBa,WAAW,mCAAqC,GAGvD,IACEhB,OAAOC,UAAUC,WAAWC,mBAAmBW,YAC7C,GAAI,mCAEN,MAAOC,GACPf,OAAOC,UAAUC,WAAWC,mBACvBa,WAAW,mCAAqC,GAGvDzT,KAAKuR,mBACLvR,KAAK0T,oBAGCvC,EAAVtR,UAAA0R,iBAAE,WAAA,IAAFpP,EAAAnC,KACI,GAAoB,MAAhBA,KAAKqR,QACT,IACEoB,OAAOC,UAAUC,WAAWC,mBACzBa,WAAW,mCACVzT,KAAKqR,QACFnL,IAAb,SAAkBoI,GACJ,MAAO,iBAAiBA,EAAM9K,KAA5C,KAAqDrB,EAAKwR,cAAcrF,EAAMsF,WAA9E,MAEaxB,KAAK,MACZ,MAAOoB,MAGHrC,EAAVtR,UAAA6T,iBAAE,WACE,IACEjB,OAAOC,UAAUC,WAAWC,mBACzBa,WAAW,mCAAqCI,EAAzDA,qBAA8EC,eACxE,MAAON,MAGHrC,EAAVtR,UAAA8T,cAAE,SAAsBC,GACpB,OAAQA,GACN,KAAKG,EAAXA,aAAwBC,QAClB,MAAO,UACP,KAAKD,EAAXA,aAAwBE,KAClB,KAAKF,EAAXA,aAAwBG,UAClB,KAAKH,EAAXA,aAAwBI,KAClB,MAAO,OACP,KAAKJ,EAAXA,aAAwBK,MAClB,MAAO,OACP,KAAKL,EAAXA,aAAwBM,QAClB,MAAO,SACP,KAAKN,EAAXA,aAAwBO,eAClB,KAAKP,EAAXA,aAAwBQ,aAClB,MAAO,MACP,KAAKR,EAAXA,aAAwBS,OAClB,MAAO,SACP,KAAKT,EAAXA,aAAwBU,MAClB,MAAO,QACP,KAAKV,EAAXA,aAAwBW,OAClB,KAAKX,EAAXA,aAAwBY,KAClB,MAAO,SAET,OAAO,oBAvHX,CAAAxT,KAACC,EAADA,UAAAC,KAAA,CAAW,CAAXC,SAAA,uBACEC,SAAU,icACVC,OAAQ,CAAV,wWACEI,gBAAFC,EAAAA,wBAAAC,OACEL,cAAFC,EAAAA,kBAAAC,4EAXAwP,EAAApP,eAAA,oFAgBA8I,UAAA,CAAA,CAAA1J,KAAAa,EAAAA,SAQAmP,EAjBA,GCAAyD,EAAA,WAgBE,SAAFA,EACIC,EACOC,GAAA9U,KAAX8U,UAAWA,EAEP9U,KAAKqR,QAAUwD,EAAQE,WAAWpJ,KAChCzF,EADNA,IAAA,SACWoL,GAAuB,OAAAA,EAAOxL,KAAzC,SAA+CkP,EAAIC,GAAO,OAAAD,EAAGxR,KAAK0R,cAAcD,EAAGzR,WAZnF,OAGEzE,OAAFuB,eAAMsU,EAAN/U,UAAA,SAAA,KAAE,WAAuC,OAAOG,KAAKqR,yCAanDuD,EAAF/U,UAAAsV,cAAE,WACE,GAAmB,MAAfnV,KAAKiR,OAAT,CACJ,IAAUmE,EAAWpV,KAAKiR,OAAOsB,YAC7BvS,KAAK8U,UAAUO,MAAMD,mBA5BzB,CAAAjU,KAACC,EAADA,UAAAC,KAAA,CAAW,CAAXC,SAAA,8BACEC,SAAU,iWACVC,OAAQ,CAAV,oEACEC,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAA2CC,+EAf3C8S,EAAA7S,eAAA,uCAoBA6S,EATA,GCOAU,EAAA,WA0CE,SAAFA,EACYvE,EACAwE,GAFV,IAAFpT,EAAAnC,KACYA,KAAZ+Q,SAAYA,EACA/Q,KAAZuV,QAAYA,EAbFvV,KAAVwV,IAAoC,IAAItM,EAAxCA,aAEUlJ,KAAVyV,OAAkB,EACRzV,KAAV0V,kBAA4CC,EAA5CA,aAAyDC,MAE/C5V,KAAV6V,sBAAgDF,EAAhDA,aAA6DC,MACnD5V,KAAV8V,sBAAgDH,EAAhDA,aAA6DC,MASzD5V,KAAK+V,WAAahF,EAASiF,mBAC3BhW,KAAKsK,iBAAmByG,EAASkF,gBACjCjW,KAAKmK,gBAAkB4G,EAAShF,eAChC/L,KAAK0V,kBAAoB1V,KAAK+Q,SAASmF,gBACpCrJ,UAAP,SAAkBhC,GACuB,MAA7B1I,EAAKgU,uBACPhU,EAAKgU,qBAAqBd,QAC1BlT,EAAKgU,qBAAuB,MAEb,MAAbtL,IACF1I,EAAKgU,qBAAuBhU,EAAKoT,QAAQa,KACvCxB,EAA4B,CAACyB,cAAc,OAInDrW,KAAK8V,sBAAwB9V,KAAK+Q,SAASC,oBACxCnE,UAAP,SAAkBtJ,GAC2B,MAAjCpB,EAAKmU,2BACPnU,EAAKmU,yBAAyBjB,QAC9BlT,EAAKmU,yBAA2B,MAEb,MAAjB/S,IACFpB,EAAKmU,yBAA2BnU,EAAKoT,QAAQa,KAC3CtF,EAAgC,CAACuF,cAAc,OAKvDrW,KAAK6V,sBAAwB7V,KAAK+Q,SAASwF,kBACxC1J,UAAP,WACiC,MAArB1K,EAAKqU,eACTrU,EAAKsU,eAAiBtU,EAAKqU,aAAavV,cAAcyV,aAG1D1W,KAAKiW,gBACFtK,KAAKgL,EAAZA,OAAsC3W,KAAtC,MACO6M,UAAP,WACiC,MAArB1K,EAAKqU,eACTrU,EAAKqU,aAAavV,cAAcyV,UAAYvU,EAAKsU,kBAvEzD,OADE1X,OAAFuB,eAAMgV,EAANzV,UAAA,OAAA,KAAE,WAAsB,OAAOG,KAAKyI,WAClC,SAAkB+B,GACZxK,KAAKyI,QAAU+B,IACjBxK,KAAKyI,MAAQ+B,EACTxK,KAAKyV,OACPzV,KAAK4W,oDAMX7X,OAAFuB,eAAMgV,EAANzV,UAAA,YAAA,KAAE,WAAiD,OAAOG,KAAK+V,4CAG7DhX,OAAFuB,eAAMgV,EAANzV,UAAA,kBAAA,KAAE,WAA+D,OAAOG,KAAKsK,kDAG3EvL,OAAFuB,eAAMgV,EAANzV,UAAA,iBAAA,KAAE,WAAwD,OAAOG,KAAKmK,iDA2DpEmL,EAAFzV,UAAAgX,mBAAE,WACE7W,KAAKwV,IAAItK,QAGXoK,EAAFzV,UAAAiX,mBAAE,WACE9W,KAAK4W,kBACL5W,KAAKyV,OAAQ,GAGfH,EAAFzV,UAAAkX,YAAE,WACE/W,KAAK+Q,SAASxG,QAAQ,MACtBvK,KAAK0V,kBAAkBsB,cACvBhX,KAAK6V,sBAAsBmB,cAC3BhX,KAAK8V,sBAAsBkB,eAG7B1B,EAAFzV,UAAAsM,oBAAE,WACEnM,KAAK+Q,SAAS5E,uBAGhBmJ,EAAFzV,UAAAoX,qBAAE,WACE,OAAO,GAGT3B,EAAFzV,UAAAqM,kBAAE,SAAkB3I,GAChBvD,KAAK+Q,SAAS7E,kBAAkB3I,IAG1B+R,EAAVzV,UAAA+W,gBAAE,WACE5W,KAAK+Q,SAASxG,QAAQvK,KAAKyI,sBArH/B,CAAAtH,KAACC,EAADA,UAAAC,KAAA,CAAW,CAAXC,SAAA,mBACEC,SAAU,i5CACVC,OAAQ,CAAV,seACEI,gBAAFC,EAAAA,wBAAAC,OACEL,cAAFC,EAAAA,kBAAAC,0EAlBA2T,EAAAvT,eAAA,4EA2BAuT,EAbA,GCHM4B,EAA0B,CAC9B,UACA,UACA,UACA,UACA,WAIFC,EAAA,WAsFE,SAAFA,EAAsBpG,GAAA/Q,KAAtB+Q,SAAsBA,EAvEZ/Q,KAAVoX,aAAwB,EAGdpX,KAAVqX,UAAqB,EAIXrX,KAAVsX,cAAyB,EAwBftX,KAAVuX,cAAoCL,EAAa7L,MAAM,GAG7CrL,KAAVwX,WAAiC,CAAC,aAGxBxX,KAAVyX,gBAAsC,CAAC,cAG7BzX,KAAV0X,cAA0B,EAMhB1X,KAAV2X,kBAA8B,IAGpB3X,KAAV4X,kBAA8BV,EAAa,GAkBjClX,KAAV6X,UAAqB,EACX7X,KAAV8X,yBAAmDnC,EAAnDA,aAAgEC,MACtD5V,KAAV+X,0BAAoDpC,EAApDA,aAAiEC,MAG7D5V,KAAKgY,mBAAqBhY,KAAK+Q,SAASzD,gBArB5C,OAlDEvO,OAAFuB,eAAM6W,EAANtX,UAAA,aAAA,KAAE,WAA4B,OAAOG,KAAKoX,6CAGxCrY,OAAFuB,eAAM6W,EAANtX,UAAA,UAAA,KAAE,WAAyB,OAAOG,KAAKqX,cACrC,SAAqBY,GAAoBjY,KAAKqX,SAAWY,mCAGzDlZ,OAAFuB,eAAM6W,EAANtX,UAAA,cAAA,KAAE,WAA6B,OAAOG,KAAKsX,8CAGzCvY,OAAFuB,eAAM6W,EAANtX,UAAA,YAAA,KAAE,WAAsC,OAAOG,KAAKkY,gBAClD,SAAuBvN,GAErB,GAAiB,OADjB3K,KAAKkY,WAAavN,SACqD,IAA9C,EAAqChG,KAAiB,CACnF,IAAYwT,EAAZ,EACMnY,KAAKsX,cAAe,EAC1B,IAAY3S,EAAOwT,EAAGxT,KAChB3E,KAAKoX,YAAsB,MAARzS,GAAgBD,EAAzCA,gBAAyDC,GACnD3E,KAAK6X,UAAW,OAEhB7X,KAAKsX,cAAe,EACpBtX,KAAKoX,aAAc,EACnBpX,KAAK6X,SAAW7S,EAAY,EAAqCU,yCAIrE3G,OAAFuB,eAAM6W,EAANtX,UAAA,gBAAA,KAAE,WACE,OAAOG,KAAX,4CAIEjB,OAAFuB,eAAM6W,EAANtX,UAAA,eAAA,KAAE,WAA+B,OAAOG,KAAKuX,+CAG3CxY,OAAFuB,eAAM6W,EAANtX,UAAA,YAAA,KAAE,WAA4B,OAAOG,KAAKwX,4CAGxCzY,OAAFuB,eAAM6W,EAANtX,UAAA,iBAAA,KAAE,WAAiC,OAAOG,KAAKyX,iDAG7C1Y,OAAFuB,eAAM6W,EAANtX,UAAA,eAAA,KAAE,WAA6B,OAAOG,KAAK0X,mBACzC,SAA0BU,GACxBpY,KAAK0X,cAAgBU,EACrBpY,KAAK2X,kBAA4C,EAArB3X,KAAK0X,cAArC,sCAGE3Y,OAAFuB,eAAM6W,EAANtX,UAAA,mBAAA,KAAE,WAAiC,OAAOG,KAAK2X,mDAG7C5Y,OAAFuB,eAAM6W,EAANtX,UAAA,mBAAA,KAAE,WAAiC,OAAOG,KAAK4X,uBAC7C,SAA8BS,GAChC,IAAUzH,EAAMsG,EAAa9R,QAAQiT,GAG/BrY,KAAKuX,cAFG,EAAN3G,GACF5Q,KAAK4X,kBAAoBS,EACJnB,EAAa7L,MAAMuF,GAAK/J,OAAOqQ,EAAa7L,MAAM,EAAGuF,MAE1E5Q,KAAK4X,kBAAoBV,EAAa,GACjBA,EAAa7L,MAAM,qCAK5CtM,OAAFuB,eAAM6W,EAANtX,UAAA,oBAAA,KAAE,WACE,OAAOG,KAAKgY,oDAWdb,EAAFtX,UAAAyY,SAAE,aAGAnB,EAAFtX,UAAA0Y,KAAE,WACwB,MAAlBvY,KAAK2K,WAAsB3K,KAAKwY,aACpCxY,KAAK+Q,SAASrG,cAAuC1K,KAAzD,YAGEmX,EAAFtX,UAAA4Y,OAAE,WACwB,MAAlBzY,KAAK2K,WAAsB3K,KAAKwY,aACpCxY,KAAK+Q,SAAStF,gBAAyCzL,KAA3D,YAGEmX,EAAFtX,UAAA6Y,gBAAE,WAAA,IAAFvW,EAAAnC,KACIA,KAAK2Y,uBACL3Y,KAAK+X,0BAA4B/X,KAAK4Y,aAAaC,QAChDhM,UAAP,WACQ1K,EAAKwW,0BAIXxB,EAAFtX,UAAAkX,YAAE,WACE/W,KAAK8X,yBAAyBd,cAC9BhX,KAAK+X,0BAA0Bf,eAGjCG,EAAFtX,UAAAiZ,cAAE,SAAc9U,EAA+CoC,GAC3D,QADJ,IAAAA,IAA+DA,GAA/D,GAC2B,MAAnBpG,KAAKkY,WAAT,CACJ,IAAUa,EAAK/U,EAAIgV,KAAnB,KACI,QAAoB,IAAhBD,EAAGnR,YAAyB5H,KAAKwY,aAAgBxY,KAAKwY,aAAepS,GAAW,CACxF,IAAY6S,EAAY7S,EAChB,CAACV,OAAkC1F,KAA3C,UAA2D2E,KAAMsB,WAAY,GAC5CjG,KAAjC,WACMA,KAAK+Q,SAAS/F,WAApB,EAEQiO,EAAUvT,OACVuT,EAAUhT,WACVG,MAKN+Q,EAAFtX,UAAAqZ,0BAAE,SAA0BF,GACxB,OAAQA,EAAKG,KAAKtR,SAGpBsP,EAAFtX,UAAAuZ,uBAAE,SAAuBJ,GACrB,OAAIhZ,KAAK6X,SACAmB,EAAKG,KAAKtR,UAAW,GAEtBmR,EAAKG,KAAKtR,SAGZsP,EAAVtX,UAAA8Y,qBAAE,WACE,GAAsB,MAAlB3Y,KAAK2K,WAAsB3K,KAAKwY,YAApC,CACJ,IAAU7N,EAAqC3K,KAA/C,UACUqZ,EAAiCrZ,KAAKqZ,YAAYC,UAClDC,EAAgC,MAArB5O,EAAUvE,QAAkBuE,EAAUvE,QAAQxG,OAAS,EAClEgZ,EAA6B5Y,KAAK4Y,aAAaU,UAAUjO,MAAMkO,GAEjEF,EAAYzZ,QAAUgZ,EAAahZ,QAEvCyZ,EAAYzS,QAAhB,SAAyB4S,EAAqB5I,GAC9C,IAAY6I,EAAkBb,EAAahI,GACrC4I,EAAG5Y,OAAS6Y,EAAGxY,cAAcyY,4BA1JnC,CAAAvY,KAACC,EAADA,UAAAC,KAAA,CAAW,CAAXC,SAAA,oBACEC,SAAU,o5DACVC,OAAQ,CAAV,i8BACEmY,KAAF,CACAC,kBAAA,cAEAnY,cAAAC,EAAAA,kBAAAC,KACAC,gBAAAC,EAAAA,wBAAAC,yDApBAqV,EAAApV,eAAA,gHAyBAkW,QAAA,CAAA,CAAA9W,KAAAa,EAAAA,QACA2I,UAAA,CAAA,CAAAxJ,KAAAa,EAAAA,QAOAoW,aAAA,CAAA,CAAAjX,KAAQa,EAARA,QAOAqW,iBAAA,CAAA,CAAAlX,KAAAa,EAAAA,SAuCAmV,EAlEA,GCbA0C,EAAA,WAiBE,SAAFA,EACIhF,EACOC,GAAA9U,KAAX8U,UAAWA,EAEP9U,KAAKqR,QAAUwD,EAAQE,WAAWpJ,KAChCzF,EADNA,IAAA,SACWoL,GAAuB,OAAAA,EAAOxL,KAAzC,SAA+CkP,EAAIC,GAAO,OAAAD,EAAGxR,KAAK0R,cAAcD,EAAGzR,WAbnF,OAGEzE,OAAFuB,eAAMuZ,EAANha,UAAA,SAAA,KAAE,WAAuC,OAAOG,KAAKqR,yCAcnDwI,EAAFha,UAAAsV,cAAE,WACE,GAAmB,MAAfnV,KAAKiR,OAAT,CACJ,IAAUmE,EAAWpV,KAAKiR,OAAOsB,YAC7BvS,KAAK8U,UAAUO,MAAM,CAACxK,UAAWuK,EAAUzF,aAAc3P,KAAK2P,+BA7BlE,CAAAxO,KAACC,EAADA,UAAAC,KAAA,CAAW,CAAXC,SAAA,4CACEC,SAAU,2dACVC,OAAQ,CAAV,kFACEC,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,+EAfA+X,EAAA9X,eAAA,uCAoBA8X,EATA,GCAAC,EAAA,WAiBE,SAAFA,EACIjF,EACOC,GAAA9U,KAAX8U,UAAWA,EAEP9U,KAAKqR,QAAUwD,EAAQE,WAAWpJ,KAChCzF,EADNA,IAAA,SACWoL,GAAuB,OAAAA,EAAOxL,KAAzC,SAA+CkP,EAAIC,GAAO,OAAAD,EAAGxR,KAAK0R,cAAcD,EAAGzR,WAbnF,OAGEzE,OAAFuB,eAAMwZ,EAANja,UAAA,SAAA,KAAE,WAAuC,OAAOG,KAAKqR,yCAcnDyI,EAAFja,UAAAsV,cAAE,WACE,GAAmB,MAAfnV,KAAKiR,OAAT,CACJ,IAAUmE,EAAWpV,KAAKiR,OAAOsB,YAC7BvS,KAAK8U,UAAUO,MAAM,CAACxK,UAAWuK,EAAUjF,eAAgBnQ,KAAKmQ,iCA7BpE,CAAAhP,KAACC,EAADA,UAAAC,KAAA,CAAW,CAAXC,SAAA,yCACEC,SAAU,+dACVC,OAAQ,CAAV,+EACEC,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,+EAfAgY,EAAA/X,eAAA,uCAoBA+X,EATA,GCaA,SAASC,EAAkB7U,GAC3B,IAAQiJ,EAAUjJ,EAAEb,MAAM8J,QAClBC,EAAUlJ,EAAEb,MAAM+J,QACxB,OAAe,MAAXD,GAA8B,MAAXC,GAA6BA,EAAVD,EACjC,CACL6L,KAAM,wDAGH,KAGT,SAASC,EAAyB/U,GAClC,IAAQ0J,EAAW1J,EAAEb,MAAMuK,SACnBE,EAAW5J,EAAEb,MAAMyK,SACzB,OAAgB,MAAZF,GAAgC,MAAZE,GAA+BA,EAAXF,EACnC,CACLsL,WAAY,8CAGT,KAGT,SAASC,GAAoBjV,GAC7B,IAAQ6J,EAAY7J,EAAEb,MAAM0K,UACpBC,EAAY9J,EAAEb,MAAM2K,UAC1B,OAAiB,MAAbD,GAAkC,MAAbC,GAAiCA,EAAZD,EACrC,CACLqL,OAAQ,gDAGL,KAcT,IAAAC,GAAA,WAuIE,SAAFA,EACYtJ,EACAwE,EACA+E,GAHV,IAAFnY,EAAAnC,KACYA,KAAZ+Q,SAAYA,EACA/Q,KAAZuV,QAAYA,EACAvV,KAAZsa,IAAYA,EAjIFta,KAAVua,YAA0D,CACtD,CAAC7W,MAAO,SAAUW,MAAO,UACzB,CAACX,MAAO,QAASW,MAAO,SACxB,CAACX,MAAO,UAAWW,MAAO,WAC1B,CAACX,MAAO,OAAQW,MAAO,QACvB,CAACX,MAAO,OAAQW,MAAO,SAOjBrE,KAAVmK,gBAAiD,GA2BvCnK,KAAVwa,qBAA2C,GAGjCxa,KAAVya,sBAAyD,GAG/Cza,KAAV0a,mBAAmD,GASjD1a,KAAF+E,yBAAyDA,EAE/C/E,KAAV2a,eAAyChF,EAAzCA,aAAsDC,MAC5C5V,KAAV4a,wBAAoCjF,EAApCA,aAAiDC,MACvC5V,KAAV6a,gBAA4BlF,EAA5BA,aAAyCC,MAC/B5V,KAAV8a,kBAA8BnF,EAA9BA,aAA2CC,MACjC5V,KAAV+a,YAAwBpF,EAAxBA,aAAqCC,MAC3B5V,KAAVgb,eAA2BrF,EAA3BA,aAAwCC,MAC9B5V,KAAVib,yBAAqCtF,EAArCA,aAAkDC,MACxC5V,KAAVkb,sBAAkCvF,EAAlCA,aAA+CC,MACrC5V,KAAVmb,uBAAmCxF,EAAnCA,aAAgDC,MACtC5V,KAAVob,mBAA+BzF,EAA/BA,aAA4CC,MAClC5V,KAAVqb,sBAAkC1F,EAAlCA,aAA+CC,MAGrC5V,KAAVsb,wBAAkD3F,EAAlDA,aAA+DC,MAErD5V,KAAVub,kCAA4D5F,EAA5DA,aAAyEC,MAE/D5V,KAAVwb,+BAAyD7F,EAAzDA,aAAsEC,MAE5D5V,KAAVyb,mBAAmD,IAAIvS,EAAvDA,aACUlJ,KAAV0b,mBAA+B/F,EAA/BA,aAA4CC,MAElC5V,KAAV2b,0BAA4D,IAAIzS,EAAhEA,aACUlJ,KAAV4b,0BAAsCjG,EAAtCA,aAAmDC,MAEzC5V,KAAV6b,oBAAoD,IAAI3S,EAAxDA,aACUlJ,KAAV8b,oBAAgCnG,EAAhCA,aAA6CC,MAEnC5V,KAAV+b,sBAAsD,IAAI7S,EAA1DA,aACUlJ,KAAVgc,sBAAkCrG,EAAlCA,aAA+CC,MAErC5V,KAAVic,gBAAgD,IAAI/S,EAApDA,aACUlJ,KAAVkc,gBAA4BvG,EAA5BA,aAAyCC,MAE/B5V,KAAVmc,mBAAmD,IAAIjT,EAAvDA,aACUlJ,KAAVoc,mBAA+BzG,EAA/BA,aAA4CC,MAElC5V,KAAVqc,4BAA8D,IAAInT,EAAlEA,aACUlJ,KAAVsc,4BAAwC3G,EAAxCA,aAAqDC,MAE3C5V,KAAVuc,2BAA2D,IAAIrT,EAA/DA,aACUlJ,KAAVwc,2BAAuC7G,EAAvCA,aAAoDC,MAE1C5V,KAAVyc,8BAAgE,IAAIvT,EAApEA,aACUlJ,KAAV0c,8BAA0C/G,EAA1CA,aAAuDC,MAE7C5V,KAAV2c,yBAA2D,IAAIzT,EAA/DA,aACUlJ,KAAV4c,yBAAqCjH,EAArCA,aAAkDC,MAExC5V,KAAV6c,wBAAwD,IAAI3T,EAA5DA,aACUlJ,KAAV8c,wBAAoCnH,EAApCA,aAAiDC,MAEvC5V,KAAV+c,2BAA6D,IAAI7T,EAAjEA,aACUlJ,KAAVgd,2BAAuCrH,EAAvCA,aAAoDC,MAE1C5V,KAAVid,2BAA2D,IAAI/T,EAA/DA,aACUlJ,KAAVkd,2BAAuCvH,EAAvCA,aAAoDC,MAE1C5V,KAAVmd,yBAA2D,IAAIjU,EAA/DA,aACUlJ,KAAVod,yBAAqCzH,EAArCA,aAAkDC,MAExC5V,KAAVqd,wBAAwD,IAAInU,EAA5DA,aACUlJ,KAAVsd,wBAAoC3H,EAApCA,aAAiDC,MAEvC5V,KAAVud,2BAA6D,IAAIrU,EAAjEA,aACUlJ,KAAVwd,2BAAuC7H,EAAvCA,aAAoDC,MAE1C5V,KAAVyd,SAAyC,IAAIvU,EAA7CA,aACUlJ,KAAV0d,SAAqB/H,EAArBA,aAAkCC,MAO9B5V,KAAKkY,WAAanH,EAASzD,gBAC3BtN,KAAKob,mBAAqBrK,EAAShF,eAChCc,UAAP,SAAkB3H,GAAM,OAAA/C,EAAKgI,gBAAkBjF,GAAK,KAEhDlF,KAAK2d,SAAW3d,KAAKkY,WAAWvM,KAAKzF,EAAzCA,IAAA,SAA8CxG,GAAM,OAAK,MAALA,KAEhDM,KAAK4d,YACL5d,KAAK6d,sBACL7d,KAAK8d,6BACL9d,KAAK+d,uBACL/d,KAAKge,yBACLhe,KAAKie,mBACLje,KAAKke,sBACLle,KAAKme,+BACLne,KAAKoe,8BACLpe,KAAKqe,iCACLre,KAAKse,4BACLte,KAAKue,2BACLve,KAAKwe,8BACLxe,KAAKye,8BACLze,KAAK0e,4BACL1e,KAAK2e,2BACL3e,KAAK4e,8BACL5e,KAAK6e,YArOT,OAkFE9f,OAAFuB,eAAM+Z,EAANxa,UAAA,aAAA,KAAE,WAAqD,OAAOG,KAAKua,6CAGjExb,OAAFuB,eAAM+Z,EAANxa,UAAA,YAAA,KAAE,WAA8D,OAAOG,KAAKkY,4CAG1EnZ,OAAFuB,eAAM+Z,EAANxa,UAAA,iBAAA,KAAE,WAA4C,OAAOG,KAAKmK,iDAGxDpL,OAAFuB,eAAM+Z,EAANxa,UAAA,UAAA,KAAE,WAAqC,OAAOG,KAAK2d,0CAGjD5e,OAAFuB,eAAM+Z,EAANxa,UAAA,iBAAA,KAAE,WAA8C,OAAOG,KAAK8e,iDAG1D/f,OAAFuB,eAAM+Z,EAANxa,UAAA,aAAA,KAAE,WAAwC,OAAOG,KAAK+e,6CAGpDhgB,OAAFuB,eAAM+Z,EAANxa,UAAA,gBAAA,KAAE,WAAqC,OAAOG,KAAKgf,gDAGjDjgB,OAAFuB,eAAM+Z,EAANxa,UAAA,iBAAA,KAAE,WAAsC,OAAOG,KAAKif,iDAGlDlgB,OAAFuB,eAAM+Z,EAANxa,UAAA,mBAAA,KAAE,WAAiC,OAAOG,KAAKkf,mDAG7CngB,OAAFuB,eAAM+Z,EAANxa,UAAA,gBAAA,KAAE,WAAqC,OAAOG,KAAKmf,gDAGjDpgB,OAAFuB,eAAM+Z,EAANxa,UAAA,aAAA,KAAE,WAAkC,OAAOG,KAAKof,6CAG9CrgB,OAAFuB,eAAM+Z,EAANxa,UAAA,sBAAA,KAAE,WAAsC,OAAOG,KAAKwa,sDAGlDzb,OAAFuB,eAAM+Z,EAANxa,UAAA,uBAAA,KAAE,WAAoD,OAAOG,KAAKya,uDAGhE1b,OAAFuB,eAAM+Z,EAANxa,UAAA,oBAAA,KAAE,WAA8C,OAAOG,KAAK0a,oDAG1D3b,OAAFuB,eAAM+Z,EAANxa,UAAA,qBAAA,KAAE,WAAmC,OAAOG,KAAKqf,qDAG/CtgB,OAAFuB,eAAM+Z,EAANxa,UAAA,oBAAA,KAAE,WAAoC,OAAOG,KAAKsf,oDAyGhDjF,EAAFxa,UAAA0f,eAAE,WACEvf,KAAKyb,mBAAmBvQ,QAG1BmP,EAAFxa,UAAA2f,sBAAE,SAAsB5O,GAChBA,EAAM,GAAKA,GAAO5Q,KAAKwa,qBAAqB5a,QAChDI,KAAK2b,0BAA0BzQ,KAAK0F,IAGtCyJ,EAAFxa,UAAA4f,gBAAE,WACEzf,KAAK6b,oBAAoB3Q,QAG3BmP,EAAFxa,UAAA6f,kBAAE,WACE1f,KAAK+b,sBAAsB7Q,QAG7BmP,EAAFxa,UAAA8f,YAAE,WACE3f,KAAKic,gBAAgB/Q,QAGvBmP,EAAFxa,UAAA+f,eAAE,WACE5f,KAAKmc,mBAAmBjR,QAG1BmP,EAAFxa,UAAAggB,wBAAE,SAAwBjP,GAClBA,EAAM,GAAKA,GAAO5Q,KAAKya,sBAAsB7a,QACjDI,KAAKqc,4BAA4BnR,KAAK0F,IAGxCyJ,EAAFxa,UAAAigB,uBAAE,WACE9f,KAAKuc,2BAA2BrR,QAGlCmP,EAAFxa,UAAAkgB,0BAAE,SAA0BnP,GACpBA,EAAM,GAAKA,GAAO5Q,KAAKya,sBAAsB7a,QACjDI,KAAKyc,8BAA8BvR,KAAK0F,IAG1CyJ,EAAFxa,UAAAmgB,qBAAE,SAAqBpP,GACfA,EAAM,GAAKA,GAAO5Q,KAAK0a,mBAAmB9a,QAC9CI,KAAK2c,yBAAyBzR,KAAK0F,IAGrCyJ,EAAFxa,UAAAogB,oBAAE,WACEjgB,KAAK6c,wBAAwB3R,QAG/BmP,EAAFxa,UAAAqgB,uBAAE,SAAuBtP,GACjBA,EAAM,GAAKA,GAAO5Q,KAAK0a,mBAAmB9a,QAC9CI,KAAK+c,2BAA2B7R,KAAK0F,IAGvCyJ,EAAFxa,UAAAsgB,uBAAE,WACEngB,KAAKid,2BAA2B/R,QAGlCmP,EAAFxa,UAAAugB,qBAAE,SAAqBxP,GACfA,EAAM,GAAKA,GAAO5Q,KAAKsf,mBAAmB1f,QAC9CI,KAAKmd,yBAAyBjS,KAAK0F,IAGrCyJ,EAAFxa,UAAAwgB,oBAAE,WACErgB,KAAKqd,wBAAwBnS,QAG/BmP,EAAFxa,UAAAygB,uBAAE,SAAuB1P,GACjBA,EAAM,GAAKA,GAAO5Q,KAAKsf,mBAAmB1f,QAC9CI,KAAKud,2BAA2BrS,KAAK0F,IAGvCyJ,EAAFxa,UAAA0gB,QAAE,SAAQ5b,GACN,OAAe,MAARA,GAAgBA,aAAgB0J,EAA3CA,UAGEgM,EAAFxa,UAAA2gB,eAAE,SAAe7b,GACb,OAAe,MAARA,GAAgBA,aAAgBqD,EAA3CA,gBAGEqS,EAAFxa,UAAA4gB,mBAAE,SAAmB9b,GACjB,OAAe,MAARA,GAAgBA,aAAgB0L,EAA3CA,qBAGEgK,EAAFxa,UAAA6gB,KAAE,WACE1gB,KAAKyd,SAASvS,QAGhBmP,EAAFxa,UAAA8gB,OAAE,WACE3gB,KAAK+Q,SAASvF,uBAGhB6O,EAAFxa,UAAAkX,YAAE,WACE/W,KAAKob,mBAAmBpE,cAExBhX,KAAK2a,eAAe3D,cACpBhX,KAAK6a,gBAAgB7D,cACrBhX,KAAK8a,kBAAkB9D,cACvBhX,KAAK+a,YAAY/D,cACjBhX,KAAKgb,eAAehE,cACpBhX,KAAKib,yBAAyBjE,cAC9BhX,KAAKkb,sBAAsBlE,cAC3BhX,KAAKqb,sBAAsBrE,cAE3BhX,KAAKsb,wBAAwBtE,cAC7BhX,KAAKub,kCAAkCvE,cACvChX,KAAKwb,+BAA+BxE,cAEpChX,KAAKgc,sBAAsBhF,cAC3BhX,KAAK4b,0BAA0B5E,cAC/BhX,KAAK0b,mBAAmB1E,cACxBhX,KAAK8b,oBAAoB9E,cACzBhX,KAAKkc,gBAAgBlF,cACrBhX,KAAKoc,mBAAmBpF,cACxBhX,KAAKsc,4BAA4BtF,cACjChX,KAAK4c,yBAAyB5F,cAC9BhX,KAAKmb,uBAAuBnE,cAE5BhX,KAAKsd,wBAAwBtG,cAC7BhX,KAAKwc,2BAA2BxF,cAChChX,KAAK8c,wBAAwB9F,cAC7BhX,KAAKkd,2BAA2BlG,cAChChX,KAAKod,yBAAyBpG,cAC9BhX,KAAKwd,2BAA2BxG,cAChChX,KAAK0c,8BAA8B1F,cACnChX,KAAKgd,2BAA2BhG,cAEhChX,KAAK0d,SAAS1G,eAGRqD,EAAVxa,UAAAgf,UAAE,WAAA,IAAF1c,EAAAnC,KACIA,KAAK0d,SAA8B1d,KAAvC,SACO2L,KAAKC,EAAZA,eAA2B5L,KAAK4gB,iBACzB/T,UAAP,SAAkBhB,GAClB,IAAcgV,EAAKhV,EAAE,GACPiV,EAAdC,EAAA,GAAwBF,EAAGxc,MAA3B,CACUmC,oBAAqBrE,EAAKqY,uBAE5BrY,EAAK4O,SAASzF,cAAcwV,MAI1BzG,EAAVxa,UAAA+d,UAAE,WAAA,IAAFzb,EAAAnC,KACIA,KAAK8e,gBAAkB9e,KAAKkY,WAAWvM,KACrCrG,EADNA,OAAA,SACc5F,GAAM,OAAK,MAALA,IACdwG,EADNA,IAAA,SACWxG,GACwB,MAAvByC,EAAKwY,gBAA0BxY,EAAKwY,eAAe3D,cACnB,MAAhC7U,EAAKyY,yBAAmCzY,EAAKyY,wBAAwB5D,cAGjF,IAActJ,EAAkC,OAFxChO,EAAR,GAE6BiF,KAAK+I,WACxBhO,EAAEiF,KAAK+I,WAAW7C,UAAY,KAC1BmW,EAAqC,MAArBthB,EAAEiF,KAAK+I,WAC3BvL,EAAK8e,oBAAoBvhB,EAAEiF,KAAK+I,YAAc,KAC5CwT,EAAgB,CAClB1d,KAAM,CAAC9D,EAAEiF,KAAKnB,KAAM2d,EAA9BA,WAAyCC,UAC/B1d,MAAOhE,EAAEiF,KAAKjB,MACdsd,cAAe,CAACA,EAAeG,EAAzCA,WAAoDC,UAC1C1T,WAAY,CAACA,EAAYyT,EAAnCA,WAA8CC,UACpCC,uBAAwB3hB,EAAEiF,KAAK6B,oBAAoB5G,QAE/C0hB,EAA4B,GAElC,GAAIvc,EAAyBrF,EAAEiF,MAAO,CAC9C,IAAgB4c,EAAgC7hB,EAAhD,KAEgBsO,EAAgC,MAAlBuT,EAAGvT,YAAsBuT,EAAGvT,YAAYE,QAAU,KAEtEgT,EAASlT,YAAc,CAACA,EAAamT,EAA/CA,WAA0DC,UAChDF,EAAS/S,QAAUoT,EAAGpT,QACtB+S,EAAS9S,QAAUmT,EAAGnT,QAEtBjM,EAAK8c,gBAAkBjR,EAEvBsT,EAAW7c,KAAKsV,GAGlB,GAAI5X,EAAKoe,QAAQ7gB,EAAEiF,MAAO,CAClC,IAAgB2J,EAAkB5O,EAAlC,KAEc+O,EAA4B,KAC5BC,GAAoB,EACpBC,EAA8C,GAC1B,MAApBL,EAAMY,aAC2B,MAA/BZ,EAAMY,WAAWT,aACnBA,EAAaH,EAAMY,WAAWT,WAAW5D,WAE3C6D,EAAwC,MAA7BJ,EAAMY,WAAWR,SAC5BC,GAAwBL,EAAMY,WAAWQ,YAAc,IACpDxJ,IAAf,SAAmBhB,GACH,MAAO,CACL2F,UAAW3F,EAAE2F,UACb8E,aAAczK,EAAEyK,iBAKlC,IAAc6R,GAAqB,EACrB3R,EAAwC,GACvB,MAAjBvB,EAAMwB,UACR0R,EAAsC,MAA1BlT,EAAMwB,QAAQpB,SAC1BmB,GAAqBvB,EAAMwB,QAAQJ,YAAc,IAC9CxJ,IAAf,SAAmBgK,GACH,MAAO,CACLrF,UAAWqF,EAAErF,UACbsF,eAAgBD,EAAEC,mBAIpC,IAAgBjC,EAA2B,MAAjBI,EAAMJ,QAAkBI,EAAMJ,QAAQA,QAAU,KAEhEgT,EAAS3S,YAAcD,EAAMC,YAC7B2S,EAAS1S,aAAeF,EAAME,aAC9B0S,EAASO,KAAOnT,EAAMmT,KACtBP,EAAShT,QAAUA,EACnBgT,EAASzS,WAAaA,EACtByS,EAASxS,SAAWA,EACpBwS,EAASvS,qBAAuB,CAACA,EAAsB,IACvDuS,EAAStR,gBAAkB4R,EAC3BN,EAASrR,kBAAoB,CAACA,EAAmB,IACjDqR,EAAS9Q,mBAAqB,CAAC9B,EAAM8B,oBAErCjO,EAAKgd,eAAiB1Q,EACtBtM,EAAKid,YAAclR,EACnB/L,EAAKsY,sBAAwB9L,EAC7BxM,EAAKuY,mBAAqB7K,EAG5B,GAAI1N,EAAKqe,eAAe9gB,EAAEiF,MAAO,CACzC,IAAgB+c,EAA2BhiB,EAA3C,KAEckP,OAAd,EACcE,OAAd,EACcC,OAAd,EACcC,OAAd,EACqC,MAAvB0S,EAASxS,aACyB,MAAhCwS,EAASxS,WAAWN,WACtBA,GAAY8S,EAASxS,WAAWN,SAAS/D,WAAa,IAAI8W,QAAQ,aAAc,KAE9C,MAAhCD,EAASxS,WAAWJ,WACtBA,GAAY4S,EAASxS,WAAWJ,SAASjE,WAAa,IAAI8W,QAAQ,aAAc,KAE7C,MAAjCD,EAASxS,WAAWH,YACtBA,GAAa2S,EAASxS,WAAWH,UAAUlE,WAAa,IACrD8W,QAAQ,+BAAgC,KAER,MAAjCD,EAASxS,WAAWF,YACtBA,GAAa0S,EAASxS,WAAWF,UAAUnE,WAAa,IACrD8W,QAAQ,+BAAgC,MAI/CT,EAAStS,SAAWA,EACpBsS,EAASpS,SAAWA,EACpBoS,EAASnS,UAAYA,EACrBmS,EAASlS,UAAYA,EAErBsS,EAAW7c,KAAKwV,GAChBqH,EAAW7c,KAAK0V,IAGlB,GAAIhY,EAAKse,mBAAmB/gB,EAAEiF,MAAO,CAC7C,IAAgBid,EAAwCliB,EAAxD,KAEciR,GAA+BiR,EAAiBjR,mBAAqB,IACtEzK,IAAb,SAAkBhB,GAAM,OAAAA,EAAE2F,YAEhBqW,EAAS3d,cAAgBqe,EAAiBre,cAAcE,UACxDyd,EAASW,cAAkD,MAAlCD,EAAiBC,cACxCD,EAAiBC,cAAc3T,QAAU,KAC3CgT,EAASzQ,cAAgBmR,EAAiBnR,cAC1CyQ,EAASxQ,YAAckR,EAAiBlR,YACxCwQ,EAASvQ,kBAAoBA,EAE7BxO,EAAKmd,mBAAqB3O,EAGpC,IAAckQ,EAAK1e,EAAKmY,IAAIwH,MAAMZ,GAiB1B,OAhBAL,EAAGkB,cAAcT,GAEjBnf,EAAKqY,qBAAuB9a,EAAEiF,KAAK6B,oBAAoBN,IAA/D,SAAmEhB,GAAK,OAAAA,EAAE2F,YAClE1I,EAAK6c,eAAsC,MAArBtf,EAAEiF,KAAK+I,WAAqBhO,EAAEiF,KAAK+I,WAAW7C,UAAY,KAEhF1I,EAAK6f,iCAAiCnB,GACtC1e,EAAK8f,wBAAwBpB,GAC7B1e,EAAK+f,yBAAyBrB,GAC9B1e,EAAKggB,2BAA2BtB,GAChC1e,EAAKigB,qBAAqBvB,GAC1B1e,EAAKkgB,wBAAwBxB,GAC7B1e,EAAKmgB,iCAAiCzB,GACtC1e,EAAKogB,8BAA8B1B,GACnC1e,EAAKqgB,gCAAgC3B,GACrC1e,EAAKsgB,8BAA8B5B,GAE5BA,IAET7T,EADNA,cACoB,GACdC,EAFNA,aAMUoN,EAAVxa,UAAA6iB,wBAAE,WACsC,MAAhC1iB,KAAKsb,0BACPtb,KAAKsb,wBAAwBtE,cAC7BhX,KAAKsb,wBAA0B3F,EAArCA,aAAkDC,OAEb,MAA7B5V,KAAKmW,uBACPnW,KAAKmW,qBAAqBd,QAC1BrV,KAAKmW,qBAAuB,OAIxBkE,EAAVxa,UAAA8iB,kCAAE,WACgD,MAA1C3iB,KAAKub,oCACPvb,KAAKub,kCAAkCvE,cACvChX,KAAKub,kCAAoC5F,EAA/CA,aAA4DC,OAEb,MAAvC5V,KAAK4iB,iCACP5iB,KAAK4iB,+BAA+BvN,QACpCrV,KAAK4iB,+BAAiC,OAIlCvI,EAAVxa,UAAAgjB,+BAAE,WAC6C,MAAvC7iB,KAAKwb,iCACPxb,KAAKwb,+BAA+BxE,cACpChX,KAAKwb,+BAAiC7F,EAA5CA,aAAyDC,OAEb,MAApC5V,KAAK8iB,8BACP9iB,KAAK8iB,4BAA4BzN,QACjCrV,KAAK8iB,4BAA8B,OAI/BzI,EAAVxa,UAAA+e,4BAAE,WACE5e,KAAKwd,2BAAkDxd,KAA3D,2BACO2L,KAAKC,EAAZA,eAA2B5L,KAAK8e,kBACzBjS,UAAP,SAAkBhB,GAClB,IAAckX,EAAQlX,EAAE,GACVgV,EAAKhV,EAAE,GACb,GAAU,MAANgV,EAAJ,CACR,IAAcmC,EAAOnC,EAAGK,SAA4B,kBACxC+B,GAAOD,EAAK3e,OAAS,IAAIgH,MAAM,GAC/B0X,EAAQ,GAAKA,GAASE,EAAIrjB,SAC9BqjB,EAAI1e,OAAOwe,EAAO,GAClBC,EAAKE,SAASD,QAIZ5I,EAAVxa,UAAA8e,yBAAE,WACE3e,KAAKsd,wBAA6Ctd,KAAtD,wBACO2L,KAAKC,EAAZA,eAA2B5L,KAAK8e,kBACzBjS,UAAP,SAAkBhB,GAClB,IAAcgV,EAAKhV,EAAE,GACb,GAAU,MAANgV,EAAJ,CACR,IAAcmC,EAAOnC,EAAGK,SAA4B,kBACxC+B,GAAOD,EAAK3e,OAAS,IAAIgH,MAAM,GACnC4X,EAAIxe,KAAK,IACTue,EAAKE,SAASD,OAIZ5I,EAAVxa,UAAA6e,0BAAE,WAAA,IAAFvc,EAAAnC,KACIA,KAAKod,yBAAgDpd,KAAzD,yBACO2L,KAAKC,EAAZA,eAA2B5L,KAAK8e,kBACzBjS,UAAP,SAAkBhB,GACV1J,EAAKugB,0BACb,IAAcK,EAAQlX,EAAE,GACVgV,EAAKhV,EAAE,GACTkX,EAAQ,GAAKA,GAAS5gB,EAAKmd,mBAAmB1f,QAAgB,MAANihB,IAC5D1e,EAAKgU,qBAAuBhU,EAAKoT,QAC9Ba,KAAKxB,GACIzS,EAAKgU,qBAAqBgN,kBAClCtY,UAAY1I,EAAKmd,mBAAmByD,GACxC5gB,EAAKmZ,wBAA0BnZ,EAAKgU,qBAAqBiN,cACtDvW,UAAX,SAAsBwW,QACG,IAATA,IACFlhB,EAAKmd,mBAAmByD,GAASM,GAEnClhB,EAAKmZ,wBAAwBtE,cAC7B7U,EAAKmZ,wBAA0B3F,EAA3CA,aAAwDC,YAK9CyE,EAAVxa,UAAA2e,4BAAE,WACExe,KAAKgd,2BAAkDhd,KAA3D,2BACO2L,KAAKC,EAAZA,eAA2B5L,KAAK8e,kBACzBjS,UAAP,SAAkBhB,GAClB,IAAckX,EAAQlX,EAAE,GACVgV,EAAKhV,EAAE,GACb,GAAU,MAANgV,EAAJ,CACR,IAAcmC,EAAOnC,EAAGK,SAA4B,kBACxC+B,GAAOD,EAAK3e,OAAS,IAAIgH,MAAM,GAC/B0X,EAAQ,GAAKA,GAASE,EAAIrjB,SAC9BqjB,EAAI1e,OAAOwe,EAAO,GAClBC,EAAKE,SAASD,QAIZ5I,EAAVxa,UAAA0e,yBAAE,WACEve,KAAK8c,wBAA6C9c,KAAtD,wBACO2L,KAAKC,EAAZA,eAA2B5L,KAAK8e,kBACzBjS,UAAP,SAAkBhB,GAClB,IAAcgV,EAAKhV,EAAE,GACb,GAAU,MAANgV,EAAJ,CACR,IAAcmC,EAAOnC,EAAGK,SAA4B,kBACxC+B,GAAOD,EAAK3e,OAAS,IAAIgH,MAAM,GACnC4X,EAAIxe,KAAK,CAACoG,UAAW,GAAI8E,aAAc,KACvCqT,EAAKE,SAASD,OAIZ5I,EAAVxa,UAAAye,0BAAE,WAAA,IAAFnc,EAAAnC,KACIA,KAAK4c,yBAAgD5c,KAAzD,yBACO2L,KAAKC,EAAZA,eAA2B5L,KAAK8e,kBACzBjS,UAAP,SAAkBhB,GACV1J,EAAK0gB,iCACb,IAAcE,EAAQlX,EAAE,GACVgV,EAAKhV,EAAE,GACb,KAAIkX,EAAQ,GAAKA,GAAS5gB,EAAKuY,mBAAmB9a,QAAgB,MAANihB,GAA5D,CACA1e,EAAK2gB,4BAA8B3gB,EAAKoT,QACrCa,KAAK0D,GAChB,IAAcwJ,EAAMnhB,EAAK2gB,4BAA4BK,kBACvCjT,EAAI/N,EAAKuY,mBAAmBqI,GAClCO,EAAIzY,UAAYqF,EAAErF,UAClByY,EAAInT,eAAiBD,EAAEC,eACvBhO,EAAKqZ,+BAAiCrZ,EAAK2gB,4BAA4BM,cACpEvW,UAAX,SAAsBwW,QACG,IAATA,IACFlhB,EAAKuY,mBAAmBqI,GAASM,GAEnClhB,EAAKqZ,+BAA+BxE,cACpC7U,EAAKqZ,+BAAiC7F,EAAlDA,aAA+DC,YAKrDyE,EAAVxa,UAAAwe,+BAAE,WACEre,KAAK0c,8BAAqD1c,KAA9D,8BACO2L,KAAKC,EAAZA,eAA2B5L,KAAK8e,kBACzBjS,UAAP,SAAkBhB,GAClB,IAAckX,EAAQlX,EAAE,GACVgV,EAAKhV,EAAE,GACb,GAAU,MAANgV,EAAJ,CACR,IAAcmC,EAAOnC,EAAGK,SAA+B,qBAC3C+B,GAAOD,EAAK3e,OAAS,IAAIgH,MAAM,GAC/B0X,EAAQ,GAAKA,GAASE,EAAIrjB,SAC9BqjB,EAAI1e,OAAOwe,EAAO,GAClBC,EAAKE,SAASD,QAIZ5I,EAAVxa,UAAAue,4BAAE,WACEpe,KAAKwc,2BAAgDxc,KAAzD,2BACO2L,KAAKC,EAAZA,eAA2B5L,KAAK8e,kBACzBjS,UAAP,SAAkBhB,GAClB,IAAcgV,EAAKhV,EAAE,GACb,GAAU,MAANgV,EAAJ,CACR,IAAcmC,EAAOnC,EAAGK,SAA+B,qBAC3C+B,GAAOD,EAAK3e,OAAS,IAAIgH,MAAM,GACnC4X,EAAIxe,KAAK,CAACoG,UAAW,GAAI8E,aAAc,KACvCqT,EAAKE,SAASD,OAIZ5I,EAAVxa,UAAAse,6BAAE,WAAA,IAAFhc,EAAAnC,KACIA,KAAKsc,4BAAmDtc,KAA5D,4BACO2L,KAAKC,EAAZA,eAA2B5L,KAAK8e,kBACzBjS,UAAP,SAAkBhB,GACV1J,EAAKwgB,oCACb,IAAcI,EAAQlX,EAAE,GACVgV,EAAKhV,EAAE,GACb,KAAIkX,EAAQ,GAAKA,GAAS5gB,EAAKsY,sBAAsB7a,QAAgB,MAANihB,GAA/D,CACA1e,EAAKygB,+BAAiCzgB,EAAKoT,QACxCa,KAAKyD,GAChB,IAAcyJ,EAAMnhB,EAAKygB,+BAA+BO,kBAC1CI,EAAIphB,EAAKsY,sBAAsBsI,GACrCO,EAAIzY,UAAY0Y,EAAE1Y,UAClByY,EAAI3T,aAAe4T,EAAE5T,aACrBxN,EAAKoZ,kCAAoCpZ,EAAKygB,+BAA+BQ,cAC1EvW,UAAX,SAAsBwW,QACG,IAATA,IACFlhB,EAAKsY,sBAAsBsI,GAASM,GAEtClhB,EAAKoZ,kCAAkCvE,cACvC7U,EAAKoZ,kCAAoC5F,EAArDA,aAAkEC,YAKxDyE,EAAVxa,UAAAqe,oBAAE,WAAA,IAAF/b,EAAAnC,KACIA,KAAKoc,mBAAwCpc,KAAjD,mBACO2L,KAAKC,EAAZA,eAA2B5L,KAAK8e,kBACzBjS,UAAP,SAAkBhB,GACV1J,EAAKugB,0BACb,IAAc7B,EAAKhV,EAAE,GACb,GAAU,MAANgV,EAAJ,CACR,IAAcmC,EAAOnC,EAAGK,SAAqB,WACrC/e,EAAKgU,qBAAuBhU,EAAKoT,QAAQa,KAAKxB,GAC9CzS,EAAKgU,qBAAqBgN,kBAAkBtY,UAAYmY,EAAK3e,MAC7DlC,EAAKmZ,wBAA0BnZ,EAAKgU,qBAAqBiN,cACtDvW,UAAX,SAAsBwW,QACG,IAATA,GACFL,EAAKE,SAASG,GAEhBlhB,EAAKmZ,wBAAwBtE,cAC7B7U,EAAKmZ,wBAA0B3F,EAA3CA,aAAwDC,YAK9CyE,EAAVxa,UAAA4e,4BAAE,WAAA,IAAFtc,EAAAnC,KACIA,KAAKkd,2BAAgDld,KAAzD,2BACO2L,KAAKC,EAAZA,eAA2B5L,KAAK8e,kBACzBjS,UAAP,SAAkBhB,GACV1J,EAAKugB,0BACb,IAAc7B,EAAKhV,EAAE,GACb,GAAU,MAANgV,EAAJ,CACR,IAAcmC,EAAOnC,EAAGK,SAA6B,mBAC7C/e,EAAKgU,qBAAuBhU,EAAKoT,QAAQa,KAAKxB,GAC9CzS,EAAKgU,qBAAqBgN,kBAAkBtY,UAAYmY,EAAK3e,MAC7DlC,EAAKmZ,wBAA0BnZ,EAAKgU,qBAAqBiN,cACtDvW,UAAX,SAAsBwW,QACG,IAATA,GACFL,EAAKE,SAASG,GAEhBlhB,EAAKmZ,wBAAwBtE,cAC7B7U,EAAKmZ,wBAA0B3F,EAA3CA,aAAwDC,YAK9CyE,EAAVxa,UAAAoe,iBAAE,WAAA,IAAF9b,EAAAnC,KACIA,KAAKkc,gBAAqClc,KAA9C,gBACO2L,KAAKC,EAAZA,eAA2B5L,KAAK8e,kBACzBjS,UAAP,SAAkBhB,GACV1J,EAAKugB,0BACb,IAAc7B,EAAKhV,EAAE,GACb,GAAU,MAANgV,EAAJ,CACR,IAAcmC,EAAOnC,EAAGK,SAAkB,QAClC/e,EAAKgU,qBAAuBhU,EAAKoT,QAAQa,KAAKxB,GAC9CzS,EAAKgU,qBAAqBgN,kBAAkBtY,UAAYmY,EAAK3e,MAC7DlC,EAAKmZ,wBAA0BnZ,EAAKgU,qBAAqBiN,cACtDvW,UAAX,SAAsBwW,QACG,IAATA,GACFL,EAAKE,SAASG,GAEhBlhB,EAAKmZ,wBAAwBtE,cAC7B7U,EAAKmZ,wBAA0B3F,EAA3CA,aAAwDC,YAK9CyE,EAAVxa,UAAAke,qBAAE,WAAA,IAAF5b,EAAAnC,KACIA,KAAK8b,oBAAyC9b,KAAlD,oBACO2L,KAAKC,EAAZA,eAA2B5L,KAAK8e,kBACzBjS,UAAP,SAAkBhB,GACV1J,EAAKugB,0BACb,IAAc7B,EAAKhV,EAAE,GACb,GAAU,MAANgV,EAAJ,CACR,IAAcmC,EAAOnC,EAAGK,SAAsB,YACtC/e,EAAKgU,qBAAuBhU,EAAKoT,QAAQa,KAAKxB,GAC9CzS,EAAKgU,qBAAqBgN,kBAAkBtY,UAAYmY,EAAK3e,MAC7DlC,EAAKmZ,wBAA0BnZ,EAAKgU,qBAAqBiN,cACtDvW,UAAX,SAAsBwW,QACG,IAATA,GACFL,EAAKE,SAASG,GAEhBlhB,EAAKmZ,wBAAwBtE,cAC7B7U,EAAKmZ,wBAA0B3F,EAA3CA,aAAwDC,YAK9CyE,EAAVxa,UAAAme,uBAAE,WAAA,IAAF7b,EAAAnC,KACIA,KAAKgc,sBAA2Chc,KAApD,sBACO2L,KAAKC,EAAZA,eAA2B5L,KAAK8e,kBACzBjS,UAAP,SAAkBhB,GACV1J,EAAKugB,0BACb,IAAc7B,EAAKhV,EAAE,GACb,GAAU,MAANgV,EAAJ,CACR,IAAcmC,EAAOnC,EAAGK,SAAwB,cACxC/e,EAAKgU,qBAAuBhU,EAAKoT,QAAQa,KAAKxB,GAC9CzS,EAAKgU,qBAAqBgN,kBAAkBtY,UAAYmY,EAAK3e,MAC7DlC,EAAKmZ,wBAA0BnZ,EAAKgU,qBAAqBiN,cACtDvW,UAAX,SAAsBwW,QACG,IAATA,GACFL,EAAKE,SAASG,GAEhBlhB,EAAKmZ,wBAAwBtE,cAC7B7U,EAAKmZ,wBAA0B3F,EAA3CA,aAAwDC,YAK9CyE,EAAVxa,UAAAie,2BAAE,WAAA,IAAF3b,EAAAnC,KACIA,KAAK4b,0BAAiD5b,KAA1D,0BACO2L,KAAKC,EAAZA,eAA2B5L,KAAK8e,kBACzBjS,UAAP,SAAkBhB,GACV1J,EAAKugB,0BACb,IAAcc,EAAQ3X,EAAE,GACVgV,EAAKhV,EAAE,GACT2X,EAAQ,GAAKA,GAASrhB,EAAKqY,qBAAqB5a,QAAgB,MAANihB,IAC9D1e,EAAKgU,qBAAuBhU,EAAKoT,QAAQa,KAAKxB,GAC9CzS,EAAKgU,qBAAqBgN,kBAAkBtY,UAAY1I,EAAKqY,qBAAqBgJ,GAClFrhB,EAAKmZ,wBAA0BnZ,EAAKgU,qBAAqBiN,cACtDvW,UAAX,SAAsBwW,QACG,IAATA,IACFlhB,EAAKqY,qBAAqBgJ,GAASH,GAErClhB,EAAKmZ,wBAAwBtE,cAC7B7U,EAAKmZ,wBAA0B3F,EAA3CA,aAAwDC,YAK9CyE,EAAVxa,UAAAge,oBAAE,WAAA,IAAF1b,EAAAnC,KACIA,KAAK0b,mBAAwC1b,KAAjD,mBACO2L,KAAKC,EAAZA,eAA2B5L,KAAK8e,kBACzBjS,UAAP,SAAkBhB,GACV1J,EAAKugB,0BACb,IAAc7B,EAAKhV,EAAE,GACb,GAAU,MAANgV,EAAJ,CACR,IAAcmC,EAAOnC,EAAGK,SAAqB,WAC/BrW,EAAYmY,EAAK3e,MACvBlC,EAAKgU,qBAAuBhU,EAAKoT,QAAQa,KAAKxB,GAC9CzS,EAAKgU,qBAAqBgN,kBAAkBtY,UAAYA,EACxD1I,EAAKmZ,wBAA0BnZ,EAAKgU,qBAAqBiN,cACtDvW,UAAX,SAAsBwW,QACG,IAATA,GACFL,EAAKE,SAASG,GAEhBlhB,EAAKmZ,wBAAwBtE,cAC7B7U,EAAKmZ,wBAA0B3F,EAA3CA,aAAwDC,YAK9CyE,EAAVxa,UAAA4iB,8BAAE,SAAsC5B,GAAtC,IAAF1e,EAAAnC,KACIA,KAAKqb,sBAAwBwF,EAAG4C,aAC7B9X,KAAK+X,EAAZA,qBAAA,SAAkCC,EAAIC,GAC9B,OAAAC,KAAKC,UAAUH,EAAGhT,qBAAuBkT,KAAKC,UAAUF,EAAGjT,sBAC5D9D,UAAP,SAAkB0W,GACVphB,EAAKmd,mBAAqBiE,EAAE5S,qBAI1B0J,EAAVxa,UAAA0iB,8BAAE,SAAsC1B,GAAtC,IAAF1e,EAAAnC,KACIA,KAAKkb,sBAAwB2F,EAAG4C,aAC7B9X,KAAK+X,EAAZA,qBAAA,SAAkCC,EAAIC,GAC9B,OAAAC,KAAKC,UAAUH,EAAG9T,qBAAuBgU,KAAKC,UAAUF,EAAG/T,sBAC5DhD,UAAP,SAAkB0W,GACVphB,EAAKuY,mBAAqB6I,EAAE1T,qBAI1BwK,EAAVxa,UAAAyiB,iCAAE,SAAyCzB,GAAzC,IAAF1e,EAAAnC,KACIA,KAAKib,yBAA2B4F,EAAG4C,aAChC9X,KAAK+X,EAAZA,qBAAA,SAAkCC,EAAIC,GAC9B,OAAAC,KAAKC,UAAUH,EAAGhV,wBAA0BkV,KAAKC,UAAUF,EAAGjV,yBAC/D9B,UAAP,SAAkB0W,GACVphB,EAAKsY,sBAAwB8I,EAAE5U,wBAI7B0L,EAAVxa,UAAAwiB,wBAAE,SAAgCxB,GAAhC,IAAF1e,EAAAnC,KACIA,KAAKgb,eAAiB6F,EAAG4C,aACtB9X,KAAK+X,EAAZA,qBAAA,SAAkCC,EAAIC,GAAO,OAAAD,EAAGlV,aAAemV,EAAGnV,cAC3D5B,UAAP,SAAkB0W,GACVphB,EAAKgd,eAAiBoE,EAAE9U,cAItB4L,EAAVxa,UAAA2iB,gCAAE,SAAwC3B,GAAxC,IAAF1e,EAAAnC,KACIA,KAAK+a,YAAc8F,EAAG4C,aACnB9X,KAAK+X,EAAZA,qBAAA,SAAkCC,EAAIC,GAAO,OAAAD,EAAGvT,qBAAuBwT,EAAGxT,sBACnEvD,UAAP,SAAkB0W,GACVphB,EAAKkd,oBAAsBkE,EAAEnT,sBAI3BiK,EAAVxa,UAAAuiB,qBAAE,SAA6BvB,GAA7B,IAAF1e,EAAAnC,KACIA,KAAK+a,YAAc8F,EAAG4C,aACnB9X,KAAK+X,EAAZA,qBAAA,SAAkCC,EAAIC,GAAO,OAAAD,EAAGzV,UAAY0V,EAAG1V,WACxDrB,UAAP,SAAkB0W,GACVphB,EAAKid,YAAcmE,EAAErV,WAInBmM,EAAVxa,UAAAqiB,yBAAE,SAAiCrB,GAAjC,IAAF1e,EAAAnC,KACIA,KAAK6a,gBAAkBgG,EAAG4C,aACvB9X,KAAK+X,EAAZA,qBAAA,SAAkCC,EAAIC,GAAO,OAAAD,EAAG3V,cAAgB4V,EAAG5V,eAC5DnB,UAAP,SAAkB0W,GACVphB,EAAK8c,gBAAkBsE,EAAEvV,eAIvBqM,EAAVxa,UAAAsiB,2BAAE,SAAmCtB,GAAnC,IAAF1e,EAAAnC,KACIA,KAAK8a,kBAAoB+F,EAAG4C,aACzB9X,KAAK+X,EAAZA,qBAAA,SAAkCC,EAAIC,GAAO,OAAAD,EAAG9B,gBAAkB+B,EAAG/B,iBAC9DhV,UAAP,SAAkB0W,GACVphB,EAAK+c,kBAAoBqE,EAAE1B,iBAIzBxH,EAAVxa,UAAAmiB,iCAAE,SAAyCnB,GAAzC,IAAF1e,EAAAnC,KACIA,KAAK4a,wBAA0BiG,EAAG4C,aAC/B9X,KAAK+X,EAAZA,qBAAA,SAAkCC,EAAIC,GAC5B,OAAAD,EAAGtC,yBAA2BuC,EAAGvC,0BACpCxU,UAAP,SAAkB0W,GAClB,IAAcQ,EAAgBR,EAAElC,uBAClB2C,EAAW7hB,EAAKqY,qBAAqB5a,OAC3C,GAAIokB,EAAWD,EAAO,CAEpB,IADV,IAAcE,EAAmB,GACdxkB,EAAIukB,EAAWvkB,EAAIskB,EAAQtkB,IAClCwkB,EAAOxf,KAAKkJ,EAAxBA,aAAqCE,kBAAkBhD,WAE7C1I,EAAKqY,qBAAuBrY,EAAKqY,qBAAqB3T,OAAOod,QACzCF,EAAXC,GACT7hB,EAAKqY,qBAAqBjW,OAAO,EAAGyf,EAAWD,MAK/C1J,EAAVxa,UAAAoiB,wBAAE,SAAgCpB,GAAhC,IAAF1e,EAAAnC,KACIA,KAAK2a,eAAiBkG,EAAG4C,aACtB9X,KAAK+X,EAAZA,qBAAA,SAAkCC,EAAIC,GAAO,OAAAD,EAAG3C,gBAAkB4C,EAAG5C,iBAC9DnU,UAAP,SAAkB0W,GAClB,IACYW,EACJ,OAFsBX,EAAEvC,eAGtB,IAAK,SACLkD,EAAevW,EAAzBA,aAAsCE,kBAAkBhD,UAC9C,MACA,IAAK,QACLqZ,EAAevW,EAAzBA,aAAsCwW,iBAAiBtZ,UAC7C,MACA,QACAqZ,EAAe,KAEjB/hB,EAAK6c,eAAiBkF,EACtBrD,EAAGK,SAAqB,WAAEgC,SAASgB,MAIjC7J,EAAVxa,UAAAohB,oBAAE,SAA4BpW,GAC1B,OAAoF,IAAhFA,EAAUA,UAAUqK,cAAcvH,EAA1CA,aAAuDE,kBAAkBhD,WAC5D,SAE0E,IAA/EA,EAAUA,UAAUqK,cAAcvH,EAA1CA,aAAuDwW,iBAAiBtZ,WAC3D,QAEF,2BAt5BX,CAAA1J,KAACC,EAADA,UAAAC,KAAA,CAAW,CAAXC,SAAA,yBACEC,SAAU,8sPACVC,OAAQ,CAAV,s9CACEC,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,0EAvDA,CAAAX,KAA2BijB,EAA3BA,eAfA/J,EAkEA,GC9DAgK,GAAA,WAiBE,SAAFA,EAAsBC,GAAAtkB,KAAtBskB,KAAsBA,EANtB,OADEvlB,OAAFuB,eAAM+jB,EAANxkB,UAAA,WAAA,KAAE,WAA8C,OAAOG,KAAKukB,eAC1D,SACa3c,GACX5H,KAAKukB,UAAY3c,EACjB5H,KAAKskB,KAAKE,8DAdd,CAAArjB,KAACC,EAADA,UAAAC,KAAA,CAAW,CAAXC,SAAA,yBACEC,SAAU,gKACVC,OAAQ,CAAV,iHACEC,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,2EAVAuiB,EAAAtiB,eAAA,4BAiBAsiB,EAXA,GC+BAI,GAAA,WAAA,SAAAA,KAmDoC,qBAnDpC,CAAAtjB,KAACujB,EAADA,SAAArjB,KAAA,CAAU,CACRsjB,QAAS,CACPC,EAAJA,aACIC,EAAJA,YACIC,EAAJA,oBACIC,EAAJA,eACIC,EAAJA,gBACIC,EAAJA,cACIC,EAAJA,kBACIC,EAAJA,gBACIC,EAAJA,mBACIC,EAAJA,cACIC,EAAJA,eACIC,EAAJA,cACIC,EAAJA,cACIC,EAAJA,gBACIC,EAAJA,iBACIC,EAAJA,gBACIC,EAAJA,eACIC,EAAJA,iBACIC,EAAJA,iBACIC,EAAJA,gBACIC,EAAJA,sBACIC,EAAJA,mBAEEC,aAAc,CACZjmB,EACA6Q,EACA5N,EACA0R,EACAzD,EACAgG,EACAkD,GACAgK,GACAxK,EACAC,EACAxE,GAEF6Q,QAAS,CACP7Q,GAEF8Q,gBAAiB,CACftV,EACA8D,EACAiF,EACAC,GAEFuM,UAAW,CACT9e,OAGJkd,EAnDA"}