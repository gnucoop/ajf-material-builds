{"version":3,"file":"material-form-builder.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/material/form-builder/branch-line.ts","../../src/material/form-builder/choices-origin-data-source.ts","../../src/material/form-builder/choices-origin-editor.ts","../../src/material/form-builder/form-builder-service.ts","../../src/material/form-builder/choices-origin-editor-dialog.ts","../../src/material/form-builder/condition-editor.ts","../../src/material/form-builder/condition-editor-dialog.ts","../../src/material/form-builder/form-builder.ts","../../src/material/form-builder/node-entry.ts","../../src/material/form-builder/validation-condition-editor-dialog.ts","../../src/material/form-builder/warning-condition-editor-dialog.ts","../../src/material/form-builder/node-properties.ts","../../src/material/form-builder/node-type-entry.ts","../../src/material/form-builder/form-builder-module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, ViewEncapsulation\n} from '@angular/core';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-branch-line',\n  templateUrl: 'branch-line.html',\n  styleUrls: ['branch-line.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbBranchLine {\n  private _offset = 0;\n  @Input() set offset(offset: number) {\n    this._offset = offset;\n    this._updateOffset();\n  }\n\n  private _color: string;\n  @Input() set color(color: string) {\n    this._color = color;\n    this._updateColor();\n  }\n\n  private _height = 0;\n  @Input() set height(height: number) {\n    this._height = height;\n    this._updateHeight();\n  }\n\n  constructor(private _el: ElementRef, private _renderer: Renderer2) { }\n\n  private _updateHeight(): void {\n    const height = `${Math.max(0, this._height - 25)}px`;\n    this._renderer.setStyle(this._el.nativeElement, 'height', height);\n  }\n\n  private _updateOffset(): void {\n    const margin = `${this._offset * 4}px`;\n    this._renderer.setStyle(this._el.nativeElement, 'margin-top', margin);\n    this._renderer.setStyle(this._el.nativeElement, 'margin-left', margin);\n  }\n\n  private _updateColor(): void {\n    this._renderer.setStyle(this._el.nativeElement, 'border-color', this._color);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {DataSource} from '@angular/cdk/collections';\n\nimport {BehaviorSubject, Observable} from 'rxjs';\n\n\nexport type ChoicesOriginChoiceEntry = {label: string, value: string};\n\nexport class ChoicesOriginDataSource\n    extends DataSource<ChoicesOriginChoiceEntry> {\n  private _choices: BehaviorSubject<ChoicesOriginChoiceEntry[]> =\n      new BehaviorSubject<ChoicesOriginChoiceEntry[]>([]);\n  private _choicesObs: Observable<ChoicesOriginChoiceEntry[]>;\n\n  constructor() {\n    super();\n    this._choicesObs = this._choices.asObservable();\n  }\n\n  connect(): Observable<ChoicesOriginChoiceEntry[]> {\n    return this._choicesObs;\n  }\n\n  disconnect() {}\n\n  updateChoices(choices: ChoicesOriginChoiceEntry[]) {\n    this._choices.next(choices);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\n\nimport {IAjfChoicesOrigin, AjfChoicesFixedOrigin} from '@ajf/core/forms';\n\nimport {ChoicesOriginChoiceEntry, ChoicesOriginDataSource} from './choices-origin-data-source';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-choices-origin-editor',\n  templateUrl: 'choices-origin-editor.html',\n  styleUrls: ['choices-origin-editor.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbChoicesOriginEditor {\n  private _displayedColumns: string[] = ['label', 'value', 'delete'];\n  get displayedColumns(): string[] { return this._displayedColumns; }\n\n  private _choicesOrigin: IAjfChoicesOrigin;\n  get choicesOrigin(): IAjfChoicesOrigin { return this._choicesOrigin; }\n  @Input()\n  set choicesOrigin(choicesOrigin: IAjfChoicesOrigin) {\n    this._choicesOrigin = choicesOrigin;\n    this.name = choicesOrigin.getName();\n    this.label = choicesOrigin.getLabel();\n\n    this.canEditChoices = choicesOrigin instanceof AjfChoicesFixedOrigin;\n    this._choicesArr = choicesOrigin.getChoices();\n    this._choices.updateChoices(this._choicesArr);\n  }\n\n  editing: {[key: string]: boolean} = {};\n  name: string;\n  label: string;\n  canEditChoices: boolean;\n\n  private _choices: ChoicesOriginDataSource = new ChoicesOriginDataSource();\n  get choices(): ChoicesOriginDataSource { return this._choices; }\n\n  private _choicesArr: ChoicesOriginChoiceEntry[] = [];\n  get choicesArr(): ChoicesOriginChoiceEntry[] { return this._choicesArr; }\n\n  updateValue(evt: any, cell: string, _value: any, rowIdx: number): void {\n    this.editing[rowIdx + '-' + cell] = false;\n    (this._choicesArr[rowIdx] as any)[cell] = evt.target.value;\n    this._choices.updateChoices(this._choicesArr);\n  }\n\n  deleteRow(rowIdx: number): void {\n    this._choicesArr.splice(rowIdx, 1);\n    this._choices.updateChoices(this._choicesArr);\n  }\n\n  addRow(): void {\n    this._choicesArr.push({label: '', value: ''});\n    this._choices.updateChoices(this._choicesArr);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Injectable, EventEmitter} from '@angular/core';\n\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {\n  filter, map, publishReplay, refCount, scan, withLatestFrom\n} from 'rxjs/operators';\n\nimport {\n  AjfCondition,\n  AjfFormula,\n} from '@ajf/core/models';\nimport {\n  AjfAttachmentsOrigin,\n  AjfBooleanField,\n  AjfChoicesFixedOrigin,\n  AjfDateField,\n  AjfDateInputField,\n  AjfField,\n  AjfFieldWithChoices,\n  AjfForm,\n  AjfFormulaField,\n  AjfMultipleChoiceField,\n  AjfNode,\n  AjfNodeGroup,\n  AjfNumberField,\n  AjfRepeatingSlide,\n  AjfSingleChoiceField,\n  AjfSlide,\n  AjfStringField,\n  AjfTableField,\n  AjfTextField,\n  AjfTimeField,\n  AjfValidation,\n  AjfValidationGroup,\n  AjfWarning,\n  AjfWarningGroup,\n  IAjfChoicesOrigin,\n  IAjfNodesOperation,\n} from '@ajf/core/forms';\nimport {\n  IAjfAttachmentsOriginsOperation, IAjfChoicesOriginsOperation\n} from './operations';\n\n\nexport interface AjfFormBuilderNodeTypeEntry {\n  label: string;\n  icon: {\n    fontSet: string;\n    fontIcon: string;\n  };\n  nodeType: typeof AjfNode;\n  isSlide?: boolean;\n}\n\n\nexport interface AjfFormBuilderNodeEntry {\n  node: AjfNode;\n  container: AjfContainerNode | null;\n  children: AjfFormBuilderNodeEntry[];\n  content: AjfFormBuilderNodeEntry[];\n}\n\n\nexport interface AjfFormBuilderEmptySlot {\n  parent: AjfNode;\n  parentNode: number;\n}\n\n\nexport type AjfFormBuilderNode = AjfFormBuilderNodeEntry | AjfFormBuilderEmptySlot;\n\n\nexport function isContainerNode(node: AjfNode): boolean {\n  return node != null && (\n    node instanceof AjfSlide ||\n    node instanceof AjfRepeatingSlide ||\n    node instanceof AjfNodeGroup\n  );\n}\nexport type AjfContainerNode = AjfSlide | AjfRepeatingSlide | AjfNodeGroup;\n\nexport function isRepeatingContainerNode(node: AjfNode): boolean {\n  return node != null && (\n    node instanceof AjfRepeatingSlide ||\n    node instanceof AjfNodeGroup\n  );\n}\nexport type AjfRepeatingContainerNode = AjfRepeatingSlide | AjfNodeGroup;\n\nexport function isSlideNode(node: AjfNode): boolean {\n  return node != null && (\n    node instanceof AjfSlide ||\n    node instanceof AjfRepeatingSlide\n  );\n}\n\n\nfunction getNodeContainer(c: {nodes: AjfNode[]}, node: AjfNode): {nodes: AjfNode[]} | null {\n  if (c.nodes.indexOf(node) > -1) {\n    return c;\n  }\n  const cns = c.nodes.filter(n => isContainerNode(n));\n  const len = cns.length;\n  for (let i = 0 ; i < len ; i++) {\n    const cn = getNodeContainer(<AjfContainerNode>cns[i], node);\n    if (cn != null) { return cn; }\n  }\n  return null;\n}\n\n\nfunction buildFormBuilderNodesSubtree(\n  nodes: AjfNode[], parent: AjfNode, ignoreConditionalBranches = false\n): AjfFormBuilderNode[] {\n  const entries: AjfFormBuilderNode[] = nodes\n    .filter(n => n.parent === parent.id)\n    .sort((n1, n2) => n1.parentNode - n2.parentNode)\n    .map(n => <AjfFormBuilderNodeEntry>{\n      node: n,\n      children: buildFormBuilderNodesSubtree(nodes, n),\n      content: buildFormBuilderNodesContent(nodes, n)\n    });\n  if (!ignoreConditionalBranches) {\n    const entriesNum = entries.length;\n    const cbs = parent.conditionalBranches.length;\n    for (let i = entriesNum ; i < cbs ; i++) {\n      entries.push({\n        parent: parent,\n        parentNode: i\n      });\n    }\n  }\n  return entries;\n}\n\nfunction buildFormBuilderNodesContent(_nodes: AjfNode[], node: AjfNode): AjfFormBuilderNode[] {\n  if (isContainerNode(node)) {\n    return buildFormBuilderNodesSubtree((<AjfContainerNode>node).nodes, node, true);\n  }\n  return [];\n}\n\n\nfunction buildFormBuilderNodesTree(nodes: AjfNode[]): (AjfFormBuilderNode | null)[] {\n  const rootNodes = nodes.filter(n => n.parent == null);\n  if (rootNodes.length === 1) {\n    const rootNode = rootNodes[0];\n    if (rootNode instanceof AjfRepeatingSlide || rootNode instanceof AjfSlide) {\n      const tree: AjfFormBuilderNode[] = [];\n      tree.push(<AjfFormBuilderNodeEntry>{\n        node: rootNode,\n        container: null,\n        children: buildFormBuilderNodesSubtree(nodes, rootNode),\n        content: buildFormBuilderNodesContent(nodes, rootNode)\n      });\n      return tree;\n    }\n  } else if (rootNodes.length === 0) {\n    return [null];\n  }\n  throw new Error('Invalid form definition');\n}\n\nexport function flattenNodes(nodes: AjfNode[]): AjfNode[] {\n  let flatNodes: AjfNode[] = [];\n\n  nodes.forEach((node: AjfNode) => {\n    if (isContainerNode(node)) {\n      flatNodes = flatNodes.concat(flattenNodes((<AjfContainerNode>node).nodes));\n    }\n    flatNodes.push(node);\n  });\n\n  return flatNodes;\n}\n\nfunction getDescendants(\n  flatNodes: AjfNode[], parentNode: AjfNode, branch: number | null = null\n): AjfNode[] {\n  return branch != null ?\n    flatNodes.filter(n => n.parent === parentNode.id && n.parentNode === branch) :\n    flatNodes.filter(n => n.parent === parentNode.id);\n}\n\nfunction removeNodes(nodes: AjfNode[], ids: number[]): AjfNode[] {\n  const len = nodes.length;\n  for (let i = 0 ; i < len ; i++) {\n    const node = nodes[i];\n    if (isContainerNode(node)) {\n      const container = (<AjfContainerNode>node);\n      container.nodes = removeNodes(container.nodes, ids);\n    }\n  }\n  return nodes.filter(n => ids.indexOf(n.id) === -1);\n}\n\nfunction deleteNodeSubtree(\n  nodes: AjfNode[], parentNode: AjfNode, branch: number | null = null\n): AjfNode[] {\n  const flatNodes = flattenNodes(nodes);\n  let delNodes: AjfNode[] = [];\n  let descendants = getDescendants(flatNodes, parentNode, branch);\n  const len = descendants.length;\n  for (let i = 0 ; i < len ; i++) {\n    delNodes = delNodes.concat(getDescendants(flatNodes, descendants[i]));\n  }\n  delNodes = delNodes.concat(descendants);\n  return removeNodes(nodes, delNodes.map(n => n.id));\n}\n\nlet nodeUniqueId = 0;\n\n\n@Injectable()\nexport class AjfFormBuilderService {\n  private _availableNodeTypes: AjfFormBuilderNodeTypeEntry[] = [\n    { label: 'Slide', icon: {fontSet: 'ajf-icon', fontIcon: 'field-slide' }, nodeType: AjfSlide,\n      isSlide: true },\n    { label: 'Repeating slide', icon: { fontSet: 'ajf-icon', fontIcon: 'field-repeatingslide' },\n      nodeType: AjfRepeatingSlide, isSlide: true },\n    { label: 'String', icon: { fontSet: 'ajf-icon', fontIcon: 'field-string' },\n      nodeType: AjfStringField },\n    { label: 'Text', icon: { fontSet: 'ajf-icon', fontIcon: 'field-text' },\n      nodeType: AjfTextField },\n    { label: 'Number', icon: { fontSet: 'ajf-icon', fontIcon: 'field-number' },\n      nodeType: AjfNumberField },\n    { label: 'Boolean', icon: { fontSet: 'ajf-icon', fontIcon: 'field-boolean' },\n      nodeType: AjfBooleanField },\n    { label: 'Single choice', icon: { fontSet: 'ajf-icon', fontIcon: 'field-singlechoice' },\n      nodeType: AjfSingleChoiceField },\n    { label: 'Multiple choice', icon: { fontSet: 'ajf-icon', fontIcon: 'field-multiplechoice' },\n      nodeType: AjfMultipleChoiceField },\n    { label: 'Formula', icon: { fontSet: 'ajf-icon', fontIcon: 'field-formula' },\n      nodeType: AjfFormulaField },\n    { label: 'Date', icon: { fontSet: 'ajf-icon', fontIcon: 'field-date' },\n      nodeType: AjfDateField },\n    { label: 'Date input', icon: { fontSet: 'ajf-icon', fontIcon: 'field-dateinput' },\n      nodeType: AjfDateInputField },\n    { label: 'Time', icon: { fontSet: 'ajf-icon', fontIcon: 'field-time' },\n      nodeType: AjfTimeField },\n    { label: 'Table', icon: { fontSet: 'ajf-icon', fontIcon: 'field-table' },\n      nodeType: AjfTableField }\n  ];\n  /**\n   * Available node types\n   *\n   * @readonly\n   * @memberOf AjfFormBuilderService\n   */\n  get availableNodeTypes(): AjfFormBuilderNodeTypeEntry[] { return this._availableNodeTypes; }\n\n  private _form: BehaviorSubject<AjfForm | null> = new BehaviorSubject<AjfForm | null>(null);\n  private _formObs: Observable<AjfForm | null> = this._form.asObservable();\n  /**\n   * Current edited form stream\n   *\n   * @readonly\n   * @memberOf AjfFormBuilderService\n   */\n  get form(): Observable<AjfForm | null> { return this._formObs; }\n\n  private _attachmentsOrigins: Observable<AjfAttachmentsOrigin[]>;\n  get attachmentsOrigins(): Observable<AjfAttachmentsOrigin[]> { return this._attachmentsOrigins; }\n\n  private _choicesOrigins: Observable<IAjfChoicesOrigin[]>;\n  get choicesOrigins(): Observable<IAjfChoicesOrigin[]> { return this._choicesOrigins; }\n\n  private _nodes: Observable<AjfNode[]>;\n  get nodes(): Observable<AjfNode[]> { return this._nodes; }\n\n  private _flatNodes: Observable<AjfNode[]>;\n  get flatNodes(): Observable<AjfNode[]> {\n    return this._flatNodes;\n  }\n\n  private _flatFields: Observable<AjfField[]>;\n  get flatFields(): Observable<AjfField[]> { return this._flatFields; }\n\n  private _nodeEntriesTree: Observable<AjfFormBuilderNodeEntry[]>;\n  get nodeEntriesTree(): Observable<AjfFormBuilderNodeEntry[]> { return this._nodeEntriesTree; }\n\n  private _editedNodeEntry: BehaviorSubject<AjfFormBuilderNodeEntry | null> =\n    new BehaviorSubject<AjfFormBuilderNodeEntry | null>(null);\n  private _editedNodeEntryObs: Observable<AjfFormBuilderNodeEntry | null> =\n    this._editedNodeEntry.asObservable();\n  get editedNodeEntry(): Observable<AjfFormBuilderNodeEntry | null> {\n    return this._editedNodeEntryObs;\n  }\n\n  private _editedCondition: BehaviorSubject<AjfCondition | null> =\n    new BehaviorSubject<AjfCondition | null>(null);\n  private _editedConditionObs: Observable<AjfCondition | null> =\n    this._editedCondition.asObservable();\n  get editedCondition(): Observable<AjfCondition | null> { return this._editedConditionObs; }\n\n  private _editedChoicesOrigin: BehaviorSubject<IAjfChoicesOrigin | null> =\n    new BehaviorSubject<IAjfChoicesOrigin | null>(null);\n  private _editedChoicesOriginObs: Observable<IAjfChoicesOrigin | null> =\n    this._editedChoicesOrigin.asObservable();\n  get editedChoicesOrigin(): Observable<IAjfChoicesOrigin | null> {\n    return this._editedChoicesOriginObs;\n  }\n\n  private _beforeNodesUpdate: EventEmitter<void> = new EventEmitter<void>();\n  private _beforeNodesUpdateObs: Observable<void> = this._beforeNodesUpdate.asObservable();\n  get beforeNodesUpdate(): Observable<void> { return this._beforeNodesUpdateObs; }\n  private _afterNodeUpdate: EventEmitter<void> = new EventEmitter<void>();\n  private _afterNodeUpdateObs: Observable<void> = this._afterNodeUpdate.asObservable();\n  get afterNodeUpdate(): Observable<void> { return this._afterNodeUpdateObs; }\n\n  private _nodesUpdates: Subject<IAjfNodesOperation> = new Subject<IAjfNodesOperation>();\n  private _attachmentsOriginsUpdates: Subject<IAjfAttachmentsOriginsOperation> =\n    new Subject<IAjfAttachmentsOriginsOperation>();\n  private _choicesOriginsUpdates: Subject<IAjfChoicesOriginsOperation> =\n    new Subject<IAjfChoicesOriginsOperation>();\n\n  private _saveNodeEntryEvent: EventEmitter<any> = new EventEmitter<any>();\n  private _deleteNodeEntryEvent: EventEmitter<AjfFormBuilderNodeEntry> =\n    new EventEmitter<AjfFormBuilderNodeEntry>();\n\n  constructor() {\n    this._initChoicesOriginsStreams();\n    this._initAttachmentsOriginsStreams();\n    this._initNodesStreams();\n    this._initFormStreams();\n    this._initSaveNode();\n    this._initDeleteNode();\n  }\n\n  /**\n   * Sets the current edited form\n   *\n   * @param form\n   *\n   * @memberOf AjfFormBuilderService\n   */\n  setForm(form: AjfForm | null): void {\n    if (form !== this._form.getValue()) {\n      this._form.next(form);\n    }\n  }\n\n  editNodeEntry(nodeEntry: AjfFormBuilderNodeEntry): void {\n    this._editedNodeEntry.next(nodeEntry);\n  }\n\n  editCondition(condition: AjfCondition): void {\n    this._editedCondition.next(condition);\n  }\n\n  saveCurrentCondition(condition: string): void {\n    let c = this._editedCondition.getValue();\n    if (c == null) { return; }\n    c.condition = condition;\n    this._editedCondition.next(null);\n  }\n\n  cancelConditionEdit(): void {\n    this._editedChoicesOrigin.next(null);\n  }\n\n  insertNode(\n    nodeType: AjfFormBuilderNodeTypeEntry,\n    parent: AjfNode,\n    parentNode: number,\n    inContent = false\n  ): void {\n    let node = new nodeType.nodeType({\n      id: ++nodeUniqueId,\n      parent: parent.id,\n      parentNode\n    });\n    this._beforeNodesUpdate.emit();\n    this._nodesUpdates.next((nodes: AjfNode[]): AjfNode[] => {\n      const cn = isContainerNode(parent) && inContent ?\n        (<AjfContainerNode>parent) :\n        getNodeContainer({nodes}, parent);\n      if (cn != null) {\n        if (cn instanceof AjfNode) {\n          const newNodes = cn.nodes.slice(0);\n          newNodes.push(node);\n          cn.nodes = newNodes;\n        } else {\n          cn.nodes.push(node);\n        }\n      }\n      return nodes;\n    });\n  }\n\n  saveNodeEntry(properties: any): void {\n    this._saveNodeEntryEvent.emit(properties);\n  }\n\n  cancelNodeEntryEdit(): void {\n    this._editedNodeEntry.next(null);\n  }\n\n  deleteNodeEntry(nodeEntry: AjfFormBuilderNodeEntry): void {\n    this._deleteNodeEntryEvent.next(nodeEntry);\n  }\n\n  getCurrentForm(): Observable<AjfForm> {\n    return this._form.pipe(\n      withLatestFrom(this._nodes),\n      filter((r) => r[0] != null),\n      map((r: [AjfForm | null, AjfNode[]]) => {\n        const form = r[0]!;\n        const nodes = r[1];\n        return new AjfForm({\n          choicesOrigins: form.choicesOrigins.slice(0),\n          attachmentsOrigins: form.attachmentsOrigins.slice(0),\n          stringIdentifier: form.stringIdentifier.slice(0),\n          nodes: nodes.slice(0)\n        });\n      })\n    );\n  }\n\n  editChoicesOrigin(choicesOrigin: IAjfChoicesOrigin): void {\n    this._editedChoicesOrigin.next(choicesOrigin);\n  }\n\n  createChoicesOrigin(): void {\n    this._editedChoicesOrigin.next(new AjfChoicesFixedOrigin<any>());\n  }\n\n  cancelChoicesOriginEdit(): void {\n    this._editedChoicesOrigin.next(null);\n  }\n\n  saveChoicesOrigin(params: {label: string, name: string, choices: any[]}): void {\n    const choicesOrigin = this._editedChoicesOrigin.getValue();\n    if (choicesOrigin != null) {\n      choicesOrigin.setLabel(params.label);\n      choicesOrigin.setName(params.name);\n      if (choicesOrigin instanceof AjfChoicesFixedOrigin) {\n        choicesOrigin.setChoices(params.choices);\n      }\n    }\n    this._editedChoicesOrigin.next(null);\n  }\n\n  private _findMaxNodeId(nodes: AjfNode[], _curMaxId = 0): number {\n    let maxId = 0;\n    nodes.forEach((n) => {\n      maxId = Math.max(maxId, n.id);\n      if (isContainerNode(n)) {\n        maxId = Math.max(maxId, this._findMaxNodeId((<AjfContainerNode>n).nodes));\n      }\n    });\n    return maxId;\n  }\n\n  private _initFormStreams(): void {\n    this._form\n      .subscribe((form: AjfForm | null) => {\n        nodeUniqueId = 0;\n        if (form != null && form.nodes != null && form.nodes.length > 0) {\n          nodeUniqueId = this._findMaxNodeId(form.nodes);\n        }\n        this._nodesUpdates.next(\n          (_nodes: AjfNode[]): AjfNode[] => {\n            return form != null && form.nodes != null ? form.nodes.slice(0) : [];\n          }\n        );\n        this._attachmentsOriginsUpdates.next(\n          (_attachmentsOrigins: AjfAttachmentsOrigin[]): AjfAttachmentsOrigin[] => {\n            return form != null && form.attachmentsOrigins != null ?\n              form.attachmentsOrigins.slice(0) : [];\n          }\n        );\n        this._choicesOriginsUpdates.next(\n          (_choicesOrigins: IAjfChoicesOrigin[]): IAjfChoicesOrigin[] => {\n            return form != null && form.choicesOrigins != null ? form.choicesOrigins.slice(0) : [];\n          }\n        );\n      });\n  }\n\n  private _initChoicesOriginsStreams(): void {\n    this._choicesOrigins = (<Observable<IAjfChoicesOriginsOperation>>this._choicesOriginsUpdates)\n      .pipe(\n        scan((choicesOrigins: IAjfChoicesOrigin[], op: IAjfChoicesOriginsOperation) => {\n          return op(choicesOrigins);\n        }, []),\n        publishReplay(1),\n        refCount()\n      );\n  }\n\n  private _initAttachmentsOriginsStreams(): void {\n    this._attachmentsOrigins =\n      (<Observable<IAjfAttachmentsOriginsOperation>>this._attachmentsOriginsUpdates).pipe(\n        scan((attachmentsOrigins: AjfAttachmentsOrigin[], op: IAjfAttachmentsOriginsOperation) => {\n          return op(attachmentsOrigins);\n        }, []),\n        publishReplay(1),\n        refCount()\n      );\n  }\n\n  private _initNodesStreams(): void {\n    this._nodes = (<Observable<IAjfNodesOperation>>this._nodesUpdates).pipe(\n      scan((nodes: AjfNode[], op: IAjfNodesOperation) => {\n        return op(nodes);\n      }, []),\n      publishReplay(1),\n      refCount()\n    );\n\n    this._flatNodes = this._nodes.pipe(\n      map((nodes: AjfNode[]) => flattenNodes(nodes)),\n      publishReplay(1),\n      refCount()\n    );\n\n    this._flatFields = this._flatNodes.pipe(\n      map((nodes: AjfNode[]) => <AjfField[]>nodes.filter(n => !isContainerNode(n))),\n      publishReplay(1),\n      refCount()\n    );\n\n    this._nodeEntriesTree = this._nodes.pipe(\n      map(nodes => <AjfFormBuilderNodeEntry[]>buildFormBuilderNodesTree(nodes)),\n      publishReplay(1),\n      refCount()\n    );\n  }\n\n  private _initSaveNode(): void {\n    this._saveNodeEntryEvent.pipe(\n      withLatestFrom(this.editedNodeEntry, this.choicesOrigins, this.attachmentsOrigins),\n      filter((r) => r[1] != null),\n      map((r: [\n        any, AjfFormBuilderNodeEntry | null, IAjfChoicesOrigin[], AjfAttachmentsOrigin[]\n      ]) => {\n        this._beforeNodesUpdate.emit();\n        const properties = r[0];\n        const nodeEntry = r[1]!;\n        const choicesOrigins = r[2];\n        const attachmentsOrigins = r[3];\n        const origNode = nodeEntry.node;\n        const node = AjfNode.fromJson(origNode.toJson(), choicesOrigins, attachmentsOrigins);\n        node.id = nodeEntry.node.id;\n        node.name = properties['name'];\n        node.label = properties['label'];\n        node.visibility = properties['visibility'] != null ?\n          new AjfCondition({ condition: properties['visibility'] }) : null;\n\n        const oldConditionalBranches = node.conditionalBranches.length;\n        node.conditionalBranches = properties['conditionalBranches'] != null\n          ? properties['conditionalBranches']\n            .map((condition: string) => new AjfCondition({condition}))\n          : [AjfCondition.alwaysCondition()];\n        const newConditionalBranches = node.conditionalBranches.length;\n\n        if (isRepeatingContainerNode(node)) {\n          const repNode = <AjfRepeatingContainerNode>node;\n          repNode.formulaReps = properties['formulaReps'] != null ?\n            new AjfFormula({formula: properties['formulaReps']}) : null;\n          repNode.minReps = properties['minReps'];\n          repNode.maxReps = properties['maxReps'];\n        }\n\n        if (nodeEntry.node instanceof AjfField) {\n          const field = <AjfField>nodeEntry.node;\n          field.description = properties['description'];\n          field.defaultValue = properties['defaultValue'];\n          field.formula = properties['formula'] != null ?\n            new AjfFormula({formula: properties['formula']}) : null;\n          const forceValue = properties['value'];\n          const notEmpty = properties['notEmpty'];\n          const validationConditions = properties['validationConditions'];\n          let minValue: number | null = parseInt(properties['minValue'], 10);\n          let maxValue: number | null = parseInt(properties['maxValue'], 10);\n          let minDigits: number | null = parseInt(properties['minDigits'], 10);\n          let maxDigits: number | null = parseInt(properties['maxDigits'], 10);\n          if (isNaN(minValue)) { minValue = null; }\n          if (isNaN(maxValue)) { maxValue = null; }\n          if (isNaN(minDigits)) { minDigits = null; }\n          if (isNaN(maxDigits)) { maxDigits = null; }\n          if (\n            forceValue != null || notEmpty != null ||\n            (validationConditions != null && validationConditions.length > 0) ||\n            minValue != null || maxValue != null || minDigits != null || maxDigits != null\n          ) {\n            const validation = field.validation || new AjfValidationGroup();\n            validation.forceValue = forceValue;\n            validation.notEmpty = notEmpty ? AjfValidation.getNotEmptyCondition() : null;\n            validation.minValue = minValue != null ? AjfValidation.getMinCondition(minValue) : null;\n            validation.maxValue = maxValue != null ? AjfValidation.getMaxCondition(maxValue) : null;\n            validation.minDigits = minDigits != null ?\n              AjfValidation.getMinDigitsCondition(minDigits) : null;\n            validation.maxDigits = maxDigits != null ?\n              AjfValidation.getMaxDigitsCondition(maxDigits) : null;\n            validation.conditions = (validationConditions || [])\n              .map((c: {condition: string, errorMessage: string}) => new AjfValidation({\n                condition: c.condition,\n                errorMessage: c.errorMessage\n              }));\n            field.validation = validation;\n          } else {\n            field.validation = null;\n          }\n          const notEmptyWarning = properties['notEmptyWarning'];\n          const warningConditions = properties['warningConditions'];\n          if (\n            notEmptyWarning != null ||\n            (warningConditions != null && warningConditions.length > 0)\n          ) {\n            const warning = field.warning || new AjfWarningGroup();\n            warning.notEmpty = notEmptyWarning ? AjfWarning.getNotEmptyWarning() : null;\n            warning.conditions = (warningConditions || [])\n              .map((w: {condition: string, warningMessage: string}) => new AjfWarning({\n                condition: w.condition, warningMessage: w.warningMessage\n              }));\n            field.warning = warning;\n          } else {\n            field.warning = null;\n          }\n          field.nextSlideCondition = properties['nextSlideCondition'] != null ?\n            new AjfCondition({ condition: properties['nextSlideCondition'] }) : null;\n\n          if (field instanceof AjfFieldWithChoices) {\n            const fwc = <AjfFieldWithChoices>field;\n            let choicesOrigin: IAjfChoicesOrigin | null = null;\n            let coIdx = 0;\n            const coNum: number = choicesOrigins.length;\n            while (choicesOrigin == null && coIdx < coNum) {\n              if (choicesOrigins[coIdx].getName() === properties['choicesOrigin']) {\n                choicesOrigin = choicesOrigins[coIdx];\n              }\n              coIdx++;\n            }\n            if (choicesOrigin != null) {\n              fwc.choicesOrigin = choicesOrigin;\n            }\n            fwc.forceExpanded = properties['forceExpanded'];\n            fwc.forceNarrow = properties['forceNarrow'];\n            fwc.triggerConditions = (properties['triggerConditions'] || [])\n              .map((t: string) => new AjfCondition({condition: t}));\n          }\n        }\n\n        this._editedNodeEntry.next(null);\n\n        return (nodes: AjfNode[]): AjfNode[] => {\n          let cn = getNodeContainer({nodes}, origNode);\n          if (cn != null) {\n            if (cn instanceof AjfNode) {\n              const idx = cn.nodes.indexOf(origNode);\n              let newNodes = cn.nodes.slice(0, idx);\n              newNodes.push(node);\n              newNodes = newNodes.concat(cn.nodes.slice(idx + 1));\n              cn.nodes = newNodes;\n              nodes = nodes.slice(0);\n            } else {\n              const idx = nodes.indexOf(origNode);\n              nodes = nodes.slice(0, idx).concat([node]).concat(nodes.slice(idx + 1));\n            }\n            if (newConditionalBranches < oldConditionalBranches) {\n              for (let i = newConditionalBranches ; i < oldConditionalBranches ; i++) {\n                nodes = deleteNodeSubtree(nodes, node, i);\n              }\n            }\n          }\n          return nodes;\n        };\n      })\n    ).subscribe(this._nodesUpdates);\n  }\n\n  private _initDeleteNode(): void {\n    (<Observable<AjfFormBuilderNodeEntry>>this._deleteNodeEntryEvent).pipe(\n      map((nodeEntry: AjfFormBuilderNodeEntry) => {\n        this._beforeNodesUpdate.emit();\n        return (nodes: AjfNode[]): AjfNode[] => {\n          const node = nodeEntry.node;\n          let cn = getNodeContainer({nodes}, node);\n          if (cn != null) {\n            if (cn instanceof AjfNode) {\n              const idx = cn.nodes.indexOf(node);\n              let newNodes = cn.nodes.slice(0, idx);\n              newNodes = newNodes.concat(cn.nodes.slice(idx + 1));\n              cn.nodes = newNodes;\n              nodes = nodes.slice(0);\n            } else {\n              const idx = nodes.indexOf(node);\n              nodes = nodes.slice(0, idx).concat(nodes.slice(idx + 1));\n            }\n            nodes = deleteNodeSubtree(nodes, node);\n          }\n          return nodes;\n        };\n      })\n    ).subscribe(this._nodesUpdates);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\n\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {IAjfChoicesOrigin} from '@ajf/core/forms';\n\nimport {AjfFbChoicesOriginEditor} from './choices-origin-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-choices-origin-editor-dialog',\n  templateUrl: 'choices-origin-editor-dialog.html',\n  styleUrls: ['choices-origin-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbChoicesOriginEditorDialog {\n  @ViewChild(AjfFbChoicesOriginEditor, {static: true}) editor: AjfFbChoicesOriginEditor;\n\n  private _choicesOrigin: Observable<IAjfChoicesOrigin>;\n  get choicesOrigin(): Observable<IAjfChoicesOrigin> { return this._choicesOrigin; }\n\n  constructor(private _service: AjfFormBuilderService) {\n    this._choicesOrigin = this._service.editedChoicesOrigin.pipe(\n      filter(c => c != null),\n      map(c => c!)\n    );\n  }\n\n  saveChoicesOrigin(): void {\n    this._service.saveChoicesOrigin({\n      label: this.editor.label,\n      name: this.editor.name,\n      choices: this.editor.choicesArr\n    });\n  }\n\n  cancelChoicesOriginEdit(): void {\n    this._service.cancelChoicesOriginEdit();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  Component, ChangeDetectionStrategy, Input, ViewChild, ViewEncapsulation\n} from '@angular/core';\n\nimport {AjfValidatedProperty} from '@ajf/core/models';\nimport {AjfField, AjfFieldType, AjfValidationService} from '@ajf/core/forms';\nimport {AjfMonacoEditor} from '@ajf/material/monaco-editor';\n\n\ndeclare var monaco: any;\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-condition-editor',\n  templateUrl: 'fb-condition-editor.html',\n  styleUrls: ['fb-condition-editor.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class AjfFbConditionEditor {\n  @ViewChild(AjfMonacoEditor, {static: true}) monacoEditor: AjfMonacoEditor;\n\n  private _fields: AjfField[];\n  get fields(): AjfField[] { return this._fields; }\n  @Input() set fields(fields: AjfField[]) {\n    this._fields = fields;\n    this._updateVariables();\n  }\n  @Input() condition: string;\n\n  editedValue: string;\n\n  constructor(_: AjfValidationService) { }\n\n  insertVariable(variable: string): void {\n    if (this.monacoEditor != null && this.monacoEditor.editor != null) {\n      const editor = this.monacoEditor.editor;\n      let value: string[] = editor.getValue().split('\\n');\n      let position: {column: number, lineNumber: number} = editor.getPosition();\n      const ln = position.lineNumber - 1;\n      let line = value[ln];\n      let col = position.column - 1;\n      line = line.substring(0, col) + variable + line.substring(col);\n      value[ln] = line;\n      position.column += variable.length;\n      this.monacoEditor.value = value.join('\\n');\n      editor.setPosition(position);\n      editor.focus();\n      this.editedValue = editor.getValue();\n    }\n  }\n\n  onEditorInit(): void {\n    monaco.languages.typescript.javascriptDefaults.setDiagnosticsOptions({\n      noSemanticValidation: false,\n      noSyntaxValidation: false\n    });\n\n    monaco.languages.typescript.javascriptDefaults.setCompilerOptions({\n      target: monaco.languages.typescript.ScriptTarget.ES2015,\n      allowNonTsExtensions: true,\n      allowJs: true,\n      module: monaco.languages.typescript.ModuleKind.None\n    });\n\n    try {\n      monaco.languages.typescript.javascriptDefaults.addExtraLib(\n        '', 'condition-editor-variables.d.ts'\n      );\n    } catch (e) {\n      monaco.languages.typescript.javascriptDefaults\n          ._extraLibs['condition-editor-variables.d.ts'] = '';\n    }\n\n    try {\n      monaco.languages.typescript.javascriptDefaults.addExtraLib(\n        '', 'condition-editor-functions.d.ts'\n      );\n    } catch (e) {\n      monaco.languages.typescript.javascriptDefaults\n          ._extraLibs['condition-editor-functions.d.ts'] = '';\n    }\n\n    this._updateVariables();\n    this._updateFunctions();\n  }\n\n  private _updateVariables(): void {\n    if (this._fields == null) { return; }\n    try {\n      monaco.languages.typescript.javascriptDefaults\n        ._extraLibs['condition-editor-variables.d.ts'] =\n          this._fields\n            .map((field: AjfField) => {\n              return `declare const ${field.name}: ${this._fieldVarType(field.fieldType)};`;\n            })\n            .join('\\n');\n    } catch (e) { }\n  }\n\n  private _updateFunctions(): void {\n    try {\n      monaco.languages.typescript.javascriptDefaults\n        ._extraLibs['condition-editor-functions.d.ts'] = AjfValidatedProperty.UTIL_FUNCTIONS;\n    } catch (e) { }\n  }\n\n  private _fieldVarType(fieldType: AjfFieldType): string | null {\n    switch (fieldType) {\n      case AjfFieldType.Boolean:\n      return 'boolean';\n      case AjfFieldType.Date:\n      case AjfFieldType.DateInput:\n      case AjfFieldType.Time:\n      return 'Date';\n      case AjfFieldType.Empty:\n      return 'void';\n      case AjfFieldType.Formula:\n      return 'number';\n      case AjfFieldType.MultipleChoice:\n      case AjfFieldType.SingleChoice:\n      return 'any';\n      case AjfFieldType.Number:\n      return 'number';\n      case AjfFieldType.Table:\n      return 'Array';\n      case AjfFieldType.String:\n      case AjfFieldType.Text:\n      return 'string';\n    }\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AjfField} from '@ajf/core/forms';\n\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-condition-editor-dialog',\n  templateUrl: 'condition-editor-dialog.html',\n  styleUrls: ['condition-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbConditionEditorDialog {\n  @ViewChild(AjfFbConditionEditor, {static: true}) editor: AjfFbConditionEditor;\n\n  private _fields: Observable<AjfField[]>;\n  get fields(): Observable<AjfField[]> { return this._fields; }\n\n  condition: string;\n\n  constructor(\n    service: AjfFormBuilderService,\n    public dialogRef: MatDialogRef<AjfFbConditionEditorDialog>\n  ) {\n    this._fields = service.flatFields.pipe(\n      map((fields: AjfField[]) => fields.sort((f1, f2) => f1.name.localeCompare(f2.name)))\n    );\n  }\n\n  saveCondition(): void {\n    if (this.editor == null) { return; }\n    const newValue = this.editor.editedValue;\n    this.dialogRef.close(newValue);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterViewChecked, AfterContentInit, ChangeDetectionStrategy,\n  Component, ElementRef, EventEmitter, Input, OnDestroy,\n  ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\n\nimport {Observable, Subscription} from 'rxjs';\nimport {sample} from 'rxjs/operators';\n\nimport {AjfCondition} from '@ajf/core/models';\nimport {AjfForm, IAjfChoicesOrigin} from '@ajf/core/forms';\nimport {\n  AjfFormBuilderNodeEntry, AjfFormBuilderNodeTypeEntry, AjfFormBuilderService\n} from './form-builder-service';\n\nimport {AjfFbConditionEditorDialog} from './condition-editor-dialog';\nimport {AjfFbChoicesOriginEditorDialog} from './choices-origin-editor-dialog';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-form-builder',\n  templateUrl: 'form-builder.html',\n  styleUrls: ['form-builder.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class AjfFormBuilder implements AfterViewChecked, AfterContentInit, OnDestroy {\n  @ViewChild('designer', {static: true}) designerCont: ElementRef;\n\n  private _form: AjfForm;\n  get form(): AjfForm { return this._form; }\n  @Input() set form(form: AjfForm) {\n    if (this._form !== form) {\n      this._form = form;\n      if (this._init) {\n        this._setCurrentForm();\n      }\n    }\n  }\n\n  private _nodeTypes: AjfFormBuilderNodeTypeEntry[];\n  get nodeTypes(): AjfFormBuilderNodeTypeEntry[] { return this._nodeTypes; }\n\n  private _nodeEntriesTree: Observable<AjfFormBuilderNodeEntry[]>;\n  get nodeEntriesTree(): Observable<AjfFormBuilderNodeEntry[]> { return this._nodeEntriesTree; }\n\n  private _choicesOrigins: Observable<IAjfChoicesOrigin[]>;\n  get choicesOrigins(): Observable<IAjfChoicesOrigin[]> { return this._choicesOrigins; }\n\n  private _vc: EventEmitter<void> = new EventEmitter<void>();\n\n  private _init = false;\n  private _editConditionSub: Subscription = Subscription.EMPTY;\n  private _editConditionDialog: MatDialogRef<AjfFbConditionEditorDialog> | null;\n  private _beforeNodesUpdateSub: Subscription = Subscription.EMPTY;\n  private _editChoicesOriginSub: Subscription = Subscription.EMPTY;\n  private _editChoicesOriginDialog: MatDialogRef<AjfFbChoicesOriginEditorDialog> | null;\n\n  private _lastScrollTop: number;\n\n  constructor(\n    private _service: AjfFormBuilderService,\n    private _dialog: MatDialog\n  ) {\n    this._nodeTypes = _service.availableNodeTypes;\n    this._nodeEntriesTree = _service.nodeEntriesTree;\n    this._choicesOrigins = _service.choicesOrigins;\n    this._editConditionSub = this._service.editedCondition\n      .subscribe((condition: AjfCondition | null) => {\n        if (this._editConditionDialog != null) {\n          this._editConditionDialog.close();\n          this._editConditionDialog = null;\n        }\n        if (condition != null) {\n          this._editConditionDialog = this._dialog.open(\n            AjfFbConditionEditorDialog, {disableClose: true}\n          );\n        }\n      });\n    this._editChoicesOriginSub = this._service.editedChoicesOrigin\n      .subscribe((choicesOrigin: IAjfChoicesOrigin | null) => {\n        if (this._editChoicesOriginDialog != null) {\n          this._editChoicesOriginDialog.close();\n          this._editChoicesOriginDialog = null;\n        }\n        if (choicesOrigin != null) {\n          this._editChoicesOriginDialog = this._dialog.open(\n            AjfFbChoicesOriginEditorDialog, {disableClose: true}\n          );\n        }\n      });\n\n    this._beforeNodesUpdateSub = this._service.beforeNodesUpdate\n      .subscribe(() => {\n        if (this.designerCont == null) { return; }\n        this._lastScrollTop = this.designerCont.nativeElement.scrollTop;\n      });\n\n    this.nodeEntriesTree\n      .pipe(sample((<Observable<void>>this._vc)))\n      .subscribe(() => {\n        if (this.designerCont == null) { return; }\n        this.designerCont.nativeElement.scrollTop = this._lastScrollTop;\n      });\n  }\n\n  ngAfterViewChecked(): void {\n    this._vc.emit();\n  }\n\n  ngAfterContentInit(): void {\n    this._setCurrentForm();\n    this._init = true;\n  }\n\n  ngOnDestroy(): void {\n    this._service.setForm(null);\n    this._editConditionSub.unsubscribe();\n    this._beforeNodesUpdateSub.unsubscribe();\n    this._editChoicesOriginSub.unsubscribe();\n  }\n\n  createChoicesOrigin(): void {\n    this._service.createChoicesOrigin();\n  }\n\n  disableDropPredicate(): boolean {\n    return false;\n  }\n\n  editChoicesOrigin(choicesOrigin: IAjfChoicesOrigin): void {\n    this._service.editChoicesOrigin(choicesOrigin);\n  }\n\n  private _setCurrentForm(): void {\n    this._service.setForm(this._form);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterViewInit, ChangeDetectionStrategy, Component, ElementRef,\n  Input, OnDestroy, QueryList, ViewChildren, ViewEncapsulation\n} from '@angular/core';\nimport {CdkDrag, CdkDragDrop} from '@angular/cdk/drag-drop';\n\nimport {Observable, Subscription} from 'rxjs';\n\nimport {isContainerNode} from '@ajf/core/forms';\nimport {AjfFbBranchLine} from './branch-line';\nimport {\n  AjfFormBuilderEmptySlot, AjfFormBuilderNode, AjfFormBuilderNodeEntry,\n  AjfFormBuilderNodeTypeEntry, AjfFormBuilderService, isSlideNode\n} from './form-builder-service';\n\n\nconst branchColors: string [] = [\n  '#F44336', // RED\n  '#4CAF50', // GREEN\n  '#3F51B5', // INDIGO\n  '#FFC107', // AMBER\n  '#795548', // BROWN\n];\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-node-entry',\n  templateUrl: 'node-entry.html',\n  styleUrls: ['node-entry.css'],\n  host: {\n    '(window.resize)': 'onResize()'\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbNodeEntry implements AfterViewInit, OnDestroy {\n  @ViewChildren(AjfFbBranchLine) branchLines: QueryList<AjfFbBranchLine>;\n  @ViewChildren(AjfFbNodeEntry, {read: ElementRef}) childEntries: QueryList<ElementRef>;\n\n  private _hasContent = false;\n  get hasContent(): boolean { return this._hasContent; }\n\n  private _isFirst = false;\n  get isFirst(): boolean { return this._isFirst; }\n  @Input() set isFirst(isFirst: boolean) { this._isFirst = isFirst; }\n\n  private _isNodeEntry = false;\n  get isNodeEntry(): boolean { return this._isNodeEntry; }\n\n  private _nodeEntry: AjfFormBuilderNode;\n  get nodeEntry(): AjfFormBuilderNode { return this._nodeEntry; }\n  @Input() set nodeEntry(nodeEntry: AjfFormBuilderNode) {\n    this._nodeEntry = nodeEntry;\n    if (nodeEntry != null && (<AjfFormBuilderNodeEntry>nodeEntry).node !== void 0) {\n      const ne = <AjfFormBuilderNodeEntry>nodeEntry;\n      this._isNodeEntry = true;\n      const node = ne.node;\n      this._hasContent = node != null && isContainerNode(node);\n      this._isSlide = false;\n    } else {\n      this._isNodeEntry = false;\n      this._hasContent = false;\n      this._isSlide = isSlideNode((<AjfFormBuilderEmptySlot>nodeEntry).parent);\n    }\n  }\n\n  get realNodeEntry(): AjfFormBuilderNodeEntry {\n    return this._nodeEntry as AjfFormBuilderNodeEntry;\n  }\n\n  private _branchColors: string[] = branchColors.slice(0);\n  get branchColors(): string[] { return this._branchColors; }\n\n  private _dropZones: string[] = ['fbdz-node'];\n  get dropZones(): string[] { return this._dropZones; }\n\n  private _slideDropZones: string[] = ['fbdz-slide'];\n  get slideDropZones(): string[] { return this._slideDropZones; }\n\n  private _originOffset = 0;\n  get originOffset(): number { return this._originOffset; }\n  @Input() set originOffset(originOffset: number) {\n    this._originOffset = originOffset;\n    this._originLeftMargin = `${this._originOffset * 4}px`;\n  }\n  private _originLeftMargin = '0';\n  get originLeftMargin(): string { return this._originLeftMargin; }\n\n  private _firstBranchColor = branchColors[0];\n  get firstBranchColor(): string { return this._firstBranchColor; }\n  @Input() set firstBranchColor(firstBranchColor: string) {\n    const idx = branchColors.indexOf(firstBranchColor);\n    if (idx > 0) {\n      this._firstBranchColor = firstBranchColor;\n      this._branchColors = branchColors.slice(idx).concat(branchColors.slice(0, idx));\n    } else {\n      this._firstBranchColor = branchColors[0];\n      this._branchColors = branchColors.slice(0);\n    }\n  }\n\n  private _currentEditedNode: Observable<AjfFormBuilderNodeEntry | null>;\n  get currentEditedNode(): Observable<AjfFormBuilderNodeEntry | null> {\n    return this._currentEditedNode;\n  }\n\n  private _isSlide = false;\n  private _branchLinesSubscription: Subscription = Subscription.EMPTY;\n  private _childEntriesSubscription: Subscription = Subscription.EMPTY;\n\n  constructor(private _service: AjfFormBuilderService) {\n    this._currentEditedNode = this._service.editedNodeEntry;\n  }\n\n  onResize(): void {\n  }\n\n  edit(): void {\n    if (this.nodeEntry == null || !this.isNodeEntry) { return; }\n    this._service.editNodeEntry(<AjfFormBuilderNodeEntry>this.nodeEntry);\n  }\n\n  delete(): void {\n    if (this.nodeEntry == null || !this.isNodeEntry) { return; }\n    this._service.deleteNodeEntry(<AjfFormBuilderNodeEntry>this.nodeEntry);\n  }\n\n  ngAfterViewInit(): void {\n    this._updateBranchHeights();\n    this._childEntriesSubscription = this.childEntries.changes\n      .subscribe(() => {\n        this._updateBranchHeights();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this._branchLinesSubscription.unsubscribe();\n    this._childEntriesSubscription.unsubscribe();\n  }\n\n  onDropSuccess(evt: CdkDragDrop<AjfFormBuilderNodeTypeEntry>, content = false): void {\n    if (this._nodeEntry == null) { return; }\n    const dd = evt.item.data as AjfFormBuilderNodeTypeEntry;\n    if (dd.nodeType !== void 0 && (!this.isNodeEntry || (this.isNodeEntry && content))) {\n      const emptySlot = content ?\n        {parent: (<AjfFormBuilderNodeEntry>this.nodeEntry).node, parentNode: 0} :\n        <AjfFormBuilderEmptySlot>this._nodeEntry;\n      this._service.insertNode(\n        <AjfFormBuilderNodeTypeEntry>dd,\n        emptySlot.parent,\n        emptySlot.parentNode,\n        content\n      );\n    }\n  }\n\n  disableSlideDropPredicate(item: CdkDrag<AjfFormBuilderNodeTypeEntry>): boolean {\n    return !item.data.isSlide;\n  }\n\n  emptyAreaDropPredicate(item: CdkDrag<AjfFormBuilderNodeTypeEntry>): boolean {\n    if (this._isSlide) {\n      return item.data.isSlide || false;\n    }\n    return !item.data.isSlide;\n  }\n\n  private _updateBranchHeights(): void {\n    if (this.nodeEntry == null || !this.isNodeEntry) { return; }\n    const nodeEntry = <AjfFormBuilderNodeEntry>this.nodeEntry;\n    const branchLines: AjfFbBranchLine[] = this.branchLines.toArray();\n    const sliceIdx = nodeEntry.content != null ? nodeEntry.content.length : 0;\n    const childEntries: ElementRef[] = this.childEntries.toArray().slice(sliceIdx);\n\n    if (branchLines.length != childEntries.length) { return; }\n\n    branchLines.forEach((bl: AjfFbBranchLine, idx: number) => {\n      const ce: ElementRef  = childEntries[idx];\n      bl.height = ce.nativeElement.offsetTop;\n    });\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AjfField} from '@ajf/core/forms';\n\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-validation-condition-editor-dialog',\n  templateUrl: 'validation-condition-editor-dialog.html',\n  styleUrls: ['validation-condition-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbValidationConditionEditorDialog {\n  @ViewChild(AjfFbConditionEditor, {static: true}) editor: AjfFbConditionEditor;\n\n  private _fields: Observable<AjfField[]>;\n  get fields(): Observable<AjfField[]> { return this._fields; }\n\n  condition: string;\n  errorMessage: string;\n\n  constructor(\n    service: AjfFormBuilderService,\n    public dialogRef: MatDialogRef<AjfFbValidationConditionEditorDialog>\n  ) {\n    this._fields = service.flatFields.pipe(\n      map((fields: AjfField[]) => fields.sort((f1, f2) => f1.name.localeCompare(f2.name)))\n    );\n  }\n\n  saveCondition(): void {\n    if (this.editor == null) { return; }\n    const newValue = this.editor.editedValue;\n    this.dialogRef.close({condition: newValue, errorMessage: this.errorMessage});\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AjfField} from '@ajf/core/forms';\n\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-warning-condition-editor-dialog',\n  templateUrl: 'warning-condition-editor-dialog.html',\n  styleUrls: ['warning-condition-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbWarningConditionEditorDialog {\n  @ViewChild(AjfFbConditionEditor, {static: true}) editor: AjfFbConditionEditor;\n\n  private _fields: Observable<AjfField[]>;\n  get fields(): Observable<AjfField[]> { return this._fields; }\n\n  condition: string;\n  warningMessage: string;\n\n  constructor(\n    service: AjfFormBuilderService,\n    public dialogRef: MatDialogRef<AjfFbWarningConditionEditorDialog>\n  ) {\n    this._fields = service.flatFields.pipe(\n      map((fields: AjfField[]) => fields.sort((f1, f2) => f1.name.localeCompare(f2.name)))\n    );\n  }\n\n  saveCondition(): void {\n    if (this.editor == null) { return; }\n    const newValue = this.editor.editedValue;\n    this.dialogRef.close({condition: newValue, warningMessage: this.warningMessage});\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy, Component, EventEmitter, OnDestroy, ViewEncapsulation\n} from '@angular/core';\nimport {AbstractControl, FormBuilder, FormGroup, ValidatorFn, Validators} from '@angular/forms';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\n\nimport {Observable, Subscription} from 'rxjs';\nimport {\n  distinctUntilChanged, filter, map, publishReplay, refCount, withLatestFrom\n} from 'rxjs/operators';\n\nimport {AjfCondition} from '@ajf/core/models';\nimport {\n  AjfField, AjfFieldWithChoices, AjfNode, AjfNumberField, IAjfChoicesOrigin,\n} from '@ajf/core/forms';\n\nimport {AjfFbConditionEditorDialog} from './condition-editor-dialog';\nimport {\n  AjfFormBuilderNodeEntry, AjfFormBuilderService,\n  AjfRepeatingContainerNode, isRepeatingContainerNode\n} from './form-builder-service';\nimport {AjfFbValidationConditionEditorDialog} from './validation-condition-editor-dialog';\nimport {AjfFbWarningConditionEditorDialog} from './warning-condition-editor-dialog';\n\n\nfunction checkRepsValidity(c: AbstractControl): {[key: string]: any} | null {\n  const minReps = c.value.minReps;\n  const maxReps = c.value.maxReps;\n  if (minReps != null && maxReps != null && minReps > maxReps) {\n    return {\n      reps: 'Min repetions cannot be greater than max repetitions'\n    };\n  }\n  return null;\n}\n\nfunction checkValueLimitsValidity(c: AbstractControl): {[key: string]: any} | null {\n  const minValue = c.value.minValue;\n  const maxValue = c.value.maxValue;\n  if (minValue != null && maxValue != null && minValue > maxValue) {\n    return {\n      valueLimit: 'Min value cannot be greater than max value'\n    };\n  }\n  return null;\n}\n\nfunction checkDigitsValidity(c: AbstractControl): {[key: string]: any} | null {\n  const minDigits = c.value.minDigits;\n  const maxDigits = c.value.maxDigits;\n  if (minDigits != null && maxDigits != null && minDigits > maxDigits) {\n    return {\n      digits: 'Min digits cannot be greater than max digits'\n    };\n  }\n  return null;\n}\n\nexport interface ValidationCondition {\n  condition: string;\n  errorMessage: string;\n}\n\nexport interface WarningCondition {\n  condition: string;\n  warningMessage: string;\n}\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-node-properties',\n  templateUrl: 'node-properties.html',\n  styleUrls: ['node-properties.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbNodeProperties implements OnDestroy {\n  private _fieldSizes: {label: string, value: string}[] = [\n    {label: 'Normal', value: 'normal'},\n    {label: 'Small', value: 'small'},\n    {label: 'Smaller', value: 'smaller'},\n    {label: 'Tiny', value: 'tiny'},\n    {label: 'Mini', value: 'mini'}\n  ];\n  get fieldSizes(): {label: string, value: string}[] { return this._fieldSizes; }\n\n  private _nodeEntry: Observable<AjfFormBuilderNodeEntry | null>;\n  get nodeEntry(): Observable<AjfFormBuilderNodeEntry | null> { return this._nodeEntry; }\n\n  private _choicesOrigins: IAjfChoicesOrigin[] = [];\n  get choicesOrigins(): IAjfChoicesOrigin[] { return this._choicesOrigins; }\n\n  private _enabled: Observable<boolean>;\n  get enabled(): Observable<boolean> { return this._enabled; }\n\n  private _propertiesForm: Observable<FormGroup>;\n  get propertiesForm(): Observable<FormGroup> { return this._propertiesForm; }\n\n  private _hasChoices: Observable<boolean>;\n  get hasChoices(): Observable<boolean> { return this._hasChoices; }\n\n  private _curVisibility: string | null;\n  get curVisibility(): string | null { return this._curVisibility; }\n\n  private _curFormulaReps: string | null;\n  get curFormulaReps(): string | null { return this._curFormulaReps; }\n\n  private _curChoicesFilter: string;\n  get curChoicesFilter(): string { return this._curChoicesFilter; }\n\n  private _curForceValue: string | null;\n  get curForceValue(): string | null { return this._curForceValue; }\n\n  private _curFormula: string | null;\n  get curFormula(): string | null { return this._curFormula; }\n\n  private _conditionalBranches: string[] = [];\n  get conditionalBranches(): string[] { return this._conditionalBranches; }\n\n  private _validationConditions: ValidationCondition[] = [];\n  get validationConditions(): ValidationCondition[] { return this._validationConditions; }\n\n  private _warningConditions: WarningCondition[] = [];\n  get warningConditions(): WarningCondition[] { return this._warningConditions; }\n\n  private _nextSlideCondition: string;\n  get nextSlideCondition(): string { return this._nextSlideCondition; }\n\n  private _triggerConditions: string[];\n  get triggerConditions(): string[] { return this._triggerConditions; }\n\n  isRepeatingContainerNode: (node: AjfNode) => boolean = isRepeatingContainerNode;\n\n  private _visibilitySub: Subscription = Subscription.EMPTY;\n  private _conditionalBranchesSub = Subscription.EMPTY;\n  private _formulaRepsSub = Subscription.EMPTY;\n  private _choicesFilterSub = Subscription.EMPTY;\n  private _formulaSub = Subscription.EMPTY;\n  private _forceValueSub = Subscription.EMPTY;\n  private _validationConditionsSub = Subscription.EMPTY;\n  private _warningConditionsSub = Subscription.EMPTY;\n  private _nextSlideConditionSub = Subscription.EMPTY;\n  private _choicesOriginsSub = Subscription.EMPTY;\n  private _triggerConditionsSub = Subscription.EMPTY;\n\n  private _editConditionDialog: MatDialogRef<AjfFbConditionEditorDialog> | null;\n  private _editConditionDialogSub: Subscription = Subscription.EMPTY;\n  private _editValidationConditionDialog: MatDialogRef<AjfFbValidationConditionEditorDialog> | null;\n  private _editValidationConditionDialogSub: Subscription = Subscription.EMPTY;\n  private _editWarningConditionDialog: MatDialogRef<AjfFbWarningConditionEditorDialog> | null;\n  private _editWarningConditionDialogSub: Subscription = Subscription.EMPTY;\n\n  private _editVisibilityEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editVisibilitySub = Subscription.EMPTY;\n\n  private _editConditionalBranchEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editConditionalBranchSub = Subscription.EMPTY;\n\n  private _editFormulaRepsEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editFormulaRepsSub = Subscription.EMPTY;\n\n  private _editChoicesFilterEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editChoicesFilterSub = Subscription.EMPTY;\n\n  private _editFormulaEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editFormulaSub = Subscription.EMPTY;\n\n  private _editForceValueEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editForceValueSub = Subscription.EMPTY;\n\n  private _editValidationConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editValidationConditionSub = Subscription.EMPTY;\n\n  private _addValidationConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _addValidationConditionSub = Subscription.EMPTY;\n\n  private _removeValidationConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _removeValidationConditionSub = Subscription.EMPTY;\n\n  private _editWarningConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editWarningConditionSub = Subscription.EMPTY;\n\n  private _addWarningConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _addWarningConditionSub = Subscription.EMPTY;\n\n  private _removeWarningConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _removeWarningConditionSub = Subscription.EMPTY;\n\n  private _editNextSlideConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editNextSlideConditionSub = Subscription.EMPTY;\n\n  private _editTriggerConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editTriggerConditionSub = Subscription.EMPTY;\n\n  private _addTriggerConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _addTriggerConditionSub = Subscription.EMPTY;\n\n  private _removeTriggerConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _removeTriggerConditionSub = Subscription.EMPTY;\n\n  private _saveEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _saveSub = Subscription.EMPTY;\n\n  constructor(\n    private _service: AjfFormBuilderService,\n    private _dialog: MatDialog,\n    private _fb: FormBuilder\n  ) {\n    this._nodeEntry = _service.editedNodeEntry;\n    this._choicesOriginsSub = _service.choicesOrigins\n      .subscribe((c) => this._choicesOrigins = c || []);\n\n    this._enabled = this._nodeEntry.pipe(map((n) => n != null));\n\n    this._initForm();\n    this._initVisibilityEdit();\n    this._initConditionalBranchEdit();\n    this._initFormulaRepsEdit();\n    this._initChoicesFilterEdit();\n    this._initFormulaEdit();\n    this._initForceValueEdit();\n    this._initValidationConditionEdit();\n    this._initAddValidationCondition();\n    this._initRemoveValidationCondition();\n    this._initWarningConditionEdit();\n    this._initAddWarningCondition();\n    this._initRemoveWarningCondition();\n    this._initNextSlideConditionEdit();\n    this._initTriggerConditionEdit();\n    this._initAddTriggerCondition();\n    this._initRemoveTriggerCondition();\n    this._initSave();\n  }\n\n  editVisibility(): void {\n    this._editVisibilityEvt.emit();\n  }\n\n  editConditionalBranch(idx: number): void {\n    if (idx < 0 || idx >= this._conditionalBranches.length) { return; }\n    this._editConditionalBranchEvt.emit(idx);\n  }\n\n  editFormulaReps(): void {\n    this._editFormulaRepsEvt.emit();\n  }\n\n  editChoicesFilter(): void {\n    this._editChoicesFilterEvt.emit();\n  }\n\n  editFormula(): void {\n    this._editFormulaEvt.emit();\n  }\n\n  editForceValue(): void {\n    this._editForceValueEvt.emit();\n  }\n\n  editValidationCondition(idx: number): void {\n    if (idx < 0 || idx >= this._validationConditions.length) { return; }\n    this._editValidationConditionEvt.emit(idx);\n  }\n\n  addValidationCondition(): void {\n    this._addValidationConditionEvt.emit();\n  }\n\n  removeValidationCondition(idx: number): void {\n    if (idx < 0 || idx >= this._validationConditions.length) { return; }\n    this._removeValidationConditionEvt.emit(idx);\n  }\n\n  editWarningCondition(idx: number): void {\n    if (idx < 0 || idx >= this._warningConditions.length) { return; }\n    this._editWarningConditionEvt.emit(idx);\n  }\n\n  addWarningCondition(): void {\n    this._addWarningConditionEvt.emit();\n  }\n\n  removeWarningCondition(idx: number): void {\n    if (idx < 0 || idx >= this._warningConditions.length) { return; }\n    this._removeWarningConditionEvt.emit(idx);\n  }\n\n  editNextSlideCondition(): void {\n    this._editNextSlideConditionEvt.emit();\n  }\n\n  editTriggerCondition(idx: number): void {\n    if (idx < 0 || idx >= this._triggerConditions.length) { return; }\n    this._editTriggerConditionEvt.emit(idx);\n  }\n\n  addTriggerCondition(): void {\n    this._addTriggerConditionEvt.emit();\n  }\n\n  removeTriggerCondition(idx: number): void {\n    if (idx < 0 || idx >= this._triggerConditions.length) { return; }\n    this._removeTriggerConditionEvt.emit(idx);\n  }\n\n  isField(node: AjfNode): boolean {\n    return node != null && node instanceof AjfField;\n  }\n\n  isNumericField(node: AjfNode): boolean {\n    return node != null && node instanceof AjfNumberField;\n  }\n\n  isFieldWithChoices(node: AjfNode): boolean {\n    return node != null && node instanceof AjfFieldWithChoices;\n  }\n\n  save(): void {\n    this._saveEvt.emit();\n  }\n\n  cancel(): void {\n    this._service.cancelNodeEntryEdit();\n  }\n\n  ngOnDestroy(): void {\n    this._choicesOriginsSub.unsubscribe();\n\n    this._visibilitySub.unsubscribe();\n    this._formulaRepsSub.unsubscribe();\n    this._choicesFilterSub.unsubscribe();\n    this._formulaSub.unsubscribe();\n    this._forceValueSub.unsubscribe();\n    this._validationConditionsSub.unsubscribe();\n    this._warningConditionsSub.unsubscribe();\n    this._triggerConditionsSub.unsubscribe();\n\n    this._editConditionDialogSub.unsubscribe();\n    this._editValidationConditionDialogSub.unsubscribe();\n    this._editWarningConditionDialogSub.unsubscribe();\n\n    this._editChoicesFilterSub.unsubscribe();\n    this._editConditionalBranchSub.unsubscribe();\n    this._editVisibilitySub.unsubscribe();\n    this._editFormulaRepsSub.unsubscribe();\n    this._editFormulaSub.unsubscribe();\n    this._editForceValueSub.unsubscribe();\n    this._editValidationConditionSub.unsubscribe();\n    this._editWarningConditionSub.unsubscribe();\n    this._nextSlideConditionSub.unsubscribe();\n\n    this._addTriggerConditionSub.unsubscribe();\n    this._addValidationConditionSub.unsubscribe();\n    this._addWarningConditionSub.unsubscribe();\n    this._editNextSlideConditionSub.unsubscribe();\n    this._editTriggerConditionSub.unsubscribe();\n    this._removeTriggerConditionSub.unsubscribe();\n    this._removeValidationConditionSub.unsubscribe();\n    this._removeWarningConditionSub.unsubscribe();\n\n    this._saveSub.unsubscribe();\n  }\n\n  private _initSave(): void {\n    this._saveSub = (<Observable<void>>this._saveEvt)\n      .pipe(withLatestFrom(this.propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        const fg = r[1];\n        const val = {...fg.value,\n          conditionalBranches: this._conditionalBranches\n        };\n        this._service.saveNodeEntry(val);\n      });\n  }\n\n  private _initForm(): void {\n    this._propertiesForm = this._nodeEntry.pipe(\n      filter((n) => n != null),\n      map((n) => {\n        if (this._visibilitySub != null) { this._visibilitySub.unsubscribe(); }\n        if (this._conditionalBranchesSub != null) { this._conditionalBranchesSub.unsubscribe(); }\n        n = n!;\n\n        const visibility = n.node.visibility != null ?\n          n.node.visibility.condition : null;\n        const visibilityOpt = n.node.visibility != null ?\n          this._guessVisibilityOpt(n.node.visibility) : null;\n        let controls: any = {\n          name: [n.node.name, Validators.required],\n          label: n.node.label,\n          visibilityOpt: [visibilityOpt, Validators.required],\n          visibility: [visibility, Validators.required],\n          conditionalBranchesNum: n.node.conditionalBranches.length\n        };\n        const validators: ValidatorFn[] = [];\n\n        if (isRepeatingContainerNode(n.node)) {\n          const rn = <AjfRepeatingContainerNode>n.node;\n\n          const formulaReps = rn.formulaReps != null ? rn.formulaReps.formula : null;\n\n          controls.formulaReps = [formulaReps, Validators.required];\n          controls.minReps = rn.minReps;\n          controls.maxReps = rn.maxReps;\n\n          this._curFormulaReps = formulaReps;\n\n          validators.push(checkRepsValidity);\n        }\n\n        if (this.isField(n.node)) {\n          const field = <AjfField>n.node;\n\n          let forceValue: string | null = null;\n          let notEmpty: boolean = false;\n          let validationConditions: ValidationCondition[] = [];\n          if (field.validation != null) {\n            if (field.validation.forceValue != null) {\n              forceValue = field.validation.forceValue.condition;\n            }\n            notEmpty = field.validation.notEmpty != null;\n            validationConditions = (field.validation.conditions || [])\n              .map(c => {\n                return {\n                  condition: c.condition,\n                  errorMessage: c.errorMessage\n                };\n              });\n          }\n\n          let notEmptyW: boolean = false;\n          let warningConditions: WarningCondition[] = [];\n          if (field.warning != null) {\n            notEmptyW = field.warning.notEmpty != null;\n            warningConditions = (field.warning.conditions || [])\n              .map(w => {\n                return {\n                  condition: w.condition,\n                  warningMessage: w.warningMessage\n                };\n              });\n          }\n          const formula = field.formula != null ? field.formula.formula : null;\n\n          controls.description = field.description;\n          controls.defaultValue = field.defaultValue;\n          controls.size = field.size;\n          controls.formula = formula;\n          controls.forceValue = forceValue;\n          controls.notEmpty = notEmpty;\n          controls.validationConditions = [validationConditions, []];\n          controls.notEmptyWarning = notEmptyW;\n          controls.warningConditions = [warningConditions, []];\n          controls.nextSlideCondition = [field.nextSlideCondition];\n\n          this._curForceValue = forceValue;\n          this._curFormula = formula;\n          this._validationConditions = validationConditions;\n          this._warningConditions = warningConditions;\n        }\n\n        if (this.isNumericField(n.node)) {\n          const numField = <AjfNumberField>n.node;\n\n          let minValue: any;\n          let maxValue: any;\n          let minDigits: any;\n          let maxDigits: any;\n          if (numField.validation != null) {\n            if (numField.validation.minValue != null) {\n              minValue = (numField.validation.minValue.condition || '').replace('$value >= ', '');\n            }\n            if (numField.validation.maxValue != null) {\n              maxValue = (numField.validation.maxValue.condition || '').replace('$value <= ', '');\n            }\n            if (numField.validation.minDigits != null) {\n              minDigits = (numField.validation.minDigits.condition || '')\n                .replace('$value.toString().length >= ', '');\n            }\n            if (numField.validation.maxDigits != null) {\n              maxDigits = (numField.validation.maxDigits.condition || '')\n                .replace('$value.toString().length <= ', '');\n            }\n          }\n\n          controls.minValue = minValue;\n          controls.maxValue = maxValue;\n          controls.minDigits = minDigits;\n          controls.maxDigits = maxDigits;\n\n          validators.push(checkValueLimitsValidity);\n          validators.push(checkDigitsValidity);\n        }\n\n        if (this.isFieldWithChoices(n.node)) {\n          const fieldWithChoices = <AjfFieldWithChoices>n.node;\n\n          let triggerConditions: string[] = (fieldWithChoices.triggerConditions || [])\n            .map((c) => c.condition);\n\n          controls.choicesOrigin = fieldWithChoices.choicesOrigin.getName();\n          controls.choicesFilter = fieldWithChoices.choicesFilter != null ?\n            fieldWithChoices.choicesFilter.formula : null;\n          controls.forceExpanded = fieldWithChoices.forceExpanded;\n          controls.forceNarrow = fieldWithChoices.forceNarrow;\n          controls.triggerConditions = triggerConditions;\n\n          this._triggerConditions = triggerConditions;\n        }\n\n        const fg = this._fb.group(controls);\n        fg.setValidators(validators);\n\n        this._conditionalBranches = n.node.conditionalBranches.map(c => c.condition);\n        this._curVisibility = n.node.visibility != null ? n.node.visibility.condition : null;\n\n        this._handleConditionalBranchesChange(fg);\n        this._handleVisibilityChange(fg);\n        this._handleFormulaRepsChange(fg);\n        this._handleChoicesFilterChange(fg);\n        this._handleFormulaChange(fg);\n        this._handleForceValueChange(fg);\n        this._handleValidationCondtionsChange(fg);\n        this._handleWarningCondtionsChange(fg);\n        this._handleNextSlideConditionChange(fg);\n        this._handleTriggerCondtionsChange(fg);\n\n        return fg;\n      }),\n      publishReplay(1),\n      refCount()\n    );\n  }\n\n  private _destroyConditionDialog(): void {\n    if (this._editConditionDialogSub != null) {\n      this._editConditionDialogSub.unsubscribe();\n      this._editConditionDialogSub = Subscription.EMPTY;\n    }\n    if (this._editConditionDialog != null) {\n      this._editConditionDialog.close();\n      this._editConditionDialog = null;\n    }\n  }\n\n  private _destroyValidationConditionDialog(): void {\n    if (this._editValidationConditionDialogSub != null) {\n      this._editValidationConditionDialogSub.unsubscribe();\n      this._editValidationConditionDialogSub = Subscription.EMPTY;\n    }\n    if (this._editValidationConditionDialog != null) {\n      this._editValidationConditionDialog.close();\n      this._editValidationConditionDialog = null;\n    }\n  }\n\n  private _destroyWarningConditionDialog(): void {\n    if (this._editWarningConditionDialogSub != null) {\n      this._editWarningConditionDialogSub.unsubscribe();\n      this._editWarningConditionDialogSub = Subscription.EMPTY;\n    }\n    if (this._editWarningConditionDialog != null) {\n      this._editWarningConditionDialog.close();\n      this._editWarningConditionDialog = null;\n    }\n  }\n\n  private _initRemoveTriggerCondition(): void {\n    this._removeTriggerConditionSub = (<Observable<number>>this._removeTriggerConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['triggerConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        if (vcIdx < 0 || vcIdx >= vcs.length) { return; }\n        vcs.splice(vcIdx, 1);\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initAddTriggerCondition(): void {\n    this._addTriggerConditionSub = (<Observable<void>>this._addTriggerConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['triggerConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        vcs.push('');\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initTriggerConditionEdit(): void {\n    this._editTriggerConditionSub = (<Observable<number>>this._editTriggerConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        this._destroyConditionDialog();\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (vcIdx < 0 || vcIdx >= this._triggerConditions.length || fg == null) { return; }\n        this._editConditionDialog = this._dialog\n          .open(AjfFbConditionEditorDialog);\n        const cmp = this._editConditionDialog.componentInstance;\n        cmp.condition = this._triggerConditions[vcIdx];\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              this._triggerConditions[vcIdx] = cond;\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initRemoveWarningCondition(): void {\n    this._removeWarningConditionSub = (<Observable<number>>this._removeWarningConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['warningConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        if (vcIdx < 0 || vcIdx >= vcs.length) { return; }\n        vcs.splice(vcIdx, 1);\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initAddWarningCondition(): void {\n    this._addWarningConditionSub = (<Observable<void>>this._addWarningConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['warningConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        vcs.push({condition: '', errorMessage: ''});\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initWarningConditionEdit(): void {\n    this._editWarningConditionSub = (<Observable<number>>this._editWarningConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        this._destroyWarningConditionDialog();\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (vcIdx < 0 || vcIdx >= this._warningConditions.length || fg == null) { return; }\n        this._editWarningConditionDialog = this._dialog\n          .open(AjfFbWarningConditionEditorDialog);\n        const cmp = this._editWarningConditionDialog.componentInstance;\n        const w = this._warningConditions[vcIdx];\n        cmp.condition = w.condition;\n        cmp.warningMessage = w.warningMessage;\n        this._editWarningConditionDialogSub = this._editWarningConditionDialog.afterClosed()\n          .subscribe((cond: WarningCondition) => {\n            if (cond !== void 0) {\n              this._warningConditions[vcIdx] = cond;\n            }\n            this._editWarningConditionDialogSub.unsubscribe();\n            this._editWarningConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initRemoveValidationCondition(): void {\n    this._removeValidationConditionSub = (<Observable<number>>this._removeValidationConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['validationConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        if (vcIdx < 0 || vcIdx >= vcs.length) { return; }\n        vcs.splice(vcIdx, 1);\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initAddValidationCondition(): void {\n    this._addValidationConditionSub = (<Observable<void>>this._addValidationConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['validationConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        vcs.push({condition: '', errorMessage: ''});\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initValidationConditionEdit(): void {\n    this._editValidationConditionSub = (<Observable<number>>this._editValidationConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        this._destroyValidationConditionDialog();\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (vcIdx < 0 || vcIdx >= this._validationConditions.length || fg == null) { return; }\n        this._editValidationConditionDialog = this._dialog\n          .open(AjfFbValidationConditionEditorDialog);\n        const cmp = this._editValidationConditionDialog.componentInstance;\n        const v = this._validationConditions[vcIdx];\n        cmp.condition = v.condition;\n        cmp.errorMessage = v.errorMessage;\n        this._editValidationConditionDialogSub = this._editValidationConditionDialog.afterClosed()\n          .subscribe((cond: ValidationCondition) => {\n            if (cond !== void 0) {\n              this._validationConditions[vcIdx] = cond;\n            }\n            this._editValidationConditionDialogSub.unsubscribe();\n            this._editValidationConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initForceValueEdit(): void {\n    this._editForceValueSub = (<Observable<void>>this._editForceValueEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['forceValue'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initNextSlideConditionEdit(): void {\n    this._editNextSlideConditionSub = (<Observable<void>>this._editNextSlideConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['nextSlideCondition'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initFormulaEdit(): void {\n    this._editFormulaSub = (<Observable<void>>this._editFormulaEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['formula'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initFormulaRepsEdit(): void {\n    this._editFormulaRepsSub = (<Observable<void>>this._editFormulaRepsEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['formulaReps'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initChoicesFilterEdit(): void {\n    this._editChoicesFilterSub = (<Observable<void>>this._editChoicesFilterEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['choicesFilter'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initConditionalBranchEdit(): void {\n    this._editConditionalBranchSub = (<Observable<number>>this._editConditionalBranchEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        this._destroyConditionDialog();\n        const cbIdx = r[0];\n        const fg = r[1];\n        if (cbIdx < 0 || cbIdx >= this._conditionalBranches.length || fg == null) { return; }\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = this._conditionalBranches[cbIdx];\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              this._conditionalBranches[cbIdx] = cond;\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initVisibilityEdit(): void {\n    this._editVisibilitySub = (<Observable<void>>this._editVisibilityEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['visibility'];\n        const condition = ctrl.value;\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = condition;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _handleTriggerCondtionsChange(fg: FormGroup): void {\n    this._triggerConditionsSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) =>\n        JSON.stringify(v1.triggerConditions) === JSON.stringify(v2.triggerConditions)))\n      .subscribe((v: any) => {\n        this._triggerConditions = v.triggerConditions;\n      });\n  }\n\n  private _handleWarningCondtionsChange(fg: FormGroup): void {\n    this._warningConditionsSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) =>\n        JSON.stringify(v1.warningConditions) === JSON.stringify(v2.warningConditions)))\n      .subscribe((v: any) => {\n        this._warningConditions = v.warningConditions;\n      });\n  }\n\n  private _handleValidationCondtionsChange(fg: FormGroup): void {\n    this._validationConditionsSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) =>\n        JSON.stringify(v1.validationConditions) === JSON.stringify(v2.validationConditions)))\n      .subscribe((v: any) => {\n        this._validationConditions = v.validationConditions;\n      });\n  }\n\n  private _handleForceValueChange(fg: FormGroup): void {\n    this._forceValueSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.forceValue === v2.forceValue))\n      .subscribe((v: any) => {\n        this._curForceValue = v.forceValue;\n      });\n  }\n\n  private _handleNextSlideConditionChange(fg: FormGroup): void {\n    this._formulaSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.nextSlideCondition === v2.nextSlideCondition))\n      .subscribe((v: any) => {\n        this._nextSlideCondition = v.nextSlideCondition;\n      });\n  }\n\n  private _handleFormulaChange(fg: FormGroup): void {\n    this._formulaSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.formula === v2.formula))\n      .subscribe((v: any) => {\n        this._curFormula = v.formula;\n      });\n  }\n\n  private _handleFormulaRepsChange(fg: FormGroup): void {\n    this._formulaRepsSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.formulaReps === v2.formulaReps))\n      .subscribe((v: any) => {\n        this._curFormulaReps = v.formulaReps;\n      });\n  }\n\n  private _handleChoicesFilterChange(fg: FormGroup): void {\n    this._choicesFilterSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.choicesFilter === v2.choicesFilter))\n      .subscribe((v: any) => {\n        this._curChoicesFilter = v.choicesFilter;\n      });\n  }\n\n  private _handleConditionalBranchesChange(fg: FormGroup): void {\n    this._conditionalBranchesSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) =>\n          v1.conditionalBranchesNum === v2.conditionalBranchesNum))\n      .subscribe((v: any) => {\n        const cbNum: number = v.conditionalBranchesNum;\n        const curCbNum = this._conditionalBranches.length;\n        if (curCbNum < cbNum) {\n          let newCbs: string[] = [];\n          for (let i = curCbNum ; i < cbNum ; i++) {\n            newCbs.push(AjfCondition.alwaysCondition().condition);\n          }\n          this._conditionalBranches = this._conditionalBranches.concat(newCbs);\n        } else if (curCbNum > cbNum) {\n          this._conditionalBranches.splice(0, curCbNum - cbNum);\n        }\n      });\n  }\n\n  private _handleVisibilityChange(fg: FormGroup): void {\n    this._visibilitySub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.visibilityOpt === v2.visibilityOpt))\n      .subscribe((v) => {\n        const visibilityOpt = v.visibilityOpt;\n        let newCondition: string | null;\n        switch (visibilityOpt) {\n          case 'always':\n          newCondition = AjfCondition.alwaysCondition().condition;\n          break;\n          case 'never':\n          newCondition = AjfCondition.neverCondition().condition;\n          break;\n          default:\n          newCondition = null;\n        }\n        this._curVisibility = newCondition;\n        fg.controls['visibility'].setValue(newCondition);\n      });\n  }\n\n  private _guessVisibilityOpt(condition: AjfCondition): string {\n    if (condition.condition.localeCompare(AjfCondition.alwaysCondition().condition) === 0) {\n      return 'always';\n    }\n    if (condition.condition.localeCompare(AjfCondition.neverCondition().condition) === 0) {\n      return 'never';\n    }\n    return 'condition';\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation\n} from '@angular/core';\n\nimport {AjfFormBuilderNodeTypeEntry} from './form-builder-service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-node-type-entry',\n  templateUrl: 'node-type-entry.html',\n  styleUrls: ['node-type-entry.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbNodeTypeEntry {\n  private _nodeType: AjfFormBuilderNodeTypeEntry;\n  get nodeType(): AjfFormBuilderNodeTypeEntry { return this._nodeType; }\n  @Input()\n  set nodeType(nodeType: AjfFormBuilderNodeTypeEntry) {\n    this._nodeType = nodeType;\n    this._cdr.markForCheck();\n  }\n\n  constructor(private _cdr: ChangeDetectorRef) { }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\nimport {TranslateModule} from '@ngx-translate/core';\n\nimport {AjfMonacoEditorModule} from '@ajf/material/monaco-editor';\nimport {AjfNodeIconModule} from '@ajf/material/node-icon';\n\nimport {AjfFbBranchLine} from './branch-line';\nimport {AjfFbChoicesOriginEditorDialog} from './choices-origin-editor-dialog';\nimport {AjfFbChoicesOriginEditor} from './choices-origin-editor';\nimport {AjfFbConditionEditorDialog} from './condition-editor-dialog';\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilder} from './form-builder';\nimport {AjfFormBuilderService} from './form-builder-service';\nimport {AjfFbNodeEntry} from './node-entry';\nimport {AjfFbNodeProperties} from './node-properties';\nimport {AjfFbNodeTypeEntry} from './node-type-entry';\nimport {AjfFbValidationConditionEditorDialog} from './validation-condition-editor-dialog';\nimport {AjfFbWarningConditionEditorDialog} from './warning-condition-editor-dialog';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DragDropModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatTableModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    TranslateModule,\n    AjfMonacoEditorModule,\n    AjfNodeIconModule,\n  ],\n  declarations: [\n    AjfFbBranchLine,\n    AjfFbChoicesOriginEditorDialog,\n    AjfFbChoicesOriginEditor,\n    AjfFbConditionEditorDialog,\n    AjfFbConditionEditor,\n    AjfFbNodeEntry,\n    AjfFbNodeProperties,\n    AjfFbNodeTypeEntry,\n    AjfFbValidationConditionEditorDialog,\n    AjfFbWarningConditionEditorDialog,\n    AjfFormBuilder,\n  ],\n  exports: [\n    AjfFormBuilder,\n  ],\n  entryComponents: [\n    AjfFbChoicesOriginEditorDialog,\n    AjfFbConditionEditorDialog,\n    AjfFbValidationConditionEditorDialog,\n    AjfFbWarningConditionEditorDialog,\n  ],\n  providers: [\n    AjfFormBuilderService\n  ]\n})\nexport class AjfFormBuilderModule { }\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","AjfFbBranchLine","defineProperty","offset","_offset","_updateOffset","color","_color","_updateColor","height","_height","_updateHeight","Math","max","_renderer","setStyle","_el","nativeElement","margin","type","Component","args","selector","template","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","propDecorators","Input","_super","ChoicesOriginDataSource","DataSource","create","__","connect","_choicesObs","disconnect","updateChoices","choices","_choices","next","constructor","_this","BehaviorSubject","asObservable","AjfFbChoicesOriginEditor","_displayedColumns","_choicesOrigin","choicesOrigin","name","getName","label","getLabel","canEditChoices","AjfChoicesFixedOrigin","_choicesArr","getChoices","updateValue","evt","cell","_value","rowIdx","editing","target","value","deleteRow","splice","addRow","push","isContainerNode","node","AjfSlide","AjfRepeatingSlide","AjfNodeGroup","isRepeatingContainerNode","isSlideNode","getNodeContainer","c","nodes","indexOf","cns","filter","len","cn","buildFormBuilderNodesSubtree","parent","ignoreConditionalBranches","entries","id","sort","n1","n2","parentNode","map","children","content","buildFormBuilderNodesContent","entriesNum","cbs","conditionalBranches","_nodes","flattenNodes","flatNodes","forEach","concat","getDescendants","branch","deleteNodeSubtree","delNodes","descendants","removeNodes","ids","container","nodeUniqueId","AjfFormBuilderService","_availableNodeTypes","_formObs","_attachmentsOrigins","_choicesOrigins","_flatNodes","_flatFields","_nodeEntriesTree","_editedNodeEntryObs","_editedConditionObs","_editedChoicesOriginObs","_beforeNodesUpdateObs","_afterNodeUpdateObs","setForm","form","_form","getValue","editNodeEntry","nodeEntry","_editedNodeEntry","editCondition","condition","_editedCondition","saveCurrentCondition","cancelConditionEdit","_editedChoicesOrigin","insertNode","nodeType","inContent","_beforeNodesUpdate","emit","_nodesUpdates","AjfNode","newNodes","slice","saveNodeEntry","properties","_saveNodeEntryEvent","cancelNodeEntryEdit","deleteNodeEntry","_deleteNodeEntryEvent","getCurrentForm","pipe","withLatestFrom","r","AjfForm","choicesOrigins","attachmentsOrigins","stringIdentifier","editChoicesOrigin","createChoicesOrigin","cancelChoicesOriginEdit","saveChoicesOrigin","params","setLabel","setName","setChoices","_findMaxNodeId","_curMaxId","maxId","_initFormStreams","subscribe","_attachmentsOriginsUpdates","_choicesOriginsUpdates","_initChoicesOriginsStreams","scan","op","publishReplay","refCount","_initAttachmentsOriginsStreams","_initNodesStreams","rootNodes","rootNode","tree","Error","_initSaveNode","editedNodeEntry","origNode","fromJson","toJson","visibility","AjfCondition","oldConditionalBranches","alwaysCondition","newConditionalBranches","repNode","formulaReps","AjfFormula","formula","minReps","maxReps","AjfField","field","description","defaultValue","forceValue","notEmpty","validationConditions","minValue","parseInt","maxValue","minDigits","maxDigits","isNaN","validation","AjfValidationGroup","AjfValidation","getNotEmptyCondition","getMinCondition","getMaxCondition","getMinDigitsCondition","getMaxDigitsCondition","conditions","errorMessage","notEmptyWarning","warningConditions","warning","AjfWarningGroup","AjfWarning","getNotEmptyWarning","w","warningMessage","nextSlideCondition","AjfFieldWithChoices","fwc","coIdx","coNum","forceExpanded","forceNarrow","triggerConditions","idx","_initDeleteNode","Injectable","icon","fontSet","fontIcon","isSlide","AjfStringField","AjfTextField","AjfNumberField","AjfBooleanField","AjfSingleChoiceField","AjfMultipleChoiceField","AjfFormulaField","AjfDateField","AjfDateInputField","AjfTimeField","AjfTableField","EventEmitter","_afterNodeUpdate","Subject","AjfFbChoicesOriginEditorDialog","_service","editor","choicesArr","editedChoicesOrigin","AjfFbConditionEditor","_fields","fields","_updateVariables","insertVariable","variable","monacoEditor","split","position","getPosition","ln","lineNumber","line","col","column","substring","join","setPosition","focus","editedValue","onEditorInit","monaco","languages","typescript","javascriptDefaults","setDiagnosticsOptions","noSemanticValidation","noSyntaxValidation","setCompilerOptions","ScriptTarget","ES2015","allowNonTsExtensions","allowJs","module","ModuleKind","addExtraLib","e","_extraLibs","_updateFunctions","_fieldVarType","fieldType","AjfValidatedProperty","UTIL_FUNCTIONS","AjfFieldType","Boolean","Date","DateInput","Time","Empty","Formula","MultipleChoice","SingleChoice","Number","Table","String","Text","_","AjfFbConditionEditorDialog","saveCondition","newValue","dialogRef","close","service","flatFields","f1","f2","localeCompare","AjfFormBuilder","_init","_setCurrentForm","_nodeTypes","ngAfterViewChecked","_vc","ngAfterContentInit","ngOnDestroy","_editConditionSub","unsubscribe","_beforeNodesUpdateSub","_editChoicesOriginSub","disableDropPredicate","_dialog","Subscription","EMPTY","availableNodeTypes","nodeEntriesTree","editedCondition","_editConditionDialog","open","disableClose","_editChoicesOriginDialog","beforeNodesUpdate","designerCont","_lastScrollTop","scrollTop","sample","branchColors","AjfFbNodeEntry","_hasContent","_isFirst","isFirst","_isNodeEntry","_nodeEntry","ne","_isSlide","_branchColors","_dropZones","_slideDropZones","_originOffset","originOffset","_originLeftMargin","_firstBranchColor","firstBranchColor","_currentEditedNode","onResize","edit","isNodeEntry","delete","ngAfterViewInit","_updateBranchHeights","_childEntriesSubscription","childEntries","changes","_branchLinesSubscription","onDropSuccess","dd","item","emptySlot","disableSlideDropPredicate","data","emptyAreaDropPredicate","branchLines","toArray","sliceIdx","bl","ce","offsetTop","host","(window.resize)","AjfFbValidationConditionEditorDialog","AjfFbWarningConditionEditorDialog","checkRepsValidity","reps","checkValueLimitsValidity","valueLimit","checkDigitsValidity","digits","AjfFbNodeProperties","_fieldSizes","_enabled","_propertiesForm","_hasChoices","_curVisibility","_curFormulaReps","_curChoicesFilter","_curForceValue","_curFormula","_conditionalBranches","_validationConditions","_warningConditions","_nextSlideCondition","_triggerConditions","editVisibility","_editVisibilityEvt","editConditionalBranch","_editConditionalBranchEvt","editFormulaReps","_editFormulaRepsEvt","editChoicesFilter","_editChoicesFilterEvt","editFormula","_editFormulaEvt","editForceValue","_editForceValueEvt","editValidationCondition","_editValidationConditionEvt","addValidationCondition","_addValidationConditionEvt","removeValidationCondition","_removeValidationConditionEvt","editWarningCondition","_editWarningConditionEvt","addWarningCondition","_addWarningConditionEvt","removeWarningCondition","_removeWarningConditionEvt","editNextSlideCondition","_editNextSlideConditionEvt","editTriggerCondition","_editTriggerConditionEvt","addTriggerCondition","_addTriggerConditionEvt","removeTriggerCondition","_removeTriggerConditionEvt","isField","isNumericField","isFieldWithChoices","save","_saveEvt","cancel","_choicesOriginsSub","_visibilitySub","_formulaRepsSub","_choicesFilterSub","_formulaSub","_forceValueSub","_validationConditionsSub","_warningConditionsSub","_triggerConditionsSub","_editConditionDialogSub","_editValidationConditionDialogSub","_editWarningConditionDialogSub","_editChoicesFilterSub","_editConditionalBranchSub","_editVisibilitySub","_editFormulaRepsSub","_editFormulaSub","_editForceValueSub","_editValidationConditionSub","_editWarningConditionSub","_nextSlideConditionSub","_addTriggerConditionSub","_addValidationConditionSub","_addWarningConditionSub","_editNextSlideConditionSub","_editTriggerConditionSub","_removeTriggerConditionSub","_removeValidationConditionSub","_removeWarningConditionSub","_saveSub","_initSave","propertiesForm","fg","val","tslib_1.__assign","_initForm","_conditionalBranchesSub","visibilityOpt","_guessVisibilityOpt","controls","Validators","required","conditionalBranchesNum","validators","rn","notEmptyW","size","numField","replace","fieldWithChoices","choicesFilter","_fb","group","setValidators","_handleConditionalBranchesChange","_handleVisibilityChange","_handleFormulaRepsChange","_handleChoicesFilterChange","_handleFormulaChange","_handleForceValueChange","_handleValidationCondtionsChange","_handleWarningCondtionsChange","_handleNextSlideConditionChange","_handleTriggerCondtionsChange","_destroyConditionDialog","_destroyValidationConditionDialog","_editValidationConditionDialog","_destroyWarningConditionDialog","_editWarningConditionDialog","_initRemoveTriggerCondition","vcIdx","ctrl","vcs","setValue","_initAddTriggerCondition","_initTriggerConditionEdit","componentInstance","afterClosed","cond","_initRemoveWarningCondition","_initAddWarningCondition","_initWarningConditionEdit","cmp","_initRemoveValidationCondition","_initAddValidationCondition","_initValidationConditionEdit","v","_initForceValueEdit","_initNextSlideConditionEdit","_initFormulaEdit","_initFormulaRepsEdit","_initChoicesFilterEdit","_initConditionalBranchEdit","cbIdx","_initVisibilityEdit","valueChanges","distinctUntilChanged","v1","v2","JSON","stringify","cbNum","curCbNum","newCbs","newCondition","neverCondition","FormBuilder","AjfFbNodeTypeEntry","_nodeType","_cdr","markForCheck","AjfFormBuilderModule","NgModule","imports","CommonModule","FormsModule","ReactiveFormsModule","DragDropModule","MatButtonModule","MatCardModule","MatCheckboxModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatTableModule","MatToolbarModule","MatTooltipModule","TranslateModule","AjfMonacoEditorModule","AjfNodeIconModule","declarations","exports","entryComponents","providers"],"mappings":"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"}