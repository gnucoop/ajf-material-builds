{"version":3,"file":"material-form-builder.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/material/form-builder/branch-line.ts","../../src/material/form-builder/choices-origin-data-source.ts","../../src/material/form-builder/choices-origin-editor.ts","../../src/material/form-builder/form-builder-service.ts","../../src/material/form-builder/choices-origin-editor-dialog.ts","../../src/material/form-builder/condition-editor.ts","../../src/material/form-builder/condition-editor-dialog.ts","../../src/material/form-builder/form-builder.ts","../../src/material/form-builder/node-entry.ts","../../src/material/form-builder/validation-condition-editor-dialog.ts","../../src/material/form-builder/warning-condition-editor-dialog.ts","../../src/material/form-builder/node-properties.ts","../../src/material/form-builder/node-type-entry.ts","../../src/material/form-builder/form-builder-module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2,\n  ViewEncapsulation} from '@angular/core';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-branch-line',\n  templateUrl: 'branch-line.html',\n  styleUrls: ['branch-line.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbBranchLine {\n  private _offset = 0;\n  @Input() set offset(offset: number) {\n    this._offset = offset;\n    this._updateOffset();\n  }\n\n  private _color: string;\n  @Input() set color(color: string) {\n    this._color = color;\n    this._updateColor();\n  }\n\n  private _height = 0;\n  @Input() set height(height: number) {\n    this._height = height;\n    this._updateHeight();\n  }\n\n  constructor(private _el: ElementRef, private _renderer: Renderer2) { }\n\n  private _updateHeight(): void {\n    const height = `${Math.max(0, this._height - 25)}px`;\n    this._renderer.setStyle(this._el.nativeElement, 'height', height);\n  }\n\n  private _updateOffset(): void {\n    const margin = `${this._offset * 4}px`;\n    this._renderer.setStyle(this._el.nativeElement, 'margin-top', margin);\n    this._renderer.setStyle(this._el.nativeElement, 'margin-left', margin);\n  }\n\n  private _updateColor(): void {\n    this._renderer.setStyle(this._el.nativeElement, 'border-color', this._color);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {DataSource} from '@angular/cdk/collections';\n\nimport {BehaviorSubject, Observable} from 'rxjs';\n\n\nexport type ChoicesOriginChoiceEntry = {label: string, value: string};\n\nexport class ChoicesOriginDataSource\n    extends DataSource<ChoicesOriginChoiceEntry> {\n  private _choices: BehaviorSubject<ChoicesOriginChoiceEntry[]> =\n      new BehaviorSubject<ChoicesOriginChoiceEntry[]>([]);\n  private _choicesObs: Observable<ChoicesOriginChoiceEntry[]>;\n\n  constructor() {\n    super();\n    this._choicesObs = this._choices.asObservable();\n  }\n\n  connect(): Observable<ChoicesOriginChoiceEntry[]> {\n    return this._choicesObs;\n  }\n\n  disconnect() {}\n\n  updateChoices(choices: ChoicesOriginChoiceEntry[]) {\n    this._choices.next(choices);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin, isChoicesFixedOrigin} from '@ajf/core/forms';\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\n\nimport {ChoicesOriginChoiceEntry, ChoicesOriginDataSource} from './choices-origin-data-source';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-choices-origin-editor',\n  templateUrl: 'choices-origin-editor.html',\n  styleUrls: ['choices-origin-editor.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbChoicesOriginEditor {\n  private _displayedColumns: string[] = ['label', 'value', 'delete'];\n  get displayedColumns(): string[] { return this._displayedColumns; }\n\n  private _choicesOrigin: AjfChoicesOrigin<any>;\n  get choicesOrigin(): AjfChoicesOrigin<any> {\n    return this._choicesOrigin;\n  }\n  @Input()\n  set choicesOrigin(choicesOrigin: AjfChoicesOrigin<any>) {\n    this._choicesOrigin = choicesOrigin;\n    this.name = choicesOrigin.name;\n    this.label = choicesOrigin.label;\n\n    this.canEditChoices = isChoicesFixedOrigin(choicesOrigin);\n    this._choicesArr = choicesOrigin.choices;\n    this._choices.updateChoices(this._choicesArr);\n  }\n\n  editing: {[key: string]: boolean} = {};\n  name: string;\n  label: string;\n  canEditChoices: boolean;\n\n  private _choices: ChoicesOriginDataSource = new ChoicesOriginDataSource();\n  get choices(): ChoicesOriginDataSource { return this._choices; }\n\n  private _choicesArr: ChoicesOriginChoiceEntry[] = [];\n  get choicesArr(): ChoicesOriginChoiceEntry[] { return this._choicesArr; }\n\n  updateValue(evt: any, cell: string, _value: any, rowIdx: number): void {\n    this.editing[rowIdx + '-' + cell] = false;\n    (this._choicesArr[rowIdx] as any)[cell] = evt.target.value;\n    this._choices.updateChoices(this._choicesArr);\n  }\n\n  deleteRow(rowIdx: number): void {\n    this._choicesArr.splice(rowIdx, 1);\n    this._choices.updateChoices(this._choicesArr);\n  }\n\n  addRow(): void {\n    this._choicesArr.push({label: '', value: ''});\n    this._choices.updateChoices(this._choicesArr);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfAttachmentsOrigin, AjfChoicesOrigin, AjfContainerNode, AjfField, AjfFieldType,\n  AjfFieldWithChoices, AjfForm, AjfNode, AjfNodeGroup, AjfNodesOperation, AjfNodeType,\n  AjfRepeatingContainerNode, AjfRepeatingSlide, AjfSlide, createChoicesFixedOrigin, createField,\n  createForm, createContainerNode, createValidation, createValidationGroup, createWarning,\n  createWarningGroup, isChoicesFixedOrigin, isContainerNode, isField, isFieldWithChoices,\n  isRepeatingContainerNode, isSlidesNode, maxDigitsValidation, maxValidation, minDigitsValidation,\n  minValidation, notEmptyValidation, notEmptyWarning\n} from '@ajf/core/forms';\nimport {AjfCondition, alwaysCondition, createCondition, createFormula} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {filter, map, publishReplay, refCount, scan, withLatestFrom} from 'rxjs/operators';\n\nimport {AjfAttachmentsOriginsOperation, AjfChoicesOriginsOperation} from './operations';\n\n\nexport interface AjfFormBuilderNodeTypeEntry {\n  label: string;\n  icon: {\n    fontSet: string;\n    fontIcon: string;\n  };\n  nodeType: {\n    node: AjfNodeType;\n    field?: AjfFieldType,\n  };\n  isSlide?: boolean;\n}\n\n\nexport interface AjfFormBuilderNodeEntry {\n  node: AjfNode;\n  container: AjfContainerNode | null;\n  children: AjfFormBuilderNodeEntry[];\n  content: AjfFormBuilderNodeEntry[];\n}\n\n\nexport interface AjfFormBuilderEmptySlot {\n  parent: AjfNode;\n  parentNode: number;\n}\n\n\nexport type AjfFormBuilderNode = AjfFormBuilderNodeEntry | AjfFormBuilderEmptySlot;\nexport type AjfContainerNode = AjfSlide | AjfRepeatingSlide | AjfNodeGroup;\n\nfunction getNodeContainer(c: {nodes: AjfNode[]}, node: AjfNode): {nodes: AjfNode[]} | null {\n  if (c.nodes.indexOf(node) > -1) {\n    return c;\n  }\n  const cns = c.nodes.filter(n => isContainerNode(n));\n  const len = cns.length;\n  for (let i = 0 ; i < len ; i++) {\n    const cn = getNodeContainer(<AjfContainerNode>cns[i], node);\n    if (cn != null) { return cn; }\n  }\n  return null;\n}\n\nfunction buildFormBuilderNodesSubtree(\n  nodes: AjfNode[], parent: AjfNode, ignoreConditionalBranches = false\n): AjfFormBuilderNode[] {\n  const entries: AjfFormBuilderNode[] = nodes\n    .filter(n => n.parent === parent.id)\n    .sort((n1, n2) => n1.parentNode - n2.parentNode)\n    .map(n => {\n      const children = buildFormBuilderNodesSubtree(nodes, n);\n      if (children.length === 0) {\n        children.push({parent: n, parentNode: 0});\n      }\n      return <AjfFormBuilderNodeEntry>{\n        node: n,\n        children,\n        content: buildFormBuilderNodesContent(nodes, n)\n      };\n    });\n  if (!ignoreConditionalBranches) {\n    const entriesNum = entries.length;\n    const cbs = parent.conditionalBranches.length;\n    for (let i = entriesNum ; i < cbs ; i++) {\n      entries.push({\n        parent: parent,\n        parentNode: i\n      });\n    }\n  }\n  return entries;\n}\n\nfunction buildFormBuilderNodesContent(_nodes: AjfNode[], node: AjfNode): AjfFormBuilderNode[] {\n  if (isContainerNode(node)) {\n    return buildFormBuilderNodesSubtree((<AjfContainerNode>node).nodes, node, true);\n  }\n  return [];\n}\n\n\nfunction buildFormBuilderNodesTree(nodes: AjfNode[]): (AjfFormBuilderNode | null)[] {\n  const rootNodes = nodes.filter(n => n.parent == null || n.parent === 0);\n  if (rootNodes.length === 1) {\n    const rootNode = rootNodes[0];\n    if (isSlidesNode(rootNode)) {\n      const tree: AjfFormBuilderNode[] = [];\n      tree.push(<AjfFormBuilderNodeEntry>{\n        node: rootNode,\n        container: null,\n        children: buildFormBuilderNodesSubtree(nodes, rootNode),\n        content: buildFormBuilderNodesContent(nodes, rootNode)\n      });\n      return tree;\n    }\n  } else if (rootNodes.length === 0) {\n    return [null];\n  }\n  throw new Error('Invalid form definition');\n}\n\nexport function flattenNodes(nodes: AjfNode[]): AjfNode[] {\n  let flatNodes: AjfNode[] = [];\n\n  nodes.forEach((node: AjfNode) => {\n    if (isContainerNode(node)) {\n      flatNodes = flatNodes.concat(flattenNodes((<AjfContainerNode>node).nodes));\n    }\n    flatNodes.push(node);\n  });\n\n  return flatNodes;\n}\n\nfunction getDescendants(\n  flatNodes: AjfNode[], parentNode: AjfNode, branch: number | null = null\n): AjfNode[] {\n  return branch != null ?\n    flatNodes.filter(n => n.parent === parentNode.id && n.parentNode === branch) :\n    flatNodes.filter(n => n.parent === parentNode.id);\n}\n\nfunction removeNodes(nodes: AjfNode[], ids: number[]): AjfNode[] {\n  const len = nodes.length;\n  for (let i = 0 ; i < len ; i++) {\n    const node = nodes[i];\n    if (isContainerNode(node)) {\n      const container = (<AjfContainerNode>node);\n      container.nodes = removeNodes(container.nodes, ids);\n    }\n  }\n  return nodes.filter(n => ids.indexOf(n.id) === -1);\n}\n\nfunction deleteNodeSubtree(\n  nodes: AjfNode[], parentNode: AjfNode, branch: number | null = null\n): AjfNode[] {\n  const flatNodes = flattenNodes(nodes);\n  let delNodes: AjfNode[] = [];\n  let descendants = getDescendants(flatNodes, parentNode, branch);\n  const len = descendants.length;\n  for (let i = 0 ; i < len ; i++) {\n    delNodes = delNodes.concat(getDescendants(flatNodes, descendants[i]));\n  }\n  delNodes = delNodes.concat(descendants);\n  return removeNodes(nodes, delNodes.map(n => n.id));\n}\n\nlet nodeUniqueId = 0;\n\n\n@Injectable()\nexport class AjfFormBuilderService {\n  private _availableNodeTypes: AjfFormBuilderNodeTypeEntry[] = [\n    {\n      label: 'Slide',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-slide'},\n      nodeType: {node: AjfNodeType.AjfSlide},\n      isSlide: true\n    },\n    {\n      label: 'Repeating slide',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-repeatingslide'},\n      nodeType: {node: AjfNodeType.AjfRepeatingSlide},\n      isSlide: true\n    },\n    {\n      label: 'String',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-string'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.String}\n    },\n    {\n      label: 'Text',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-text'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Text}\n    },\n    {\n      label: 'Number',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-number'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Number}\n    },\n    {\n      label: 'Boolean',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-boolean'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Boolean}\n    },\n    {\n      label: 'Single choice',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-singlechoice'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.SingleChoice}\n    },\n    {\n      label: 'Multiple choice',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-multiplechoice'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.MultipleChoice}\n    },\n    {\n      label: 'Formula',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-formula'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Formula}\n    },\n    {\n      label: 'Date',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-date'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Date}\n    },\n    {\n      label: 'Date input',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-dateinput'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.DateInput}\n    },\n    {\n      label: 'Time',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-time'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Time}\n    },\n    {\n      label: 'Table',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-table'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Table}\n    }\n  ];\n  /**\n   * Available node types\n   *\n   * @readonly\n   * @memberOf AjfFormBuilderService\n   */\n  get availableNodeTypes(): AjfFormBuilderNodeTypeEntry[] { return this._availableNodeTypes; }\n\n  private _form: BehaviorSubject<AjfForm | null> = new BehaviorSubject<AjfForm | null>(null);\n  private _formObs: Observable<AjfForm | null> = this._form.asObservable();\n  /**\n   * Current edited form stream\n   *\n   * @readonly\n   * @memberOf AjfFormBuilderService\n   */\n  get form(): Observable<AjfForm | null> { return this._formObs; }\n\n  private _attachmentsOrigins: Observable<AjfAttachmentsOrigin<any>[]>;\n  get attachmentsOrigins(): Observable<AjfAttachmentsOrigin<any>[]> {\n    return this._attachmentsOrigins;\n  }\n\n  private _choicesOrigins: Observable<AjfChoicesOrigin<any>[]>;\n  get choicesOrigins(): Observable<AjfChoicesOrigin<any>[]> {\n    return this._choicesOrigins;\n  }\n\n  private _nodes: Observable<AjfNode[]>;\n  get nodes(): Observable<AjfNode[]> { return this._nodes; }\n\n  private _flatNodes: Observable<AjfNode[]>;\n  get flatNodes(): Observable<AjfNode[]> {\n    return this._flatNodes;\n  }\n\n  private _flatFields: Observable<AjfField[]>;\n  get flatFields(): Observable<AjfField[]> { return this._flatFields; }\n\n  private _nodeEntriesTree: Observable<AjfFormBuilderNodeEntry[]>;\n  get nodeEntriesTree(): Observable<AjfFormBuilderNodeEntry[]> { return this._nodeEntriesTree; }\n\n  private _editedNodeEntry: BehaviorSubject<AjfFormBuilderNodeEntry | null> =\n    new BehaviorSubject<AjfFormBuilderNodeEntry | null>(null);\n  private _editedNodeEntryObs: Observable<AjfFormBuilderNodeEntry | null> =\n    this._editedNodeEntry.asObservable();\n  get editedNodeEntry(): Observable<AjfFormBuilderNodeEntry | null> {\n    return this._editedNodeEntryObs;\n  }\n\n  private _editedCondition: BehaviorSubject<AjfCondition | null> =\n    new BehaviorSubject<AjfCondition | null>(null);\n  private _editedConditionObs: Observable<AjfCondition | null> =\n    this._editedCondition.asObservable();\n  get editedCondition(): Observable<AjfCondition | null> { return this._editedConditionObs; }\n\n  private _editedChoicesOrigin: BehaviorSubject<AjfChoicesOrigin<any>|null> =\n      new BehaviorSubject<AjfChoicesOrigin<any>|null>(null);\n  private _editedChoicesOriginObs: Observable<AjfChoicesOrigin<any>|null> =\n      this._editedChoicesOrigin.asObservable();\n  get editedChoicesOrigin(): Observable<AjfChoicesOrigin<any>|null> {\n    return this._editedChoicesOriginObs;\n  }\n\n  private _beforeNodesUpdate: EventEmitter<void> = new EventEmitter<void>();\n  private _beforeNodesUpdateObs: Observable<void> = this._beforeNodesUpdate.asObservable();\n  get beforeNodesUpdate(): Observable<void> { return this._beforeNodesUpdateObs; }\n  private _afterNodeUpdate: EventEmitter<void> = new EventEmitter<void>();\n  private _afterNodeUpdateObs: Observable<void> = this._afterNodeUpdate.asObservable();\n  get afterNodeUpdate(): Observable<void> { return this._afterNodeUpdateObs; }\n\n  private _nodesUpdates: Subject<AjfNodesOperation> = new Subject<AjfNodesOperation>();\n  private _attachmentsOriginsUpdates: Subject<AjfAttachmentsOriginsOperation> =\n      new Subject<AjfAttachmentsOriginsOperation>();\n  private _choicesOriginsUpdates: Subject<AjfChoicesOriginsOperation> =\n      new Subject<AjfChoicesOriginsOperation>();\n\n  private _saveNodeEntryEvent: EventEmitter<any> = new EventEmitter<any>();\n  private _deleteNodeEntryEvent: EventEmitter<AjfFormBuilderNodeEntry> =\n    new EventEmitter<AjfFormBuilderNodeEntry>();\n\n  constructor() {\n    this._initChoicesOriginsStreams();\n    this._initAttachmentsOriginsStreams();\n    this._initNodesStreams();\n    this._initFormStreams();\n    this._initSaveNode();\n    this._initDeleteNode();\n  }\n\n  /**\n   * Sets the current edited form\n   *\n   * @param form\n   *\n   * @memberOf AjfFormBuilderService\n   */\n  setForm(form: AjfForm | null): void {\n    if (form !== this._form.getValue()) {\n      this._form.next(form);\n    }\n  }\n\n  editNodeEntry(nodeEntry: AjfFormBuilderNodeEntry): void {\n    this._editedNodeEntry.next(nodeEntry);\n  }\n\n  editCondition(condition: AjfCondition): void {\n    this._editedCondition.next(condition);\n  }\n\n  saveCurrentCondition(condition: string): void {\n    let c = this._editedCondition.getValue();\n    if (c == null) { return; }\n    c.condition = condition;\n    this._editedCondition.next(null);\n  }\n\n  cancelConditionEdit(): void {\n    this._editedChoicesOrigin.next(null);\n  }\n\n  insertNode(\n    nodeType: AjfFormBuilderNodeTypeEntry,\n    parent: AjfNode,\n    parentNode: number,\n    inContent = false\n  ): void {\n    let node: AjfNode|AjfField;\n    const id = ++nodeUniqueId;\n    const isFieldNode = nodeType.nodeType.field != null;\n    if (isFieldNode) {\n      node = createField({\n        id,\n        nodeType: AjfNodeType.AjfField,\n        fieldType: nodeType.nodeType.field!,\n        parent: parent.id,\n        parentNode,\n        name: '',\n      });\n    } else {\n      node = createContainerNode({\n        id,\n        nodeType: nodeType.nodeType.node,\n        parent: parent.id,\n        parentNode,\n        name: '',\n        nodes: [],\n      });\n    }\n    this._beforeNodesUpdate.emit();\n    this._nodesUpdates.next((nodes: AjfNode[]): AjfNode[] => {\n      const cn = isContainerNode(parent) && inContent ?\n        (<AjfContainerNode>parent) :\n        getNodeContainer({nodes}, parent);\n      if (cn != null) {\n        if (!isFieldNode) {\n          const replaceNodes = cn.nodes === nodes;\n          const newNodes = cn.nodes.slice(0);\n          newNodes.push(node);\n          cn.nodes = newNodes;\n          if (replaceNodes) {\n            nodes = newNodes;\n          }\n        } else {\n          cn.nodes.push(node);\n        }\n      }\n      return nodes;\n    });\n  }\n\n  saveNodeEntry(properties: any): void {\n    this._saveNodeEntryEvent.emit(properties);\n  }\n\n  cancelNodeEntryEdit(): void {\n    this._editedNodeEntry.next(null);\n  }\n\n  deleteNodeEntry(nodeEntry: AjfFormBuilderNodeEntry): void {\n    this._deleteNodeEntryEvent.next(nodeEntry);\n  }\n\n  getCurrentForm(): Observable<AjfForm> {\n    return combineLatest(\n      [this.form, this.nodes, this.attachmentsOrigins, this.choicesOrigins]\n    ).pipe(\n      filter(([form]) => form != null),\n      map(([form, nodes, attachmentsOrigins, choicesOrigins]) => {\n        return createForm({\n          choicesOrigins: choicesOrigins.slice(0),\n          attachmentsOrigins: attachmentsOrigins.slice(0),\n          stringIdentifier: form!.stringIdentifier.slice(0),\n          nodes: nodes.slice(0) as AjfSlide[],\n          supplementaryInformations: form!.supplementaryInformations,\n        });\n      })\n    );\n  }\n\n  editChoicesOrigin(choicesOrigin: AjfChoicesOrigin<any>): void {\n    this._editedChoicesOrigin.next(choicesOrigin);\n  }\n\n  createChoicesOrigin(): void {\n    this._editedChoicesOrigin.next(createChoicesFixedOrigin<any>({name: ''}));\n  }\n\n  cancelChoicesOriginEdit(): void {\n    this._editedChoicesOrigin.next(null);\n  }\n\n  saveChoicesOrigin(params: {label: string, name: string, choices: any[]}): void {\n    const choicesOrigin = this._editedChoicesOrigin.getValue();\n    if (choicesOrigin != null) {\n      choicesOrigin.label = params.label;\n      choicesOrigin.name = params.name;\n      if (isChoicesFixedOrigin(choicesOrigin)) {\n        choicesOrigin.choices = params.choices;\n      }\n    }\n    this._editedChoicesOrigin.next(null);\n  }\n\n  private _findMaxNodeId(nodes: AjfNode[], _curMaxId = 0): number {\n    let maxId = 0;\n    nodes.forEach((n) => {\n      maxId = Math.max(maxId, n.id);\n      if (isContainerNode(n)) {\n        maxId = Math.max(maxId, this._findMaxNodeId((<AjfContainerNode>n).nodes));\n      }\n    });\n    return maxId;\n  }\n\n  private _initFormStreams(): void {\n    this._form\n      .subscribe((form: AjfForm | null) => {\n        nodeUniqueId = 0;\n        if (form != null && form.nodes != null && form.nodes.length > 0) {\n          nodeUniqueId = this._findMaxNodeId(form.nodes);\n        }\n        this._nodesUpdates.next(\n          (_nodes: AjfNode[]): AjfNode[] => {\n            return form != null && form.nodes != null ? form.nodes.slice(0) : [];\n          }\n        );\n        this._attachmentsOriginsUpdates.next(\n            (_attachmentsOrigins: AjfAttachmentsOrigin<any>[]): AjfAttachmentsOrigin<any>[] => {\n              return form != null && form.attachmentsOrigins != null ?\n                  form.attachmentsOrigins.slice(0) :\n                  [];\n            });\n        this._choicesOriginsUpdates.next(\n            (_choicesOrigins: AjfChoicesOrigin<any>[]): AjfChoicesOrigin<any>[] => {\n              return form != null && form.choicesOrigins != null ? form.choicesOrigins.slice(0) :\n                                                                   [];\n            });\n      });\n  }\n\n  private _initChoicesOriginsStreams(): void {\n    this._choicesOrigins =\n        (<Observable<AjfChoicesOriginsOperation>>this._choicesOriginsUpdates)\n            .pipe(\n                scan((choicesOrigins: AjfChoicesOrigin<any>[], op: AjfChoicesOriginsOperation) => {\n                  return op(choicesOrigins);\n                }, []), publishReplay(1), refCount());\n  }\n\n  private _initAttachmentsOriginsStreams(): void {\n    this._attachmentsOrigins =\n        (<Observable<AjfAttachmentsOriginsOperation>>this._attachmentsOriginsUpdates)\n            .pipe(\n                scan(\n                    (attachmentsOrigins: AjfAttachmentsOrigin<any>[],\n                     op: AjfAttachmentsOriginsOperation) => {\n                      return op(attachmentsOrigins);\n                    },\n                    []),\n                publishReplay(1), refCount());\n  }\n\n  private _initNodesStreams(): void {\n    this._nodes = (<Observable<AjfNodesOperation>>this._nodesUpdates)\n                      .pipe(scan((nodes: AjfNode[], op: AjfNodesOperation) => {\n                              return op(nodes);\n                            }, []), publishReplay(1), refCount());\n\n    this._flatNodes = this._nodes.pipe(\n      map((nodes: AjfNode[]) => flattenNodes(nodes)),\n      publishReplay(1),\n      refCount()\n    );\n\n    this._flatFields = this._flatNodes.pipe(\n      map((nodes: AjfNode[]) => <AjfField[]>nodes.filter(n => !isContainerNode(n))),\n      publishReplay(1),\n      refCount()\n    );\n\n    this._nodeEntriesTree = this._nodes.pipe(\n      map(nodes => <AjfFormBuilderNodeEntry[]>buildFormBuilderNodesTree(nodes)),\n      publishReplay(1),\n      refCount()\n    );\n  }\n\n  private _initSaveNode(): void {\n    this._saveNodeEntryEvent\n        .pipe(\n            withLatestFrom(this.editedNodeEntry, this.choicesOrigins, this.attachmentsOrigins),\n            filter((r) => r[1] != null),\n            map((r:\n                     [\n                       any, AjfFormBuilderNodeEntry|null, AjfChoicesOrigin<any>[],\n                       AjfAttachmentsOrigin<any>[]\n                     ]) => {\n              this._beforeNodesUpdate.emit();\n              const properties = r[0];\n              const nodeEntry = r[1]!;\n              const choicesOrigins = r[2];\n              // const attachmentsOrigins = r[3];\n              const origNode = nodeEntry.node;\n              const node = deepCopy(origNode);\n              node.id = nodeEntry.node.id;\n              node.name = properties.name;\n              node.label = properties.label;\n              node.visibility = properties.visibility != null ?\n                  createCondition({condition: properties.visibility}) :\n                  null;\n\n              const oldConditionalBranches = node.conditionalBranches.length;\n              node.conditionalBranches = properties.conditionalBranches != null ?\n                  properties.conditionalBranches.map(\n                      (condition: string) => createCondition({condition})) :\n                  [alwaysCondition()];\n              const newConditionalBranches = node.conditionalBranches.length;\n\n              if (isRepeatingContainerNode(node)) {\n                const repNode = <AjfRepeatingContainerNode>node;\n                repNode.formulaReps = properties.formulaReps != null ?\n                    createFormula({formula: properties.formulaReps}) :\n                    undefined;\n                repNode.minReps = properties.minReps;\n                repNode.maxReps = properties.maxReps;\n              }\n\n              if (isField(nodeEntry.node)) {\n                const field = <AjfField>nodeEntry.node;\n                field.description = properties.description;\n                field.defaultValue = properties.defaultValue;\n                field.formula = properties.formula != null ?\n                    createFormula({formula: properties.formula}) :\n                    undefined;\n                const forceValue = properties.value;\n                const notEmpty = properties.notEmpty;\n                const validationConditions = properties.validationConditions;\n                let minValue: number|null = parseInt(properties.minValue, 10);\n                let maxValue: number|null = parseInt(properties.maxValue, 10);\n                let minDigits: number|null = parseInt(properties.minDigits, 10);\n                let maxDigits: number|null = parseInt(properties.maxDigits, 10);\n                if (isNaN(minValue)) {\n                  minValue = null;\n                }\n                if (isNaN(maxValue)) {\n                  maxValue = null;\n                }\n                if (isNaN(minDigits)) {\n                  minDigits = null;\n                }\n                if (isNaN(maxDigits)) {\n                  maxDigits = null;\n                }\n                if (forceValue != null || notEmpty != null ||\n                    (validationConditions != null && validationConditions.length > 0) ||\n                    minValue != null || maxValue != null || minDigits != null ||\n                    maxDigits != null) {\n                  const validation = field.validation || createValidationGroup({});\n                  validation.forceValue = forceValue;\n                  validation.notEmpty = notEmpty ? notEmptyValidation() : undefined;\n                  validation.minValue = minValue != null ? minValidation(minValue) : undefined;\n                  validation.maxValue = maxValue != null ? maxValidation(maxValue) : undefined;\n                  validation.minDigits =\n                      minDigits != null ? minDigitsValidation(minDigits) : undefined;\n                  validation.maxDigits =\n                      maxDigits != null ? maxDigitsValidation(maxDigits) : undefined;\n                  validation.conditions =\n                      (validationConditions ||\n                       []).map((c: {condition: string, errorMessage: string}) => createValidation({\n                                 condition: c.condition,\n                                 errorMessage: c.errorMessage\n                               }));\n                  field.validation = validation;\n                } else {\n                  field.validation = undefined;\n                }\n                const notEmptyWarn = properties.notEmptyWarning;\n                const warningConditions = properties.warningConditions;\n                if (notEmptyWarn != null ||\n                    (warningConditions != null && warningConditions.length > 0)) {\n                  const warning = field.warning || createWarningGroup({});\n                  warning.notEmpty = notEmptyWarn ? notEmptyWarning() : undefined;\n                  warning.conditions =\n                      (warningConditions ||\n                       []).map((w: {condition: string, warningMessage: string}) => createWarning({\n                                 condition: w.condition,\n                                 warningMessage: w.warningMessage\n                               }));\n                  field.warning = warning;\n                } else {\n                  field.warning = undefined;\n                }\n                field.nextSlideCondition = properties.nextSlideCondition != null ?\n                    createCondition({condition: properties.nextSlideCondition}) :\n                    undefined;\n\n                if (isFieldWithChoices(field)) {\n                  const fwc = <AjfFieldWithChoices<any>>field;\n                  let choicesOrigin: AjfChoicesOrigin<any>|null = null;\n                  let coIdx = 0;\n                  const coNum: number = choicesOrigins.length;\n                  while (choicesOrigin == null && coIdx < coNum) {\n                    if (choicesOrigins[coIdx].name === properties.choicesOrigin) {\n                      choicesOrigin = choicesOrigins[coIdx];\n                    }\n                    coIdx++;\n                  }\n                  if (choicesOrigin != null) {\n                    fwc.choicesOrigin = choicesOrigin;\n                  }\n                  fwc.forceExpanded = properties.forceExpanded;\n                  fwc.forceNarrow = properties.forceNarrow;\n                  fwc.triggerConditions = (properties.triggerConditions ||\n                                           []).map((t: string) => createCondition({condition: t}));\n                }\n              }\n\n              this._editedNodeEntry.next(null);\n\n              return (nodes: AjfNode[]): AjfNode[] => {\n                let cn = getNodeContainer({nodes}, origNode);\n                if (cn != null) {\n                  // TODO: @trik check this, was always true?\n                  // if (cn instanceof AjfNode) {\n                  const replaceNodes = cn.nodes === nodes;\n                  const idx = cn.nodes.indexOf(origNode);\n                  let newNodes = cn.nodes.slice(0, idx);\n                  newNodes.push(node);\n                  newNodes = newNodes.concat(cn.nodes.slice(idx + 1));\n                  cn.nodes = newNodes;\n                  if (replaceNodes) {\n                    nodes = newNodes;\n                  } else {\n                    nodes = nodes.slice(0);\n                  }\n                  // } else {\n                  //   const idx = nodes.indexOf(origNode);\n                  //   nodes = nodes.slice(0, idx).concat([node]).concat(nodes.slice(idx + 1));\n                  // }\n                  if (newConditionalBranches < oldConditionalBranches) {\n                    for (let i = newConditionalBranches; i < oldConditionalBranches; i++) {\n                      nodes = deleteNodeSubtree(nodes, node, i);\n                    }\n                  }\n                }\n                return nodes;\n              };\n            }))\n        .subscribe(this._nodesUpdates);\n  }\n\n  private _initDeleteNode(): void {\n    (<Observable<AjfFormBuilderNodeEntry>>this._deleteNodeEntryEvent).pipe(\n      map((nodeEntry: AjfFormBuilderNodeEntry) => {\n        this._beforeNodesUpdate.emit();\n        return (nodes: AjfNode[]): AjfNode[] => {\n          const node = nodeEntry.node;\n          let cn = getNodeContainer({nodes}, node);\n          if (cn != null) {\n            const idx = cn.nodes.indexOf(node);\n            let newNodes = cn.nodes.slice(0, idx);\n            newNodes = newNodes.concat(cn.nodes.slice(idx + 1));\n            cn.nodes = newNodes;\n            nodes = nodes.slice(0);\n            nodes = deleteNodeSubtree(nodes, node);\n          }\n          return nodes;\n        };\n      })\n    ).subscribe(this._nodesUpdates);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin} from '@ajf/core/forms';\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {AjfFbChoicesOriginEditor} from './choices-origin-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-choices-origin-editor-dialog',\n  templateUrl: 'choices-origin-editor-dialog.html',\n  styleUrls: ['choices-origin-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbChoicesOriginEditorDialog {\n  @ViewChild(AjfFbChoicesOriginEditor, {static: true}) editor: AjfFbChoicesOriginEditor;\n\n  private _choicesOrigin: Observable<AjfChoicesOrigin<any>>;\n  get choicesOrigin(): Observable<AjfChoicesOrigin<any>> {\n    return this._choicesOrigin;\n  }\n\n  constructor(private _service: AjfFormBuilderService) {\n    this._choicesOrigin = this._service.editedChoicesOrigin.pipe(\n      filter(c => c != null),\n      map(c => c!)\n    );\n  }\n\n  saveChoicesOrigin(): void {\n    this._service.saveChoicesOrigin({\n      label: this.editor.label,\n      name: this.editor.name,\n      choices: this.editor.choicesArr\n    });\n  }\n\n  cancelChoicesOriginEdit(): void {\n    this._service.cancelChoicesOriginEdit();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField, AjfFieldType, AjfValidationService} from '@ajf/core/forms';\nimport {AjfExpressionUtils} from '@ajf/core/models';\nimport {AjfMonacoEditor} from '@ajf/material/monaco-editor';\nimport {\n  ChangeDetectionStrategy, Component, Input, ViewChild, ViewEncapsulation\n} from '@angular/core';\n\ndeclare var monaco: any;\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-condition-editor',\n  templateUrl: 'fb-condition-editor.html',\n  styleUrls: ['fb-condition-editor.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class AjfFbConditionEditor {\n  @ViewChild(AjfMonacoEditor, {static: true}) monacoEditor: AjfMonacoEditor;\n\n  private _fields: AjfField[];\n  get fields(): AjfField[] { return this._fields; }\n  @Input() set fields(fields: AjfField[]) {\n    this._fields = fields;\n    this._updateVariables();\n  }\n  @Input() condition: string;\n\n  editedValue: string;\n\n  constructor(_: AjfValidationService) { }\n\n  insertVariable(variable: string): void {\n    if (this.monacoEditor != null && this.monacoEditor.editor != null) {\n      const editor = this.monacoEditor.editor;\n      let value: string[] = editor.getValue().split('\\n');\n      let position: {column: number, lineNumber: number} = editor.getPosition();\n      const ln = position.lineNumber - 1;\n      let line = value[ln];\n      let col = position.column - 1;\n      line = line.substring(0, col) + variable + line.substring(col);\n      value[ln] = line;\n      position.column += variable.length;\n      this.monacoEditor.value = value.join('\\n');\n      editor.setPosition(position);\n      editor.focus();\n      this.editedValue = editor.getValue();\n    }\n  }\n\n  onEditorInit(): void {\n    monaco.languages.typescript.javascriptDefaults.setDiagnosticsOptions({\n      noSemanticValidation: false,\n      noSyntaxValidation: false\n    });\n\n    monaco.languages.typescript.javascriptDefaults.setCompilerOptions({\n      target: monaco.languages.typescript.ScriptTarget.ES2015,\n      allowNonTsExtensions: true,\n      allowJs: true,\n      module: monaco.languages.typescript.ModuleKind.None\n    });\n\n    try {\n      monaco.languages.typescript.javascriptDefaults.addExtraLib(\n        '', 'condition-editor-variables.d.ts'\n      );\n    } catch (e) {\n      monaco.languages.typescript.javascriptDefaults\n          ._extraLibs['condition-editor-variables.d.ts'] = '';\n    }\n\n    try {\n      monaco.languages.typescript.javascriptDefaults.addExtraLib(\n        '', 'condition-editor-functions.d.ts'\n      );\n    } catch (e) {\n      monaco.languages.typescript.javascriptDefaults\n          ._extraLibs['condition-editor-functions.d.ts'] = '';\n    }\n\n    this._updateVariables();\n    this._updateFunctions();\n  }\n\n  private _updateVariables(): void {\n    if (this._fields == null) { return; }\n    try {\n      monaco.languages.typescript.javascriptDefaults\n        ._extraLibs['condition-editor-variables.d.ts'] =\n          this._fields\n            .map((field: AjfField) => {\n              return `declare const ${field.name}: ${this._fieldVarType(field.fieldType)};`;\n            })\n            .join('\\n');\n    } catch (e) { }\n  }\n\n  private _updateFunctions(): void {\n    try {\n      monaco.languages.typescript.javascriptDefaults._extraLibs['condition-editor-functions.d.ts'] =\n          AjfExpressionUtils.UTIL_FUNCTIONS;\n    } catch (e) { }\n  }\n\n  private _fieldVarType(fieldType: AjfFieldType): string | null {\n    switch (fieldType) {\n      case AjfFieldType.Boolean:\n      return 'boolean';\n      case AjfFieldType.Date:\n      case AjfFieldType.DateInput:\n      case AjfFieldType.Time:\n      return 'Date';\n      case AjfFieldType.Empty:\n      return 'void';\n      case AjfFieldType.Formula:\n      return 'number';\n      case AjfFieldType.MultipleChoice:\n      case AjfFieldType.SingleChoice:\n      return 'any';\n      case AjfFieldType.Number:\n      return 'number';\n      case AjfFieldType.Table:\n      return 'Array';\n      case AjfFieldType.String:\n      case AjfFieldType.Text:\n      return 'string';\n    }\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AjfField} from '@ajf/core/forms';\n\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-condition-editor-dialog',\n  templateUrl: 'condition-editor-dialog.html',\n  styleUrls: ['condition-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbConditionEditorDialog {\n  @ViewChild(AjfFbConditionEditor, {static: true}) editor: AjfFbConditionEditor;\n\n  private _fields: Observable<AjfField[]>;\n  get fields(): Observable<AjfField[]> { return this._fields; }\n\n  condition: string;\n\n  constructor(\n    service: AjfFormBuilderService,\n    public dialogRef: MatDialogRef<AjfFbConditionEditorDialog>\n  ) {\n    this._fields = service.flatFields.pipe(\n      map((fields: AjfField[]) => fields.sort((f1, f2) => f1.name.localeCompare(f2.name)))\n    );\n  }\n\n  saveCondition(): void {\n    if (this.editor == null) { return; }\n    const newValue = this.editor.editedValue;\n    this.dialogRef.close(newValue);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin, AjfForm} from '@ajf/core/forms';\nimport {AjfCondition} from '@ajf/core/models';\nimport {\n  AfterContentInit, AfterViewChecked, ChangeDetectionStrategy, Component, ElementRef, EventEmitter,\n  Input, OnDestroy, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {Observable, Subscription} from 'rxjs';\nimport {sample} from 'rxjs/operators';\n\nimport {AjfFbChoicesOriginEditorDialog} from './choices-origin-editor-dialog';\nimport {AjfFbConditionEditorDialog} from './condition-editor-dialog';\nimport {\n  AjfFormBuilderNodeEntry, AjfFormBuilderNodeTypeEntry, AjfFormBuilderService\n} from './form-builder-service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-form-builder',\n  templateUrl: 'form-builder.html',\n  styleUrls: ['form-builder.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class AjfFormBuilder implements AfterViewChecked, AfterContentInit, OnDestroy {\n  @ViewChild('designer', {static: true}) designerCont: ElementRef;\n\n  private _form: AjfForm;\n  get form(): AjfForm { return this._form; }\n  @Input() set form(form: AjfForm) {\n    if (this._form !== form) {\n      this._form = form;\n      if (this._init) {\n        this._setCurrentForm();\n      }\n    }\n  }\n\n  private _nodeTypes: AjfFormBuilderNodeTypeEntry[];\n  get nodeTypes(): AjfFormBuilderNodeTypeEntry[] { return this._nodeTypes; }\n\n  private _nodeEntriesTree: Observable<AjfFormBuilderNodeEntry[]>;\n  get nodeEntriesTree(): Observable<AjfFormBuilderNodeEntry[]> { return this._nodeEntriesTree; }\n\n  private _choicesOrigins: Observable<AjfChoicesOrigin<any>[]>;\n  get choicesOrigins(): Observable<AjfChoicesOrigin<any>[]> {\n    return this._choicesOrigins;\n  }\n\n  private _vc: EventEmitter<void> = new EventEmitter<void>();\n\n  private _init = false;\n  private _editConditionSub: Subscription = Subscription.EMPTY;\n  private _editConditionDialog: MatDialogRef<AjfFbConditionEditorDialog> | null;\n  private _beforeNodesUpdateSub: Subscription = Subscription.EMPTY;\n  private _editChoicesOriginSub: Subscription = Subscription.EMPTY;\n  private _editChoicesOriginDialog: MatDialogRef<AjfFbChoicesOriginEditorDialog> | null;\n\n  private _lastScrollTop: number;\n\n  constructor(\n    private _service: AjfFormBuilderService,\n    private _dialog: MatDialog\n  ) {\n    this._nodeTypes = _service.availableNodeTypes;\n    this._nodeEntriesTree = _service.nodeEntriesTree;\n    this._choicesOrigins = _service.choicesOrigins;\n    this._editConditionSub = this._service.editedCondition\n      .subscribe((condition: AjfCondition | null) => {\n        if (this._editConditionDialog != null) {\n          this._editConditionDialog.close();\n          this._editConditionDialog = null;\n        }\n        if (condition != null) {\n          this._editConditionDialog = this._dialog.open(\n            AjfFbConditionEditorDialog, {disableClose: true}\n          );\n        }\n      });\n    this._editChoicesOriginSub =\n        this._service.editedChoicesOrigin.subscribe((choicesOrigin: AjfChoicesOrigin<any>|null) => {\n          if (this._editChoicesOriginDialog != null) {\n            this._editChoicesOriginDialog.close();\n            this._editChoicesOriginDialog = null;\n          }\n          if (choicesOrigin != null) {\n            this._editChoicesOriginDialog =\n                this._dialog.open(AjfFbChoicesOriginEditorDialog, {disableClose: true});\n          }\n        });\n\n    this._beforeNodesUpdateSub = this._service.beforeNodesUpdate\n      .subscribe(() => {\n        if (this.designerCont == null) { return; }\n        this._lastScrollTop = this.designerCont.nativeElement.scrollTop;\n      });\n\n    this.nodeEntriesTree\n      .pipe(sample((<Observable<void>>this._vc)))\n      .subscribe(() => {\n        if (this.designerCont == null) { return; }\n        this.designerCont.nativeElement.scrollTop = this._lastScrollTop;\n      });\n  }\n\n  ngAfterViewChecked(): void {\n    this._vc.emit();\n  }\n\n  ngAfterContentInit(): void {\n    this._setCurrentForm();\n    this._init = true;\n  }\n\n  ngOnDestroy(): void {\n    this._service.setForm(null);\n    this._editConditionSub.unsubscribe();\n    this._beforeNodesUpdateSub.unsubscribe();\n    this._editChoicesOriginSub.unsubscribe();\n  }\n\n  createChoicesOrigin(): void {\n    this._service.createChoicesOrigin();\n  }\n\n  disableDropPredicate(): boolean {\n    return false;\n  }\n\n  editChoicesOrigin(choicesOrigin: AjfChoicesOrigin<any>): void {\n    this._service.editChoicesOrigin(choicesOrigin);\n  }\n\n  private _setCurrentForm(): void {\n    this._service.setForm(this._form);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {isContainerNode} from '@ajf/core/forms';\nimport {CdkDrag, CdkDragDrop, CdkDropList} from '@angular/cdk/drag-drop';\nimport {\n  AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, Input, OnDestroy, QueryList,\n  ViewChildren, ViewEncapsulation\n} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\n\nimport {AjfFbBranchLine} from './branch-line';\nimport {\n  AjfFormBuilderEmptySlot, AjfFormBuilderNode, AjfFormBuilderNodeEntry,\n  AjfFormBuilderNodeTypeEntry, AjfFormBuilderService\n} from './form-builder-service';\n\n\nconst branchColors: string [] = [\n  '#F44336', // RED\n  '#4CAF50', // GREEN\n  '#3F51B5', // INDIGO\n  '#FFC107', // AMBER\n  '#795548', // BROWN\n];\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-node-entry',\n  templateUrl: 'node-entry.html',\n  styleUrls: ['node-entry.css'],\n  host: {\n    '(window.resize)': 'onResize()'\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbNodeEntry implements AfterViewInit, OnDestroy {\n  @ViewChildren(AjfFbBranchLine) branchLines: QueryList<AjfFbBranchLine>;\n  @ViewChildren(AjfFbNodeEntry, {read: ElementRef}) childEntries: QueryList<ElementRef>;\n\n  private _hasContent = false;\n  get hasContent(): boolean { return this._hasContent; }\n\n  private _isFirst = false;\n  get isFirst(): boolean { return this._isFirst; }\n  @Input() set isFirst(isFirst: boolean) { this._isFirst = isFirst; }\n\n  private _isNodeEntry = false;\n  get isNodeEntry(): boolean { return this._isNodeEntry; }\n\n  private _nodeEntry: AjfFormBuilderNode;\n  get nodeEntry(): AjfFormBuilderNode { return this._nodeEntry; }\n  @Input() set nodeEntry(nodeEntry: AjfFormBuilderNode) {\n    this._nodeEntry = nodeEntry;\n    if (nodeEntry != null && (<AjfFormBuilderNodeEntry>nodeEntry).node !== void 0) {\n      const ne = <AjfFormBuilderNodeEntry>nodeEntry;\n      this._isNodeEntry = true;\n      const node = ne.node;\n      this._hasContent = node != null && isContainerNode(node);\n    } else {\n      this._isNodeEntry = false;\n      this._hasContent = false;\n    }\n  }\n\n  private _level = 0;\n  get level(): number { return this._level; }\n  @Input() set level(value: number) { this._level = value; }\n\n  get realNodeEntry(): AjfFormBuilderNodeEntry {\n    return this._nodeEntry as AjfFormBuilderNodeEntry;\n  }\n\n  private _branchColors: string[] = branchColors.slice(0);\n  get branchColors(): string[] { return this._branchColors; }\n\n  private _dropZones: string[] = ['fbdz-node'];\n  get dropZones(): string[] { return this._dropZones; }\n\n  private _slideDropZones: string[] = ['fbdz-slide'];\n  get slideDropZones(): string[] { return this._slideDropZones; }\n\n  private _originOffset = 0;\n  get originOffset(): number { return this._originOffset; }\n  @Input() set originOffset(originOffset: number) {\n    this._originOffset = originOffset;\n    this._originLeftMargin = `${this._originOffset * 4}px`;\n  }\n  private _originLeftMargin = '0';\n  get originLeftMargin(): string { return this._originLeftMargin; }\n\n  private _firstBranchColor = branchColors[0];\n  get firstBranchColor(): string { return this._firstBranchColor; }\n  @Input() set firstBranchColor(firstBranchColor: string) {\n    const idx = branchColors.indexOf(firstBranchColor);\n    if (idx > 0) {\n      this._firstBranchColor = firstBranchColor;\n      this._branchColors = branchColors.slice(idx).concat(branchColors.slice(0, idx));\n    } else {\n      this._firstBranchColor = branchColors[0];\n      this._branchColors = branchColors.slice(0);\n    }\n  }\n\n  private _currentEditedNode: Observable<AjfFormBuilderNodeEntry | null>;\n  get currentEditedNode(): Observable<AjfFormBuilderNodeEntry | null> {\n    return this._currentEditedNode;\n  }\n\n  private _branchLinesSubscription: Subscription = Subscription.EMPTY;\n  private _childEntriesSubscription: Subscription = Subscription.EMPTY;\n\n  constructor(private _service: AjfFormBuilderService) {\n    this._currentEditedNode = this._service.editedNodeEntry;\n  }\n\n  onResize(): void {\n  }\n\n  edit(): void {\n    if (this.nodeEntry == null || !this.isNodeEntry) { return; }\n    this._service.editNodeEntry(<AjfFormBuilderNodeEntry>this.nodeEntry);\n  }\n\n  delete(): void {\n    if (this.nodeEntry == null || !this.isNodeEntry) { return; }\n    this._service.deleteNodeEntry(<AjfFormBuilderNodeEntry>this.nodeEntry);\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this._updateBranchHeights());\n    this._childEntriesSubscription = this.childEntries.changes\n      .subscribe(() => {\n        this._updateBranchHeights();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this._branchLinesSubscription.unsubscribe();\n    this._childEntriesSubscription.unsubscribe();\n  }\n\n  onDropSuccess(evt: CdkDragDrop<AjfFormBuilderNodeTypeEntry>, content = false): void {\n    if (this._nodeEntry == null) { return; }\n    const dd = evt.item.data as AjfFormBuilderNodeTypeEntry;\n    if (dd.nodeType !== void 0 && (!this.isNodeEntry || (this.isNodeEntry && content))) {\n      const emptySlot = content ?\n        {parent: (<AjfFormBuilderNodeEntry>this.nodeEntry).node, parentNode: 0} :\n        <AjfFormBuilderEmptySlot>this._nodeEntry;\n      this._service.insertNode(\n        <AjfFormBuilderNodeTypeEntry>dd,\n        emptySlot.parent,\n        emptySlot.parentNode,\n        content\n      );\n    }\n  }\n\n  disableSlideDropPredicate(item: CdkDrag<AjfFormBuilderNodeTypeEntry>): boolean {\n    return !item.data.isSlide;\n  }\n\n  emptyAreaDropPredicate(): (item: CdkDrag, _drop: CdkDropList) => boolean {\n    return (item: CdkDrag, _drop: CdkDropList): boolean => {\n      if (this._level > 0) {\n        return !item.data.isSlide;\n      }\n      return item.data.isSlide || false;\n    };\n  }\n\n  private _updateBranchHeights(): void {\n    if (\n      this.nodeEntry == null || !this.isNodeEntry\n      || this.branchLines == null || this.childEntries == null) { return; }\n    const nodeEntry = <AjfFormBuilderNodeEntry>this.nodeEntry;\n    const branchLines: AjfFbBranchLine[] = this.branchLines.toArray();\n    const sliceIdx = nodeEntry.content != null ? nodeEntry.content.length : 0;\n    const childEntries: ElementRef[] = this.childEntries.toArray().slice(sliceIdx);\n\n    if (branchLines.length != childEntries.length) { return; }\n\n    branchLines.forEach((bl: AjfFbBranchLine, idx: number) => {\n      const ce: ElementRef  = childEntries[idx];\n      bl.height = ce.nativeElement.offsetTop;\n    });\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AjfField} from '@ajf/core/forms';\n\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-validation-condition-editor-dialog',\n  templateUrl: 'validation-condition-editor-dialog.html',\n  styleUrls: ['validation-condition-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbValidationConditionEditorDialog {\n  @ViewChild(AjfFbConditionEditor, {static: true}) editor: AjfFbConditionEditor;\n\n  private _fields: Observable<AjfField[]>;\n  get fields(): Observable<AjfField[]> { return this._fields; }\n\n  condition: string;\n  errorMessage: string;\n\n  constructor(\n    service: AjfFormBuilderService,\n    public dialogRef: MatDialogRef<AjfFbValidationConditionEditorDialog>\n  ) {\n    this._fields = service.flatFields.pipe(\n      map((fields: AjfField[]) => fields.sort((f1, f2) => f1.name.localeCompare(f2.name)))\n    );\n  }\n\n  saveCondition(): void {\n    if (this.editor == null) { return; }\n    const newValue = this.editor.editedValue;\n    this.dialogRef.close({condition: newValue, errorMessage: this.errorMessage});\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AjfField} from '@ajf/core/forms';\n\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-warning-condition-editor-dialog',\n  templateUrl: 'warning-condition-editor-dialog.html',\n  styleUrls: ['warning-condition-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbWarningConditionEditorDialog {\n  @ViewChild(AjfFbConditionEditor, {static: true}) editor: AjfFbConditionEditor;\n\n  private _fields: Observable<AjfField[]>;\n  get fields(): Observable<AjfField[]> { return this._fields; }\n\n  condition: string;\n  warningMessage: string;\n\n  constructor(\n    service: AjfFormBuilderService,\n    public dialogRef: MatDialogRef<AjfFbWarningConditionEditorDialog>\n  ) {\n    this._fields = service.flatFields.pipe(\n      map((fields: AjfField[]) => fields.sort((f1, f2) => f1.name.localeCompare(f2.name)))\n    );\n  }\n\n  saveCondition(): void {\n    if (this.editor == null) { return; }\n    const newValue = this.editor.editedValue;\n    this.dialogRef.close({condition: newValue, warningMessage: this.warningMessage});\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfChoicesOrigin, AjfField, AjfFieldWithChoices, AjfNode, AjfNumberField,\n  AjfRepeatingContainerNode, isField, isFieldWithChoices, isNumberField,\n  isRepeatingContainerNode\n} from '@ajf/core/forms';\nimport {AjfCondition, alwaysCondition, neverCondition} from '@ajf/core/models';\nimport {\n  ChangeDetectionStrategy, Component, EventEmitter, OnDestroy, ViewEncapsulation\n} from '@angular/core';\nimport {AbstractControl, FormBuilder, FormGroup, ValidatorFn, Validators} from '@angular/forms';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {Observable, Subscription} from 'rxjs';\nimport {\n  distinctUntilChanged, filter, map, publishReplay, refCount, withLatestFrom\n} from 'rxjs/operators';\n\nimport {AjfFbConditionEditorDialog} from './condition-editor-dialog';\nimport {AjfFormBuilderNodeEntry, AjfFormBuilderService} from './form-builder-service';\nimport {AjfFbValidationConditionEditorDialog} from './validation-condition-editor-dialog';\nimport {AjfFbWarningConditionEditorDialog} from './warning-condition-editor-dialog';\n\n\nfunction checkRepsValidity(c: AbstractControl): {[key: string]: any} | null {\n  const minReps = c.value.minReps;\n  const maxReps = c.value.maxReps;\n  if (minReps != null && maxReps != null && minReps > maxReps) {\n    return {\n      reps: 'Min repetions cannot be greater than max repetitions'\n    };\n  }\n  return null;\n}\n\nfunction checkValueLimitsValidity(c: AbstractControl): {[key: string]: any} | null {\n  const minValue = c.value.minValue;\n  const maxValue = c.value.maxValue;\n  if (minValue != null && maxValue != null && minValue > maxValue) {\n    return {\n      valueLimit: 'Min value cannot be greater than max value'\n    };\n  }\n  return null;\n}\n\nfunction checkDigitsValidity(c: AbstractControl): {[key: string]: any} | null {\n  const minDigits = c.value.minDigits;\n  const maxDigits = c.value.maxDigits;\n  if (minDigits != null && maxDigits != null && minDigits > maxDigits) {\n    return {\n      digits: 'Min digits cannot be greater than max digits'\n    };\n  }\n  return null;\n}\n\nexport interface ValidationCondition {\n  condition: string;\n  errorMessage: string;\n}\n\nexport interface WarningCondition {\n  condition: string;\n  warningMessage: string;\n}\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-node-properties',\n  templateUrl: 'node-properties.html',\n  styleUrls: ['node-properties.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbNodeProperties implements OnDestroy {\n  private _fieldSizes: {label: string, value: string}[] = [\n    {label: 'Normal', value: 'normal'},\n    {label: 'Small', value: 'small'},\n    {label: 'Smaller', value: 'smaller'},\n    {label: 'Tiny', value: 'tiny'},\n    {label: 'Mini', value: 'mini'}\n  ];\n  get fieldSizes(): {label: string, value: string}[] { return this._fieldSizes; }\n\n  private _nodeEntry: Observable<AjfFormBuilderNodeEntry | null>;\n  get nodeEntry(): Observable<AjfFormBuilderNodeEntry | null> { return this._nodeEntry; }\n\n  private _choicesOrigins: AjfChoicesOrigin<any>[] = [];\n  get choicesOrigins(): AjfChoicesOrigin<any>[] {\n    return this._choicesOrigins;\n  }\n\n  private _enabled: Observable<boolean>;\n  get enabled(): Observable<boolean> { return this._enabled; }\n\n  private _propertiesForm: Observable<FormGroup>;\n  get propertiesForm(): Observable<FormGroup> { return this._propertiesForm; }\n\n  private _hasChoices: Observable<boolean>;\n  get hasChoices(): Observable<boolean> { return this._hasChoices; }\n\n  private _curVisibility: string | null;\n  get curVisibility(): string | null { return this._curVisibility; }\n\n  private _curFormulaReps: string | null;\n  get curFormulaReps(): string | null { return this._curFormulaReps; }\n\n  private _curChoicesFilter: string;\n  get curChoicesFilter(): string { return this._curChoicesFilter; }\n\n  private _curForceValue: string | null;\n  get curForceValue(): string | null { return this._curForceValue; }\n\n  private _curFormula: string | null;\n  get curFormula(): string | null { return this._curFormula; }\n\n  private _conditionalBranches: string[] = [];\n  get conditionalBranches(): string[] { return this._conditionalBranches; }\n\n  private _validationConditions: ValidationCondition[] = [];\n  get validationConditions(): ValidationCondition[] { return this._validationConditions; }\n\n  private _warningConditions: WarningCondition[] = [];\n  get warningConditions(): WarningCondition[] { return this._warningConditions; }\n\n  private _nextSlideCondition: string;\n  get nextSlideCondition(): string { return this._nextSlideCondition; }\n\n  private _triggerConditions: string[];\n  get triggerConditions(): string[] { return this._triggerConditions; }\n\n  isRepeatingContainerNode: (node: AjfNode) => boolean = isRepeatingContainerNode;\n\n  private _visibilitySub: Subscription = Subscription.EMPTY;\n  private _conditionalBranchesSub = Subscription.EMPTY;\n  private _formulaRepsSub = Subscription.EMPTY;\n  private _choicesFilterSub = Subscription.EMPTY;\n  private _formulaSub = Subscription.EMPTY;\n  private _forceValueSub = Subscription.EMPTY;\n  private _validationConditionsSub = Subscription.EMPTY;\n  private _warningConditionsSub = Subscription.EMPTY;\n  private _nextSlideConditionSub = Subscription.EMPTY;\n  private _choicesOriginsSub = Subscription.EMPTY;\n  private _triggerConditionsSub = Subscription.EMPTY;\n\n  private _editConditionDialog: MatDialogRef<AjfFbConditionEditorDialog> | null;\n  private _editConditionDialogSub: Subscription = Subscription.EMPTY;\n  private _editValidationConditionDialog: MatDialogRef<AjfFbValidationConditionEditorDialog> | null;\n  private _editValidationConditionDialogSub: Subscription = Subscription.EMPTY;\n  private _editWarningConditionDialog: MatDialogRef<AjfFbWarningConditionEditorDialog> | null;\n  private _editWarningConditionDialogSub: Subscription = Subscription.EMPTY;\n\n  private _editVisibilityEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editVisibilitySub = Subscription.EMPTY;\n\n  private _editConditionalBranchEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editConditionalBranchSub = Subscription.EMPTY;\n\n  private _editFormulaRepsEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editFormulaRepsSub = Subscription.EMPTY;\n\n  private _editChoicesFilterEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editChoicesFilterSub = Subscription.EMPTY;\n\n  private _editFormulaEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editFormulaSub = Subscription.EMPTY;\n\n  private _editForceValueEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editForceValueSub = Subscription.EMPTY;\n\n  private _editValidationConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editValidationConditionSub = Subscription.EMPTY;\n\n  private _addValidationConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _addValidationConditionSub = Subscription.EMPTY;\n\n  private _removeValidationConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _removeValidationConditionSub = Subscription.EMPTY;\n\n  private _editWarningConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editWarningConditionSub = Subscription.EMPTY;\n\n  private _addWarningConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _addWarningConditionSub = Subscription.EMPTY;\n\n  private _removeWarningConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _removeWarningConditionSub = Subscription.EMPTY;\n\n  private _editNextSlideConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editNextSlideConditionSub = Subscription.EMPTY;\n\n  private _editTriggerConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editTriggerConditionSub = Subscription.EMPTY;\n\n  private _addTriggerConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _addTriggerConditionSub = Subscription.EMPTY;\n\n  private _removeTriggerConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _removeTriggerConditionSub = Subscription.EMPTY;\n\n  private _saveEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _saveSub = Subscription.EMPTY;\n\n  constructor(\n    private _service: AjfFormBuilderService,\n    private _dialog: MatDialog,\n    private _fb: FormBuilder\n  ) {\n    this._nodeEntry = _service.editedNodeEntry;\n    this._choicesOriginsSub = _service.choicesOrigins\n      .subscribe((c) => this._choicesOrigins = c || []);\n\n    this._enabled = this._nodeEntry.pipe(map((n) => n != null));\n\n    this._initForm();\n    this._initVisibilityEdit();\n    this._initConditionalBranchEdit();\n    this._initFormulaRepsEdit();\n    this._initChoicesFilterEdit();\n    this._initFormulaEdit();\n    this._initForceValueEdit();\n    this._initValidationConditionEdit();\n    this._initAddValidationCondition();\n    this._initRemoveValidationCondition();\n    this._initWarningConditionEdit();\n    this._initAddWarningCondition();\n    this._initRemoveWarningCondition();\n    this._initNextSlideConditionEdit();\n    this._initTriggerConditionEdit();\n    this._initAddTriggerCondition();\n    this._initRemoveTriggerCondition();\n    this._initSave();\n  }\n\n  editVisibility(): void {\n    this._editVisibilityEvt.emit();\n  }\n\n  editConditionalBranch(idx: number): void {\n    if (idx < 0 || idx >= this._conditionalBranches.length) { return; }\n    this._editConditionalBranchEvt.emit(idx);\n  }\n\n  editFormulaReps(): void {\n    this._editFormulaRepsEvt.emit();\n  }\n\n  editChoicesFilter(): void {\n    this._editChoicesFilterEvt.emit();\n  }\n\n  editFormula(): void {\n    this._editFormulaEvt.emit();\n  }\n\n  editForceValue(): void {\n    this._editForceValueEvt.emit();\n  }\n\n  editValidationCondition(idx: number): void {\n    if (idx < 0 || idx >= this._validationConditions.length) { return; }\n    this._editValidationConditionEvt.emit(idx);\n  }\n\n  addValidationCondition(): void {\n    this._addValidationConditionEvt.emit();\n  }\n\n  removeValidationCondition(idx: number): void {\n    if (idx < 0 || idx >= this._validationConditions.length) { return; }\n    this._removeValidationConditionEvt.emit(idx);\n  }\n\n  editWarningCondition(idx: number): void {\n    if (idx < 0 || idx >= this._warningConditions.length) { return; }\n    this._editWarningConditionEvt.emit(idx);\n  }\n\n  addWarningCondition(): void {\n    this._addWarningConditionEvt.emit();\n  }\n\n  removeWarningCondition(idx: number): void {\n    if (idx < 0 || idx >= this._warningConditions.length) { return; }\n    this._removeWarningConditionEvt.emit(idx);\n  }\n\n  editNextSlideCondition(): void {\n    this._editNextSlideConditionEvt.emit();\n  }\n\n  editTriggerCondition(idx: number): void {\n    if (idx < 0 || idx >= this._triggerConditions.length) { return; }\n    this._editTriggerConditionEvt.emit(idx);\n  }\n\n  addTriggerCondition(): void {\n    this._addTriggerConditionEvt.emit();\n  }\n\n  removeTriggerCondition(idx: number): void {\n    if (idx < 0 || idx >= this._triggerConditions.length) { return; }\n    this._removeTriggerConditionEvt.emit(idx);\n  }\n\n  isField(node: AjfNode): boolean {\n    return isField(node);\n  }\n\n  isNumericField(node: AjfNode): boolean {\n    return isField(node) && isNumberField(node as AjfField);\n  }\n\n  isFieldWithChoices(node: AjfNode): boolean {\n    return isField(node) && isFieldWithChoices(node as AjfField);\n  }\n\n  save(): void {\n    this._saveEvt.emit();\n  }\n\n  cancel(): void {\n    this._service.cancelNodeEntryEdit();\n  }\n\n  ngOnDestroy(): void {\n    this._choicesOriginsSub.unsubscribe();\n\n    this._visibilitySub.unsubscribe();\n    this._formulaRepsSub.unsubscribe();\n    this._choicesFilterSub.unsubscribe();\n    this._formulaSub.unsubscribe();\n    this._forceValueSub.unsubscribe();\n    this._validationConditionsSub.unsubscribe();\n    this._warningConditionsSub.unsubscribe();\n    this._triggerConditionsSub.unsubscribe();\n\n    this._editConditionDialogSub.unsubscribe();\n    this._editValidationConditionDialogSub.unsubscribe();\n    this._editWarningConditionDialogSub.unsubscribe();\n\n    this._editChoicesFilterSub.unsubscribe();\n    this._editConditionalBranchSub.unsubscribe();\n    this._editVisibilitySub.unsubscribe();\n    this._editFormulaRepsSub.unsubscribe();\n    this._editFormulaSub.unsubscribe();\n    this._editForceValueSub.unsubscribe();\n    this._editValidationConditionSub.unsubscribe();\n    this._editWarningConditionSub.unsubscribe();\n    this._nextSlideConditionSub.unsubscribe();\n\n    this._addTriggerConditionSub.unsubscribe();\n    this._addValidationConditionSub.unsubscribe();\n    this._addWarningConditionSub.unsubscribe();\n    this._editNextSlideConditionSub.unsubscribe();\n    this._editTriggerConditionSub.unsubscribe();\n    this._removeTriggerConditionSub.unsubscribe();\n    this._removeValidationConditionSub.unsubscribe();\n    this._removeWarningConditionSub.unsubscribe();\n\n    this._saveSub.unsubscribe();\n  }\n\n  private _initSave(): void {\n    this._saveSub = (<Observable<void>>this._saveEvt)\n      .pipe(withLatestFrom(this.propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        const fg = r[1];\n        const val = {...fg.value,\n          conditionalBranches: this._conditionalBranches\n        };\n        this._service.saveNodeEntry(val);\n      });\n  }\n\n  private _initForm(): void {\n    this._propertiesForm = this._nodeEntry.pipe(\n      filter((n) => n != null),\n      map((n) => {\n        if (this._visibilitySub != null) { this._visibilitySub.unsubscribe(); }\n        if (this._conditionalBranchesSub != null) { this._conditionalBranchesSub.unsubscribe(); }\n        n = n!;\n\n        const visibility = n.node.visibility != null ?\n          n.node.visibility.condition : null;\n        const visibilityOpt = n.node.visibility != null ?\n          this._guessVisibilityOpt(n.node.visibility) : null;\n        let controls: any = {\n          name: [n.node.name, Validators.required],\n          label: n.node.label,\n          visibilityOpt: [visibilityOpt, Validators.required],\n          visibility: [visibility, Validators.required],\n          conditionalBranchesNum: n.node.conditionalBranches.length\n        };\n        const validators: ValidatorFn[] = [];\n\n        if (isRepeatingContainerNode(n.node)) {\n          const rn = <AjfRepeatingContainerNode>n.node;\n\n          const formulaReps = rn.formulaReps != null ? rn.formulaReps.formula : null;\n\n          controls.formulaReps = [formulaReps, Validators.required];\n          controls.minReps = rn.minReps;\n          controls.maxReps = rn.maxReps;\n\n          this._curFormulaReps = formulaReps;\n\n          validators.push(checkRepsValidity);\n        }\n\n        if (this.isField(n.node)) {\n          const field = <AjfField>n.node;\n\n          let forceValue: string | null = null;\n          let notEmpty: boolean = false;\n          let validationConditions: ValidationCondition[] = [];\n          if (field.validation != null) {\n            if (field.validation.forceValue != null) {\n              forceValue = field.validation.forceValue.condition;\n            }\n            notEmpty = field.validation.notEmpty != null;\n            validationConditions = (field.validation.conditions || [])\n              .map(c => {\n                return {\n                  condition: c.condition,\n                  errorMessage: c.errorMessage\n                };\n              });\n          }\n\n          let notEmptyW: boolean = false;\n          let warningConditions: WarningCondition[] = [];\n          if (field.warning != null) {\n            notEmptyW = field.warning.notEmpty != null;\n            warningConditions = (field.warning.conditions || [])\n              .map(w => {\n                return {\n                  condition: w.condition,\n                  warningMessage: w.warningMessage\n                };\n              });\n          }\n          const formula = field.formula != null ? field.formula.formula : null;\n\n          controls.description = field.description;\n          controls.defaultValue = field.defaultValue;\n          controls.size = field.size;\n          controls.formula = formula;\n          controls.forceValue = forceValue;\n          controls.notEmpty = notEmpty;\n          controls.validationConditions = [validationConditions, []];\n          controls.notEmptyWarning = notEmptyW;\n          controls.warningConditions = [warningConditions, []];\n          controls.nextSlideCondition = [field.nextSlideCondition];\n\n          this._curForceValue = forceValue;\n          this._curFormula = formula;\n          this._validationConditions = validationConditions;\n          this._warningConditions = warningConditions;\n        }\n\n        if (this.isNumericField(n.node)) {\n          const numField = <AjfNumberField>n.node;\n\n          let minValue: any;\n          let maxValue: any;\n          let minDigits: any;\n          let maxDigits: any;\n          if (numField.validation != null) {\n            if (numField.validation.minValue != null) {\n              minValue = (numField.validation.minValue.condition || '').replace('$value >= ', '');\n            }\n            if (numField.validation.maxValue != null) {\n              maxValue = (numField.validation.maxValue.condition || '').replace('$value <= ', '');\n            }\n            if (numField.validation.minDigits != null) {\n              minDigits = (numField.validation.minDigits.condition || '')\n                .replace('$value.toString().length >= ', '');\n            }\n            if (numField.validation.maxDigits != null) {\n              maxDigits = (numField.validation.maxDigits.condition || '')\n                .replace('$value.toString().length <= ', '');\n            }\n          }\n\n          controls.minValue = minValue;\n          controls.maxValue = maxValue;\n          controls.minDigits = minDigits;\n          controls.maxDigits = maxDigits;\n\n          validators.push(checkValueLimitsValidity);\n          validators.push(checkDigitsValidity);\n        }\n\n        if (this.isFieldWithChoices(n.node)) {\n          const fieldWithChoices = <AjfFieldWithChoices<any>>n.node;\n\n          let triggerConditions: string[] = (fieldWithChoices.triggerConditions || [])\n            .map((c) => c.condition);\n\n          controls.choicesOrigin = fieldWithChoices.choicesOrigin.name;\n          controls.choicesFilter = fieldWithChoices.choicesFilter != null ?\n            fieldWithChoices.choicesFilter.formula : null;\n          controls.forceExpanded = fieldWithChoices.forceExpanded;\n          controls.forceNarrow = fieldWithChoices.forceNarrow;\n          controls.triggerConditions = triggerConditions;\n\n          this._triggerConditions = triggerConditions;\n        }\n\n        const fg = this._fb.group(controls);\n        fg.setValidators(validators);\n\n        this._conditionalBranches = n.node.conditionalBranches.map(c => c.condition);\n        this._curVisibility = n.node.visibility != null ? n.node.visibility.condition : null;\n\n        this._handleConditionalBranchesChange(fg);\n        this._handleVisibilityChange(fg);\n        this._handleFormulaRepsChange(fg);\n        this._handleChoicesFilterChange(fg);\n        this._handleFormulaChange(fg);\n        this._handleForceValueChange(fg);\n        this._handleValidationCondtionsChange(fg);\n        this._handleWarningCondtionsChange(fg);\n        this._handleNextSlideConditionChange(fg);\n        this._handleTriggerCondtionsChange(fg);\n\n        return fg;\n      }),\n      publishReplay(1),\n      refCount()\n    );\n  }\n\n  private _destroyConditionDialog(): void {\n    if (this._editConditionDialogSub != null) {\n      this._editConditionDialogSub.unsubscribe();\n      this._editConditionDialogSub = Subscription.EMPTY;\n    }\n    if (this._editConditionDialog != null) {\n      this._editConditionDialog.close();\n      this._editConditionDialog = null;\n    }\n  }\n\n  private _destroyValidationConditionDialog(): void {\n    if (this._editValidationConditionDialogSub != null) {\n      this._editValidationConditionDialogSub.unsubscribe();\n      this._editValidationConditionDialogSub = Subscription.EMPTY;\n    }\n    if (this._editValidationConditionDialog != null) {\n      this._editValidationConditionDialog.close();\n      this._editValidationConditionDialog = null;\n    }\n  }\n\n  private _destroyWarningConditionDialog(): void {\n    if (this._editWarningConditionDialogSub != null) {\n      this._editWarningConditionDialogSub.unsubscribe();\n      this._editWarningConditionDialogSub = Subscription.EMPTY;\n    }\n    if (this._editWarningConditionDialog != null) {\n      this._editWarningConditionDialog.close();\n      this._editWarningConditionDialog = null;\n    }\n  }\n\n  private _initRemoveTriggerCondition(): void {\n    this._removeTriggerConditionSub = (<Observable<number>>this._removeTriggerConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['triggerConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        if (vcIdx < 0 || vcIdx >= vcs.length) { return; }\n        vcs.splice(vcIdx, 1);\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initAddTriggerCondition(): void {\n    this._addTriggerConditionSub = (<Observable<void>>this._addTriggerConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['triggerConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        vcs.push('');\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initTriggerConditionEdit(): void {\n    this._editTriggerConditionSub = (<Observable<number>>this._editTriggerConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        this._destroyConditionDialog();\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (vcIdx < 0 || vcIdx >= this._triggerConditions.length || fg == null) { return; }\n        this._editConditionDialog = this._dialog\n          .open(AjfFbConditionEditorDialog);\n        const cmp = this._editConditionDialog.componentInstance;\n        cmp.condition = this._triggerConditions[vcIdx];\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              this._triggerConditions[vcIdx] = cond;\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initRemoveWarningCondition(): void {\n    this._removeWarningConditionSub = (<Observable<number>>this._removeWarningConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['warningConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        if (vcIdx < 0 || vcIdx >= vcs.length) { return; }\n        vcs.splice(vcIdx, 1);\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initAddWarningCondition(): void {\n    this._addWarningConditionSub = (<Observable<void>>this._addWarningConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['warningConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        vcs.push({condition: '', errorMessage: ''});\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initWarningConditionEdit(): void {\n    this._editWarningConditionSub = (<Observable<number>>this._editWarningConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        this._destroyWarningConditionDialog();\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (vcIdx < 0 || vcIdx >= this._warningConditions.length || fg == null) { return; }\n        this._editWarningConditionDialog = this._dialog\n          .open(AjfFbWarningConditionEditorDialog);\n        const cmp = this._editWarningConditionDialog.componentInstance;\n        const w = this._warningConditions[vcIdx];\n        cmp.condition = w.condition;\n        cmp.warningMessage = w.warningMessage;\n        this._editWarningConditionDialogSub = this._editWarningConditionDialog.afterClosed()\n          .subscribe((cond: WarningCondition) => {\n            if (cond !== void 0) {\n              this._warningConditions[vcIdx] = cond;\n            }\n            this._editWarningConditionDialogSub.unsubscribe();\n            this._editWarningConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initRemoveValidationCondition(): void {\n    this._removeValidationConditionSub = (<Observable<number>>this._removeValidationConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['validationConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        if (vcIdx < 0 || vcIdx >= vcs.length) { return; }\n        vcs.splice(vcIdx, 1);\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initAddValidationCondition(): void {\n    this._addValidationConditionSub = (<Observable<void>>this._addValidationConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['validationConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        vcs.push({condition: '', errorMessage: ''});\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initValidationConditionEdit(): void {\n    this._editValidationConditionSub = (<Observable<number>>this._editValidationConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        this._destroyValidationConditionDialog();\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (vcIdx < 0 || vcIdx >= this._validationConditions.length || fg == null) { return; }\n        this._editValidationConditionDialog = this._dialog\n          .open(AjfFbValidationConditionEditorDialog);\n        const cmp = this._editValidationConditionDialog.componentInstance;\n        const v = this._validationConditions[vcIdx];\n        cmp.condition = v.condition;\n        cmp.errorMessage = v.errorMessage;\n        this._editValidationConditionDialogSub = this._editValidationConditionDialog.afterClosed()\n          .subscribe((cond: ValidationCondition) => {\n            if (cond !== void 0) {\n              this._validationConditions[vcIdx] = cond;\n            }\n            this._editValidationConditionDialogSub.unsubscribe();\n            this._editValidationConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initForceValueEdit(): void {\n    this._editForceValueSub = (<Observable<void>>this._editForceValueEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['forceValue'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initNextSlideConditionEdit(): void {\n    this._editNextSlideConditionSub = (<Observable<void>>this._editNextSlideConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['nextSlideCondition'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initFormulaEdit(): void {\n    this._editFormulaSub = (<Observable<void>>this._editFormulaEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['formula'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initFormulaRepsEdit(): void {\n    this._editFormulaRepsSub = (<Observable<void>>this._editFormulaRepsEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['formulaReps'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initChoicesFilterEdit(): void {\n    this._editChoicesFilterSub = (<Observable<void>>this._editChoicesFilterEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['choicesFilter'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initConditionalBranchEdit(): void {\n    this._editConditionalBranchSub = (<Observable<number>>this._editConditionalBranchEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        this._destroyConditionDialog();\n        const cbIdx = r[0];\n        const fg = r[1];\n        if (cbIdx < 0 || cbIdx >= this._conditionalBranches.length || fg == null) { return; }\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = this._conditionalBranches[cbIdx];\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              this._conditionalBranches[cbIdx] = cond;\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initVisibilityEdit(): void {\n    this._editVisibilitySub = (<Observable<void>>this._editVisibilityEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['visibility'];\n        const condition = ctrl.value;\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = condition;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _handleTriggerCondtionsChange(fg: FormGroup): void {\n    this._triggerConditionsSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) =>\n        JSON.stringify(v1.triggerConditions) === JSON.stringify(v2.triggerConditions)))\n      .subscribe((v: any) => {\n        this._triggerConditions = v.triggerConditions;\n      });\n  }\n\n  private _handleWarningCondtionsChange(fg: FormGroup): void {\n    this._warningConditionsSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) =>\n        JSON.stringify(v1.warningConditions) === JSON.stringify(v2.warningConditions)))\n      .subscribe((v: any) => {\n        this._warningConditions = v.warningConditions;\n      });\n  }\n\n  private _handleValidationCondtionsChange(fg: FormGroup): void {\n    this._validationConditionsSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) =>\n        JSON.stringify(v1.validationConditions) === JSON.stringify(v2.validationConditions)))\n      .subscribe((v: any) => {\n        this._validationConditions = v.validationConditions;\n      });\n  }\n\n  private _handleForceValueChange(fg: FormGroup): void {\n    this._forceValueSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.forceValue === v2.forceValue))\n      .subscribe((v: any) => {\n        this._curForceValue = v.forceValue;\n      });\n  }\n\n  private _handleNextSlideConditionChange(fg: FormGroup): void {\n    this._formulaSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.nextSlideCondition === v2.nextSlideCondition))\n      .subscribe((v: any) => {\n        this._nextSlideCondition = v.nextSlideCondition;\n      });\n  }\n\n  private _handleFormulaChange(fg: FormGroup): void {\n    this._formulaSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.formula === v2.formula))\n      .subscribe((v: any) => {\n        this._curFormula = v.formula;\n      });\n  }\n\n  private _handleFormulaRepsChange(fg: FormGroup): void {\n    this._formulaRepsSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.formulaReps === v2.formulaReps))\n      .subscribe((v: any) => {\n        this._curFormulaReps = v.formulaReps;\n      });\n  }\n\n  private _handleChoicesFilterChange(fg: FormGroup): void {\n    this._choicesFilterSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.choicesFilter === v2.choicesFilter))\n      .subscribe((v: any) => {\n        this._curChoicesFilter = v.choicesFilter;\n      });\n  }\n\n  private _handleConditionalBranchesChange(fg: FormGroup): void {\n    this._conditionalBranchesSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) =>\n          v1.conditionalBranchesNum === v2.conditionalBranchesNum))\n      .subscribe((v: any) => {\n        const cbNum: number = v.conditionalBranchesNum;\n        const curCbNum = this._conditionalBranches.length;\n        if (curCbNum < cbNum) {\n          let newCbs: string[] = [];\n          for (let i = curCbNum ; i < cbNum ; i++) {\n            newCbs.push(alwaysCondition().condition);\n          }\n          this._conditionalBranches = this._conditionalBranches.concat(newCbs);\n        } else if (curCbNum > cbNum) {\n          this._conditionalBranches.splice(0, curCbNum - cbNum);\n        }\n      });\n  }\n\n  private _handleVisibilityChange(fg: FormGroup): void {\n    this._visibilitySub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.visibilityOpt === v2.visibilityOpt))\n      .subscribe((v) => {\n        const visibilityOpt = v.visibilityOpt;\n        let newCondition: string | null;\n        switch (visibilityOpt) {\n          case 'always':\n            newCondition = alwaysCondition().condition;\n            break;\n          case 'never':\n            newCondition = neverCondition().condition;\n            break;\n          default:\n          newCondition = null;\n        }\n        this._curVisibility = newCondition;\n        fg.controls['visibility'].setValue(newCondition);\n      });\n  }\n\n  private _guessVisibilityOpt(condition: AjfCondition): string {\n    if (condition.condition.localeCompare(alwaysCondition().condition) === 0) {\n      return 'always';\n    }\n    if (condition.condition.localeCompare(neverCondition().condition) === 0) {\n      return 'never';\n    }\n    return 'condition';\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation\n} from '@angular/core';\n\nimport {AjfFormBuilderNodeTypeEntry} from './form-builder-service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-fb-node-type-entry',\n  templateUrl: 'node-type-entry.html',\n  styleUrls: ['node-type-entry.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbNodeTypeEntry {\n  private _nodeType: AjfFormBuilderNodeTypeEntry;\n  get nodeType(): AjfFormBuilderNodeTypeEntry { return this._nodeType; }\n  @Input()\n  set nodeType(nodeType: AjfFormBuilderNodeTypeEntry) {\n    this._nodeType = nodeType;\n    this._cdr.markForCheck();\n  }\n\n  constructor(private _cdr: ChangeDetectorRef) { }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\nimport {TranslateModule} from '@ngx-translate/core';\n\nimport {AjfMonacoEditorModule} from '@ajf/material/monaco-editor';\nimport {AjfNodeIconModule} from '@ajf/material/node-icon';\n\nimport {AjfFbBranchLine} from './branch-line';\nimport {AjfFbChoicesOriginEditorDialog} from './choices-origin-editor-dialog';\nimport {AjfFbChoicesOriginEditor} from './choices-origin-editor';\nimport {AjfFbConditionEditorDialog} from './condition-editor-dialog';\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilder} from './form-builder';\nimport {AjfFormBuilderService} from './form-builder-service';\nimport {AjfFbNodeEntry} from './node-entry';\nimport {AjfFbNodeProperties} from './node-properties';\nimport {AjfFbNodeTypeEntry} from './node-type-entry';\nimport {AjfFbValidationConditionEditorDialog} from './validation-condition-editor-dialog';\nimport {AjfFbWarningConditionEditorDialog} from './warning-condition-editor-dialog';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DragDropModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatTableModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    TranslateModule,\n    AjfMonacoEditorModule,\n    AjfNodeIconModule,\n  ],\n  declarations: [\n    AjfFbBranchLine,\n    AjfFbChoicesOriginEditorDialog,\n    AjfFbChoicesOriginEditor,\n    AjfFbConditionEditorDialog,\n    AjfFbConditionEditor,\n    AjfFbNodeEntry,\n    AjfFbNodeProperties,\n    AjfFbNodeTypeEntry,\n    AjfFbValidationConditionEditorDialog,\n    AjfFbWarningConditionEditorDialog,\n    AjfFormBuilder,\n  ],\n  exports: [\n    AjfFormBuilder,\n  ],\n  entryComponents: [\n    AjfFbChoicesOriginEditorDialog,\n    AjfFbConditionEditorDialog,\n    AjfFbValidationConditionEditorDialog,\n    AjfFbWarningConditionEditorDialog,\n  ],\n  providers: [\n    AjfFormBuilderService\n  ]\n})\nexport class AjfFormBuilderModule { }\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","AjfFbBranchLine","defineProperty","offset","_offset","_updateOffset","color","_color","_updateColor","height","_height","_updateHeight","Math","max","_renderer","setStyle","_el","nativeElement","margin","type","Component","args","selector","template","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","propDecorators","Input","_super","ChoicesOriginDataSource","DataSource","create","__","connect","_choicesObs","disconnect","updateChoices","choices","_choices","next","constructor","_this","BehaviorSubject","asObservable","AjfFbChoicesOriginEditor","_displayedColumns","_choicesOrigin","choicesOrigin","name","label","canEditChoices","isChoicesFixedOrigin","_choicesArr","updateValue","evt","cell","_value","rowIdx","editing","target","value","deleteRow","splice","addRow","push","getNodeContainer","c","node","nodes","indexOf","cns","filter","isContainerNode","len","cn","buildFormBuilderNodesSubtree","parent","ignoreConditionalBranches","entries","id","sort","n1","n2","parentNode","map","children","content","buildFormBuilderNodesContent","entriesNum","cbs","conditionalBranches","_nodes","flattenNodes","flatNodes","forEach","concat","getDescendants","branch","deleteNodeSubtree","delNodes","descendants","removeNodes","ids","container","nodeUniqueId","AjfFormBuilderService","_availableNodeTypes","_formObs","_attachmentsOrigins","_choicesOrigins","_flatNodes","_flatFields","_nodeEntriesTree","_editedNodeEntryObs","_editedConditionObs","_editedChoicesOriginObs","_beforeNodesUpdateObs","_afterNodeUpdateObs","setForm","form","_form","getValue","editNodeEntry","nodeEntry","_editedNodeEntry","editCondition","condition","_editedCondition","saveCurrentCondition","cancelConditionEdit","_editedChoicesOrigin","insertNode","nodeType","inContent","isFieldNode","field","createField","AjfNodeType","AjfField","fieldType","createContainerNode","_beforeNodesUpdate","emit","_nodesUpdates","replaceNodes","newNodes","slice","saveNodeEntry","properties","_saveNodeEntryEvent","cancelNodeEntryEdit","deleteNodeEntry","_deleteNodeEntryEvent","getCurrentForm","combineLatest","attachmentsOrigins","choicesOrigins","pipe","_a","createForm","stringIdentifier","supplementaryInformations","editChoicesOrigin","createChoicesOrigin","createChoicesFixedOrigin","cancelChoicesOriginEdit","saveChoicesOrigin","params","_findMaxNodeId","_curMaxId","maxId","_initFormStreams","subscribe","_attachmentsOriginsUpdates","_choicesOriginsUpdates","_initChoicesOriginsStreams","scan","op","publishReplay","refCount","_initAttachmentsOriginsStreams","_initNodesStreams","rootNodes","rootNode","isSlidesNode","tree","Error","_initSaveNode","withLatestFrom","editedNodeEntry","r","origNode","deepCopy","visibility","createCondition","oldConditionalBranches","alwaysCondition","newConditionalBranches","isRepeatingContainerNode","repNode","formulaReps","createFormula","formula","undefined","minReps","maxReps","isField","description","defaultValue","forceValue","notEmpty","validationConditions","minValue","parseInt","maxValue","minDigits","maxDigits","isNaN","validation","createValidationGroup","notEmptyValidation","minValidation","maxValidation","minDigitsValidation","maxDigitsValidation","conditions","createValidation","errorMessage","notEmptyWarn","notEmptyWarning","warningConditions","warning","createWarningGroup","w","createWarning","warningMessage","nextSlideCondition","isFieldWithChoices","fwc","coIdx","coNum","forceExpanded","forceNarrow","triggerConditions","idx","_initDeleteNode","Injectable","icon","fontSet","fontIcon","AjfSlide","isSlide","AjfRepeatingSlide","AjfFieldType","String","Text","Number","Boolean","SingleChoice","MultipleChoice","Formula","Date","DateInput","Time","Table","EventEmitter","_afterNodeUpdate","Subject","AjfFbChoicesOriginEditorDialog","_service","editor","choicesArr","editedChoicesOrigin","AjfFbConditionEditor","_fields","fields","_updateVariables","insertVariable","variable","monacoEditor","split","position","getPosition","ln","lineNumber","line","col","column","substring","join","setPosition","focus","editedValue","onEditorInit","monaco","languages","typescript","javascriptDefaults","setDiagnosticsOptions","noSemanticValidation","noSyntaxValidation","setCompilerOptions","ScriptTarget","ES2015","allowNonTsExtensions","allowJs","module","ModuleKind","addExtraLib","e","_extraLibs","_updateFunctions","_fieldVarType","AjfExpressionUtils","UTIL_FUNCTIONS","Empty","_","AjfFbConditionEditorDialog","saveCondition","newValue","dialogRef","close","service","flatFields","f1","f2","localeCompare","AjfFormBuilder","_init","_setCurrentForm","_nodeTypes","ngAfterViewChecked","_vc","ngAfterContentInit","ngOnDestroy","_editConditionSub","unsubscribe","_beforeNodesUpdateSub","_editChoicesOriginSub","disableDropPredicate","_dialog","Subscription","EMPTY","availableNodeTypes","nodeEntriesTree","editedCondition","_editConditionDialog","open","disableClose","_editChoicesOriginDialog","beforeNodesUpdate","designerCont","_lastScrollTop","scrollTop","sample","branchColors","AjfFbNodeEntry","_hasContent","_isFirst","isFirst","_isNodeEntry","_nodeEntry","ne","_level","_branchColors","_dropZones","_slideDropZones","_originOffset","originOffset","_originLeftMargin","_firstBranchColor","firstBranchColor","_currentEditedNode","onResize","edit","isNodeEntry","delete","ngAfterViewInit","setTimeout","_updateBranchHeights","_childEntriesSubscription","childEntries","changes","_branchLinesSubscription","onDropSuccess","dd","item","emptySlot","disableSlideDropPredicate","data","emptyAreaDropPredicate","_drop","branchLines","toArray","sliceIdx","bl","ce","offsetTop","host","(window.resize)","level","AjfFbValidationConditionEditorDialog","AjfFbWarningConditionEditorDialog","checkRepsValidity","reps","checkValueLimitsValidity","valueLimit","checkDigitsValidity","digits","AjfFbNodeProperties","_fieldSizes","_enabled","_propertiesForm","_hasChoices","_curVisibility","_curFormulaReps","_curChoicesFilter","_curForceValue","_curFormula","_conditionalBranches","_validationConditions","_warningConditions","_nextSlideCondition","_triggerConditions","editVisibility","_editVisibilityEvt","editConditionalBranch","_editConditionalBranchEvt","editFormulaReps","_editFormulaRepsEvt","editChoicesFilter","_editChoicesFilterEvt","editFormula","_editFormulaEvt","editForceValue","_editForceValueEvt","editValidationCondition","_editValidationConditionEvt","addValidationCondition","_addValidationConditionEvt","removeValidationCondition","_removeValidationConditionEvt","editWarningCondition","_editWarningConditionEvt","addWarningCondition","_addWarningConditionEvt","removeWarningCondition","_removeWarningConditionEvt","editNextSlideCondition","_editNextSlideConditionEvt","editTriggerCondition","_editTriggerConditionEvt","addTriggerCondition","_addTriggerConditionEvt","removeTriggerCondition","_removeTriggerConditionEvt","isNumericField","isNumberField","save","_saveEvt","cancel","_choicesOriginsSub","_visibilitySub","_formulaRepsSub","_choicesFilterSub","_formulaSub","_forceValueSub","_validationConditionsSub","_warningConditionsSub","_triggerConditionsSub","_editConditionDialogSub","_editValidationConditionDialogSub","_editWarningConditionDialogSub","_editChoicesFilterSub","_editConditionalBranchSub","_editVisibilitySub","_editFormulaRepsSub","_editFormulaSub","_editForceValueSub","_editValidationConditionSub","_editWarningConditionSub","_nextSlideConditionSub","_addTriggerConditionSub","_addValidationConditionSub","_addWarningConditionSub","_editNextSlideConditionSub","_editTriggerConditionSub","_removeTriggerConditionSub","_removeValidationConditionSub","_removeWarningConditionSub","_saveSub","_initSave","propertiesForm","fg","val","tslib_1.__assign","_initForm","_conditionalBranchesSub","visibilityOpt","_guessVisibilityOpt","controls","Validators","required","conditionalBranchesNum","validators","rn","notEmptyW","size","numField","replace","fieldWithChoices","choicesFilter","_fb","group","setValidators","_handleConditionalBranchesChange","_handleVisibilityChange","_handleFormulaRepsChange","_handleChoicesFilterChange","_handleFormulaChange","_handleForceValueChange","_handleValidationCondtionsChange","_handleWarningCondtionsChange","_handleNextSlideConditionChange","_handleTriggerCondtionsChange","_destroyConditionDialog","_destroyValidationConditionDialog","_editValidationConditionDialog","_destroyWarningConditionDialog","_editWarningConditionDialog","_initRemoveTriggerCondition","vcIdx","ctrl","vcs","setValue","_initAddTriggerCondition","_initTriggerConditionEdit","componentInstance","afterClosed","cond","_initRemoveWarningCondition","_initAddWarningCondition","_initWarningConditionEdit","cmp","_initRemoveValidationCondition","_initAddValidationCondition","_initValidationConditionEdit","v","_initForceValueEdit","_initNextSlideConditionEdit","_initFormulaEdit","_initFormulaRepsEdit","_initChoicesFilterEdit","_initConditionalBranchEdit","cbIdx","_initVisibilityEdit","valueChanges","distinctUntilChanged","v1","v2","JSON","stringify","cbNum","curCbNum","newCbs","newCondition","neverCondition","FormBuilder","AjfFbNodeTypeEntry","_nodeType","_cdr","markForCheck","AjfFormBuilderModule","NgModule","imports","CommonModule","FormsModule","ReactiveFormsModule","DragDropModule","MatButtonModule","MatCardModule","MatCheckboxModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatTableModule","MatToolbarModule","MatTooltipModule","TranslateModule","AjfMonacoEditorModule","AjfNodeIconModule","declarations","exports","entryComponents","providers"],"mappings":"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"}