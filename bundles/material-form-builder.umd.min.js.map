{"version":3,"sources":["src/material/material-form-builder.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ajf","material","formBuilder","ng","common","core","forms","cdk","dragDrop","autocomplete","button","card","checkbox","chips","dialog","formField","icon","input","list","menu","select","sidenav","slider","table","toolbar","tooltip","ngxTranslate","monacoEditor","nodeIcon","rxjs","operators","tslib","collections","models","utils","keycodes","this","core$1","forms$1","AjfFbBranchLine","_el","_renderer","_offset","_height","Object","defineProperty","prototype","set","offset","_updateOffset","enumerable","configurable","color","_color","_updateColor","height","_updateHeight","Math","max","setStyle","nativeElement","margin","decorators","type","Component","args","selector","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","styles","ctorParameters","ElementRef","Renderer2","propDecorators","Input","ChoicesOriginDataSource","_super","_this","call","_choices","BehaviorSubject","_choicesObs","asObservable","__extends","connect","disconnect","updateChoices","choices","next","DataSource","AjfFbChoicesOriginEditor","_displayedColumns","editing","_choicesArr","get","_choicesOrigin","choicesOrigin","name","label","canEditChoices","isChoicesFixedOrigin","updateValue","evt","cell","_value","rowIdx","target","value","deleteRow","splice","addRow","push","getNodeContainer","c","node","nodes","indexOf","cns","filter","n","isContainerNode","len","length","i","cn","buildFormBuilderNodesSubtree","parent","ignoreConditionalBranches","entries","id","sort","n1","n2","parentNode","map","children","content","buildFormBuilderNodesContent","cbs","conditionalBranches","_nodes","flattenNodes","flatNodes","forEach","concat","getDescendants","branch","deleteNodeSubtree","delNodes","descendants","removeNodes","ids","nodeUniqueId","AjfFormBuilderService","_availableNodeTypes","fontSet","fontIcon","nodeType","AjfNodeType","AjfSlide","isSlide","AjfRepeatingSlide","AjfField","field","AjfFieldType","String","Text","Number","Boolean","SingleChoice","MultipleChoice","Formula","Date","DateInput","Time","Table","_form","_formObs","_editedNodeEntry","_editedNodeEntryObs","_editedCondition","_editedConditionObs","_editedChoicesOrigin","_editedChoicesOriginObs","_beforeNodesUpdate","EventEmitter","_beforeNodesUpdateObs","_afterNodeUpdate","_afterNodeUpdateObs","_nodesUpdates","Subject","_attachmentsOriginsUpdates","_choicesOriginsUpdates","_stringIdentifierUpdates","_saveNodeEntryEvent","_deleteNodeEntryEvent","_initChoicesOriginsStreams","_initAttachmentsOriginsStreams","_initStringIdentifierStreams","_initNodesStreams","_initFormStreams","_initSaveNode","_initDeleteNode","_attachmentsOrigins","_choicesOrigins","_stringIdentifier","_flatNodes","_flatFields","_nodeEntriesTree","setForm","form","getValue","editNodeEntry","nodeEntry","editCondition","condition","saveCurrentCondition","cancelConditionEdit","insertNode","inContent","isFieldNode","createField","fieldType","createContainerNode","emit","replaceNodes","newNodes","slice","saveNodeEntry","properties","cancelNodeEntryEdit","deleteNodeEntry","getCurrentForm","combineLatest","attachmentsOrigins","choicesOrigins","stringIdentifier","pipe","_a","__read","_b","createForm","supplementaryInformations","editChoicesOrigin","createChoicesOrigin","createChoicesFixedOrigin","cancelChoicesOriginEdit","saveChoicesOrigin","params","idx","__spread","saveStringIdentifier","identifier","_findMaxNodeId","_curMaxId","maxId","subscribe","_","scan","op","publishReplay","refCount","buildFormBuilderNodesTree","rootNodes","rootNode","isSlidesNode","tree","container","Error","withLatestFrom","editedNodeEntry","origNode","deepCopy","visibility","createCondition","oldConditionalBranches","alwaysCondition","newConditionalBranches","isRepeatingContainerNode","repNode","formulaReps","createFormula","formula","undefined","minReps","maxReps","isField","description","defaultValue","forceValue","notEmpty","validationConditions","minValue","parseInt","maxValue","minDigits","maxDigits","isNaN","validation","createValidationGroup","notEmptyValidation","minValidation","maxValidation","minDigitsValidation","maxDigitsValidation","conditions","createValidation","errorMessage","notEmptyWarn","notEmptyWarning","warningConditions","warning","createWarningGroup","w","createWarning","warningMessage","nextSlideCondition","size","isFieldWithChoices","fwc","choicesOriginRef","forceExpanded","forceNarrow","triggerConditions","t","Injectable","AjfFbChoicesOriginEditorDialog","_service","editedChoicesOrigin","editor","choicesArr","ViewChild","static","AjfFbConditionEditor","_fields","fields","_updateVariables","insertVariable","variable","split","position","getPosition","ln","lineNumber","line","col","column","substring","join","setPosition","focus","editedValue","onEditorInit","monaco","languages","typescript","javascriptDefaults","setDiagnosticsOptions","noSemanticValidation","noSyntaxValidation","setCompilerOptions","ScriptTarget","ES2015","allowNonTsExtensions","allowJs","ModuleKind","addExtraLib","e","_extraLibs","_updateFunctions","_fieldVarType","AjfExpressionUtils","UTIL_FUNCTIONS","Empty","AjfValidationService","AjfMonacoEditor","AjfFbConditionEditorDialog","service","dialogRef","flatFields","f1","f2","localeCompare","saveCondition","close","MatDialogRef","AjfFbStringIdentifierDialogComponent","_cdr","dataSource","MatTableDataSource","displayedColumns","separatorKeysCodes","ENTER","COMMA","_stringIdentifierSub","Subscription","EMPTY","data","fields$","f","shareReplay","addValue","row","valueInput","markForCheck","removeValue","ngOnDestroy","unsubscribe","selected","option","ChangeDetectorRef","AjfFormBuilder","_dialog","_vc","_init","_editConditionSub","_beforeNodesUpdateSub","_editChoicesOriginSub","_nodeTypes","availableNodeTypes","nodeEntriesTree","editedCondition","_editConditionDialog","open","disableClose","_editChoicesOriginDialog","beforeNodesUpdate","designerCont","_lastScrollTop","scrollTop","sample","_setCurrentForm","ngAfterViewChecked","ngAfterContentInit","disableDropPredicate","editStringIdentifier","_stringIdentifierDialog","width","MatDialog","branchColors","AjfFbNodeEntry","_hasContent","_isFirst","_isNodeEntry","_level","_branchColors","_dropZones","_slideDropZones","_originOffset","_originLeftMargin","_firstBranchColor","_branchLinesSubscription","_childEntriesSubscription","_currentEditedNode","isFirst","_nodeEntry","ne","originOffset","firstBranchColor","onResize","edit","isNodeEntry","delete","ngAfterViewInit","setTimeout","_updateBranchHeights","childEntries","changes","onDropSuccess","dd","item","emptySlot","disableSlideDropPredicate","emptyAreaDropPredicate","_drop","branchLines","toArray","sliceIdx","bl","offsetTop","host","(window.resize)","ViewChildren","read","level","AjfFbValidationConditionEditorDialog","AjfFbWarningConditionEditorDialog","checkRepsValidity","reps","checkValueLimitsValidity","valueLimit","checkDigitsValidity","digits","AjfFbNodeProperties","_fb","_fieldSizes","_conditionalBranches","_validationConditions","_warningConditions","_visibilitySub","_conditionalBranchesSub","_formulaRepsSub","_choicesFilterSub","_formulaSub","_forceValueSub","_validationConditionsSub","_warningConditionsSub","_nextSlideConditionSub","_choicesOriginsSub","_triggerConditionsSub","_editConditionDialogSub","_editValidationConditionDialogSub","_editWarningConditionDialogSub","_editVisibilityEvt","_editVisibilitySub","_editConditionalBranchEvt","_editConditionalBranchSub","_editFormulaRepsEvt","_editFormulaRepsSub","_editChoicesFilterEvt","_editChoicesFilterSub","_editFormulaEvt","_editFormulaSub","_editForceValueEvt","_editForceValueSub","_editValidationConditionEvt","_editValidationConditionSub","_addValidationConditionEvt","_addValidationConditionSub","_removeValidationConditionEvt","_removeValidationConditionSub","_editWarningConditionEvt","_editWarningConditionSub","_addWarningConditionEvt","_addWarningConditionSub","_removeWarningConditionEvt","_removeWarningConditionSub","_editNextSlideConditionEvt","_editNextSlideConditionSub","_editTriggerConditionEvt","_editTriggerConditionSub","_addTriggerConditionEvt","_addTriggerConditionSub","_removeTriggerConditionEvt","_removeTriggerConditionSub","_saveEvt","_saveSub","_enabled","_initForm","_initVisibilityEdit","_initConditionalBranchEdit","_initFormulaRepsEdit","_initChoicesFilterEdit","_initFormulaEdit","_initForceValueEdit","_initValidationConditionEdit","_initAddValidationCondition","_initRemoveValidationCondition","_initWarningConditionEdit","_initAddWarningCondition","_initRemoveWarningCondition","_initNextSlideConditionEdit","_initTriggerConditionEdit","_initAddTriggerCondition","_initRemoveTriggerCondition","_initSave","_propertiesForm","_hasChoices","_curVisibility","_curFormulaReps","_curChoicesFilter","_curForceValue","_curFormula","_nextSlideCondition","_triggerConditions","editVisibility","editConditionalBranch","editFormulaReps","editChoicesFilter","editFormula","editForceValue","editValidationCondition","addValidationCondition","removeValidationCondition","editWarningCondition","addWarningCondition","removeWarningCondition","editNextSlideCondition","editTriggerCondition","addTriggerCondition","removeTriggerCondition","isNumericField","isNumberField","save","cancel","propertiesForm","r","val","__assign","visibilityOpt","_guessVisibilityOpt","controls","Validators","required","conditionalBranchesNum","validators","rn","notEmptyW","numField","replace","fieldWithChoices","choicesFilter","fg","group","setValidators","_handleConditionalBranchesChange","_handleVisibilityChange","_handleFormulaRepsChange","_handleChoicesFilterChange","_handleFormulaChange","_handleForceValueChange","_handleValidationCondtionsChange","_handleWarningCondtionsChange","_handleNextSlideConditionChange","_handleTriggerCondtionsChange","_destroyConditionDialog","_destroyValidationConditionDialog","_editValidationConditionDialog","_destroyWarningConditionDialog","_editWarningConditionDialog","vcIdx","ctrl","vcs","setValue","componentInstance","afterClosed","cond","cmp","v","cbIdx","valueChanges","distinctUntilChanged","v1","v2","JSON","stringify","cbNum","curCbNum","newCbs","newCondition","neverCondition","FormBuilder","AjfFbNodeTypeEntry","_nodeType","AjfFormBuilderModule","NgModule","imports","CommonModule","FormsModule","ReactiveFormsModule","DragDropModule","MatAutocompleteModule","MatButtonModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatTableModule","MatToolbarModule","MatTooltipModule","TranslateModule","AjfMonacoEditorModule","AjfNodeIconModule","declarations","providers","ɵajf_src_material_form_builder_form_builder_a","ɵajf_src_material_form_builder_form_builder_b","ɵajf_src_material_form_builder_form_builder_c","ɵajf_src_material_form_builder_form_builder_d","ɵajf_src_material_form_builder_form_builder_e","ɵajf_src_material_form_builder_form_builder_f","ɵajf_src_material_form_builder_form_builder_g","ɵajf_src_material_form_builder_form_builder_h","ɵajf_src_material_form_builder_form_builder_i","ɵajf_src_material_form_builder_form_builder_j","ɵajf_src_material_form_builder_form_builder_k"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@angular/forms'), require('@angular/cdk/drag-drop'), require('@angular/material/autocomplete'), require('@angular/material/button'), require('@angular/material/card'), require('@angular/material/checkbox'), require('@angular/material/chips'), require('@angular/material/dialog'), require('@angular/material/form-field'), require('@angular/material/icon'), require('@angular/material/input'), require('@angular/material/list'), require('@angular/material/menu'), require('@angular/material/select'), require('@angular/material/sidenav'), require('@angular/material/slider'), require('@angular/material/table'), require('@angular/material/toolbar'), require('@angular/material/tooltip'), require('@ngx-translate/core'), require('@ajf/material/monaco-editor'), require('@ajf/material/node-icon'), require('rxjs/operators'), require('@ajf/core/forms'), require('tslib'), require('@angular/cdk/collections'), require('rxjs'), require('@ajf/core/models'), require('@ajf/core/utils'), require('@angular/cdk/keycodes')) :\n    typeof define === 'function' && define.amd ? define('@ajf/material/form-builder', ['exports', '@angular/common', '@angular/core', '@angular/forms', '@angular/cdk/drag-drop', '@angular/material/autocomplete', '@angular/material/button', '@angular/material/card', '@angular/material/checkbox', '@angular/material/chips', '@angular/material/dialog', '@angular/material/form-field', '@angular/material/icon', '@angular/material/input', '@angular/material/list', '@angular/material/menu', '@angular/material/select', '@angular/material/sidenav', '@angular/material/slider', '@angular/material/table', '@angular/material/toolbar', '@angular/material/tooltip', '@ngx-translate/core', '@ajf/material/monaco-editor', '@ajf/material/node-icon', 'rxjs/operators', '@ajf/core/forms', 'tslib', '@angular/cdk/collections', 'rxjs', '@ajf/core/models', '@ajf/core/utils', '@angular/cdk/keycodes'], factory) :\n    (global = global || self, factory((global.ajf = global.ajf || {}, global.ajf.material = global.ajf.material || {}, global.ajf.material.formBuilder = {}), global.ng.common, global.ng.core, global.ng.forms, global.ng.cdk.dragDrop, global.ng.material.autocomplete, global.ng.material.button, global.ng.material.card, global.ng.material.checkbox, global.ng.material.chips, global.ng.material.dialog, global.ng.material.formField, global.ng.material.icon, global.ng.material.input, global.ng.material.list, global.ng.material.menu, global.ng.material.select, global.ng.material.sidenav, global.ng.material.slider, global.ng.material.table, global.ng.material.toolbar, global.ng.material.tooltip, global.ngxTranslate.core, global.ng.material.monacoEditor, global.ng.material.nodeIcon, global.rxjs.operators, global.ng.core.forms, global.tslib, global.ng.cdk.collections, global.rxjs, global.ng.core.models, global.ng.core.utils, global.ng.cdk.keycodes));\n}(this, (function (exports, common, core, forms, dragDrop, autocomplete, button, card, checkbox, chips, dialog, formField, icon, input, list, menu, select, sidenav, slider, table, toolbar, tooltip, core$1, monacoEditor, nodeIcon, operators, forms$1, tslib, collections, rxjs, models, utils, keycodes) { 'use strict';\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFbBranchLine = /** @class */ (function () {\n        function AjfFbBranchLine(_el, _renderer) {\n            this._el = _el;\n            this._renderer = _renderer;\n            this._offset = 0;\n            this._height = 0;\n        }\n        Object.defineProperty(AjfFbBranchLine.prototype, \"offset\", {\n            set: function (offset) {\n                this._offset = offset;\n                this._updateOffset();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbBranchLine.prototype, \"color\", {\n            set: function (color) {\n                this._color = color;\n                this._updateColor();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbBranchLine.prototype, \"height\", {\n            set: function (height) {\n                this._height = height;\n                this._updateHeight();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        AjfFbBranchLine.prototype._updateHeight = function () {\n            var height = Math.max(0, this._height - 25) + \"px\";\n            this._renderer.setStyle(this._el.nativeElement, 'height', height);\n        };\n        AjfFbBranchLine.prototype._updateOffset = function () {\n            var margin = this._offset * 4 + \"px\";\n            this._renderer.setStyle(this._el.nativeElement, 'margin-top', margin);\n            this._renderer.setStyle(this._el.nativeElement, 'margin-left', margin);\n        };\n        AjfFbBranchLine.prototype._updateColor = function () {\n            this._renderer.setStyle(this._el.nativeElement, 'border-color', this._color);\n        };\n        AjfFbBranchLine.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-fb-branch-line',\n                        template: \"\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\"ajf-fb-branch-line{display:block;position:absolute;top:25px;left:25px;width:25px;border-top:2px solid;border-left:2px solid;border-top-left-radius:6px}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfFbBranchLine.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: core.Renderer2 }\n        ]; };\n        AjfFbBranchLine.propDecorators = {\n            offset: [{ type: core.Input }],\n            color: [{ type: core.Input }],\n            height: [{ type: core.Input }]\n        };\n        return AjfFbBranchLine;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var ChoicesOriginDataSource = /** @class */ (function (_super) {\n        tslib.__extends(ChoicesOriginDataSource, _super);\n        function ChoicesOriginDataSource() {\n            var _this = _super.call(this) || this;\n            _this._choices = new rxjs.BehaviorSubject([]);\n            _this._choicesObs = _this._choices.asObservable();\n            return _this;\n        }\n        ChoicesOriginDataSource.prototype.connect = function () {\n            return this._choicesObs;\n        };\n        ChoicesOriginDataSource.prototype.disconnect = function () { };\n        ChoicesOriginDataSource.prototype.updateChoices = function (choices) {\n            this._choices.next(choices);\n        };\n        return ChoicesOriginDataSource;\n    }(collections.DataSource));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFbChoicesOriginEditor = /** @class */ (function () {\n        function AjfFbChoicesOriginEditor() {\n            this._displayedColumns = ['label', 'value', 'delete'];\n            this.editing = {};\n            this._choices = new ChoicesOriginDataSource();\n            this._choicesArr = [];\n        }\n        Object.defineProperty(AjfFbChoicesOriginEditor.prototype, \"displayedColumns\", {\n            get: function () { return this._displayedColumns; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbChoicesOriginEditor.prototype, \"choicesOrigin\", {\n            get: function () {\n                return this._choicesOrigin;\n            },\n            set: function (choicesOrigin) {\n                this._choicesOrigin = choicesOrigin;\n                this.name = choicesOrigin.name;\n                this.label = choicesOrigin.label;\n                this.canEditChoices = forms$1.isChoicesFixedOrigin(choicesOrigin);\n                this._choicesArr = choicesOrigin.choices;\n                this._choices.updateChoices(this._choicesArr);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbChoicesOriginEditor.prototype, \"choices\", {\n            get: function () { return this._choices; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbChoicesOriginEditor.prototype, \"choicesArr\", {\n            get: function () { return this._choicesArr; },\n            enumerable: true,\n            configurable: true\n        });\n        AjfFbChoicesOriginEditor.prototype.updateValue = function (evt, cell, _value, rowIdx) {\n            this.editing[rowIdx + '-' + cell] = false;\n            this._choicesArr[rowIdx][cell] = evt.target.value;\n            this._choices.updateChoices(this._choicesArr);\n        };\n        AjfFbChoicesOriginEditor.prototype.deleteRow = function (rowIdx) {\n            this._choicesArr.splice(rowIdx, 1);\n            this._choices.updateChoices(this._choicesArr);\n        };\n        AjfFbChoicesOriginEditor.prototype.addRow = function () {\n            this._choicesArr.push({ label: '', value: '' });\n            this._choices.updateChoices(this._choicesArr);\n        };\n        AjfFbChoicesOriginEditor.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-fb-choices-origin-editor',\n                        template: \"<div>\\n  <mat-form-field>\\n    <input matInput [(ngModel)]=\\\"name\\\"\\n        [placeholder]=\\\"'Name' | translate\\\">\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input matInput [(ngModel)]=\\\"label\\\"\\n        [placeholder]=\\\"'Label' | translate\\\">\\n  </mat-form-field>\\n  <ng-template [ngIf]=\\\"canEditChoices\\\">\\n    <button (click)=\\\"addRow()\\\" mat-button>\\n      <mat-icon>add</mat-icon>\\n      <span translate>Add value</span>\\n    </button>\\n    <mat-table [dataSource]=\\\"choices\\\">\\n      <ng-container matColumnDef=\\\"label\\\">\\n        <mat-header-cell *matHeaderCellDef translate>Label</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row; let idx = index\\\">\\n          <input matInput [(ngModel)]=\\\"row.label\\\" type=\\\"text\\\">\\n        </mat-cell>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"value\\\">\\n        <mat-header-cell *matHeaderCellDef translate>Value</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row; let idx = index\\\">\\n          <input matInput [(ngModel)]=\\\"row.value\\\" type=\\\"text\\\">\\n        </mat-cell>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"delete\\\">\\n        <mat-header-cell *matHeaderCellDef translate>Delete</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row; let idx = index\\\">\\n            <mat-icon (click)=\\\"deleteRow(idx)\\\">delete</mat-icon>\\n        </mat-cell>\\n      </ng-container>\\n\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    </mat-table>\\n  </ng-template>\\n</div>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\"ajf-fb-choices-origin-editor mat-form-field+mat-form-field{margin-left:1em}ajf-fb-choices-origin-editor mat-table{max-height:300px}ajf-fb-choices-origin-editor mat-table mat-icon{cursor:pointer}\\n\"]\n                    }] }\n        ];\n        AjfFbChoicesOriginEditor.propDecorators = {\n            choicesOrigin: [{ type: core.Input }]\n        };\n        return AjfFbChoicesOriginEditor;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    function getNodeContainer(c, node) {\n        if (c.nodes.indexOf(node) > -1) {\n            return c;\n        }\n        var cns = c.nodes.filter(function (n) { return forms$1.isContainerNode(n); });\n        var len = cns.length;\n        for (var i = 0; i < len; i++) {\n            var cn = getNodeContainer(cns[i], node);\n            if (cn != null) {\n                return cn;\n            }\n        }\n        return null;\n    }\n    function buildFormBuilderNodesSubtree(nodes, parent, ignoreConditionalBranches) {\n        if (ignoreConditionalBranches === void 0) { ignoreConditionalBranches = false; }\n        var entries = nodes\n            .filter(function (n) { return n.parent === parent.id; })\n            .sort(function (n1, n2) { return n1.parentNode - n2.parentNode; })\n            .map(function (n) {\n            var children = buildFormBuilderNodesSubtree(nodes, n);\n            if (children.length === 0) {\n                children.push({ parent: n, parentNode: 0 });\n            }\n            return {\n                node: n,\n                children: children,\n                content: buildFormBuilderNodesContent(nodes, n)\n            };\n        });\n        if (!ignoreConditionalBranches) {\n            var entriesNum = entries.length;\n            var cbs = parent.conditionalBranches.length;\n            for (var i = entriesNum; i < cbs; i++) {\n                entries.push({\n                    parent: parent,\n                    parentNode: i\n                });\n            }\n        }\n        return entries;\n    }\n    function buildFormBuilderNodesContent(_nodes, node) {\n        if (forms$1.isContainerNode(node)) {\n            return buildFormBuilderNodesSubtree(node.nodes, node, true);\n        }\n        return [];\n    }\n    function buildFormBuilderNodesTree(nodes) {\n        var rootNodes = nodes.filter(function (n) { return n.parent == null || n.parent === 0; });\n        if (rootNodes.length === 1) {\n            var rootNode = rootNodes[0];\n            if (forms$1.isSlidesNode(rootNode)) {\n                var tree = [];\n                tree.push({\n                    node: rootNode,\n                    container: null,\n                    children: buildFormBuilderNodesSubtree(nodes, rootNode),\n                    content: buildFormBuilderNodesContent(nodes, rootNode)\n                });\n                return tree;\n            }\n        }\n        else if (rootNodes.length === 0) {\n            return [null];\n        }\n        throw new Error('Invalid form definition');\n    }\n    function flattenNodes(nodes) {\n        var flatNodes = [];\n        nodes.forEach(function (node) {\n            if (forms$1.isContainerNode(node)) {\n                flatNodes = flatNodes.concat(flattenNodes(node.nodes));\n            }\n            flatNodes.push(node);\n        });\n        return flatNodes;\n    }\n    function getDescendants(flatNodes, parentNode, branch) {\n        if (branch === void 0) { branch = null; }\n        return branch != null ?\n            flatNodes.filter(function (n) { return n.parent === parentNode.id && n.parentNode === branch; }) :\n            flatNodes.filter(function (n) { return n.parent === parentNode.id; });\n    }\n    function removeNodes(nodes, ids) {\n        var len = nodes.length;\n        for (var i = 0; i < len; i++) {\n            var node = nodes[i];\n            if (forms$1.isContainerNode(node)) {\n                var container = node;\n                container.nodes = removeNodes(container.nodes, ids);\n            }\n        }\n        return nodes.filter(function (n) { return ids.indexOf(n.id) === -1; });\n    }\n    function deleteNodeSubtree(nodes, parentNode, branch) {\n        if (branch === void 0) { branch = null; }\n        var flatNodes = flattenNodes(nodes);\n        var delNodes = [];\n        var descendants = getDescendants(flatNodes, parentNode, branch);\n        var len = descendants.length;\n        for (var i = 0; i < len; i++) {\n            delNodes = delNodes.concat(getDescendants(flatNodes, descendants[i]));\n        }\n        delNodes = delNodes.concat(descendants);\n        return removeNodes(nodes, delNodes.map(function (n) { return n.id; }));\n    }\n    var nodeUniqueId = 0;\n    var AjfFormBuilderService = /** @class */ (function () {\n        function AjfFormBuilderService() {\n            this._availableNodeTypes = [\n                {\n                    label: 'Slide',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-slide' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfSlide },\n                    isSlide: true\n                },\n                {\n                    label: 'Repeating slide',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-repeatingslide' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfRepeatingSlide },\n                    isSlide: true\n                },\n                {\n                    label: 'String',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-string' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfField, field: forms$1.AjfFieldType.String }\n                },\n                {\n                    label: 'Text',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-text' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfField, field: forms$1.AjfFieldType.Text }\n                },\n                {\n                    label: 'Number',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-number' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfField, field: forms$1.AjfFieldType.Number }\n                },\n                {\n                    label: 'Boolean',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-boolean' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfField, field: forms$1.AjfFieldType.Boolean }\n                },\n                {\n                    label: 'Single choice',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-singlechoice' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfField, field: forms$1.AjfFieldType.SingleChoice }\n                },\n                {\n                    label: 'Multiple choice',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-multiplechoice' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfField, field: forms$1.AjfFieldType.MultipleChoice }\n                },\n                {\n                    label: 'Formula',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-formula' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfField, field: forms$1.AjfFieldType.Formula }\n                },\n                {\n                    label: 'Date',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-date' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfField, field: forms$1.AjfFieldType.Date }\n                },\n                {\n                    label: 'Date input',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-dateinput' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfField, field: forms$1.AjfFieldType.DateInput }\n                },\n                {\n                    label: 'Time',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-time' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfField, field: forms$1.AjfFieldType.Time }\n                },\n                {\n                    label: 'Table',\n                    icon: { fontSet: 'ajf-icon', fontIcon: 'field-table' },\n                    nodeType: { node: forms$1.AjfNodeType.AjfField, field: forms$1.AjfFieldType.Table }\n                }\n            ];\n            this._form = new rxjs.BehaviorSubject(null);\n            this._formObs = this._form.asObservable();\n            this._editedNodeEntry = new rxjs.BehaviorSubject(null);\n            this._editedNodeEntryObs = this._editedNodeEntry.asObservable();\n            this._editedCondition = new rxjs.BehaviorSubject(null);\n            this._editedConditionObs = this._editedCondition.asObservable();\n            this._editedChoicesOrigin = new rxjs.BehaviorSubject(null);\n            this._editedChoicesOriginObs = this._editedChoicesOrigin.asObservable();\n            this._beforeNodesUpdate = new core.EventEmitter();\n            this._beforeNodesUpdateObs = this._beforeNodesUpdate.asObservable();\n            this._afterNodeUpdate = new core.EventEmitter();\n            this._afterNodeUpdateObs = this._afterNodeUpdate.asObservable();\n            this._nodesUpdates = new rxjs.Subject();\n            this._attachmentsOriginsUpdates = new rxjs.Subject();\n            this._choicesOriginsUpdates = new rxjs.Subject();\n            this._stringIdentifierUpdates = new rxjs.Subject();\n            this._saveNodeEntryEvent = new core.EventEmitter();\n            this._deleteNodeEntryEvent = new core.EventEmitter();\n            this._initChoicesOriginsStreams();\n            this._initAttachmentsOriginsStreams();\n            this._initStringIdentifierStreams();\n            this._initNodesStreams();\n            this._initFormStreams();\n            this._initSaveNode();\n            this._initDeleteNode();\n        }\n        Object.defineProperty(AjfFormBuilderService.prototype, \"availableNodeTypes\", {\n            /**\n             * Available node types\n             *\n             * @readonly\n             * @memberOf AjfFormBuilderService\n             */\n            get: function () { return this._availableNodeTypes; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"form\", {\n            /**\n             * Current edited form stream\n             *\n             * @readonly\n             * @memberOf AjfFormBuilderService\n             */\n            get: function () { return this._formObs; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"attachmentsOrigins\", {\n            get: function () {\n                return this._attachmentsOrigins;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"choicesOrigins\", {\n            get: function () {\n                return this._choicesOrigins;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"stringIdentifier\", {\n            get: function () {\n                return this._stringIdentifier;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"nodes\", {\n            get: function () { return this._nodes; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"flatNodes\", {\n            get: function () {\n                return this._flatNodes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"flatFields\", {\n            get: function () { return this._flatFields; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"nodeEntriesTree\", {\n            get: function () { return this._nodeEntriesTree; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"editedNodeEntry\", {\n            get: function () {\n                return this._editedNodeEntryObs;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"editedCondition\", {\n            get: function () { return this._editedConditionObs; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"editedChoicesOrigin\", {\n            get: function () {\n                return this._editedChoicesOriginObs;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"beforeNodesUpdate\", {\n            get: function () { return this._beforeNodesUpdateObs; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilderService.prototype, \"afterNodeUpdate\", {\n            get: function () { return this._afterNodeUpdateObs; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Sets the current edited form\n         *\n         * @param form\n         *\n         * @memberOf AjfFormBuilderService\n         */\n        AjfFormBuilderService.prototype.setForm = function (form) {\n            if (form !== this._form.getValue()) {\n                this._form.next(form);\n            }\n        };\n        AjfFormBuilderService.prototype.editNodeEntry = function (nodeEntry) {\n            this._editedNodeEntry.next(nodeEntry);\n        };\n        AjfFormBuilderService.prototype.editCondition = function (condition) {\n            this._editedCondition.next(condition);\n        };\n        AjfFormBuilderService.prototype.saveCurrentCondition = function (condition) {\n            var c = this._editedCondition.getValue();\n            if (c == null) {\n                return;\n            }\n            c.condition = condition;\n            this._editedCondition.next(null);\n        };\n        AjfFormBuilderService.prototype.cancelConditionEdit = function () {\n            this._editedChoicesOrigin.next(null);\n        };\n        AjfFormBuilderService.prototype.insertNode = function (nodeType, parent, parentNode, inContent) {\n            if (inContent === void 0) { inContent = false; }\n            var node;\n            var id = ++nodeUniqueId;\n            var isFieldNode = nodeType.nodeType.field != null;\n            if (isFieldNode) {\n                node = forms$1.createField({\n                    id: id,\n                    nodeType: forms$1.AjfNodeType.AjfField,\n                    fieldType: nodeType.nodeType.field,\n                    parent: parent.id,\n                    parentNode: parentNode,\n                    name: '',\n                });\n            }\n            else {\n                node = forms$1.createContainerNode({\n                    id: id,\n                    nodeType: nodeType.nodeType.node,\n                    parent: parent != null ? parent.id : 0,\n                    parentNode: parentNode,\n                    name: '',\n                    nodes: [],\n                });\n            }\n            this._beforeNodesUpdate.emit();\n            this._nodesUpdates.next(function (nodes) {\n                if (node.parent === 0) {\n                    return [node];\n                }\n                var cn = forms$1.isContainerNode(parent) && inContent ?\n                    parent :\n                    getNodeContainer({ nodes: nodes }, parent);\n                if (cn != null) {\n                    if (!isFieldNode) {\n                        var replaceNodes = cn.nodes === nodes;\n                        var newNodes = cn.nodes.slice(0);\n                        newNodes.push(node);\n                        cn.nodes = newNodes;\n                        if (replaceNodes) {\n                            nodes = newNodes;\n                        }\n                    }\n                    else {\n                        cn.nodes.push(node);\n                    }\n                }\n                return nodes;\n            });\n        };\n        AjfFormBuilderService.prototype.saveNodeEntry = function (properties) {\n            this._saveNodeEntryEvent.emit(properties);\n        };\n        AjfFormBuilderService.prototype.cancelNodeEntryEdit = function () {\n            this._editedNodeEntry.next(null);\n        };\n        AjfFormBuilderService.prototype.deleteNodeEntry = function (nodeEntry) {\n            this._deleteNodeEntryEvent.next(nodeEntry);\n        };\n        AjfFormBuilderService.prototype.getCurrentForm = function () {\n            return rxjs.combineLatest([this.form, this.nodes, this.attachmentsOrigins, this.choicesOrigins, this.stringIdentifier]).pipe(operators.filter(function (_a) {\n                var _b = tslib.__read(_a, 1), form = _b[0];\n                return form != null;\n            }), operators.map(function (_a) {\n                var _b = tslib.__read(_a, 5), form = _b[0], nodes = _b[1], attachmentsOrigins = _b[2], choicesOrigins = _b[3], stringIdentifier = _b[4];\n                return forms$1.createForm({\n                    choicesOrigins: choicesOrigins.slice(0),\n                    attachmentsOrigins: attachmentsOrigins.slice(0),\n                    stringIdentifier: (stringIdentifier || []).slice(0),\n                    nodes: nodes.slice(0),\n                    supplementaryInformations: form.supplementaryInformations,\n                });\n            }));\n        };\n        AjfFormBuilderService.prototype.editChoicesOrigin = function (choicesOrigin) {\n            this._editedChoicesOrigin.next(choicesOrigin);\n        };\n        AjfFormBuilderService.prototype.createChoicesOrigin = function () {\n            this._editedChoicesOrigin.next(forms$1.createChoicesFixedOrigin({ name: '' }));\n        };\n        AjfFormBuilderService.prototype.cancelChoicesOriginEdit = function () {\n            this._editedChoicesOrigin.next(null);\n        };\n        AjfFormBuilderService.prototype.saveChoicesOrigin = function (params) {\n            var choicesOrigin = this._editedChoicesOrigin.getValue();\n            if (choicesOrigin != null) {\n                choicesOrigin.label = params.label;\n                choicesOrigin.name = params.name;\n                if (forms$1.isChoicesFixedOrigin(choicesOrigin)) {\n                    choicesOrigin.choices = params.choices;\n                }\n                this._choicesOriginsUpdates.next(function (choicesOrigins) {\n                    var idx = choicesOrigins.indexOf(choicesOrigin);\n                    if (idx > -1) {\n                        choicesOrigins = tslib.__spread(choicesOrigins.slice(0, idx), [\n                            choicesOrigin\n                        ], choicesOrigins.slice(idx + 1));\n                    }\n                    else {\n                        choicesOrigins = tslib.__spread(choicesOrigins, [choicesOrigin]);\n                    }\n                    return choicesOrigins;\n                });\n            }\n            this._editedChoicesOrigin.next(null);\n        };\n        AjfFormBuilderService.prototype.saveStringIdentifier = function (identifier) {\n            this._stringIdentifierUpdates.next(function () { return tslib.__spread(identifier); });\n        };\n        AjfFormBuilderService.prototype._findMaxNodeId = function (nodes, _curMaxId) {\n            var _this = this;\n            if (_curMaxId === void 0) { _curMaxId = 0; }\n            var maxId = 0;\n            nodes.forEach(function (n) {\n                maxId = Math.max(maxId, n.id);\n                if (forms$1.isContainerNode(n)) {\n                    maxId = Math.max(maxId, _this._findMaxNodeId(n.nodes));\n                }\n            });\n            return maxId;\n        };\n        AjfFormBuilderService.prototype._initFormStreams = function () {\n            var _this = this;\n            this._form\n                .subscribe(function (form) {\n                nodeUniqueId = 0;\n                if (form != null && form.nodes != null && form.nodes.length > 0) {\n                    nodeUniqueId = _this._findMaxNodeId(form.nodes);\n                }\n                _this._nodesUpdates.next(function (_nodes) {\n                    return form != null && form.nodes != null ? form.nodes.slice(0) : [];\n                });\n                _this._attachmentsOriginsUpdates.next(function (_attachmentsOrigins) {\n                    return form != null && form.attachmentsOrigins != null ?\n                        form.attachmentsOrigins.slice(0) :\n                        [];\n                });\n                _this._choicesOriginsUpdates.next(function (_choicesOrigins) {\n                    return form != null && form.choicesOrigins != null ? form.choicesOrigins.slice(0) :\n                        [];\n                });\n                _this._stringIdentifierUpdates.next(function (_) {\n                    return form != null && form.stringIdentifier != null\n                        ? form.stringIdentifier.slice(0)\n                        : [];\n                });\n            });\n        };\n        AjfFormBuilderService.prototype._initChoicesOriginsStreams = function () {\n            this._choicesOrigins =\n                this._choicesOriginsUpdates\n                    .pipe(operators.scan(function (choicesOrigins, op) {\n                    return op(choicesOrigins);\n                }, []), operators.publishReplay(1), operators.refCount());\n        };\n        AjfFormBuilderService.prototype._initAttachmentsOriginsStreams = function () {\n            this._attachmentsOrigins = this._attachmentsOriginsUpdates.pipe(operators.scan(function (attachmentsOrigins, op) {\n                return op(attachmentsOrigins);\n            }, []), operators.publishReplay(1), operators.refCount());\n        };\n        AjfFormBuilderService.prototype._initStringIdentifierStreams = function () {\n            this._stringIdentifier = this._stringIdentifierUpdates.pipe(operators.scan(function (stringIdentifier, op) {\n                return op(stringIdentifier);\n            }, []), operators.publishReplay(1), operators.refCount());\n        };\n        AjfFormBuilderService.prototype._initNodesStreams = function () {\n            this._nodes = this._nodesUpdates\n                .pipe(operators.scan(function (nodes, op) {\n                return op(nodes);\n            }, []), operators.publishReplay(1), operators.refCount());\n            this._flatNodes = this._nodes.pipe(operators.map(function (nodes) { return flattenNodes(nodes); }), operators.publishReplay(1), operators.refCount());\n            this._flatFields = this._flatNodes.pipe(operators.map(function (nodes) { return nodes.filter(function (n) { return !forms$1.isContainerNode(n); }); }), operators.publishReplay(1), operators.refCount());\n            this._nodeEntriesTree = this._nodes.pipe(operators.map(function (nodes) { return buildFormBuilderNodesTree(nodes); }), operators.publishReplay(1), operators.refCount());\n        };\n        AjfFormBuilderService.prototype._initSaveNode = function () {\n            var _this = this;\n            this._saveNodeEntryEvent\n                .pipe(operators.withLatestFrom(this.editedNodeEntry, this.choicesOrigins, this.attachmentsOrigins), operators.filter(function (_a) {\n                var _b = tslib.__read(_a, 2), _ = _b[0], nodeEntry = _b[1];\n                return nodeEntry != null;\n            }), operators.map(function (_a) {\n                var _b = tslib.__read(_a, 2), properties = _b[0], nodeEntry = _b[1];\n                _this._beforeNodesUpdate.emit();\n                nodeEntry = nodeEntry;\n                var origNode = nodeEntry.node;\n                var node = utils.deepCopy(origNode);\n                node.id = nodeEntry.node.id;\n                node.name = properties.name;\n                node.label = properties.label;\n                node.visibility = properties.visibility != null ?\n                    models.createCondition({ condition: properties.visibility }) :\n                    null;\n                var oldConditionalBranches = node.conditionalBranches.length;\n                node.conditionalBranches = properties.conditionalBranches != null ?\n                    properties.conditionalBranches.map(function (condition) { return models.createCondition({ condition: condition }); }) :\n                    [models.alwaysCondition()];\n                var newConditionalBranches = node.conditionalBranches.length;\n                if (forms$1.isRepeatingContainerNode(node)) {\n                    var repNode = node;\n                    repNode.formulaReps = properties.formulaReps != null ?\n                        models.createFormula({ formula: properties.formulaReps }) :\n                        undefined;\n                    repNode.minReps = properties.minReps;\n                    repNode.maxReps = properties.maxReps;\n                }\n                if (forms$1.isField(node)) {\n                    var field = node;\n                    field.description = properties.description;\n                    field.defaultValue = properties.defaultValue;\n                    field.formula = properties.formula != null ?\n                        models.createFormula({ formula: properties.formula }) :\n                        undefined;\n                    var forceValue = properties.value;\n                    var notEmpty = properties.notEmpty;\n                    var validationConditions = properties.validationConditions;\n                    var minValue = parseInt(properties.minValue, 10);\n                    var maxValue = parseInt(properties.maxValue, 10);\n                    var minDigits = parseInt(properties.minDigits, 10);\n                    var maxDigits = parseInt(properties.maxDigits, 10);\n                    if (isNaN(minValue)) {\n                        minValue = null;\n                    }\n                    if (isNaN(maxValue)) {\n                        maxValue = null;\n                    }\n                    if (isNaN(minDigits)) {\n                        minDigits = null;\n                    }\n                    if (isNaN(maxDigits)) {\n                        maxDigits = null;\n                    }\n                    if (forceValue != null || notEmpty != null ||\n                        (validationConditions != null && validationConditions.length > 0) ||\n                        minValue != null || maxValue != null || minDigits != null ||\n                        maxDigits != null) {\n                        var validation = field.validation || forms$1.createValidationGroup({});\n                        validation.forceValue = forceValue;\n                        validation.notEmpty = notEmpty ? forms$1.notEmptyValidation() : undefined;\n                        validation.minValue = minValue != null ? forms$1.minValidation(minValue) : undefined;\n                        validation.maxValue = maxValue != null ? forms$1.maxValidation(maxValue) : undefined;\n                        validation.minDigits =\n                            minDigits != null ? forms$1.minDigitsValidation(minDigits) : undefined;\n                        validation.maxDigits =\n                            maxDigits != null ? forms$1.maxDigitsValidation(maxDigits) : undefined;\n                        validation.conditions =\n                            (validationConditions ||\n                                []).map(function (c) { return forms$1.createValidation({\n                                condition: c.condition,\n                                errorMessage: c.errorMessage\n                            }); });\n                        field.validation = validation;\n                    }\n                    else {\n                        field.validation = undefined;\n                    }\n                    var notEmptyWarn = properties.notEmptyWarning;\n                    var warningConditions = properties.warningConditions;\n                    if (notEmptyWarn != null ||\n                        (warningConditions != null && warningConditions.length > 0)) {\n                        var warning = field.warning || forms$1.createWarningGroup({});\n                        warning.notEmpty = notEmptyWarn ? forms$1.notEmptyWarning() : undefined;\n                        warning.conditions =\n                            (warningConditions ||\n                                []).map(function (w) { return forms$1.createWarning({\n                                condition: w.condition,\n                                warningMessage: w.warningMessage\n                            }); });\n                        field.warning = warning;\n                    }\n                    else {\n                        field.warning = undefined;\n                    }\n                    field.nextSlideCondition = properties.nextSlideCondition != null ?\n                        models.createCondition({ condition: properties.nextSlideCondition }) :\n                        undefined;\n                    field.size = properties.size;\n                    field.defaultValue = properties.defaultValue;\n                    if (forms$1.isFieldWithChoices(field)) {\n                        var fwc = field;\n                        fwc.choicesOriginRef = properties.choicesOriginRef;\n                        fwc.forceExpanded = properties.forceExpanded;\n                        fwc.forceNarrow = properties.forceNarrow;\n                        fwc.triggerConditions = (properties.triggerConditions ||\n                            []).map(function (t) { return models.createCondition({ condition: t }); });\n                    }\n                }\n                _this._editedNodeEntry.next(null);\n                return function (nodes) {\n                    var cn = getNodeContainer({ nodes: nodes }, origNode);\n                    if (cn != null) {\n                        // TODO: @trik check this, was always true?\n                        // if (cn instanceof AjfNode) {\n                        var replaceNodes = cn.nodes === nodes;\n                        var idx = cn.nodes.indexOf(origNode);\n                        var newNodes = cn.nodes.slice(0, idx);\n                        newNodes.push(node);\n                        newNodes = newNodes.concat(cn.nodes.slice(idx + 1));\n                        cn.nodes = newNodes;\n                        if (replaceNodes) {\n                            nodes = newNodes;\n                        }\n                        else {\n                            nodes = nodes.slice(0);\n                        }\n                        // } else {\n                        //   const idx = nodes.indexOf(origNode);\n                        //   nodes = nodes.slice(0, idx).concat([node]).concat(nodes.slice(idx + 1));\n                        // }\n                        if (newConditionalBranches < oldConditionalBranches) {\n                            for (var i = newConditionalBranches; i < oldConditionalBranches; i++) {\n                                nodes = deleteNodeSubtree(nodes, node, i);\n                            }\n                        }\n                    }\n                    return nodes;\n                };\n            }))\n                .subscribe(this._nodesUpdates);\n        };\n        AjfFormBuilderService.prototype._initDeleteNode = function () {\n            var _this = this;\n            this._deleteNodeEntryEvent.pipe(operators.map(function (nodeEntry) {\n                _this._beforeNodesUpdate.emit();\n                return function (nodes) {\n                    var node = nodeEntry.node;\n                    var cn = getNodeContainer({ nodes: nodes }, node);\n                    if (cn != null) {\n                        var replaceNodes = cn.nodes === nodes;\n                        var idx = cn.nodes.indexOf(node);\n                        var newNodes = cn.nodes.slice(0, idx);\n                        newNodes = newNodes.concat(cn.nodes.slice(idx + 1));\n                        cn.nodes = newNodes;\n                        if (replaceNodes) {\n                            nodes = newNodes;\n                        }\n                        else {\n                            nodes = nodes.slice(0);\n                        }\n                        nodes = deleteNodeSubtree(nodes, node);\n                    }\n                    return nodes;\n                };\n            })).subscribe(this._nodesUpdates);\n        };\n        AjfFormBuilderService.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        AjfFormBuilderService.ctorParameters = function () { return []; };\n        return AjfFormBuilderService;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFbChoicesOriginEditorDialog = /** @class */ (function () {\n        function AjfFbChoicesOriginEditorDialog(_service) {\n            this._service = _service;\n            this._choicesOrigin = this._service.editedChoicesOrigin.pipe(operators.filter(function (c) { return c != null; }), operators.map(function (c) { return c; }));\n        }\n        Object.defineProperty(AjfFbChoicesOriginEditorDialog.prototype, \"choicesOrigin\", {\n            get: function () {\n                return this._choicesOrigin;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        AjfFbChoicesOriginEditorDialog.prototype.saveChoicesOrigin = function () {\n            this._service.saveChoicesOrigin({\n                label: this.editor.label,\n                name: this.editor.name,\n                choices: this.editor.choicesArr\n            });\n        };\n        AjfFbChoicesOriginEditorDialog.prototype.cancelChoicesOriginEdit = function () {\n            this._service.cancelChoicesOriginEdit();\n        };\n        AjfFbChoicesOriginEditorDialog.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-fb-choices-origin-editor-dialog',\n                        template: \"<h3 matDialogTitle translate>Edit choices origin</h3>\\n<mat-dialog-content>\\n  <ajf-fb-choices-origin-editor\\n      *ngIf=\\\"choicesOrigin|async as co\\\"\\n      [choicesOrigin]=\\\"co!\\\"></ajf-fb-choices-origin-editor>\\n</mat-dialog-content>\\n<mat-dialog-actions>\\n  <button mat-button translate (click)=\\\"saveChoicesOrigin()\\\">Save</button>\\n  <button mat-button translate (click)=\\\"cancelChoicesOriginEdit()\\\">Close</button>\\n</mat-dialog-actions>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfFbChoicesOriginEditorDialog.ctorParameters = function () { return [\n            { type: AjfFormBuilderService }\n        ]; };\n        AjfFbChoicesOriginEditorDialog.propDecorators = {\n            editor: [{ type: core.ViewChild, args: [AjfFbChoicesOriginEditor, { static: false },] }]\n        };\n        return AjfFbChoicesOriginEditorDialog;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFbConditionEditor = /** @class */ (function () {\n        function AjfFbConditionEditor(_) {\n        }\n        Object.defineProperty(AjfFbConditionEditor.prototype, \"fields\", {\n            get: function () { return this._fields; },\n            set: function (fields) {\n                this._fields = fields;\n                this._updateVariables();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        AjfFbConditionEditor.prototype.insertVariable = function (variable) {\n            if (this.monacoEditor != null && this.monacoEditor.editor != null) {\n                var editor = this.monacoEditor.editor;\n                var value = editor.getValue().split('\\n');\n                var position = editor.getPosition();\n                var ln = position.lineNumber - 1;\n                var line = value[ln];\n                var col = position.column - 1;\n                line = line.substring(0, col) + variable + line.substring(col);\n                value[ln] = line;\n                position.column += variable.length;\n                this.monacoEditor.value = value.join('\\n');\n                editor.setPosition(position);\n                editor.focus();\n                this.editedValue = editor.getValue();\n            }\n        };\n        AjfFbConditionEditor.prototype.onEditorInit = function () {\n            monaco.languages.typescript.javascriptDefaults.setDiagnosticsOptions({\n                noSemanticValidation: false,\n                noSyntaxValidation: false\n            });\n            monaco.languages.typescript.javascriptDefaults.setCompilerOptions({\n                target: monaco.languages.typescript.ScriptTarget.ES2015,\n                allowNonTsExtensions: true,\n                allowJs: true,\n                module: monaco.languages.typescript.ModuleKind.None\n            });\n            try {\n                monaco.languages.typescript.javascriptDefaults.addExtraLib('', 'condition-editor-variables.d.ts');\n            }\n            catch (e) {\n                monaco.languages.typescript.javascriptDefaults\n                    ._extraLibs['condition-editor-variables.d.ts'] = '';\n            }\n            try {\n                monaco.languages.typescript.javascriptDefaults.addExtraLib('', 'condition-editor-functions.d.ts');\n            }\n            catch (e) {\n                monaco.languages.typescript.javascriptDefaults\n                    ._extraLibs['condition-editor-functions.d.ts'] = '';\n            }\n            this._updateVariables();\n            this._updateFunctions();\n        };\n        AjfFbConditionEditor.prototype._updateVariables = function () {\n            var _this = this;\n            if (this._fields == null) {\n                return;\n            }\n            try {\n                monaco.languages.typescript.javascriptDefaults\n                    ._extraLibs['condition-editor-variables.d.ts'] =\n                    this._fields\n                        .map(function (field) {\n                        return \"declare const \" + field.name + \": \" + _this._fieldVarType(field.fieldType) + \";\";\n                    })\n                        .join('\\n');\n            }\n            catch (e) { }\n        };\n        AjfFbConditionEditor.prototype._updateFunctions = function () {\n            try {\n                monaco.languages.typescript.javascriptDefaults._extraLibs['condition-editor-functions.d.ts'] =\n                    models.AjfExpressionUtils.UTIL_FUNCTIONS;\n            }\n            catch (e) { }\n        };\n        AjfFbConditionEditor.prototype._fieldVarType = function (fieldType) {\n            switch (fieldType) {\n                case forms$1.AjfFieldType.Boolean:\n                    return 'boolean';\n                case forms$1.AjfFieldType.Date:\n                case forms$1.AjfFieldType.DateInput:\n                case forms$1.AjfFieldType.Time:\n                    return 'Date';\n                case forms$1.AjfFieldType.Empty:\n                    return 'void';\n                case forms$1.AjfFieldType.Formula:\n                    return 'number';\n                case forms$1.AjfFieldType.MultipleChoice:\n                case forms$1.AjfFieldType.SingleChoice:\n                    return 'any';\n                case forms$1.AjfFieldType.Number:\n                    return 'number';\n                case forms$1.AjfFieldType.Table:\n                    return 'Array';\n                case forms$1.AjfFieldType.String:\n                case forms$1.AjfFieldType.Text:\n                    return 'string';\n            }\n            return null;\n        };\n        AjfFbConditionEditor.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-condition-editor',\n                        template: \"<div class=\\\"ajf-editor\\\">\\n  <ajf-monaco-editor\\n      (init)=\\\"onEditorInit()\\\"\\n      (valueChange)=\\\"editedValue = $event\\\"\\n      [value]=\\\"condition\\\" language=\\\"javascript\\\"></ajf-monaco-editor>\\n</div>\\n<div class=\\\"ajf-editor-panel\\\">\\n  <ng-container *ngIf=\\\"fields as curFields\\\">\\n    <mat-nav-list dense *ngIf=\\\"curFields!.length > 0\\\">\\n      <a mat-list-item\\n          (click)=\\\"insertVariable(field.name)\\\"\\n          [matTooltip]=\\\"field.label\\\"\\n          *ngFor=\\\"let field of curFields!\\\">\\n        <ajf-node-icon [node]=\\\"field\\\"></ajf-node-icon>\\n        {{ field.name }}\\n      </a>\\n    </mat-nav-list>\\n  </ng-container>\\n</div>\\n\",\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        encapsulation: core.ViewEncapsulation.None,\n                        styles: [\"ajf-condition-editor{display:flex;flex-direction:row;align-items:stretch;max-height:512px}ajf-condition-editor .ajf-editor{flex:.75 0 auto;display:flex;flex-direction:row;align-items:stretch}ajf-condition-editor .ajf-editor monaco-editor{flex:1 0 auto;min-width:512px;min-height:256px}ajf-condition-editor .ajf-editor-panel{flex:.25 0 auto;overflow-y:auto}ajf-condition-editor ajf-monaco-editor{min-width:400px}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfFbConditionEditor.ctorParameters = function () { return [\n            { type: forms$1.AjfValidationService }\n        ]; };\n        AjfFbConditionEditor.propDecorators = {\n            monacoEditor: [{ type: core.ViewChild, args: [monacoEditor.AjfMonacoEditor, { static: true },] }],\n            fields: [{ type: core.Input }],\n            condition: [{ type: core.Input }]\n        };\n        return AjfFbConditionEditor;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFbConditionEditorDialog = /** @class */ (function () {\n        function AjfFbConditionEditorDialog(service, dialogRef) {\n            this.dialogRef = dialogRef;\n            this._fields = service.flatFields.pipe(operators.map(function (fields) { return fields.sort(function (f1, f2) { return f1.name.localeCompare(f2.name); }); }));\n        }\n        Object.defineProperty(AjfFbConditionEditorDialog.prototype, \"fields\", {\n            get: function () { return this._fields; },\n            enumerable: true,\n            configurable: true\n        });\n        AjfFbConditionEditorDialog.prototype.saveCondition = function () {\n            if (this.editor == null) {\n                return;\n            }\n            var newValue = this.editor.editedValue;\n            this.dialogRef.close(newValue);\n        };\n        AjfFbConditionEditorDialog.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-condition-editor-dialog',\n                        template: \"<h3 matDialogTitle translate>Edit condition</h3>\\n<mat-dialog-content>\\n  <ajf-condition-editor\\n      *ngIf=\\\"fields|async as curFields\\\"\\n      [fields]=\\\"curFields!\\\"\\n      [condition]=\\\"condition\\\"></ajf-condition-editor>\\n</mat-dialog-content>\\n<mat-dialog-actions>\\n  <button mat-button translate (click)=\\\"saveCondition()\\\">Save</button>\\n  <button mat-button translate matDialogClose>Close</button>\\n</mat-dialog-actions>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\"ajf-condition-editor-dialog mat-dialog-content{overflow:visible}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfFbConditionEditorDialog.ctorParameters = function () { return [\n            { type: AjfFormBuilderService },\n            { type: dialog.MatDialogRef }\n        ]; };\n        AjfFbConditionEditorDialog.propDecorators = {\n            editor: [{ type: core.ViewChild, args: [AjfFbConditionEditor, { static: false },] }]\n        };\n        return AjfFbConditionEditorDialog;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFbStringIdentifierDialogComponent = /** @class */ (function () {\n        function AjfFbStringIdentifierDialogComponent(_service, _cdr) {\n            var _this = this;\n            this._service = _service;\n            this._cdr = _cdr;\n            this.dataSource = new table.MatTableDataSource();\n            this.displayedColumns = ['label', 'value', 'delete'];\n            this.separatorKeysCodes = [keycodes.ENTER, keycodes.COMMA];\n            this._stringIdentifierSub = rxjs.Subscription.EMPTY;\n            this._stringIdentifierSub = _service.stringIdentifier.subscribe(function (identifier) {\n                _this.dataSource.data = tslib.__spread(identifier);\n            });\n            this.fields$ = _service.flatFields.pipe(operators.map(function (fields) {\n                return fields.sort(function (f1, f2) { return f1.name.localeCompare(f2.name); }).map(function (f) { return f.name; })\n                    .filter(function (f) { return f.length > 0; });\n            }), operators.shareReplay(1));\n        }\n        AjfFbStringIdentifierDialogComponent.prototype.addRow = function () {\n            this.dataSource.data = tslib.__spread(this.dataSource.data, [{ label: '', value: [] }]);\n        };\n        AjfFbStringIdentifierDialogComponent.prototype.deleteRow = function (rowIdx) {\n            this.dataSource.data = tslib.__spread(this.dataSource.data.slice(0, rowIdx), this.dataSource.data.slice(rowIdx + 1));\n        };\n        AjfFbStringIdentifierDialogComponent.prototype.addValue = function (row, evt, valueInput) {\n            if (evt.value.length === 0) {\n                return;\n            }\n            row.value = tslib.__spread(row.value, [evt.value]);\n            valueInput.value = '';\n            this._cdr.markForCheck();\n        };\n        AjfFbStringIdentifierDialogComponent.prototype.removeValue = function (row, value) {\n            var idx = row.value.indexOf(value);\n            if (idx > -1) {\n                row.value = tslib.__spread(row.value.slice(0, idx), row.value.slice(idx + 1));\n                this._cdr.markForCheck();\n            }\n        };\n        AjfFbStringIdentifierDialogComponent.prototype.ngOnDestroy = function () {\n            this._stringIdentifierSub.unsubscribe();\n        };\n        AjfFbStringIdentifierDialogComponent.prototype.saveStringIdentifier = function () {\n            this._service.saveStringIdentifier(this.dataSource.data);\n        };\n        AjfFbStringIdentifierDialogComponent.prototype.selected = function (row, evt) {\n            row.value = tslib.__spread(row.value, [evt.option.value]);\n            this._cdr.markForCheck();\n        };\n        AjfFbStringIdentifierDialogComponent.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-fb-string-identifier-dialog',\n                        template: \"<h3 matDialogTitle translate>Edit identifier</h3>\\n<mat-dialog-content>\\n  <button (click)=\\\"addRow()\\\" mat-button>\\n    <mat-icon>add</mat-icon>\\n    <span translate>Add value</span>\\n  </button>\\n  <mat-table [dataSource]=\\\"dataSource\\\">\\n    <ng-container matColumnDef=\\\"label\\\">\\n      <mat-header-cell *matHeaderCellDef translate>Label</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row; let idx = index\\\">\\n        <mat-form-field>\\n          <input matInput [placeholder]=\\\"'Label'|translate\\\" autofocus [(ngModel)]=\\\"row.label\\\">\\n        </mat-form-field>\\n      </mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"value\\\">\\n      <mat-header-cell *matHeaderCellDef translate>Value</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row; let idx = index\\\">\\n        <mat-form-field>\\n          <mat-chip-list #chipList>\\n            <mat-chip\\n                *ngFor=\\\"let field of row.value\\\"\\n                (removed)=\\\"removeValue(row, field)\\\"\\n            >\\n              {{ field }}\\n              <mat-icon matChipRemove>cancel</mat-icon>\\n            </mat-chip>\\n          </mat-chip-list>\\n          <input\\n              #valueInput\\n              [ngModel]=\\\"row.value\\\"\\n              [matAutocomplete]=\\\"valueAc\\\"\\n              [matChipInputFor]=\\\"chipList\\\"\\n              [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\n              [matChipInputAddOnBlur]=\\\"true\\\"\\n              (matChipInputTokenEnd)=\\\"addValue(row, $event, valueInput)\\\"\\n              [placeholder]=\\\"'Value'|translate\\\">\\n          <mat-autocomplete #valueAc=\\\"matAutocomplete\\\"\\n              (optionSelected)=\\\"selected(row, $event)\\\">\\n            <mat-option *ngFor=\\\"let field of fields$ | async\\\" [value]=\\\"field\\\">{{field}}</mat-option>\\n          </mat-autocomplete>\\n        </mat-form-field>\\n      </mat-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"delete\\\">\\n      <mat-header-cell *matHeaderCellDef translate>Delete</mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row; let idx = index\\\">\\n          <mat-icon (click)=\\\"deleteRow(idx)\\\">delete</mat-icon>\\n      </mat-cell>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n  </mat-table>\\n</mat-dialog-content>\\n<mat-dialog-actions>\\n  <button mat-button translate matDialogClose (click)=\\\"saveStringIdentifier()\\\">Save</button>\\n</mat-dialog-actions>\\n\",\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        encapsulation: core.ViewEncapsulation.None,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfFbStringIdentifierDialogComponent.ctorParameters = function () { return [\n            { type: AjfFormBuilderService },\n            { type: core.ChangeDetectorRef }\n        ]; };\n        return AjfFbStringIdentifierDialogComponent;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFormBuilder = /** @class */ (function () {\n        function AjfFormBuilder(_service, _dialog) {\n            var _this = this;\n            this._service = _service;\n            this._dialog = _dialog;\n            this._vc = new core.EventEmitter();\n            this._init = false;\n            this._editConditionSub = rxjs.Subscription.EMPTY;\n            this._beforeNodesUpdateSub = rxjs.Subscription.EMPTY;\n            this._editChoicesOriginSub = rxjs.Subscription.EMPTY;\n            this._stringIdentifierSub = rxjs.Subscription.EMPTY;\n            this._nodeTypes = _service.availableNodeTypes;\n            this._nodeEntriesTree = _service.nodeEntriesTree;\n            this._choicesOrigins = _service.choicesOrigins;\n            this._editConditionSub = this._service.editedCondition\n                .subscribe(function (condition) {\n                if (_this._editConditionDialog != null) {\n                    _this._editConditionDialog.close();\n                    _this._editConditionDialog = null;\n                }\n                if (condition != null) {\n                    _this._editConditionDialog = _this._dialog.open(AjfFbConditionEditorDialog, { disableClose: true });\n                }\n            });\n            this._editChoicesOriginSub =\n                this._service.editedChoicesOrigin.subscribe(function (choicesOrigin) {\n                    if (_this._editChoicesOriginDialog != null) {\n                        _this._editChoicesOriginDialog.close();\n                        _this._editChoicesOriginDialog = null;\n                    }\n                    if (choicesOrigin != null) {\n                        _this._editChoicesOriginDialog =\n                            _this._dialog.open(AjfFbChoicesOriginEditorDialog, { disableClose: true });\n                    }\n                });\n            this._beforeNodesUpdateSub = this._service.beforeNodesUpdate\n                .subscribe(function () {\n                if (_this.designerCont == null) {\n                    return;\n                }\n                _this._lastScrollTop = _this.designerCont.nativeElement.scrollTop;\n            });\n            this.nodeEntriesTree\n                .pipe(operators.sample(this._vc))\n                .subscribe(function () {\n                if (_this.designerCont == null) {\n                    return;\n                }\n                _this.designerCont.nativeElement.scrollTop = _this._lastScrollTop;\n            });\n            this._stringIdentifierSub = this._service.stringIdentifier.subscribe(function () { });\n        }\n        Object.defineProperty(AjfFormBuilder.prototype, \"form\", {\n            get: function () { return this._form; },\n            set: function (form) {\n                if (this._form !== form) {\n                    this._form = form;\n                    if (this._init) {\n                        this._setCurrentForm();\n                    }\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilder.prototype, \"nodeTypes\", {\n            get: function () { return this._nodeTypes; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilder.prototype, \"nodeEntriesTree\", {\n            get: function () { return this._nodeEntriesTree; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFormBuilder.prototype, \"choicesOrigins\", {\n            get: function () {\n                return this._choicesOrigins;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        AjfFormBuilder.prototype.ngAfterViewChecked = function () {\n            this._vc.emit();\n        };\n        AjfFormBuilder.prototype.ngAfterContentInit = function () {\n            this._setCurrentForm();\n            this._init = true;\n        };\n        AjfFormBuilder.prototype.ngOnDestroy = function () {\n            this._editConditionSub.unsubscribe();\n            this._beforeNodesUpdateSub.unsubscribe();\n            this._editChoicesOriginSub.unsubscribe();\n            this._stringIdentifierSub.unsubscribe();\n            this._service.setForm(null);\n        };\n        AjfFormBuilder.prototype.createChoicesOrigin = function () {\n            this._service.createChoicesOrigin();\n        };\n        AjfFormBuilder.prototype.disableDropPredicate = function () {\n            return false;\n        };\n        AjfFormBuilder.prototype.editChoicesOrigin = function (choicesOrigin) {\n            this._service.editChoicesOrigin(choicesOrigin);\n        };\n        AjfFormBuilder.prototype.editStringIdentifier = function () {\n            if (this._stringIdentifierDialog != null) {\n                this._stringIdentifierDialog.close();\n                this._stringIdentifierDialog = null;\n            }\n            this._stringIdentifierDialog =\n                this._dialog.open(AjfFbStringIdentifierDialogComponent, {\n                    disableClose: true,\n                    width: '60%',\n                    height: '60%'\n                });\n        };\n        AjfFormBuilder.prototype._setCurrentForm = function () {\n            this._service.setForm(this._form);\n        };\n        AjfFormBuilder.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-form-builder',\n                        template: \"<mat-toolbar>\\n  <button mat-icon-button (click)=\\\"leftSidenav.toggle()\\\">\\n    <mat-icon>add_box</mat-icon>\\n  </button>\\n  <button mat-button [matMenuTriggerFor]=\\\"choicesMenu\\\" translate>Choices</button>\\n  <button mat-button (click)=\\\"editStringIdentifier()\\\" translate>Identifier</button>\\n  <mat-menu #choicesMenu>\\n    <button (click)=\\\"createChoicesOrigin()\\\" mat-menu-item translate>New..</button>\\n    <ng-container *ngIf=\\\"choicesOrigins|async as cos\\\">\\n      <button *ngFor=\\\"let choicesOrigin of cos\\\"\\n          (click)=\\\"editChoicesOrigin(choicesOrigin)\\\" mat-menu-item>\\n        {{ choicesOrigin.label || choicesOrigin.name }}\\n      </button>\\n    </ng-container>\\n  </mat-menu>\\n  <span class=\\\"ajf-spacer\\\"></span>\\n  <button mat-icon-button (click)=\\\"rightSidenav.toggle()\\\">\\n    <mat-icon>settings</mat-icon>\\n  </button>\\n</mat-toolbar>\\n<mat-drawer-container cdkDropListGroup>\\n  <mat-drawer #leftSidenav position=\\\"start\\\" mode=\\\"over\\\">\\n    <div #sourceDropList cdkDropList\\n        [cdkDropListEnterPredicate]=\\\"disableDropPredicate\\\"\\n        [cdkDropListData]=\\\"nodeTypes\\\">\\n      <ajf-fb-node-type-entry *ngFor=\\\"let nodeType of nodeTypes\\\"\\n          cdkDrag\\n          [cdkDragData]=\\\"nodeType\\\"\\n          (cdkDragStarted)=\\\"leftSidenav.close()\\\"\\n          [nodeType]=\\\"nodeType\\\"></ajf-fb-node-type-entry>\\n    </div>\\n  </mat-drawer>\\n  <mat-drawer #rightSidenav position=\\\"end\\\" mode=\\\"side\\\" [opened]=\\\"true\\\">\\n    <ajf-fb-node-properties></ajf-fb-node-properties>\\n  </mat-drawer>\\n  <div #designer class=\\\"ajf-designer\\\">\\n    <ajf-fb-node-entry\\n        *ngFor=\\\"let nodeEntry of (nodeEntriesTree|async); let isFirst = first\\\"\\n        [isFirst]=\\\"isFirst\\\"\\n        [nodeEntry]=\\\"nodeEntry\\\"></ajf-fb-node-entry>\\n  </div>\\n</mat-drawer-container>\\n\",\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        encapsulation: core.ViewEncapsulation.None,\n                        styles: [\"ajf-form-builder{display:flex;position:relative;min-height:300px;flex-direction:column;align-items:stretch}ajf-form-builder mat-toolbar mat-menu div[mat-menu-item]>button[mat-button]{flex:1 0 auto}ajf-form-builder mat-toolbar mat-menu div[mat-menu-item]>button[mat-icon-button]{flex:0 0 auto}ajf-form-builder mat-drawer-container{flex:1}ajf-form-builder mat-drawer-container mat-drawer{max-width:20%}ajf-form-builder mat-drawer-container .ajf-designer{padding:1em}ajf-form-builder mat-toolbar .ajf-spacer{flex:1 1 auto}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfFormBuilder.ctorParameters = function () { return [\n            { type: AjfFormBuilderService },\n            { type: dialog.MatDialog }\n        ]; };\n        AjfFormBuilder.propDecorators = {\n            designerCont: [{ type: core.ViewChild, args: ['designer', { static: true },] }],\n            form: [{ type: core.Input }]\n        };\n        return AjfFormBuilder;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var branchColors = [\n        '#F44336',\n        '#4CAF50',\n        '#3F51B5',\n        '#FFC107',\n        '#795548',\n    ];\n    var AjfFbNodeEntry = /** @class */ (function () {\n        function AjfFbNodeEntry(_service) {\n            this._service = _service;\n            this._hasContent = false;\n            this._isFirst = false;\n            this._isNodeEntry = false;\n            this._level = 0;\n            this._branchColors = branchColors.slice(0);\n            this._dropZones = ['fbdz-node'];\n            this._slideDropZones = ['fbdz-slide'];\n            this._originOffset = 0;\n            this._originLeftMargin = '0';\n            this._firstBranchColor = branchColors[0];\n            this._branchLinesSubscription = rxjs.Subscription.EMPTY;\n            this._childEntriesSubscription = rxjs.Subscription.EMPTY;\n            this._currentEditedNode = this._service.editedNodeEntry;\n        }\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"hasContent\", {\n            get: function () { return this._hasContent; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"isFirst\", {\n            get: function () { return this._isFirst; },\n            set: function (isFirst) { this._isFirst = isFirst; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"isNodeEntry\", {\n            get: function () { return this._isNodeEntry; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"nodeEntry\", {\n            get: function () { return this._nodeEntry; },\n            set: function (nodeEntry) {\n                this._nodeEntry = nodeEntry;\n                if (nodeEntry != null && nodeEntry.node !== void 0) {\n                    var ne = nodeEntry;\n                    this._isNodeEntry = true;\n                    var node = ne.node;\n                    this._hasContent = node != null && forms$1.isContainerNode(node);\n                }\n                else {\n                    this._isNodeEntry = false;\n                    this._hasContent = false;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"level\", {\n            get: function () { return this._level; },\n            set: function (value) { this._level = value; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"realNodeEntry\", {\n            get: function () {\n                return this._nodeEntry;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"branchColors\", {\n            get: function () { return this._branchColors; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"dropZones\", {\n            get: function () { return this._dropZones; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"slideDropZones\", {\n            get: function () { return this._slideDropZones; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"originOffset\", {\n            get: function () { return this._originOffset; },\n            set: function (originOffset) {\n                this._originOffset = originOffset;\n                this._originLeftMargin = this._originOffset * 4 + \"px\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"originLeftMargin\", {\n            get: function () { return this._originLeftMargin; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"firstBranchColor\", {\n            get: function () { return this._firstBranchColor; },\n            set: function (firstBranchColor) {\n                var idx = branchColors.indexOf(firstBranchColor);\n                if (idx > 0) {\n                    this._firstBranchColor = firstBranchColor;\n                    this._branchColors = branchColors.slice(idx).concat(branchColors.slice(0, idx));\n                }\n                else {\n                    this._firstBranchColor = branchColors[0];\n                    this._branchColors = branchColors.slice(0);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeEntry.prototype, \"currentEditedNode\", {\n            get: function () {\n                return this._currentEditedNode;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        AjfFbNodeEntry.prototype.onResize = function () {\n        };\n        AjfFbNodeEntry.prototype.edit = function () {\n            if (this.nodeEntry == null || !this.isNodeEntry) {\n                return;\n            }\n            this._service.editNodeEntry(this.nodeEntry);\n        };\n        AjfFbNodeEntry.prototype.delete = function () {\n            if (this.nodeEntry == null || !this.isNodeEntry) {\n                return;\n            }\n            this._service.deleteNodeEntry(this.nodeEntry);\n        };\n        AjfFbNodeEntry.prototype.ngAfterViewInit = function () {\n            var _this = this;\n            setTimeout(function () { return _this._updateBranchHeights(); });\n            this._childEntriesSubscription = this.childEntries.changes\n                .subscribe(function () {\n                _this._updateBranchHeights();\n            });\n        };\n        AjfFbNodeEntry.prototype.ngOnDestroy = function () {\n            this._branchLinesSubscription.unsubscribe();\n            this._childEntriesSubscription.unsubscribe();\n        };\n        AjfFbNodeEntry.prototype.onDropSuccess = function (evt, content) {\n            if (content === void 0) { content = false; }\n            var dd = evt.item.data;\n            if (this._nodeEntry == null) {\n                this._service.insertNode(dd, null, 0, content);\n                return;\n            }\n            if (dd.nodeType !== void 0 && (!this.isNodeEntry || (this.isNodeEntry && content))) {\n                var emptySlot = content ?\n                    { parent: this.nodeEntry.node, parentNode: 0 } :\n                    this._nodeEntry;\n                this._service.insertNode(dd, emptySlot.parent, emptySlot.parentNode, content);\n            }\n        };\n        AjfFbNodeEntry.prototype.disableSlideDropPredicate = function (item) {\n            return !item.data.isSlide;\n        };\n        AjfFbNodeEntry.prototype.emptyAreaDropPredicate = function () {\n            var _this = this;\n            return function (item, _drop) {\n                if (_this._level > 0) {\n                    return !item.data.isSlide;\n                }\n                return item.data.isSlide || false;\n            };\n        };\n        AjfFbNodeEntry.prototype._updateBranchHeights = function () {\n            if (this.nodeEntry == null || !this.isNodeEntry\n                || this.branchLines == null || this.childEntries == null) {\n                return;\n            }\n            var nodeEntry = this.nodeEntry;\n            var branchLines = this.branchLines.toArray();\n            var sliceIdx = nodeEntry.content != null ? nodeEntry.content.length : 0;\n            var childEntries = this.childEntries.toArray().slice(sliceIdx);\n            if (branchLines.length != childEntries.length) {\n                return;\n            }\n            branchLines.forEach(function (bl, idx) {\n                var ce = childEntries[idx];\n                bl.height = ce.nativeElement.offsetTop;\n            });\n        };\n        AjfFbNodeEntry.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-fb-node-entry',\n                        template: \"<ng-container *ngIf=\\\"nodeEntry != null ; else rootEmpty\\\">\\n  <ng-template [ngIf]=\\\"isNodeEntry\\\">\\n    <ajf-fb-branch-line\\n        *ngFor=\\\"let childNodeEntry of realNodeEntry.children; let idx = index\\\"\\n        [offset]=\\\"idx\\\"\\n        [color]=\\\"branchColors[idx]\\\"></ajf-fb-branch-line>\\n  </ng-template>\\n  <div class=\\\"mat-card-container\\\"\\n      [class.ajf-highlight]=\\\"(currentEditedNode|async) == nodeEntry\\\">\\n    <div *ngIf=\\\"!isFirst\\\"\\n        class=\\\"ajf-origin-line\\\"\\n        [style.margin-left]=\\\"originLeftMargin\\\"\\n        [style.border-color]=\\\"firstBranchColor\\\"></div>\\n    <ng-template [ngIf]=\\\"isNodeEntry\\\">\\n      <mat-card>\\n        <div class=\\\"ajf-title-row\\\">\\n          <ajf-node-icon [node]=\\\"realNodeEntry.node\\\"></ajf-node-icon>\\n          <span class=\\\"ajf-title\\\" [innerHTML]=\\\"(realNodeEntry.node.label || realNodeEntry.node.name)  | translate\\\"></span>\\n          <span class=\\\"ajf-actions\\\">\\n            <button [disabled]=\\\"(currentEditedNode|async) == nodeEntry\\\" (click)=\\\"edit()\\\" mat-icon-button>\\n              <mat-icon>edit</mat-icon>\\n            </button>\\n            <button [disabled]=\\\"(currentEditedNode|async) == null\\\" (click)=\\\"delete()\\\" mat-icon-button>\\n              <mat-icon>delete</mat-icon>\\n            </button>\\n          </span>\\n        </div>\\n        <div *ngIf=\\\"hasContent\\\">\\n          <ajf-fb-node-entry\\n              *ngFor=\\\"let contentEntry of realNodeEntry.content; let isFirstChild = first; let idx = index\\\"\\n              [level]=\\\"level + 1\\\"\\n              [isFirst]=\\\"isFirstChild\\\"\\n              [firstBranchColor]=\\\"branchColors[idx]\\\"\\n              [nodeEntry]=\\\"contentEntry\\\"></ajf-fb-node-entry>\\n          <mat-card class=\\\"ajf-empty\\\"\\n              *ngIf=\\\"realNodeEntry.content.length === 0\\\"\\n              cdkDropList\\n              [cdkDropListEnterPredicate]=\\\"disableSlideDropPredicate\\\"\\n              (cdkDropListDropped)=\\\"onDropSuccess($event, true)\\\">&nbsp;</mat-card>\\n        </div>\\n      </mat-card>\\n    </ng-template>\\n    <ng-template [ngIf]=\\\"!isNodeEntry\\\">\\n      <mat-card class=\\\"ajf-empty\\\"\\n          cdkDropList\\n          [cdkDropListEnterPredicate]=\\\"emptyAreaDropPredicate()\\\"\\n          (cdkDropListDropped)=\\\"onDropSuccess($event)\\\">&nbsp;</mat-card>\\n    </ng-template>\\n  </div>\\n  <ng-template [ngIf]=\\\"isNodeEntry\\\">\\n    <ajf-fb-node-entry\\n        *ngFor=\\\"let childNodeEntry of realNodeEntry.children; let idx = index\\\"\\n        [level]=\\\"level\\\"\\n        [originOffset]=\\\"idx\\\"\\n        [firstBranchColor]=\\\"branchColors[idx]\\\"\\n        [nodeEntry]=\\\"childNodeEntry\\\"></ajf-fb-node-entry>\\n  </ng-template>\\n</ng-container>\\n<ng-template #rootEmpty>\\n  <div class=\\\"mat-card-container\\\">\\n    <mat-card class=\\\"ajf-empty\\\"\\n        cdkDropList\\n        [cdkDropListEnterPredicate]=\\\"emptyAreaDropPredicate()\\\"\\n        (cdkDropListDropped)=\\\"onDropSuccess($event)\\\">&nbsp;</mat-card>\\n  </div>\\n</ng-template>\\n\",\n                        host: {\n                            '(window.resize)': 'onResize()'\n                        },\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\"ajf-fb-node-entry{display:block;position:relative}ajf-fb-node-entry .mat-card-container{position:relative}ajf-fb-node-entry .mat-card-container .ajf-origin-line{position:absolute;top:0;left:25px;width:25px;height:25px;border-bottom:2px solid;border-left:2px solid;border-bottom-left-radius:.5em}ajf-fb-node-entry .mat-card-container mat-card{margin-left:50px;padding:.5em 1em;margin-top:.2em;margin-bottom:.2em;background-color:#fff}ajf-fb-node-entry .mat-card-container mat-card .ajf-title-row{display:flex;flex-direction:row;align-items:center}ajf-fb-node-entry .mat-card-container mat-card .ajf-title-row>.ajf-title{flex:1 1 auto}ajf-fb-node-entry .mat-card-container mat-card .ajf-title-row>.ajf-actions{flex:0 0 auto;white-space:nowrap}ajf-fb-node-entry .mat-card-container mat-card.ajf-empty{line-height:36px;border:2px dashed;box-shadow:none;box-sizing:border-box}ajf-fb-node-entry .mat-card-container.ajf-highlight>mat-card{background-color:#fff9c4}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfFbNodeEntry.ctorParameters = function () { return [\n            { type: AjfFormBuilderService }\n        ]; };\n        AjfFbNodeEntry.propDecorators = {\n            branchLines: [{ type: core.ViewChildren, args: [AjfFbBranchLine,] }],\n            childEntries: [{ type: core.ViewChildren, args: [AjfFbNodeEntry, { read: core.ElementRef },] }],\n            isFirst: [{ type: core.Input }],\n            nodeEntry: [{ type: core.Input }],\n            level: [{ type: core.Input }],\n            originOffset: [{ type: core.Input }],\n            firstBranchColor: [{ type: core.Input }]\n        };\n        return AjfFbNodeEntry;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFbValidationConditionEditorDialog = /** @class */ (function () {\n        function AjfFbValidationConditionEditorDialog(service, dialogRef) {\n            this.dialogRef = dialogRef;\n            this._fields = service.flatFields.pipe(operators.map(function (fields) { return fields.sort(function (f1, f2) { return f1.name.localeCompare(f2.name); }); }));\n        }\n        Object.defineProperty(AjfFbValidationConditionEditorDialog.prototype, \"fields\", {\n            get: function () { return this._fields; },\n            enumerable: true,\n            configurable: true\n        });\n        AjfFbValidationConditionEditorDialog.prototype.saveCondition = function () {\n            if (this.editor == null) {\n                return;\n            }\n            var newValue = this.editor.editedValue;\n            this.dialogRef.close({ condition: newValue, errorMessage: this.errorMessage });\n        };\n        AjfFbValidationConditionEditorDialog.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-fb-validation-condition-editor-dialog',\n                        template: \"<h3 matDialogTitle translate>Edit condition</h3>\\n<mat-dialog-content>\\n  <mat-form-field>\\n    <input matInput [(ngModel)]=\\\"errorMessage\\\" [placeholder]=\\\"'Error message' | translate\\\">\\n  </mat-form-field>\\n  <ajf-condition-editor\\n      *ngIf=\\\"fields|async as curFields\\\"\\n      [fields]=\\\"curFields!\\\"\\n      [condition]=\\\"condition\\\"></ajf-condition-editor>\\n</mat-dialog-content>\\n<mat-dialog-actions>\\n  <button mat-button translate (click)=\\\"saveCondition()\\\">Save</button>\\n  <button mat-button translate matDialogClose>Close</button>\\n</mat-dialog-actions>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\"ajf-fb-validation-condition-editor-dialog mat-dialog-content{overflow:visible}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfFbValidationConditionEditorDialog.ctorParameters = function () { return [\n            { type: AjfFormBuilderService },\n            { type: dialog.MatDialogRef }\n        ]; };\n        AjfFbValidationConditionEditorDialog.propDecorators = {\n            editor: [{ type: core.ViewChild, args: [AjfFbConditionEditor, { static: false },] }]\n        };\n        return AjfFbValidationConditionEditorDialog;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFbWarningConditionEditorDialog = /** @class */ (function () {\n        function AjfFbWarningConditionEditorDialog(service, dialogRef) {\n            this.dialogRef = dialogRef;\n            this._fields = service.flatFields.pipe(operators.map(function (fields) { return fields.sort(function (f1, f2) { return f1.name.localeCompare(f2.name); }); }));\n        }\n        Object.defineProperty(AjfFbWarningConditionEditorDialog.prototype, \"fields\", {\n            get: function () { return this._fields; },\n            enumerable: true,\n            configurable: true\n        });\n        AjfFbWarningConditionEditorDialog.prototype.saveCondition = function () {\n            if (this.editor == null) {\n                return;\n            }\n            var newValue = this.editor.editedValue;\n            this.dialogRef.close({ condition: newValue, warningMessage: this.warningMessage });\n        };\n        AjfFbWarningConditionEditorDialog.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-fb-warning-condition-editor-dialog',\n                        template: \"<h3 matDialogTitle translate>Edit condition</h3>\\n<mat-dialog-content>\\n  <mat-form-field>\\n    <input matInput [(ngModel)]=\\\"warningMessage\\\"\\n      [placeholder]=\\\"'Warning message' | translate\\\">\\n  </mat-form-field>\\n  <ajf-condition-editor\\n      *ngIf=\\\"fields|async as curFields\\\"\\n      [fields]=\\\"curFields!\\\"\\n      [condition]=\\\"condition\\\"></ajf-condition-editor>\\n</mat-dialog-content>\\n<mat-dialog-actions>\\n  <button mat-button translate (click)=\\\"saveCondition()\\\">Save</button>\\n  <button mat-button translate matDialogClose>Close</button>\\n</mat-dialog-actions>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\"ajf-fb-warning-condition-editor-dialog mat-dialog-content{overflow:visible}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfFbWarningConditionEditorDialog.ctorParameters = function () { return [\n            { type: AjfFormBuilderService },\n            { type: dialog.MatDialogRef }\n        ]; };\n        AjfFbWarningConditionEditorDialog.propDecorators = {\n            editor: [{ type: core.ViewChild, args: [AjfFbConditionEditor, { static: false },] }]\n        };\n        return AjfFbWarningConditionEditorDialog;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    function checkRepsValidity(c) {\n        var minReps = c.value.minReps;\n        var maxReps = c.value.maxReps;\n        if (minReps != null && maxReps != null && minReps > maxReps) {\n            return {\n                reps: 'Min repetions cannot be greater than max repetitions'\n            };\n        }\n        return null;\n    }\n    function checkValueLimitsValidity(c) {\n        var minValue = c.value.minValue;\n        var maxValue = c.value.maxValue;\n        if (minValue != null && maxValue != null && minValue > maxValue) {\n            return {\n                valueLimit: 'Min value cannot be greater than max value'\n            };\n        }\n        return null;\n    }\n    function checkDigitsValidity(c) {\n        var minDigits = c.value.minDigits;\n        var maxDigits = c.value.maxDigits;\n        if (minDigits != null && maxDigits != null && minDigits > maxDigits) {\n            return {\n                digits: 'Min digits cannot be greater than max digits'\n            };\n        }\n        return null;\n    }\n    var AjfFbNodeProperties = /** @class */ (function () {\n        function AjfFbNodeProperties(_service, _dialog, _fb) {\n            var _this = this;\n            this._service = _service;\n            this._dialog = _dialog;\n            this._fb = _fb;\n            this._fieldSizes = [\n                { label: 'Normal', value: 'normal' },\n                { label: 'Small', value: 'small' },\n                { label: 'Smaller', value: 'smaller' },\n                { label: 'Tiny', value: 'tiny' },\n                { label: 'Mini', value: 'mini' }\n            ];\n            this._choicesOrigins = [];\n            this._conditionalBranches = [];\n            this._validationConditions = [];\n            this._warningConditions = [];\n            this.isRepeatingContainerNode = function (nodeEntry) {\n                return nodeEntry != null && forms$1.isRepeatingContainerNode(nodeEntry.node);\n            };\n            this._visibilitySub = rxjs.Subscription.EMPTY;\n            this._conditionalBranchesSub = rxjs.Subscription.EMPTY;\n            this._formulaRepsSub = rxjs.Subscription.EMPTY;\n            this._choicesFilterSub = rxjs.Subscription.EMPTY;\n            this._formulaSub = rxjs.Subscription.EMPTY;\n            this._forceValueSub = rxjs.Subscription.EMPTY;\n            this._validationConditionsSub = rxjs.Subscription.EMPTY;\n            this._warningConditionsSub = rxjs.Subscription.EMPTY;\n            this._nextSlideConditionSub = rxjs.Subscription.EMPTY;\n            this._choicesOriginsSub = rxjs.Subscription.EMPTY;\n            this._triggerConditionsSub = rxjs.Subscription.EMPTY;\n            this._editConditionDialogSub = rxjs.Subscription.EMPTY;\n            this._editValidationConditionDialogSub = rxjs.Subscription.EMPTY;\n            this._editWarningConditionDialogSub = rxjs.Subscription.EMPTY;\n            this._editVisibilityEvt = new core.EventEmitter();\n            this._editVisibilitySub = rxjs.Subscription.EMPTY;\n            this._editConditionalBranchEvt = new core.EventEmitter();\n            this._editConditionalBranchSub = rxjs.Subscription.EMPTY;\n            this._editFormulaRepsEvt = new core.EventEmitter();\n            this._editFormulaRepsSub = rxjs.Subscription.EMPTY;\n            this._editChoicesFilterEvt = new core.EventEmitter();\n            this._editChoicesFilterSub = rxjs.Subscription.EMPTY;\n            this._editFormulaEvt = new core.EventEmitter();\n            this._editFormulaSub = rxjs.Subscription.EMPTY;\n            this._editForceValueEvt = new core.EventEmitter();\n            this._editForceValueSub = rxjs.Subscription.EMPTY;\n            this._editValidationConditionEvt = new core.EventEmitter();\n            this._editValidationConditionSub = rxjs.Subscription.EMPTY;\n            this._addValidationConditionEvt = new core.EventEmitter();\n            this._addValidationConditionSub = rxjs.Subscription.EMPTY;\n            this._removeValidationConditionEvt = new core.EventEmitter();\n            this._removeValidationConditionSub = rxjs.Subscription.EMPTY;\n            this._editWarningConditionEvt = new core.EventEmitter();\n            this._editWarningConditionSub = rxjs.Subscription.EMPTY;\n            this._addWarningConditionEvt = new core.EventEmitter();\n            this._addWarningConditionSub = rxjs.Subscription.EMPTY;\n            this._removeWarningConditionEvt = new core.EventEmitter();\n            this._removeWarningConditionSub = rxjs.Subscription.EMPTY;\n            this._editNextSlideConditionEvt = new core.EventEmitter();\n            this._editNextSlideConditionSub = rxjs.Subscription.EMPTY;\n            this._editTriggerConditionEvt = new core.EventEmitter();\n            this._editTriggerConditionSub = rxjs.Subscription.EMPTY;\n            this._addTriggerConditionEvt = new core.EventEmitter();\n            this._addTriggerConditionSub = rxjs.Subscription.EMPTY;\n            this._removeTriggerConditionEvt = new core.EventEmitter();\n            this._removeTriggerConditionSub = rxjs.Subscription.EMPTY;\n            this._saveEvt = new core.EventEmitter();\n            this._saveSub = rxjs.Subscription.EMPTY;\n            this._nodeEntry = _service.editedNodeEntry;\n            this._choicesOriginsSub = _service.choicesOrigins\n                .subscribe(function (c) { return _this._choicesOrigins = c || []; });\n            this._enabled = this._nodeEntry.pipe(operators.map(function (n) { return n != null; }));\n            this._initForm();\n            this._initVisibilityEdit();\n            this._initConditionalBranchEdit();\n            this._initFormulaRepsEdit();\n            this._initChoicesFilterEdit();\n            this._initFormulaEdit();\n            this._initForceValueEdit();\n            this._initValidationConditionEdit();\n            this._initAddValidationCondition();\n            this._initRemoveValidationCondition();\n            this._initWarningConditionEdit();\n            this._initAddWarningCondition();\n            this._initRemoveWarningCondition();\n            this._initNextSlideConditionEdit();\n            this._initTriggerConditionEdit();\n            this._initAddTriggerCondition();\n            this._initRemoveTriggerCondition();\n            this._initSave();\n        }\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"fieldSizes\", {\n            get: function () { return this._fieldSizes; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"nodeEntry\", {\n            get: function () { return this._nodeEntry; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"choicesOrigins\", {\n            get: function () {\n                return this._choicesOrigins;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"enabled\", {\n            get: function () { return this._enabled; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"propertiesForm\", {\n            get: function () { return this._propertiesForm; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"hasChoices\", {\n            get: function () { return this._hasChoices; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"curVisibility\", {\n            get: function () { return this._curVisibility; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"curFormulaReps\", {\n            get: function () { return this._curFormulaReps; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"curChoicesFilter\", {\n            get: function () { return this._curChoicesFilter; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"curForceValue\", {\n            get: function () { return this._curForceValue; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"curFormula\", {\n            get: function () { return this._curFormula; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"conditionalBranches\", {\n            get: function () { return this._conditionalBranches; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"validationConditions\", {\n            get: function () { return this._validationConditions; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"warningConditions\", {\n            get: function () { return this._warningConditions; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"nextSlideCondition\", {\n            get: function () { return this._nextSlideCondition; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfFbNodeProperties.prototype, \"triggerConditions\", {\n            get: function () { return this._triggerConditions; },\n            enumerable: true,\n            configurable: true\n        });\n        AjfFbNodeProperties.prototype.editVisibility = function () {\n            this._editVisibilityEvt.emit();\n        };\n        AjfFbNodeProperties.prototype.editConditionalBranch = function (idx) {\n            if (idx < 0 || idx >= this._conditionalBranches.length) {\n                return;\n            }\n            this._editConditionalBranchEvt.emit(idx);\n        };\n        AjfFbNodeProperties.prototype.editFormulaReps = function () {\n            this._editFormulaRepsEvt.emit();\n        };\n        AjfFbNodeProperties.prototype.editChoicesFilter = function () {\n            this._editChoicesFilterEvt.emit();\n        };\n        AjfFbNodeProperties.prototype.editFormula = function () {\n            this._editFormulaEvt.emit();\n        };\n        AjfFbNodeProperties.prototype.editForceValue = function () {\n            this._editForceValueEvt.emit();\n        };\n        AjfFbNodeProperties.prototype.editValidationCondition = function (idx) {\n            if (idx < 0 || idx >= this._validationConditions.length) {\n                return;\n            }\n            this._editValidationConditionEvt.emit(idx);\n        };\n        AjfFbNodeProperties.prototype.addValidationCondition = function () {\n            this._addValidationConditionEvt.emit();\n        };\n        AjfFbNodeProperties.prototype.removeValidationCondition = function (idx) {\n            if (idx < 0 || idx >= this._validationConditions.length) {\n                return;\n            }\n            this._removeValidationConditionEvt.emit(idx);\n        };\n        AjfFbNodeProperties.prototype.editWarningCondition = function (idx) {\n            if (idx < 0 || idx >= this._warningConditions.length) {\n                return;\n            }\n            this._editWarningConditionEvt.emit(idx);\n        };\n        AjfFbNodeProperties.prototype.addWarningCondition = function () {\n            this._addWarningConditionEvt.emit();\n        };\n        AjfFbNodeProperties.prototype.removeWarningCondition = function (idx) {\n            if (idx < 0 || idx >= this._warningConditions.length) {\n                return;\n            }\n            this._removeWarningConditionEvt.emit(idx);\n        };\n        AjfFbNodeProperties.prototype.editNextSlideCondition = function () {\n            this._editNextSlideConditionEvt.emit();\n        };\n        AjfFbNodeProperties.prototype.editTriggerCondition = function (idx) {\n            if (idx < 0 || idx >= this._triggerConditions.length) {\n                return;\n            }\n            this._editTriggerConditionEvt.emit(idx);\n        };\n        AjfFbNodeProperties.prototype.addTriggerCondition = function () {\n            this._addTriggerConditionEvt.emit();\n        };\n        AjfFbNodeProperties.prototype.removeTriggerCondition = function (idx) {\n            if (idx < 0 || idx >= this._triggerConditions.length) {\n                return;\n            }\n            this._removeTriggerConditionEvt.emit(idx);\n        };\n        AjfFbNodeProperties.prototype.isField = function (nodeEntry) {\n            return nodeEntry != null && forms$1.isField(nodeEntry.node);\n        };\n        AjfFbNodeProperties.prototype.isNumericField = function (node) {\n            return forms$1.isField(node) && forms$1.isNumberField(node);\n        };\n        AjfFbNodeProperties.prototype.isFieldWithChoices = function (node) {\n            return forms$1.isField(node) && forms$1.isFieldWithChoices(node);\n        };\n        AjfFbNodeProperties.prototype.save = function () {\n            this._saveEvt.emit();\n        };\n        AjfFbNodeProperties.prototype.cancel = function () {\n            this._service.cancelNodeEntryEdit();\n        };\n        AjfFbNodeProperties.prototype.ngOnDestroy = function () {\n            this._choicesOriginsSub.unsubscribe();\n            this._visibilitySub.unsubscribe();\n            this._formulaRepsSub.unsubscribe();\n            this._choicesFilterSub.unsubscribe();\n            this._formulaSub.unsubscribe();\n            this._forceValueSub.unsubscribe();\n            this._validationConditionsSub.unsubscribe();\n            this._warningConditionsSub.unsubscribe();\n            this._triggerConditionsSub.unsubscribe();\n            this._editConditionDialogSub.unsubscribe();\n            this._editValidationConditionDialogSub.unsubscribe();\n            this._editWarningConditionDialogSub.unsubscribe();\n            this._editChoicesFilterSub.unsubscribe();\n            this._editConditionalBranchSub.unsubscribe();\n            this._editVisibilitySub.unsubscribe();\n            this._editFormulaRepsSub.unsubscribe();\n            this._editFormulaSub.unsubscribe();\n            this._editForceValueSub.unsubscribe();\n            this._editValidationConditionSub.unsubscribe();\n            this._editWarningConditionSub.unsubscribe();\n            this._nextSlideConditionSub.unsubscribe();\n            this._addTriggerConditionSub.unsubscribe();\n            this._addValidationConditionSub.unsubscribe();\n            this._addWarningConditionSub.unsubscribe();\n            this._editNextSlideConditionSub.unsubscribe();\n            this._editTriggerConditionSub.unsubscribe();\n            this._removeTriggerConditionSub.unsubscribe();\n            this._removeValidationConditionSub.unsubscribe();\n            this._removeWarningConditionSub.unsubscribe();\n            this._saveSub.unsubscribe();\n        };\n        AjfFbNodeProperties.prototype._initSave = function () {\n            var _this = this;\n            this._saveSub = this._saveEvt.pipe(operators.withLatestFrom(this.propertiesForm))\n                .subscribe(function (r) {\n                var fg = r[1];\n                var val = tslib.__assign(tslib.__assign({}, fg.value), { conditionalBranches: _this._conditionalBranches });\n                _this._service.saveNodeEntry(val);\n            });\n        };\n        AjfFbNodeProperties.prototype._initForm = function () {\n            var _this = this;\n            this._propertiesForm = this._nodeEntry.pipe(operators.filter(function (n) { return n != null; }), operators.map(function (n) {\n                if (_this._visibilitySub != null) {\n                    _this._visibilitySub.unsubscribe();\n                }\n                if (_this._conditionalBranchesSub != null) {\n                    _this._conditionalBranchesSub.unsubscribe();\n                }\n                n = n;\n                var visibility = n.node.visibility != null ?\n                    n.node.visibility.condition : null;\n                var visibilityOpt = n.node.visibility != null ?\n                    _this._guessVisibilityOpt(n.node.visibility) : null;\n                var controls = {\n                    name: [n.node.name, forms.Validators.required],\n                    label: n.node.label,\n                    visibilityOpt: [visibilityOpt, forms.Validators.required],\n                    visibility: [visibility, forms.Validators.required],\n                    conditionalBranchesNum: n.node.conditionalBranches.length\n                };\n                var validators = [];\n                if (forms$1.isRepeatingContainerNode(n.node)) {\n                    var rn = n.node;\n                    var formulaReps = rn.formulaReps != null ? rn.formulaReps.formula : null;\n                    controls.formulaReps = [formulaReps, forms.Validators.required];\n                    controls.minReps = rn.minReps;\n                    controls.maxReps = rn.maxReps;\n                    _this._curFormulaReps = formulaReps;\n                    validators.push(checkRepsValidity);\n                }\n                if (_this.isField(n)) {\n                    var field = n.node;\n                    var forceValue = null;\n                    var notEmpty = false;\n                    var validationConditions = [];\n                    if (field.validation != null) {\n                        if (field.validation.forceValue != null) {\n                            forceValue = field.validation.forceValue.condition;\n                        }\n                        notEmpty = field.validation.notEmpty != null;\n                        validationConditions = (field.validation.conditions || [])\n                            .map(function (c) {\n                            return {\n                                condition: c.condition,\n                                errorMessage: c.errorMessage\n                            };\n                        });\n                    }\n                    var notEmptyW = false;\n                    var warningConditions = [];\n                    if (field.warning != null) {\n                        notEmptyW = field.warning.notEmpty != null;\n                        warningConditions = (field.warning.conditions || [])\n                            .map(function (w) {\n                            return {\n                                condition: w.condition,\n                                warningMessage: w.warningMessage\n                            };\n                        });\n                    }\n                    var formula = field.formula != null ? field.formula.formula : null;\n                    controls.description = field.description;\n                    controls.defaultValue = field.defaultValue;\n                    controls.size = field.size;\n                    controls.formula = formula;\n                    controls.forceValue = forceValue;\n                    controls.notEmpty = notEmpty;\n                    controls.validationConditions = [validationConditions, []];\n                    controls.notEmptyWarning = notEmptyW;\n                    controls.warningConditions = [warningConditions, []];\n                    controls.nextSlideCondition = [field.nextSlideCondition];\n                    _this._curForceValue = forceValue;\n                    _this._curFormula = formula;\n                    _this._validationConditions = validationConditions;\n                    _this._warningConditions = warningConditions;\n                }\n                if (_this.isNumericField(n.node)) {\n                    var numField = n.node;\n                    var minValue = void 0;\n                    var maxValue = void 0;\n                    var minDigits = void 0;\n                    var maxDigits = void 0;\n                    if (numField.validation != null) {\n                        if (numField.validation.minValue != null) {\n                            minValue = (numField.validation.minValue.condition || '').replace('$value >= ', '');\n                        }\n                        if (numField.validation.maxValue != null) {\n                            maxValue = (numField.validation.maxValue.condition || '').replace('$value <= ', '');\n                        }\n                        if (numField.validation.minDigits != null) {\n                            minDigits = (numField.validation.minDigits.condition || '')\n                                .replace('$value.toString().length >= ', '');\n                        }\n                        if (numField.validation.maxDigits != null) {\n                            maxDigits = (numField.validation.maxDigits.condition || '')\n                                .replace('$value.toString().length <= ', '');\n                        }\n                    }\n                    controls.minValue = minValue;\n                    controls.maxValue = maxValue;\n                    controls.minDigits = minDigits;\n                    controls.maxDigits = maxDigits;\n                    validators.push(checkValueLimitsValidity);\n                    validators.push(checkDigitsValidity);\n                }\n                if (_this.isFieldWithChoices(n.node)) {\n                    var fieldWithChoices = n.node;\n                    var triggerConditions = (fieldWithChoices.triggerConditions || [])\n                        .map(function (c) { return c.condition; });\n                    controls.choicesOriginRef = fieldWithChoices.choicesOriginRef;\n                    controls.choicesFilter = fieldWithChoices.choicesFilter != null ?\n                        fieldWithChoices.choicesFilter.formula : null;\n                    controls.forceExpanded = fieldWithChoices.forceExpanded;\n                    controls.forceNarrow = fieldWithChoices.forceNarrow;\n                    controls.triggerConditions = triggerConditions;\n                    _this._triggerConditions = triggerConditions;\n                }\n                var fg = _this._fb.group(controls);\n                fg.setValidators(validators);\n                _this._conditionalBranches = n.node.conditionalBranches.map(function (c) { return c.condition; });\n                _this._curVisibility = n.node.visibility != null ? n.node.visibility.condition : null;\n                _this._handleConditionalBranchesChange(fg);\n                _this._handleVisibilityChange(fg);\n                _this._handleFormulaRepsChange(fg);\n                _this._handleChoicesFilterChange(fg);\n                _this._handleFormulaChange(fg);\n                _this._handleForceValueChange(fg);\n                _this._handleValidationCondtionsChange(fg);\n                _this._handleWarningCondtionsChange(fg);\n                _this._handleNextSlideConditionChange(fg);\n                _this._handleTriggerCondtionsChange(fg);\n                return fg;\n            }), operators.publishReplay(1), operators.refCount());\n        };\n        AjfFbNodeProperties.prototype._destroyConditionDialog = function () {\n            if (this._editConditionDialogSub != null) {\n                this._editConditionDialogSub.unsubscribe();\n                this._editConditionDialogSub = rxjs.Subscription.EMPTY;\n            }\n            if (this._editConditionDialog != null) {\n                this._editConditionDialog.close();\n                this._editConditionDialog = null;\n            }\n        };\n        AjfFbNodeProperties.prototype._destroyValidationConditionDialog = function () {\n            if (this._editValidationConditionDialogSub != null) {\n                this._editValidationConditionDialogSub.unsubscribe();\n                this._editValidationConditionDialogSub = rxjs.Subscription.EMPTY;\n            }\n            if (this._editValidationConditionDialog != null) {\n                this._editValidationConditionDialog.close();\n                this._editValidationConditionDialog = null;\n            }\n        };\n        AjfFbNodeProperties.prototype._destroyWarningConditionDialog = function () {\n            if (this._editWarningConditionDialogSub != null) {\n                this._editWarningConditionDialogSub.unsubscribe();\n                this._editWarningConditionDialogSub = rxjs.Subscription.EMPTY;\n            }\n            if (this._editWarningConditionDialog != null) {\n                this._editWarningConditionDialog.close();\n                this._editWarningConditionDialog = null;\n            }\n        };\n        AjfFbNodeProperties.prototype._initRemoveTriggerCondition = function () {\n            this._removeTriggerConditionSub = this._removeTriggerConditionEvt\n                .pipe(operators.withLatestFrom(this._propertiesForm))\n                .subscribe(function (r) {\n                var vcIdx = r[0];\n                var fg = r[1];\n                if (fg == null) {\n                    return;\n                }\n                var ctrl = fg.controls['triggerConditions'];\n                var vcs = (ctrl.value || []).slice(0);\n                if (vcIdx < 0 || vcIdx >= vcs.length) {\n                    return;\n                }\n                vcs.splice(vcIdx, 1);\n                ctrl.setValue(vcs);\n            });\n        };\n        AjfFbNodeProperties.prototype._initAddTriggerCondition = function () {\n            this._addTriggerConditionSub = this._addTriggerConditionEvt\n                .pipe(operators.withLatestFrom(this._propertiesForm))\n                .subscribe(function (r) {\n                var fg = r[1];\n                if (fg == null) {\n                    return;\n                }\n                var ctrl = fg.controls['triggerConditions'];\n                var vcs = (ctrl.value || []).slice(0);\n                vcs.push('');\n                ctrl.setValue(vcs);\n            });\n        };\n        AjfFbNodeProperties.prototype._initTriggerConditionEdit = function () {\n            var _this = this;\n            this._editTriggerConditionSub = this._editTriggerConditionEvt\n                .pipe(operators.withLatestFrom(this._propertiesForm))\n                .subscribe(function (r) {\n                _this._destroyConditionDialog();\n                var vcIdx = r[0];\n                var fg = r[1];\n                if (vcIdx < 0 || vcIdx >= _this._triggerConditions.length || fg == null) {\n                    return;\n                }\n                _this._editConditionDialog = _this._dialog\n                    .open(AjfFbConditionEditorDialog);\n                var cmp = _this._editConditionDialog.componentInstance;\n                cmp.condition = _this._triggerConditions[vcIdx];\n                _this._editConditionDialogSub = _this._editConditionDialog.afterClosed()\n                    .subscribe(function (cond) {\n                    if (cond !== void 0) {\n                        _this._triggerConditions[vcIdx] = cond;\n                    }\n                    _this._editConditionDialogSub.unsubscribe();\n                    _this._editConditionDialogSub = rxjs.Subscription.EMPTY;\n                });\n            });\n        };\n        AjfFbNodeProperties.prototype._initRemoveWarningCondition = function () {\n            this._removeWarningConditionSub = this._removeWarningConditionEvt\n                .pipe(operators.withLatestFrom(this._propertiesForm))\n                .subscribe(function (r) {\n                var vcIdx = r[0];\n                var fg = r[1];\n                if (fg == null) {\n                    return;\n                }\n                var ctrl = fg.controls['warningConditions'];\n                var vcs = (ctrl.value || []).slice(0);\n                if (vcIdx < 0 || vcIdx >= vcs.length) {\n                    return;\n                }\n                vcs.splice(vcIdx, 1);\n                ctrl.setValue(vcs);\n            });\n        };\n        AjfFbNodeProperties.prototype._initAddWarningCondition = function () {\n            this._addWarningConditionSub = this._addWarningConditionEvt\n                .pipe(operators.withLatestFrom(this._propertiesForm))\n                .subscribe(function (r) {\n                var fg = r[1];\n                if (fg == null) {\n                    return;\n                }\n                var ctrl = fg.controls['warningConditions'];\n                var vcs = (ctrl.value || []).slice(0);\n                vcs.push({ condition: '', errorMessage: '' });\n                ctrl.setValue(vcs);\n            });\n        };\n        AjfFbNodeProperties.prototype._initWarningConditionEdit = function () {\n            var _this = this;\n            this._editWarningConditionSub = this._editWarningConditionEvt\n                .pipe(operators.withLatestFrom(this._propertiesForm))\n                .subscribe(function (r) {\n                _this._destroyWarningConditionDialog();\n                var vcIdx = r[0];\n                var fg = r[1];\n                if (vcIdx < 0 || vcIdx >= _this._warningConditions.length || fg == null) {\n                    return;\n                }\n                _this._editWarningConditionDialog = _this._dialog\n                    .open(AjfFbWarningConditionEditorDialog);\n                var cmp = _this._editWarningConditionDialog.componentInstance;\n                var w = _this._warningConditions[vcIdx];\n                cmp.condition = w.condition;\n                cmp.warningMessage = w.warningMessage;\n                _this._editWarningConditionDialogSub = _this._editWarningConditionDialog.afterClosed()\n                    .subscribe(function (cond) {\n                    if (cond !== void 0) {\n                        _this._warningConditions[vcIdx] = cond;\n                    }\n                    _this._editWarningConditionDialogSub.unsubscribe();\n                    _this._editWarningConditionDialogSub = rxjs.Subscription.EMPTY;\n                });\n            });\n        };\n        AjfFbNodeProperties.prototype._initRemoveValidationCondition = function () {\n            this._removeValidationConditionSub = this._removeValidationConditionEvt\n                .pipe(operators.withLatestFrom(this._propertiesForm))\n                .subscribe(function (r) {\n                var vcIdx = r[0];\n                var fg = r[1];\n                if (fg == null) {\n                    return;\n                }\n                var ctrl = fg.controls['validationConditions'];\n                var vcs = (ctrl.value || []).slice(0);\n                if (vcIdx < 0 || vcIdx >= vcs.length) {\n                    return;\n                }\n                vcs.splice(vcIdx, 1);\n                ctrl.setValue(vcs);\n            });\n        };\n        AjfFbNodeProperties.prototype._initAddValidationCondition = function () {\n            this._addValidationConditionSub = this._addValidationConditionEvt\n                .pipe(operators.withLatestFrom(this._propertiesForm))\n                .subscribe(function (r) {\n                var fg = r[1];\n                if (fg == null) {\n                    return;\n                }\n                var ctrl = fg.controls['validationConditions'];\n                var vcs = (ctrl.value || []).slice(0);\n                vcs.push({ condition: '', errorMessage: '' });\n                ctrl.setValue(vcs);\n            });\n        };\n        AjfFbNodeProperties.prototype._initValidationConditionEdit = function () {\n            var _this = this;\n            this._editValidationConditionSub = this._editValidationConditionEvt\n                .pipe(operators.withLatestFrom(this._propertiesForm))\n                .subscribe(function (r) {\n                _this._destroyValidationConditionDialog();\n                var vcIdx = r[0];\n                var fg = r[1];\n                if (vcIdx < 0 || vcIdx >= _this._validationConditions.length || fg == null) {\n                    return;\n                }\n                _this._editValidationConditionDialog = _this._dialog\n                    .open(AjfFbValidationConditionEditorDialog);\n                var cmp = _this._editValidationConditionDialog.componentInstance;\n                var v = _this._validationConditions[vcIdx];\n                cmp.condition = v.condition;\n                cmp.errorMessage = v.errorMessage;\n                _this._editValidationConditionDialogSub = _this._editValidationConditionDialog.afterClosed()\n                    .subscribe(function (cond) {\n                    if (cond !== void 0) {\n                        _this._validationConditions[vcIdx] = cond;\n                    }\n                    _this._editValidationConditionDialogSub.unsubscribe();\n                    _this._editValidationConditionDialogSub = rxjs.Subscription.EMPTY;\n                });\n            });\n        };\n        AjfFbNodeProperties.prototype._initForceValueEdit = function () {\n            var _this = this;\n            this._editForceValueSub = this._editForceValueEvt\n                .pipe(operators.withLatestFrom(this._propertiesForm))\n                .subscribe(function (r) {\n                _this._destroyConditionDialog();\n                var fg = r[1];\n                if (fg == null) {\n                    return;\n                }\n                var ctrl = fg.controls['forceValue'];\n                _this._editConditionDialog = _this._dialog.open(AjfFbConditionEditorDialog);\n                _this._editConditionDialog.componentInstance.condition = ctrl.value;\n                _this._editConditionDialogSub = _this._editConditionDialog.afterClosed()\n                    .subscribe(function (cond) {\n                    if (cond !== void 0) {\n                        ctrl.setValue(cond);\n                    }\n                    _this._editConditionDialogSub.unsubscribe();\n                    _this._editConditionDialogSub = rxjs.Subscription.EMPTY;\n                });\n            });\n        };\n        AjfFbNodeProperties.prototype._initNextSlideConditionEdit = function () {\n            var _this = this;\n            this._editNextSlideConditionSub = this._editNextSlideConditionEvt\n                .pipe(operators.withLatestFrom(this._propertiesForm))\n                .subscribe(function (r) {\n                _this._destroyConditionDialog();\n                var fg = r[1];\n                if (fg == null) {\n                    return;\n                }\n                var ctrl = fg.controls['nextSlideCondition'];\n                _this._editConditionDialog = _this._dialog.open(AjfFbConditionEditorDialog);\n                _this._editConditionDialog.componentInstance.condition = ctrl.value;\n                _this._editConditionDialogSub = _this._editConditionDialog.afterClosed()\n                    .subscribe(function (cond) {\n                    if (cond !== void 0) {\n                        ctrl.setValue(cond);\n                    }\n                    _this._editConditionDialogSub.unsubscribe();\n                    _this._editConditionDialogSub = rxjs.Subscription.EMPTY;\n                });\n            });\n        };\n        AjfFbNodeProperties.prototype._initFormulaEdit = function () {\n            var _this = this;\n            this._editFormulaSub = this._editFormulaEvt\n                .pipe(operators.withLatestFrom(this._propertiesForm))\n                .subscribe(function (r) {\n                _this._destroyConditionDialog();\n                var fg = r[1];\n                if (fg == null) {\n                    return;\n                }\n                var ctrl = fg.controls['formula'];\n                _this._editConditionDialog = _this._dialog.open(AjfFbConditionEditorDialog);\n                _this._editConditionDialog.componentInstance.condition = ctrl.value;\n                _this._editConditionDialogSub = _this._editConditionDialog.afterClosed()\n                    .subscribe(function (cond) {\n                    if (cond !== void 0) {\n                        ctrl.setValue(cond);\n                    }\n                    _this._editConditionDialogSub.unsubscribe();\n                    _this._editConditionDialogSub = rxjs.Subscription.EMPTY;\n                });\n            });\n        };\n        AjfFbNodeProperties.prototype._initFormulaRepsEdit = function () {\n            var _this = this;\n            this._editFormulaRepsSub = this._editFormulaRepsEvt\n                .pipe(operators.withLatestFrom(this._propertiesForm))\n                .subscribe(function (r) {\n                _this._destroyConditionDialog();\n                var fg = r[1];\n                if (fg == null) {\n                    return;\n                }\n                var ctrl = fg.controls['formulaReps'];\n                _this._editConditionDialog = _this._dialog.open(AjfFbConditionEditorDialog);\n                _this._editConditionDialog.componentInstance.condition = ctrl.value;\n                _this._editConditionDialogSub = _this._editConditionDialog.afterClosed()\n                    .subscribe(function (cond) {\n                    if (cond !== void 0) {\n                        ctrl.setValue(cond);\n                    }\n                    _this._editConditionDialogSub.unsubscribe();\n                    _this._editConditionDialogSub = rxjs.Subscription.EMPTY;\n                });\n            });\n        };\n        AjfFbNodeProperties.prototype._initChoicesFilterEdit = function () {\n            var _this = this;\n            this._editChoicesFilterSub = this._editChoicesFilterEvt\n                .pipe(operators.withLatestFrom(this._propertiesForm))\n                .subscribe(function (r) {\n                _this._destroyConditionDialog();\n                var fg = r[1];\n                if (fg == null) {\n                    return;\n                }\n                var ctrl = fg.controls['choicesFilter'];\n                _this._editConditionDialog = _this._dialog.open(AjfFbConditionEditorDialog);\n                _this._editConditionDialog.componentInstance.condition = ctrl.value;\n                _this._editConditionDialogSub = _this._editConditionDialog.afterClosed()\n                    .subscribe(function (cond) {\n                    if (cond !== void 0) {\n                        ctrl.setValue(cond);\n                    }\n                    _this._editConditionDialogSub.unsubscribe();\n                    _this._editConditionDialogSub = rxjs.Subscription.EMPTY;\n                });\n            });\n        };\n        AjfFbNodeProperties.prototype._initConditionalBranchEdit = function () {\n            var _this = this;\n            this._editConditionalBranchSub = this._editConditionalBranchEvt\n                .pipe(operators.withLatestFrom(this._propertiesForm))\n                .subscribe(function (r) {\n                _this._destroyConditionDialog();\n                var cbIdx = r[0];\n                var fg = r[1];\n                if (cbIdx < 0 || cbIdx >= _this._conditionalBranches.length || fg == null) {\n                    return;\n                }\n                _this._editConditionDialog = _this._dialog.open(AjfFbConditionEditorDialog);\n                _this._editConditionDialog.componentInstance.condition = _this._conditionalBranches[cbIdx];\n                _this._editConditionDialogSub = _this._editConditionDialog.afterClosed()\n                    .subscribe(function (cond) {\n                    if (cond !== void 0) {\n                        _this._conditionalBranches[cbIdx] = cond;\n                    }\n                    _this._editConditionDialogSub.unsubscribe();\n                    _this._editConditionDialogSub = rxjs.Subscription.EMPTY;\n                });\n            });\n        };\n        AjfFbNodeProperties.prototype._initVisibilityEdit = function () {\n            var _this = this;\n            this._editVisibilitySub = this._editVisibilityEvt\n                .pipe(operators.withLatestFrom(this._propertiesForm))\n                .subscribe(function (r) {\n                _this._destroyConditionDialog();\n                var fg = r[1];\n                if (fg == null) {\n                    return;\n                }\n                var ctrl = fg.controls['visibility'];\n                var condition = ctrl.value;\n                _this._editConditionDialog = _this._dialog.open(AjfFbConditionEditorDialog);\n                _this._editConditionDialog.componentInstance.condition = condition;\n                _this._editConditionDialogSub = _this._editConditionDialog.afterClosed()\n                    .subscribe(function (cond) {\n                    if (cond !== void 0) {\n                        ctrl.setValue(cond);\n                    }\n                    _this._editConditionDialogSub.unsubscribe();\n                    _this._editConditionDialogSub = rxjs.Subscription.EMPTY;\n                });\n            });\n        };\n        AjfFbNodeProperties.prototype._handleTriggerCondtionsChange = function (fg) {\n            var _this = this;\n            this._triggerConditionsSub = fg.valueChanges\n                .pipe(operators.distinctUntilChanged(function (v1, v2) {\n                return JSON.stringify(v1.triggerConditions) === JSON.stringify(v2.triggerConditions);\n            }))\n                .subscribe(function (v) {\n                _this._triggerConditions = v.triggerConditions;\n            });\n        };\n        AjfFbNodeProperties.prototype._handleWarningCondtionsChange = function (fg) {\n            var _this = this;\n            this._warningConditionsSub = fg.valueChanges\n                .pipe(operators.distinctUntilChanged(function (v1, v2) {\n                return JSON.stringify(v1.warningConditions) === JSON.stringify(v2.warningConditions);\n            }))\n                .subscribe(function (v) {\n                _this._warningConditions = v.warningConditions;\n            });\n        };\n        AjfFbNodeProperties.prototype._handleValidationCondtionsChange = function (fg) {\n            var _this = this;\n            this._validationConditionsSub = fg.valueChanges\n                .pipe(operators.distinctUntilChanged(function (v1, v2) {\n                return JSON.stringify(v1.validationConditions) === JSON.stringify(v2.validationConditions);\n            }))\n                .subscribe(function (v) {\n                _this._validationConditions = v.validationConditions;\n            });\n        };\n        AjfFbNodeProperties.prototype._handleForceValueChange = function (fg) {\n            var _this = this;\n            this._forceValueSub = fg.valueChanges\n                .pipe(operators.distinctUntilChanged(function (v1, v2) { return v1.forceValue === v2.forceValue; }))\n                .subscribe(function (v) {\n                _this._curForceValue = v.forceValue;\n            });\n        };\n        AjfFbNodeProperties.prototype._handleNextSlideConditionChange = function (fg) {\n            var _this = this;\n            this._formulaSub = fg.valueChanges\n                .pipe(operators.distinctUntilChanged(function (v1, v2) { return v1.nextSlideCondition === v2.nextSlideCondition; }))\n                .subscribe(function (v) {\n                _this._nextSlideCondition = v.nextSlideCondition;\n            });\n        };\n        AjfFbNodeProperties.prototype._handleFormulaChange = function (fg) {\n            var _this = this;\n            this._formulaSub = fg.valueChanges\n                .pipe(operators.distinctUntilChanged(function (v1, v2) { return v1.formula === v2.formula; }))\n                .subscribe(function (v) {\n                _this._curFormula = v.formula;\n            });\n        };\n        AjfFbNodeProperties.prototype._handleFormulaRepsChange = function (fg) {\n            var _this = this;\n            this._formulaRepsSub = fg.valueChanges\n                .pipe(operators.distinctUntilChanged(function (v1, v2) { return v1.formulaReps === v2.formulaReps; }))\n                .subscribe(function (v) {\n                _this._curFormulaReps = v.formulaReps;\n            });\n        };\n        AjfFbNodeProperties.prototype._handleChoicesFilterChange = function (fg) {\n            var _this = this;\n            this._choicesFilterSub = fg.valueChanges\n                .pipe(operators.distinctUntilChanged(function (v1, v2) { return v1.choicesFilter === v2.choicesFilter; }))\n                .subscribe(function (v) {\n                _this._curChoicesFilter = v.choicesFilter;\n            });\n        };\n        AjfFbNodeProperties.prototype._handleConditionalBranchesChange = function (fg) {\n            var _this = this;\n            this._conditionalBranchesSub = fg.valueChanges\n                .pipe(operators.distinctUntilChanged(function (v1, v2) {\n                return v1.conditionalBranchesNum === v2.conditionalBranchesNum;\n            }))\n                .subscribe(function (v) {\n                var cbNum = v.conditionalBranchesNum;\n                var curCbNum = _this._conditionalBranches.length;\n                if (curCbNum < cbNum) {\n                    var newCbs = [];\n                    for (var i = curCbNum; i < cbNum; i++) {\n                        newCbs.push(models.alwaysCondition().condition);\n                    }\n                    _this._conditionalBranches = _this._conditionalBranches.concat(newCbs);\n                }\n                else if (curCbNum > cbNum) {\n                    _this._conditionalBranches.splice(0, curCbNum - cbNum);\n                }\n            });\n        };\n        AjfFbNodeProperties.prototype._handleVisibilityChange = function (fg) {\n            var _this = this;\n            this._visibilitySub = fg.valueChanges\n                .pipe(operators.distinctUntilChanged(function (v1, v2) { return v1.visibilityOpt === v2.visibilityOpt; }))\n                .subscribe(function (v) {\n                var visibilityOpt = v.visibilityOpt;\n                var newCondition;\n                switch (visibilityOpt) {\n                    case 'always':\n                        newCondition = models.alwaysCondition().condition;\n                        break;\n                    case 'never':\n                        newCondition = models.neverCondition().condition;\n                        break;\n                    default:\n                        newCondition = null;\n                }\n                _this._curVisibility = newCondition;\n                fg.controls['visibility'].setValue(newCondition);\n            });\n        };\n        AjfFbNodeProperties.prototype._guessVisibilityOpt = function (condition) {\n            if (condition.condition.localeCompare(models.alwaysCondition().condition) === 0) {\n                return 'always';\n            }\n            if (condition.condition.localeCompare(models.neverCondition().condition) === 0) {\n                return 'never';\n            }\n            return 'condition';\n        };\n        AjfFbNodeProperties.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-fb-node-properties',\n                        template: \"<div [style.display]=\\\"(enabled|async) ? 'none' : 'block'\\\" class=\\\"ajf-disabled-overlay\\\"></div>\\n<div class=\\\"ajf-header\\\">\\n  <h3 translate>Properties</h3>\\n  <mat-icon (click)=\\\"save()\\\">save</mat-icon>\\n  <mat-icon (click)=\\\"cancel()\\\">cancel</mat-icon>\\n</div>\\n<ng-container *ngIf=\\\"nodeEntry|async as ne\\\">\\n  <ng-container *ngIf=\\\"propertiesForm|async as pf\\\">\\n    <form [formGroup]=\\\"pf!\\\" novalidate>\\n      <div class=\\\"ajf-prop\\\">\\n        <mat-form-field>\\n          <input matInput formControlName=\\\"name\\\" [placeholder]=\\\"'Name' | translate\\\">\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"ajf-prop\\\">\\n        <mat-form-field>\\n          <input matInput formControlName=\\\"label\\\" [placeholder]=\\\"'Label' | translate\\\">\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"ajf-prop\\\">\\n        <mat-form-field>\\n          <mat-label translate>Visibility</mat-label>\\n          <mat-select\\n              formControlName=\\\"visibilityOpt\\\" [placeholder]=\\\"'Visible' | translate\\\">\\n            <mat-option value=\\\"always\\\" translate>Always</mat-option>\\n            <mat-option value=\\\"never\\\" translate>Never</mat-option>\\n            <mat-option value=\\\"condition\\\" translate>Condition...</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <button (click)=\\\"editVisibility()\\\"\\n            [disabled]=\\\"pf!.value.visibilityOpt != 'condition'\\\"\\n            mat-raised-button [matTooltip]=\\\"curVisibility || ''\\\">\\n          <div class=\\\"ajf-icon-cont\\\">\\n            <mat-icon>edit</mat-icon>\\n            <span>{{ curVisibility }}</span>\\n          </div>\\n        </button>\\n      </div>\\n      <div class=\\\"ajf-prop\\\">\\n        <div><label translate>Branches</label></div>\\n        <div>\\n          <mat-slider formControlName=\\\"conditionalBranchesNum\\\"\\n              thumbLabel tickInterval=\\\"auto\\\" min=\\\"1\\\" max=\\\"5\\\" step=\\\"1\\\"></mat-slider>\\n        </div>\\n        <div *ngFor=\\\"let branch of conditionalBranches; let idx = index\\\">\\n          <button (click)=\\\"editConditionalBranch(idx)\\\" mat-raised-button [matTooltip]=\\\"branch\\\">\\n            <div class=\\\"ajf-icon-cont\\\">\\n              <mat-icon>edit</mat-icon>\\n              <span>{{ branch }}</span>\\n            </div>\\n          </button>\\n        </div>\\n      </div>\\n      <ng-template [ngIf]=\\\"isRepeatingContainerNode(ne)\\\">\\n        <div class=\\\"ajf-prop\\\">\\n          <div><label translate>Repetitions</label></div>\\n          <div>\\n            <button (click)=\\\"editFormulaReps()\\\" mat-raised-button [matTooltip]=\\\"curFormulaReps || ''\\\">\\n              <div class=\\\"ajf-icon-cont\\\">\\n                <mat-icon>edit</mat-icon>\\n                <span>{{ curFormulaReps }}</span>\\n              </div>\\n            </button>\\n          </div>\\n          <div><label translate>Min repetitions</label></div>\\n          <div>\\n            <mat-slider formControlName=\\\"minReps\\\"\\n                thumbLabel tickInterval=\\\"auto\\\" min=\\\"1\\\" max=\\\"5\\\" step=\\\"1\\\"></mat-slider>\\n          </div>\\n          <div><label translate>Max repetitions</label></div>\\n          <div>\\n            <mat-slider formControlName=\\\"maxReps\\\"\\n                thumbLabel tickInterval=\\\"auto\\\" min=\\\"1\\\" max=\\\"5\\\" step=\\\"1\\\"></mat-slider>\\n          </div>\\n        </div>\\n      </ng-template>\\n      <ng-template [ngIf]=\\\"isField(ne)\\\">\\n        <div class=\\\"ajf-prop\\\">\\n          <mat-form-field>\\n            <mat-label translate>Field size</mat-label>\\n            <mat-select formControlName=\\\"size\\\"\\n                [placeholder]=\\\"'Size' | translate\\\">\\n              <mat-option *ngFor=\\\"let fieldSize of fieldSizes\\\"\\n                [value]=\\\"fieldSize.value\\\">\\n                {{ fieldSize.label }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n        <div class=\\\"ajf-prop\\\">\\n          <mat-form-field>\\n            <textarea matInput formControlName=\\\"description\\\"\\n                [placeholder]=\\\"'Description' | translate\\\"></textarea>\\n          </mat-form-field>\\n        </div>\\n        <div class=\\\"ajf-prop\\\">\\n          <mat-form-field>\\n            <input matInput formControlName=\\\"defaultValue\\\"\\n              [placeholder]=\\\"'Default value' | translate\\\">\\n          </mat-form-field>\\n        </div>\\n        <div class=\\\"ajf-prop\\\">\\n          <div><label translate>Formula</label></div>\\n          <div>\\n            <button (click)=\\\"editFormula()\\\" mat-raised-button [matTooltip]=\\\"curFormula || ''\\\">\\n              <div class=\\\"ajf-icon-cont\\\">\\n                <mat-icon>edit</mat-icon>\\n                <span>{{ curFormula }}</span>\\n              </div>\\n            </button>\\n          </div>\\n        </div>\\n        <!-- <div class=\\\"ajf-prop\\\">\\n          <div><label translate>Force value</label></div>\\n          <div>\\n            <button (click)=\\\"editForceValue()\\\" mat-raised-button [matTooltip]=\\\"curForceValue\\\">\\n              <div class=\\\"ajf-icon-cont\\\">\\n                <mat-icon>edit</mat-icon>\\n                <span>{{ curForceValue }}</span>\\n              </div>\\n            </button>\\n          </div>\\n        </div> -->\\n        <div class=\\\"ajf-prop\\\">\\n          <mat-checkbox formControlName=\\\"notEmpty\\\" translate>Not empty</mat-checkbox>\\n        </div>\\n        <ng-template [ngIf]=\\\"isNumericField(ne!.node)\\\">\\n          <div class=\\\"ajf-prop\\\">\\n            <mat-form-field>\\n              <input matInput formControlName=\\\"minValue\\\"\\n                [placeholder]=\\\"'Min value' | translate\\\">\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"ajf-prop\\\">\\n            <mat-form-field>\\n              <input matInput formControlName=\\\"maxValue\\\"\\n                [placeholder]=\\\"'Max value' | translate\\\">\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"ajf-prop\\\">\\n            <mat-form-field>\\n              <input matInput formControlName=\\\"minDigits\\\"\\n                [placeholder]=\\\"'Min digits' | translate\\\">\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"ajf-prop\\\">\\n            <mat-form-field>\\n              <input matInput formControlName=\\\"maxDigits\\\"\\n                [placeholder]=\\\"'Max digits' | translate\\\">\\n            </mat-form-field>\\n          </div>\\n        </ng-template>\\n        <div class=\\\"ajf-prop\\\">\\n          <div class=\\\"ajf-header\\\">\\n            <label translate>Validation</label>\\n            <mat-icon class=\\\"ajf-pointer\\\" (click)=\\\"addValidationCondition()\\\">add_circle_outline</mat-icon>\\n          </div>\\n          <div *ngIf=\\\"validationConditions == null || validationConditions.length == 0\\\"\\n              class=\\\"ajf-validation-row ajf-emph\\\" translate>No conditions</div>\\n          <div class=\\\"ajf-validation-row\\\" *ngFor=\\\"let validationCondition of validationConditions; let idx = index\\\">\\n            <button (click)=\\\"editValidationCondition(idx)\\\"\\n                mat-raised-button [matTooltip]=\\\"validationCondition.condition\\\">\\n              <div class=\\\"ajf-icon-cont\\\">\\n                <mat-icon>edit</mat-icon>\\n                <span>{{ validationCondition.condition }}</span>\\n              </div>\\n            </button>\\n            <mat-icon class=\\\"ajf-pointer\\\" (click)=\\\"removeValidationCondition(idx)\\\">remove_circle_outline</mat-icon>\\n          </div>\\n        </div>\\n        <div class=\\\"ajf-prop\\\">\\n          <mat-checkbox formControlName=\\\"notEmptyWarning\\\" translate>Not empty warning</mat-checkbox>\\n        </div>\\n        <div class=\\\"ajf-prop\\\">\\n          <div class=\\\"ajf-header\\\">\\n            <label translate>Warnings</label>\\n            <mat-icon class=\\\"ajf-pointer\\\" (click)=\\\"addWarningCondition()\\\">add_circle_outline</mat-icon>\\n          </div>\\n          <div  *ngIf=\\\"warningConditions == null || warningConditions.length == 0\\\"\\n              class=\\\"ajf-validation-row ajf-emph\\\" translate>No warnings</div>\\n          <div class=\\\"ajf-validation-row\\\" *ngFor=\\\"let warningCondition of warningConditions; let idx = index\\\">\\n            <button (click)=\\\"editWarningCondition(idx)\\\"\\n                mat-raised-button [matTooltip]=\\\"warningCondition.condition\\\">\\n              <div class=\\\"ajf-icon-cont\\\">\\n                <mat-icon>edit</mat-icon>\\n                <span>{{ warningCondition.condition }}</span>\\n              </div>\\n            </button>\\n            <mat-icon class=\\\"ajf-pointer\\\" (click)=\\\"removeWarningCondition(idx)\\\">remove_circle_outline</mat-icon>\\n          </div>\\n        </div>\\n        <div class=\\\"ajf-prop\\\">\\n          <div><label translate>Go to next slide condition</label></div>\\n          <div>\\n            <button (click)=\\\"editNextSlideCondition()\\\" mat-raised-button [matTooltip]=\\\"nextSlideCondition\\\">\\n              <div class=\\\"ajf-icon-cont\\\">\\n                <mat-icon>edit</mat-icon>\\n                <span>{{ nextSlideCondition }}</span>\\n              </div>\\n            </button>\\n          </div>\\n        </div>\\n        <ng-template [ngIf]=\\\"isFieldWithChoices(ne!.node)\\\">\\n          <div class=\\\"ajf-prop\\\">\\n            <mat-form-field>\\n              <mat-label translate>Choices origins</mat-label>\\n              <mat-select formControlName=\\\"choicesOriginRef\\\" [placeholder]=\\\"'Choices' | translate\\\">\\n                <mat-option *ngFor=\\\"let choicesOrigin of choicesOrigins\\\" [value]=\\\"choicesOrigin.name\\\">\\n                  {{ choicesOrigin.label || choicesOrigin.name }}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"ajf-prop\\\">\\n            <div><label translate>Choices filter</label></div>\\n            <div>\\n              <button (click)=\\\"editChoicesFilter()\\\" mat-raised-button [matTooltip]=\\\"curChoicesFilter\\\">\\n                <div class=\\\"ajf-icon-cont\\\">\\n                  <mat-icon>edit</mat-icon>\\n                  <span>{{ curChoicesFilter }}</span>\\n                </div>\\n              </button>\\n            </div>\\n          </div>\\n          <div class=\\\"ajf-prop\\\">\\n            <mat-checkbox formControlName=\\\"forceExpanded\\\" translate>Force expanded selection</mat-checkbox>\\n          </div>\\n          <div class=\\\"ajf-prop\\\">\\n            <mat-checkbox formControlName=\\\"forceNarrow\\\" translate>Force narrow selection</mat-checkbox>\\n          </div>\\n          <div class=\\\"ajf-prop\\\">\\n            <div class=\\\"ajf-header\\\">\\n              <label translate>Trigger selection</label>\\n              <mat-icon class=\\\"ajf-pointer\\\" (click)=\\\"addTriggerCondition()\\\">add_circle_outline</mat-icon>\\n            </div>\\n            <div *ngIf=\\\"triggerConditions == null || triggerConditions.length == 0\\\"\\n                class=\\\"ajf-validation-row ajf-emph\\\" translate>No trigger condition </div>\\n            <div class=\\\"ajf-validation-row\\\" *ngFor=\\\"let triggerCondition of triggerConditions; let idx = index\\\">\\n              <button (click)=\\\"editTriggerCondition(idx)\\\"\\n                  mat-raised-button [matTooltip]=\\\"triggerCondition\\\">\\n                <div class=\\\"ajf-icon-cont\\\">\\n                  <mat-icon>edit</mat-icon>\\n                  <span>{{ triggerCondition }}</span>\\n                </div>\\n              </button>\\n              <mat-icon class=\\\"pointer\\\" (click)=\\\"removeTriggerCondition(idx)\\\">remove_circle_outline</mat-icon>\\n            </div>\\n          </div>\\n        </ng-template>\\n      </ng-template>\\n    </form>\\n  </ng-container>\\n</ng-container>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\"ajf-fb-node-properties{display:block;padding:1em;position:relative}ajf-fb-node-properties mat-icon{cursor:pointer}ajf-fb-node-properties .ajf-header{display:flex;flex-direction:row;align-items:center;flex-wrap:nowrap}ajf-fb-node-properties .ajf-header>h3,ajf-fb-node-properties .ajf-header>label{flex:1 0 auto;margin-right:.5em}ajf-fb-node-properties .ajf-header>mat-icon{flex:0 0 auto;margin-left:.5em}ajf-fb-node-properties .ajf-disabled-overlay{position:absolute;top:0;right:0;bottom:0;left:0;opacity:.4;background-color:#fff}ajf-fb-node-properties .ajf-emph{font-style:italic}ajf-fb-node-properties [mat-raised-button]{margin:.5em 0}ajf-fb-node-properties [mat-raised-button].ajf-pointer{cursor:pointer}ajf-fb-node-properties [mat-raised-button] .ajf-icon-cont{display:flex;flex-direction:row;align-items:center}ajf-fb-node-properties [mat-raised-button] .ajf-icon-cont span{flex:1 1 auto;overflow:hidden;text-overflow:ellipsis;display:block;min-height:36px}ajf-fb-node-properties .ajf-validation-row{margin:.5em 0;display:flex;flex-direction:row;align-items:center}ajf-fb-node-properties .ajf-validation-row button{flex:1 1 auto}ajf-fb-node-properties .ajf-validation-row mat-icon{flex:0 0 auto}ajf-fb-node-properties .ajf-prop{margin:.5em 0}ajf-fb-node-properties mat-form-field,ajf-fb-node-properties mat-slider,ajf-fb-node-properties [mat-raised-button]{width:100%}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfFbNodeProperties.ctorParameters = function () { return [\n            { type: AjfFormBuilderService },\n            { type: dialog.MatDialog },\n            { type: forms.FormBuilder }\n        ]; };\n        return AjfFbNodeProperties;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFbNodeTypeEntry = /** @class */ (function () {\n        function AjfFbNodeTypeEntry(_cdr) {\n            this._cdr = _cdr;\n        }\n        Object.defineProperty(AjfFbNodeTypeEntry.prototype, \"nodeType\", {\n            get: function () { return this._nodeType; },\n            set: function (nodeType) {\n                this._nodeType = nodeType;\n                this._cdr.markForCheck();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        AjfFbNodeTypeEntry.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-fb-node-type-entry',\n                        template: \"<ng-container *ngIf=\\\"nodeType\\\">\\n  <mat-icon\\n    [fontSet]=\\\"nodeType.icon.fontSet\\\" [fontIcon]=\\\"nodeType.icon.fontIcon\\\"></mat-icon>\\n  {{ nodeType.label }}\\n</ng-container>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\"ajf-fb-node-type-entry{display:block;padding:1em 1.5em}ajf-fb-node-type-entry mat-icon{vertical-align:middle}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfFbNodeTypeEntry.ctorParameters = function () { return [\n            { type: core.ChangeDetectorRef }\n        ]; };\n        AjfFbNodeTypeEntry.propDecorators = {\n            nodeType: [{ type: core.Input }]\n        };\n        return AjfFbNodeTypeEntry;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFormBuilderModule = /** @class */ (function () {\n        function AjfFormBuilderModule() {\n        }\n        AjfFormBuilderModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [\n                            common.CommonModule,\n                            forms.FormsModule,\n                            forms.ReactiveFormsModule,\n                            dragDrop.DragDropModule,\n                            autocomplete.MatAutocompleteModule,\n                            button.MatButtonModule,\n                            card.MatCardModule,\n                            checkbox.MatCheckboxModule,\n                            chips.MatChipsModule,\n                            dialog.MatDialogModule,\n                            formField.MatFormFieldModule,\n                            icon.MatIconModule,\n                            input.MatInputModule,\n                            list.MatListModule,\n                            menu.MatMenuModule,\n                            select.MatSelectModule,\n                            sidenav.MatSidenavModule,\n                            slider.MatSliderModule,\n                            table.MatTableModule,\n                            toolbar.MatToolbarModule,\n                            tooltip.MatTooltipModule,\n                            core$1.TranslateModule,\n                            monacoEditor.AjfMonacoEditorModule,\n                            nodeIcon.AjfNodeIconModule,\n                        ],\n                        declarations: [\n                            AjfFbBranchLine,\n                            AjfFbChoicesOriginEditorDialog,\n                            AjfFbChoicesOriginEditor,\n                            AjfFbConditionEditorDialog,\n                            AjfFbConditionEditor,\n                            AjfFbNodeEntry,\n                            AjfFbNodeProperties,\n                            AjfFbNodeTypeEntry,\n                            AjfFbStringIdentifierDialogComponent,\n                            AjfFbValidationConditionEditorDialog,\n                            AjfFbWarningConditionEditorDialog,\n                            AjfFormBuilder,\n                        ],\n                        exports: [\n                            AjfFormBuilder,\n                        ],\n                        providers: [\n                            AjfFormBuilderService\n                        ]\n                    },] }\n        ];\n        return AjfFormBuilderModule;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.AjfFormBuilder = AjfFormBuilder;\n    exports.AjfFormBuilderModule = AjfFormBuilderModule;\n    exports.AjfFormBuilderService = AjfFormBuilderService;\n    exports.flattenNodes = flattenNodes;\n    exports.ɵajf_src_material_form_builder_form_builder_a = AjfFbBranchLine;\n    exports.ɵajf_src_material_form_builder_form_builder_b = AjfFbChoicesOriginEditorDialog;\n    exports.ɵajf_src_material_form_builder_form_builder_c = AjfFbChoicesOriginEditor;\n    exports.ɵajf_src_material_form_builder_form_builder_d = AjfFbConditionEditorDialog;\n    exports.ɵajf_src_material_form_builder_form_builder_e = AjfFbConditionEditor;\n    exports.ɵajf_src_material_form_builder_form_builder_f = AjfFbNodeEntry;\n    exports.ɵajf_src_material_form_builder_form_builder_g = AjfFbNodeProperties;\n    exports.ɵajf_src_material_form_builder_form_builder_h = AjfFbNodeTypeEntry;\n    exports.ɵajf_src_material_form_builder_form_builder_i = AjfFbStringIdentifierDialogComponent;\n    exports.ɵajf_src_material_form_builder_form_builder_j = AjfFbValidationConditionEditorDialog;\n    exports.ɵajf_src_material_form_builder_form_builder_k = AjfFbWarningConditionEditorDialog;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-form-builder.umd.js.map\n"]}