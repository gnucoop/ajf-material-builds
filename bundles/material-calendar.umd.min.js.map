{"version":3,"sources":["src/material/material-calendar.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ajf","material","calendar","tslib","ng","core","forms","common","button","ngxTranslate","this","core$1","CALENDAR_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","AjfCalendarComponent","multi","_super","cdr","service","call","__extends","decorators","type","Component","args","selector","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","outputs","providers","styles","ctorParameters","ChangeDetectorRef","AjfCalendarService","AjfCalendar","AjfCalendarModule","NgModule","imports","CommonModule","FormsModule","MatButtonModule","TranslateModule","declarations","Object","defineProperty","value"],"mappings":"CAAC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,SAAUA,QAAQ,sBAAuBA,QAAQ,iBAAkBA,QAAQ,kBAAmBA,QAAQ,mBAAoBA,QAAQ,4BAA6BA,QAAQ,wBAC7O,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,yBAA0B,CAAC,UAAW,QAAS,qBAAsB,gBAAiB,iBAAkB,kBAAmB,2BAA4B,uBAAwBJ,GACzMA,IAAzBD,EAASA,GAAUO,MAAsBC,IAAMR,EAAOQ,KAAO,GAAIR,EAAOQ,IAAIC,SAAWT,EAAOQ,IAAIC,UAAY,GAAIT,EAAOQ,IAAIC,SAASC,SAAW,IAAKV,EAAOW,MAAOX,EAAOY,GAAGC,KAAKH,SAAUV,EAAOY,GAAGC,KAAMb,EAAOY,GAAGE,MAAOd,EAAOY,GAAGG,OAAQf,EAAOY,GAAGH,SAASO,OAAQhB,EAAOiB,aAAaJ,MAHpS,CAIEK,MAAM,SAAWhB,EAASS,EAAOD,EAAUG,EAAMC,EAAOC,EAAQC,EAAQG,GAAU;;;;;;;;;;;;;;;;;;;;;OAuBhF,IAAIC,EAAkC,CAClCC,QAASP,EAAMQ,kBACfC,YAAaV,EAAKW,YAAW,WAAc,OAAOC,KAClDC,OAAO,GAKPD,EAAsC,SAAUE,GAEhD,SAASF,EAAqBG,EAAKC,GAC/B,OAAOF,EAAOG,KAAKZ,KAAMU,EAAKC,IAAYX,KAsB9C,OAxBAP,EAAMoB,UAAUN,EAAsBE,GAItCF,EAAqBO,WAAa,CAC9B,CAAEC,KAAMpB,EAAKqB,UAAWC,KAAM,CAAC,CACnBC,SAAU,eACVC,SAAU,84BACVC,cAAezB,EAAK0B,kBAAkBC,KACtCC,gBAAiB5B,EAAK6B,wBAAwBC,OAC9CC,QAAS,CACL,UAEJC,UAAW,CACPzB,GAEJ0B,OAAQ,CAAC,0tBAIzBrB,EAAqBsB,eAAiB,WAAc,MAAO,CACvD,CAAEd,KAAMpB,EAAKmC,mBACb,CAAEf,KAAMvB,EAASuC,sBAEdxB,EAzB8B,CA0BvCf,EAASwC,aAuBPC,EAAmC,WACnC,SAASA,KAmBT,OAjBAA,EAAkBnB,WAAa,CAC3B,CAAEC,KAAMpB,EAAKuC,SAAUjB,KAAM,CAAC,CAClBkB,QAAS,CACLtC,EAAOuC,aACP5C,EAASyC,kBACTrC,EAAMyC,YACNvC,EAAOwC,gBACPrC,EAAOsC,iBAEXC,aAAc,CACVjC,GAEJvB,QAAS,CACLuB,OAIb0B,EApB2B;;;;;;;;;;;;;;;;;;;;;;AAiDtCjD,EAAQuB,qBAAuBA,EAC/BvB,EAAQiD,kBAAoBA,EAC5BjD,EAAQkB,gCAAkCA,EAE1CuC,OAAOC,eAAe1D,EAAS,aAAc,CAAE2D,OAAO","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('@ajf/core/calendar'), require('@angular/core'), require('@angular/forms'), require('@angular/common'), require('@angular/material/button'), require('@ngx-translate/core')) :\n    typeof define === 'function' && define.amd ? define('@ajf/material/calendar', ['exports', 'tslib', '@ajf/core/calendar', '@angular/core', '@angular/forms', '@angular/common', '@angular/material/button', '@ngx-translate/core'], factory) :\n    (global = global || self, factory((global.ajf = global.ajf || {}, global.ajf.material = global.ajf.material || {}, global.ajf.material.calendar = {}), global.tslib, global.ng.core.calendar, global.ng.core, global.ng.forms, global.ng.common, global.ng.material.button, global.ngxTranslate.core));\n}(this, (function (exports, tslib, calendar, core, forms, common, button, core$1) { 'use strict';\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var CALENDAR_CONTROL_VALUE_ACCESSOR = {\n        provide: forms.NG_VALUE_ACCESSOR,\n        useExisting: core.forwardRef(function () { return AjfCalendarComponent; }),\n        multi: true\n    };\n    /**\n     * Ajf calendar component.\n     */\n    var AjfCalendarComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfCalendarComponent, _super);\n        function AjfCalendarComponent(cdr, service) {\n            return _super.call(this, cdr, service) || this;\n        }\n        AjfCalendarComponent.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-calendar',\n                        template: \"<div class=\\\"ajf-calendar-header\\\">\\n  <button (click)=\\\"prevPage()\\\" mat-mini-fab>&#8592;</button>\\n  <button (click)=\\\"previousViewMode()\\\" mat-button class=\\\"ajf-calendar-header-title\\\">\\n    {{ viewHeader | translate }}\\n  </button>\\n  <button (click)=\\\"nextPage()\\\" mat-mini-fab>&#8594;</button>\\n</div>\\n<div class=\\\"ajf-calendar-row\\\" *ngIf=\\\"calendarHeaders.length > 0\\\">\\n  <div *ngFor=\\\"let calendarHeader of calendarHeaders\\\">\\n    {{ calendarHeader | translate }}\\n  </div>\\n</div>\\n<div class=\\\"ajf-calendar-row\\\" *ngFor=\\\"let row of calendarRows\\\">\\n  <button\\n      *ngFor=\\\"let entry of row\\\"\\n      mat-raised-button\\n      [class.ajf-calendar-partial-selection]=\\\"entry.selected == 'partial'\\\"\\n      [disabled]=\\\"disabled || (entry.disabled || false)\\\"\\n      [color]=\\\"entry.selected != 'none' ? 'warn' : undefined\\\"\\n      (click)=\\\"selectEntry(entry)\\\"\\n  >{{ entry|ajfCalendarEntryLabel }}</button>\\n</div>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        outputs: [\n                            'change'\n                        ],\n                        providers: [\n                            CALENDAR_CONTROL_VALUE_ACCESSOR,\n                        ],\n                        styles: [\"ajf-calendar{display:flex;box-sizing:border-box;width:100%;height:320px;flex-direction:column}ajf-calendar .ajf-calendar-header,ajf-calendar .ajf-calendar-row{display:flex;box-sizing:border-box;width:100%;flex-direction:row}ajf-calendar .ajf-calendar-header{height:40px}ajf-calendar .ajf-calendar-header .ajf-calendar-header-title{flex:1;margin:0 10px}ajf-calendar .ajf-calendar-row{flex:1}ajf-calendar .ajf-calendar-row button,ajf-calendar .ajf-calendar-row div{flex:1;margin:3px}ajf-calendar .ajf-calendar-row div{line-height:40px;text-align:center}ajf-calendar .ajf-calendar-row .ajf-calendar-partial-selection ::before{content:\\\"\\\";position:absolute;top:0;right:0;bottom:0;left:0;background-color:rgba(255,255,255,.5)}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfCalendarComponent.ctorParameters = function () { return [\n            { type: core.ChangeDetectorRef },\n            { type: calendar.AjfCalendarService }\n        ]; };\n        return AjfCalendarComponent;\n    }(calendar.AjfCalendar));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfCalendarModule = /** @class */ (function () {\n        function AjfCalendarModule() {\n        }\n        AjfCalendarModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [\n                            common.CommonModule,\n                            calendar.AjfCalendarModule,\n                            forms.FormsModule,\n                            button.MatButtonModule,\n                            core$1.TranslateModule,\n                        ],\n                        declarations: [\n                            AjfCalendarComponent,\n                        ],\n                        exports: [\n                            AjfCalendarComponent,\n                        ],\n                    },] }\n        ];\n        return AjfCalendarModule;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.AjfCalendarComponent = AjfCalendarComponent;\n    exports.AjfCalendarModule = AjfCalendarModule;\n    exports.CALENDAR_CONTROL_VALUE_ACCESSOR = CALENDAR_CONTROL_VALUE_ACCESSOR;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-calendar.umd.js.map\n"]}