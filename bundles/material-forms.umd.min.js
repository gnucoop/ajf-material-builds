!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@ajf/core/forms"),require("@angular/core"),require("@angular/material/dialog"),require("rxjs/operators"),require("@angular/material/input"),require("@angular/common"),require("@angular/forms"),require("@angular/material/button"),require("@angular/material/card"),require("@angular/material/form-field"),require("@angular/material/icon"),require("@angular/material/radio"),require("@angular/material/select"),require("@angular/material/slide-toggle"),require("@angular/material/toolbar"),require("@ngx-translate/core"),require("@ajf/core/common"),require("@ajf/material/barcode"),require("@ajf/material/calendar"),require("@ajf/material/checkbox-group"),require("@ajf/material/page-slider"),require("@ajf/material/time")):"function"==typeof define&&define.amd?define("@ajf/material/forms",["exports","@ajf/core/forms","@angular/core","@angular/material/dialog","rxjs/operators","@angular/material/input","@angular/common","@angular/forms","@angular/material/button","@angular/material/card","@angular/material/form-field","@angular/material/icon","@angular/material/radio","@angular/material/select","@angular/material/slide-toggle","@angular/material/toolbar","@ngx-translate/core","@ajf/core/common","@ajf/material/barcode","@ajf/material/calendar","@ajf/material/checkbox-group","@ajf/material/page-slider","@ajf/material/time"],n):n(((e=e||self).ajf=e.ajf||{},e.ajf.material=e.ajf.material||{},e.ajf.material.forms={}),e.ng.core.forms,e.ng.core,e.ng.material.dialog,e.rxjs.operators,e.ng.material.input,e.ng.common,e.ng.forms,e.ng.material.button,e.ng.material.card,e.ng.material.formField,e.ng.material.icon,e.ng.material.radio,e.ng.material.select,e.ng.material.slideToggle,e.ng.material.toolbar,e.ngxTranslate.core,e.ng.core.common,e.ng.material.barcode,e.ng.material.calendar,e.ng.material.checkboxGroup,e.ng.material.pageSlider,e.ng.material.time)}(this,(function(e,n,a,t,r,o,i,l,c,s,f,d,m,p,g,u,j,h,b,y,I,v,C){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */var x=function(e,n){return(x=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var a in n)n.hasOwnProperty(a)&&(e[a]=n[a])})(e,n)};function F(e,n){function a(){this.constructor=e}x(e,n),e.prototype=null===n?Object.create(n):(a.prototype=n.prototype,new a)}
/**
     * @license
     * Copyright (C) Gnucoop soc. coop.
     *
     * This file is part of the Advanced JSON forms (ajf).
     *
     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or
     * modify it under the terms of the GNU Affero General Public License as
     * published by the Free Software Foundation, either version 3 of the License,
     * or (at your option) any later version.
     *
     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,
     * but WITHOUT ANY WARRANTY; without even the implied warranty of
     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
     * General Public License for more details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with Advanced JSON forms (ajf).
     * If not, see http://www.gnu.org/licenses/.
     *
     */
var S,A=function(){function e(){}return e.decorators=[{type:a.Component,args:[{template:'<mat-dialog-content><div [innerHTML]="message"></div></mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button [mat-dialog-close]="true">Ok</button>\n  <button mat-button [mat-dialog-close]="false">Cancel</button>\n</mat-dialog-actions>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None}]}],e}(),w=function(){function e(e){this._dialog=e}return e.prototype.showWarningAlertPrompt=function(e){var n=this._dialog.open(A);return n.componentInstance.message=e.join("<br>"),n.afterClosed().pipe(r.map((function(e){return{result:e}})))},e.decorators=[{type:a.Injectable}],e.ctorParameters=function(){return[{type:t.MatDialog}]},e}(),D=function(e){function t(n,a,t){return e.call(this,n,a,t)||this}return F(t,e),t.decorators=[{type:a.Component,args:[{template:'<mat-slide-toggle *ngIf="control|async as ctrl" [formControl]="ctrl!" [disabled]="readonly"></mat-slide-toggle>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None,styles:["\n"]}]}],t.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:n.AjfFormRendererService},{type:w}]},t}(n.AjfBaseFieldComponent),M=function(e){function t(n,a,t){return e.call(this,n,a,t)||this}return F(t,e),t.decorators=[{type:a.Component,args:[{template:'<ajf-calendar\n  *ngIf="control|async as ctrl"\n  selectionMode="day"\n  [dateOnlyForDay]="true"\n  [minDate]="instance.node.minDate|ajfDateValue"\n  [maxDate]="instance.node.maxDate|ajfDateValue"\n  [formControl]="ctrl!"\n></ajf-calendar>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None,styles:["\n"]}]}],t.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:n.AjfFormRendererService},{type:w}]},t}(n.AjfBaseFieldComponent),T=function(e){function t(n,a,t,r){var o=e.call(this,n,a,t)||this;return o._dvs=r,o}return F(t,e),t.prototype.onChange=function(){if(null!=this.input){var e=this.input.value||"";e.length>0&&(null!=this._minDateStr&&e<this._minDateStr||null!=this._maxDateStr&&e>this._maxDateStr)&&(this.input.value="")}},t.prototype._onInstanceChange=function(){this._minDateStr=this._dvs.transform(this.instance.node.minDate),this._maxDateStr=this._dvs.transform(this.instance.node.maxDate)},t.decorators=[{type:a.Component,args:[{template:'<mat-form-field *ngIf="control|async as ctrl">\n  <input matInput type="date"\n      [attr.aria-label]="instance.node.label || (instance|ajfNodeCompleteName)"\n      [min]="instance.node.minDate|ajfDateValueString"\n      [max]="instance.node.maxDate|ajfDateValueString"\n      [readonly]="readonly"\n      (change)="onChange()"\n      [formControl]="ctrl!">\n</mat-form-field>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None,styles:["\n"]}]}],t.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:n.AjfFormRendererService},{type:w},{type:n.AjfDateValueStringPipe}]},t.propDecorators={input:[{type:a.ViewChild,args:[o.MatInput,{static:!1}]}]},t}(n.AjfBaseFieldComponent),_=function(e){function t(n,a,t){return e.call(this,n,a,t)||this}return F(t,e),t.decorators=[{type:a.Component,args:[{template:'<h1 [innerHTML]="instance.node.label | translate"></h1>\n<div [innerHTML]="instance.node.HTML | translate"></div>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None,styles:["\n"]}]}],t.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:n.AjfFormRendererService},{type:w}]},t}(n.AjfBaseFieldComponent),R=function(e){function t(n,a,t){return e.call(this,n,a,t)||this}return F(t,e),t.decorators=[{type:a.Component,args:[{template:'<ajf-barcode *ngIf="control|async as ctrl" [formControl]="ctrl!" [readonly]="readonly"></ajf-barcode>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None,styles:["\n"]}]}],t.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:n.AjfFormRendererService},{type:w}]},t}(n.AjfBaseFieldComponent),P=function(e){function t(n,a,t){return e.call(this,n,a,t)||this}return F(t,e),t.decorators=[{type:a.Component,args:[{template:'<mat-form-field *ngIf="control|async as ctrl">\n  <input matInput *ngIf="type === \'text\'" type="text" [readonly]="readonly" [formControl]="ctrl!">\n  <input matInput *ngIf="type === \'number\'" type="number" [readonly]="readonly" [formControl]="ctrl!">\n</mat-form-field>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None,styles:["\n"]}]}],t.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:n.AjfFormRendererService},{type:w}]},t}(n.AjfInputFieldComponent),k=function(e){function t(n,a,t,r){return e.call(this,n,a,t,r)||this}return F(t,e),t.decorators=[{type:a.Component,args:[{template:'<ng-container *ngIf="!(instance|ajfExpandFieldWithChoices:searchThreshold); else expanded">\n  <mat-select *ngIf="control|async as ctrl" [formControl]="ctrl!" [multiple]="true" [disabled]="readonly">\n    <mat-option [value]="choice.value"\n        *ngFor="let choice of instance.filteredChoices">\n      {{ choice.label | translate }}\n    </mat-option>\n  </mat-select>\n</ng-container>\n<ng-template #expanded>\n  <ajf-checkbox-group *ngIf="control|async as ctrl" class="ajf-choices-container"\n      [formControl]="ctrl!">\n    <ajf-checkbox-group-item *ngFor="let choice of instance.filteredChoices"\n        [readonly]="readonly"\n        [value]="choice.value">\n      {{ choice.label | translate }}\n    </ajf-checkbox-group-item>\n  </ajf-checkbox-group>\n</ng-template>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None,styles:["\n"]}]}],t.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:n.AjfFormRendererService},{type:w},{type:Number,decorators:[{type:a.Optional},{type:a.Inject,args:[n.AJF_SEARCH_ALERT_THRESHOLD]}]}]},t}(n.AjfFieldWithChoicesComponent),B=function(e){function t(n,a,t,r){return e.call(this,n,a,t,r)||this}return F(t,e),t.decorators=[{type:a.Component,args:[{template:'<ng-container *ngIf="!(instance|ajfExpandFieldWithChoices:searchThreshold) ; else expanded">\n  <mat-select *ngIf="control|async as ctrl" [formControl]="ctrl!" [disabled]="readonly">\n    <mat-option [value]="choice.value"\n        *ngFor="let choice of instance.filteredChoices">\n      {{ choice.label | translate }}\n    </mat-option>\n  </mat-select>\n</ng-container>\n<ng-template #expanded>\n  <mat-radio-group *ngIf="control|async as ctrl" class="ajf-choices-container"\n      [formControl]="ctrl!">\n    <mat-radio-button [value]="choice.value" [disabled]="readonly"\n        *ngFor="let choice of instance.filteredChoices">\n      {{ choice.label | translate }}\n    </mat-radio-button>\n  </mat-radio-group>\n</ng-template>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None,styles:["\n"]}]}],t.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:n.AjfFormRendererService},{type:w},{type:Number,decorators:[{type:a.Optional},{type:a.Inject,args:[n.AJF_SEARCH_ALERT_THRESHOLD]}]}]},t}(n.AjfFieldWithChoicesComponent),N=function(e){function t(n,a,t){return e.call(this,n,a,t)||this}return F(t,e),t.prototype.goToNextCell=function(e,n,a){var t=this.instance.controls[n][1][a];a+1>=this.instance.controls[n][1].length?(a=0,n+1>=this.instance.controls.length?n=1:n+=1):a+=1,"string"!=typeof t&&(t.show=!1),this._showCell(n,a),e.preventDefault(),e.stopPropagation()},t.prototype.goToCell=function(e,n){this._resetControls(),this._showCell(e,n)},t.prototype._resetControls=function(){this.instance.controls.forEach((function(e){return e[1].forEach((function(e){"string"!=typeof e&&(e.show=!1)}))}))},t.prototype._showCell=function(e,n){if(!(e>=this.instance.controls.length||n>=this.instance.controls[e][1].length)){var a=this.instance.controls[e][1][n];"string"!=typeof a&&(a.show=!0)}},t.decorators=[{type:a.Component,args:[{template:'<table class="ajf-table-field">\n  <ng-container *ngIf="instance.node as node">\n    <ng-container *ngFor="let columns of instance.controls; let row = index">\n      <tr [ngClass]="row | ajfTableRowClass">\n        <td>\n          <ng-container *ngIf="columns[0] != null">\n            {{ columns[0] | ajfTranslateIfString | ajfFormatIfNumber: \'.0-2\' }}\n          </ng-container>\n        </td>\n        <td *ngFor="let c of columns[1]; let column = index">\n          <ng-container *ngIf="c|ajfGetTableCellControl as contr">\n            <ng-container *ngIf="contr != null">\n              <input *ngIf="row > 0 && contr!.show && (node.rows[row-1][column]|ajfIsCellEditable); else plainTextCell"\n                (focusout)="contr!.show = false" type="number" [formControl]="contr"\n                (keydown.tab)="goToNextCell($event, row, column)" autoFocus>\n              <ng-template #plainTextCell>\n                <span *ngIf="row > 0; else labelCell" class="ajf-table-cell"\n                  (click)="goToCell(row, column)">{{ contr!.value | ajfTranslateIfString | ajfFormatIfNumber: \'.0-2\' }}</span>\n                <ng-template #labelCell>{{ contr | ajfTranslateIfString | ajfFormatIfNumber: \'.0-2\' }}</ng-template>\n              </ng-template>\n            </ng-container>\n          </ng-container>\n        </td>\n      </tr>\n    </ng-container>\n  </ng-container>\n</table>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None,styles:["table.ajf-table-field{border-collapse:collapse;border-spacing:0;width:100%}table.ajf-table-field tr td{position:relative;min-width:1em}table.ajf-table-field tr td span,table.ajf-table-field tr td input{cursor:text;position:absolute;width:100%;box-sizing:border-box;outline:none;top:0;right:0;bottom:0;left:0;display:inline-block;border-top:solid 1px #ccc;border-right:solid 1px transparent;border-bottom:solid 1px transparent;border-left:solid 1px #ccc;font-family:inherit;font-size:inherit;line-height:inherit;text-align:center}table.ajf-table-field tr td:last-child span,table.ajf-table-field tr td:last-child input{border-right-color:#ccc}table.ajf-table-field tr:last-of-type td span,table.ajf-table-field tr:last-of-type td input{border-bottom-color:#ccc}\n"]}]}],t.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:n.AjfFormRendererService},{type:w}]},t}(n.AjfBaseFieldComponent),E=function(e){function t(n,a,t){return e.call(this,n,a,t)||this}return F(t,e),t.decorators=[{type:a.Component,args:[{template:'<ajf-time *ngIf="control|async as ctrl" [formControl]="ctrl!" [readonly]="readonly"></ajf-time>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None,styles:["\n"]}]}],t.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:n.AjfFormRendererService},{type:w}]},t}(n.AjfBaseFieldComponent),O=function(e){function t(){var a=e.call(this)||this;return a.componentsMap[n.AjfFieldType.String]={component:P},a.componentsMap[n.AjfFieldType.Text]={component:P},a.componentsMap[n.AjfFieldType.Number]={component:P,inputs:{type:"number"}},a.componentsMap[n.AjfFieldType.Boolean]={component:D},a.componentsMap[n.AjfFieldType.Formula]={component:P,inputs:{readonly:!0}},a.componentsMap[n.AjfFieldType.Date]={component:M},a.componentsMap[n.AjfFieldType.DateInput]={component:T},a.componentsMap[n.AjfFieldType.Table]={component:N},a.componentsMap[n.AjfFieldType.Empty]={component:_},a.componentsMap[n.AjfFieldType.SingleChoice]={component:B},a.componentsMap[n.AjfFieldType.MultipleChoice]={component:k},a.componentsMap[n.AjfFieldType.Time]={component:E},a.componentsMap[n.AjfFieldType.Barcode]={component:R},a}return F(t,e),t.decorators=[{type:a.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[]},t.ɵprov=a["ɵɵdefineInjectable"]({factory:function e(){return new t},token:t,providedIn:"root"}),t}(n.AjfFieldService),q=function(e){function n(n,a,t){var r=e.call(this,n,a)||this;return r.componentsMap=t.componentsMap,r}return F(n,e),n.decorators=[{type:a.Component,args:[{selector:"ajf-field,ajf-form-field",template:'<div\n    [ngClass]="\'ajf-field-\' + (instance|ajfNodeCompleteName)"\n    [class.ajf-validated]="instance.validationResults|ajfFieldIsValid"\n>\n  <ng-template ajf-field-host></ng-template>\n</div>\n<ng-container *ngIf="instance && instance.node && instance.node.attachments">\n  <a *ngFor="let attachment of instance.node.attachments"\n    [href]="attachment.value" target="_blank">{{attachment.label | translate}}</a>\n</ng-container>\n<div *ngIf="instance && instance.validationResults" class="ajf-errors">\n  <ng-container *ngFor="let res of instance.validationResults">\n    <div class="error" *ngIf="!res.result">\n      {{ res.error }} \n    </div>\n  </ng-container>\n</div>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None,styles:["ajf-field .ajf-choices-container{display:flex;flex-direction:row;flex-wrap:wrap;align-items:stretch}ajf-field .ajf-item-container{position:relative}ajf-field .ajf-errors{font-style:italic;padding:5px}ajf-field tr.ajf-row-odd{background-color:gray}table{border-collapse:collapse;border-spacing:0}table tr td{position:relative}table tr td span,table tr td input{cursor:text;position:absolute;width:100%;box-sizing:border-box;outline:none;top:0;right:0;bottom:0;left:0;display:inline-block;border-top:solid 1px #ccc;border-right:solid 1px transparent;border-bottom:solid 1px transparent;border-left:solid 1px #ccc;font-family:inherit;font-size:inherit;line-height:inherit;text-align:center}table tr td:last-child span,table tr td:last-child input{border-right-color:#ccc}table tr:last-of-type td span,table tr:last-of-type td input{border-bottom-color:#ccc}input::-webkit-outer-spin-button,input::-webkit-inner-spin-button{-webkit-appearance:none;margin:0}\n"]}]}],n.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:a.ComponentFactoryResolver},{type:O}]},n}(n.AjfFormField),V=function(e){function t(n,a){var t=e.call(this,n,a)||this;return t.topBar=!1,t}return F(t,e),t.prototype.scrollToSlide=function(e){this.formSlider.slide({to:e.position-1})},t.decorators=[{type:a.Component,args:[{selector:"ajf-form",template:'<ng-container *ngIf="formGroup|async as fg">\n  <form novalidate [formGroup]="fg!">\n    <div class="ajf-form-container">\n\n      <mat-toolbar *ngIf="!hideTopToolbar" class="ajf-btn-strip">\n        <ng-template ngFor let-slideInstance [ngForOf]="slides|async" [ngForTrackBy]="trackNodeById">\n          <button mat-button class="ajf-topbar-button"\n          *ngIf="topBar != null && slideInstance.node != null && slideInstance.node.label != null && slideInstance.node.label.length > 0"\n              (click)="scrollToSlide(slideInstance)">{{slideInstance.node.label | translate}}</button>\n        </ng-template>\n      </mat-toolbar>\n\n      <mat-toolbar *ngIf="!hideTopToolbar">\n        {{ title }}\n        <span class="ajf-spacer"></span>\n        <button mat-button default *ngIf="!saveDisabled" (click)="onSave($event)"\n            translate>Save</button>\n      </mat-toolbar>\n      <div class="ajf-slider-container">\n        <ajf-page-slider (orientationChange)="orientationChangeHandler($event)"\n            [fixedOrientation]="fixedOrientation"\n            [hideNavigationButtons]="hideNavigationButtons"\n            [orientation]="orientation"\n            #formSlider>\n          <ng-container *ngIf="(slides|async) as curSlides">\n            <ng-container *ngIf="curSlides!.length > 0 && hasStartMessage">\n              <ajf-page-slider-item>\n                <div class="ajf-form-page">\n                  <mat-card>\n                    <mat-card-header>\n                      <div class="ajf-page-slider-item-header">\n                        <h2>\n                          <span class="ajf-form-header-number">\n                            1 &rarr;\n                          </span>\n                          <span class="ajf-title">\n                            <ng-content select="[ajfFormStartMessageTitle]"></ng-content>\n                          </span>\n                        </h2>\n                      </div>\n                    </mat-card-header>\n                    <mat-card-content>\n                      <ng-content select="[ajfFormStartMessage]"></ng-content>\n                    </mat-card-content>\n                  </mat-card>\n                </div>\n              </ajf-page-slider-item>\n            </ng-container>\n            <ng-container *ngFor="let slideInstance of curSlides; trackBy:trackNodeById">\n              \x3c!-- non repeating slides --\x3e\n              <ng-container *ngIf="slideInstance.visible">\n                <ng-container *ngIf="!(slideInstance|ajfIsRepeatingSlideInstance)">\n                  <ajf-page-slider-item>\n                    <div class="ajf-form-page">\n                      <mat-card>\n                        <mat-card-header>\n                          <div class="ajf-page-slider-item-header">\n                            <h2>\n                              <span class="ajf-form-header-number">{{ slideInstance.position + (hasStartMessage | ajfBoolToInt) }} &rarr;</span>\n                              <span [innerHTML]="slideInstance.node.label | translate"></span>\n                            </h2>\n                            <mat-icon class="ajf-warning" *ngIf="!slideInstance.valid">warning</mat-icon>\n                            <mat-icon class="ajf-success" *ngIf="slideInstance.valid">check</mat-icon>\n                          </div>\n                        </mat-card-header>\n                        <mat-card-content>\n                          <ng-template ngFor let-fieldInstance [ngForOf]="slideInstance.flatNodes" [ngForTrackBy]="trackNodeById">\n                            <div [ngClass]="\'ajf-\' + (fieldInstance|ajfAsFieldInstance).node.size" class="ajf-field-entry" *ngIf="fieldInstance.visible">\n                              <i [class]="(fieldInstance|ajfAsFieldInstance).node.fieldType | ajfFieldIcon" item-right></i>\n                              <p>{{ ((fieldInstance|ajfAsFieldInstance).node.description || \'\') | translate }}</p>\n                              <label *ngIf="(fieldInstance|ajfAsFieldInstance).node.fieldType !== 7" [innerHTML]="fieldInstance.node.label | translate"></label>\n                              <ajf-field [instance]="fieldInstance|ajfAsFieldInstance" [readonly]="readonly"></ajf-field>\n                            </div>\n                          </ng-template>\n                        </mat-card-content>\n                      </mat-card>\n                    </div>\n                  </ajf-page-slider-item>\n                </ng-container>\n                \x3c!-- repeating slides --\x3e\n                <ng-container *ngIf="(slideInstance|ajfIsRepeatingSlideInstance)">\n                  <ajf-page-slider-item *ngFor="let curRep of ((slideInstance|ajfAsRepeatingSlideInstance).reps|ajfRange); let idx = index; let lastSlide = last">\n                    <div class="ajf-form-page">\n                      <mat-card>\n                        <mat-card-header>\n                          <div class="ajf-page-slider-item-header">\n                            <h2>\n                              <span class="ajf-form-header-number">{{ slideInstance.position|ajfIncrement:idx + (hasStartMessage | ajfBoolToInt) }} &rarr;</span>\n                              <span [innerHTML]="slideInstance.node.label | translate"></span>\n                            </h2>\n                            <mat-icon class="ajf-warning" *ngIf="!(slideInstance|ajfValidSlide:idx)">warning</mat-icon>\n                            <mat-icon class="ajf-success" *ngIf="(slideInstance|ajfValidSlide:idx)">check</mat-icon>\n                          </div>\n                        </mat-card-header>\n                        <mat-card-content>\n                          <div *ngIf="lastSlide" class="ajf-group-actions">\n                            <button (click)="addGroup(slideInstance)" [disabled]="!(slideInstance|ajfAsRepeatingSlideInstance).canAdd" mat-mini-fab>\n                              <mat-icon>add</mat-icon>\n                            </button>\n                            <button (click)="removeGroup(slideInstance)" [disabled]="!(slideInstance|ajfAsRepeatingSlideInstance).canRemove" mat-mini-fab>\n                              <mat-icon>remove</mat-icon>\n                            </button>\n                          </div>\n                          <ng-template ngFor let-fieldInstance [ngForOf]="slideInstance.slideNodes[idx]" [ngForTrackBy]="trackNodeById">\n                            <div [ngClass]="\'ajf-\' + (fieldInstance|ajfAsFieldInstance).node.size" class="ajf-field-entry" *ngIf="fieldInstance.visible">\n                              <i [class]="(fieldInstance|ajfAsFieldInstance).node.fieldType | ajfFieldIcon" item-right></i>\n                              <p>{{ ((fieldInstance|ajfAsFieldInstance).node.description || \'\') | translate }}</p>\n                              <label [innerHTML]="fieldInstance.node.label | translate"></label>\n                              <ajf-field [instance]="fieldInstance|ajfAsFieldInstance" [readonly]="readonly"></ajf-field>\n                            </div>\n                          </ng-template>\n                        </mat-card-content>\n                      </mat-card>\n                    </div>\n                  </ajf-page-slider-item>\n                </ng-container>\n              </ng-container>\n            </ng-container>\n            <ng-container *ngIf="curSlides && curSlides!.length > 0 && hasEndMessage">\n              <ajf-page-slider-item>\n                <div class="ajf-form-page">\n                  <mat-card>\n                    <mat-card-header>\n                      <div class="ajf-page-slider-item-header">\n                        <h2>\n                          <span *ngIf="(slidesNum|async) as snum" class="ajf-form-header-number">\n                            {{ snum! + (hasStartMessage | ajfBoolToInt ) + 1 }} &rarr;\n                          </span>\n                          <span class="ajf-title">\n                            <ng-content select="[ajfFormEndMessageTitle]"></ng-content>\n                          </span>\n                        </h2>\n                      </div>\n                    </mat-card-header>\n                    <mat-card-content>\n                      <ng-content select="[ajfFormEndMessage]"></ng-content>\n                    </mat-card-content>\n                  </mat-card>\n                </div>\n              </ajf-page-slider-item>\n            </ng-container>\n          </ng-container>\n          <div ajfPageSliderBar *ngIf="!hideBottomToolbar">\n            <div class="ajf-left-bar">\n              <div class="ajf-errors" *ngIf="((errors | async) || 0) > 0">\n                <button mat-button (click)="goToPrevError()" danger>\n                  <mat-icon>arrow_upward</mat-icon>\n                </button>\n                <button mat-button (click)="goToNextError()" danger>\n                  <mat-icon>arrow_downward</mat-icon>\n                </button>\n              </div>\n              <div class="ajf-info-box ajf-error">\n                <div class="ajf-title" translate>Errors</div>\n                <div class="ajf-content">\n                  {{ errors | async }} / {{ slidesNum|async }}\n                </div>\n              </div>\n            </div>\n          </div>\n        </ajf-page-slider>\n      </div>\n    </div>\n  </form>\n</ng-container>\n',encapsulation:a.ViewEncapsulation.None,changeDetection:a.ChangeDetectionStrategy.OnPush,styles:["ajf-form{display:block}ajf-form .ajf-form-container{display:flex;flex-direction:column;position:absolute;top:0;right:0;bottom:0;left:0}ajf-form .ajf-form-container mat-toolbar.ajf-btn-strip{overflow:auto}ajf-form .ajf-form-container mat-toolbar.ajf-btn-strip button.ajf-topbar-button.mat-button{flex:1 1 auto}ajf-form .ajf-form-container mat-toolbar.ajf-btn-strip button.ajf-topbar-button.mat-button *{display:block;width:100%;overflow:hidden;text-overflow:ellipsis}ajf-form .ajf-form-container mat-toolbar.ajf-hidden{opacity:0}ajf-form .ajf-form-container .ajf-topbar-button{margin-right:10px}ajf-form .ajf-form-container>.ajf-slider-container{flex:1;position:relative}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider{height:100%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content{padding:16px}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page{flex:1;max-height:100%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card{margin:1em 0 3em}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content{display:flex;flex-wrap:wrap;flex-direction:row;align-content:flex-start;position:relative}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content .ajf-group-actions{position:absolute;right:0;top:-30px;padding:15px;z-index:10}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content>.ajf-field-entry{flex:1 0 auto;padding-left:10px;padding-right:10px;width:100%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content>.ajf-field-entry.ajf-normal{width:100%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content>.ajf-field-entry.ajf-small{width:50%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content>.ajf-field-entry.ajf-smaller{width:33%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content>.ajf-field-entry.ajf-tiny{width:25%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content>.ajf-field-entry.ajf-mini{width:20%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header{display:flex;align-items:center;width:100%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header>h2{flex:1}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header>h2>.ajf-form-header-number{margin-right:.5em}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header mat-icon.ajf-warning{color:#f53d3d}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header mat-icon.ajf-success{color:#32db64}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header h2>.ajf-title{display:inline-block;margin-right:40px;white-space:normal;vertical-align:top}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar{display:flex;align-items:flex-start;flex-direction:row;position:absolute;bottom:0}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-right-button{float:right}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-button-icon-only ion-icon{padding:0 .1em}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-info-box{height:40px;padding:4px}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-info-box>div{height:16px;line-height:16px}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-info-box>div.ajf-content{font-weight:bold}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-info-box.ajf-error{order:2;color:red}ajf-form .ajf-form-container .ajf-spacer{flex:1 0 auto}\n"]}]}],t.ctorParameters=function(){return[{type:n.AjfFormRendererService},{type:a.ChangeDetectorRef}]},t.propDecorators={topBar:[{type:a.Input}]},t}(n.AjfFormRenderer),H=(F((function L(){return null!==S&&S.apply(this,arguments)||this}),S=l.FormControl),function(){function e(){}return e.prototype.transform=function(e){return null==e||"string"==typeof e?null:e},e.decorators=[{type:a.Pipe,args:[{name:"ajfGetTableCellControl"}]}],e}()),G=function(){function e(){}return e.prototype.transform=function(e){return null!=e&&"string"!=typeof e&&!0===e.editable},e.decorators=[{type:a.Pipe,args:[{name:"ajfIsCellEditable"}]}],e}(),z=function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:[O]}},e.decorators=[{type:a.NgModule,args:[{imports:[i.CommonModule,l.ReactiveFormsModule,c.MatButtonModule,s.MatCardModule,t.MatDialogModule,f.MatFormFieldModule,d.MatIconModule,o.MatInputModule,m.MatRadioModule,p.MatSelectModule,g.MatSlideToggleModule,u.MatToolbarModule,j.TranslateModule,n.AjfFormsModule,y.AjfCalendarModule,b.AjfBarcodeModule,I.AjfCheckboxGroupModule,h.AjfCommonModule,v.AjfPageSliderModule,C.AjfTimeModule],declarations:[R,D,M,T,_,A,q,V,H,P,G,k,B,N,E],entryComponents:[R,D,M,T,_,P,k,B,N,E],exports:[q,V],providers:[O,w]}]}],e}();
/**
     * @license
     * Copyright (C) Gnucoop soc. coop.
     *
     * This file is part of the Advanced JSON forms (ajf).
     *
     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or
     * modify it under the terms of the GNU Affero General Public License as
     * published by the Free Software Foundation, either version 3 of the License,
     * or (at your option) any later version.
     *
     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,
     * but WITHOUT ANY WARRANTY; without even the implied warranty of
     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
     * General Public License for more details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with Advanced JSON forms (ajf).
     * If not, see http://www.gnu.org/licenses/.
     *
     */
/**
     * @license
     * Copyright (C) Gnucoop soc. coop.
     *
     * This file is part of the Advanced JSON forms (ajf).
     *
     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or
     * modify it under the terms of the GNU Affero General Public License as
     * published by the Free Software Foundation, either version 3 of the License,
     * or (at your option) any later version.
     *
     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,
     * but WITHOUT ANY WARRANTY; without even the implied warranty of
     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
     * General Public License for more details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with Advanced JSON forms (ajf).
     * If not, see http://www.gnu.org/licenses/.
     *
     */
e.AjfBooleanFieldComponent=D,e.AjfDateFieldComponent=M,e.AjfDateInputFieldComponent=T,e.AjfEmptyFieldComponent=_,e.AjfFieldService=O,e.AjfFieldWarningDialog=A,e.AjfFormField=q,e.AjfFormRenderer=V,e.AjfFormsModule=z,e.AjfInputFieldComponent=P,e.AjfMultipleChoiceFieldComponent=k,e.AjfSingleChoiceFieldComponent=B,e.AjfTableFieldComponent=N,e.AjfTimeFieldComponent=E,e.AjfWarningAlertService=w,e.ɵgc_ajf_src_material_forms_forms_a=R,e.ɵgc_ajf_src_material_forms_forms_b=H,e.ɵgc_ajf_src_material_forms_forms_c=G,Object.defineProperty(e,"__esModule",{value:!0})}));