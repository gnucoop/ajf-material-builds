/**
 * @license
 * Copyright (C) 2018 Gnucoop soc. coop.
 *
 * This file is part of the Advanced JSON forms (ajf).
 *
 * Advanced JSON forms (ajf) is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
 * General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Advanced JSON forms (ajf).
 * If not, see http://www.gnu.org/licenses/.
 *
 */
!function(e,a){"object"==typeof exports&&"undefined"!=typeof module?a(exports,require("@angular/core"),require("@angular/material/dialog"),require("rxjs/operators"),require("@ajf/core/forms"),require("@angular/common"),require("@angular/forms"),require("@angular/material/button"),require("@angular/material/card"),require("@angular/material/form-field"),require("@angular/material/icon"),require("@angular/material/input"),require("@angular/material/radio"),require("@angular/material/select"),require("@angular/material/slide-toggle"),require("@angular/material/toolbar"),require("@ngx-translate/core"),require("@ajf/core/common"),require("@ajf/material/calendar"),require("@ajf/material/checkbox-group"),require("@ajf/material/page-slider"),require("@ajf/material/time")):"function"==typeof define&&define.amd?define("@ajf/material/forms",["exports","@angular/core","@angular/material/dialog","rxjs/operators","@ajf/core/forms","@angular/common","@angular/forms","@angular/material/button","@angular/material/card","@angular/material/form-field","@angular/material/icon","@angular/material/input","@angular/material/radio","@angular/material/select","@angular/material/slide-toggle","@angular/material/toolbar","@ngx-translate/core","@ajf/core/common","@ajf/material/calendar","@ajf/material/checkbox-group","@ajf/material/page-slider","@ajf/material/time"],a):a(((e=e||self).ajf=e.ajf||{},e.ajf.material=e.ajf.material||{},e.ajf.material.forms={}),e.ng.core,e.ng.material.dialog,e.rxjs.operators,e.ajf.core.forms,e.ng.common,e.ng.forms,e.ng.material.button,e.ng.material.card,e.ng.material.formField,e.ng.material.icon,e.ng.material.input,e.ng.material.radio,e.ng.material.select,e.ng.material.slideToggle,e.ng.material.toolbar,e.ngxt.core,e.ajf.core.common,e.ajf.material.calendar,e.ajf.material.checkboxGroup,e.ajf.material.pageSlider,e.ajf.material.time)}(this,function(e,a,t,n,i,r,o,l,f,s,d,c,m,g,p,j,u,h,b,I,v,w){"use strict";var x=function(e,a){return(x=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,a){e.__proto__=a}||function(e,a){for(var t in a)a.hasOwnProperty(t)&&(e[t]=a[t])})(e,a)};function y(e,a){function t(){this.constructor=e}x(e,a),e.prototype=null===a?Object.create(a):(t.prototype=a.prototype,new t)}var C=function(){function e(){}return e.decorators=[{type:a.Component,args:[{template:'<mat-dialog-content><div [innerHTML]="message"></div></mat-dialog-content><mat-dialog-actions><button mat-button [mat-dialog-close]="true">Ok</button> <button mat-button [mat-dialog-close]="false">Cancel</button></mat-dialog-actions>',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None}]}],e}(),S=function(r){function e(e,a,t){var n=r.call(this,e,a)||this;return n._dialog=t,n}return y(e,r),e.prototype.showWarningAlertPrompt=function(e){var a=this._dialog.open(C);return a.componentInstance.message=e.join("<br>"),a.afterClosed().pipe(n.map(function(e){return{result:e}}))},e.decorators=[{type:a.Component,args:[{selector:"ajf-form-field",template:'<ng-container *ngIf="control|async as curControl"><div [ngSwitch]="fieldInstance.field.fieldType"><mat-form-field *ngSwitchCase="ajfFieldTypes.String"><input matInput type="text" [formControl]="curControl"></mat-form-field><mat-form-field *ngSwitchCase="ajfFieldTypes.Text"><input matInput type="text" [formControl]="curControl"></mat-form-field><mat-form-field *ngSwitchCase="ajfFieldTypes.Number"><input matInput type="number" [formControl]="curControl"></mat-form-field><mat-slide-toggle *ngSwitchCase="ajfFieldTypes.Boolean" [formControl]="curControl"></mat-slide-toggle><ng-container *ngSwitchCase="ajfFieldTypes.SingleChoice"><ng-container *ngIf="(!fwcInst.field.forceExpanded && fwcInst.filteredChoices && fwcInst.filteredChoices.length > 6) || fwcInst.field.forceNarrow"><mat-select [formControl]="curControl"><mat-option [value]="choice.value" *ngFor="let choice of fwcInst.filteredChoices">{{ choice.label | translate }}</mat-option></mat-select></ng-container><ng-container *ngIf="!fwcInst.field.forceNarrow && (fwcInst.field.forceExpanded || (fwcInst.filteredChoices && fwcInst.filteredChoices.length <= 6))"><mat-radio-group class="ajf-choices-container" [formControl]="curControl"><mat-radio-button [value]="choice.value" *ngFor="let choice of fwcInst.filteredChoices">{{ choice.label | translate }}</mat-radio-button></mat-radio-group></ng-container></ng-container><ng-container *ngSwitchCase="ajfFieldTypes.MultipleChoice"><ng-container *ngIf="(!fwcInst.field.forceExpanded && fwcInst.filteredChoices && fwcInst.filteredChoices.length > 6) || fwcInst.field.forceNarrow"><mat-select [formControl]="curControl" [multiple]="true"><mat-option [value]="choice.value" *ngFor="let choice of fwcInst.filteredChoices">{{ choice.label | translate }}</mat-option></mat-select></ng-container><ng-container *ngIf="!fwcInst.field.forceNarrow && (fwcInst.field.forceExpanded || (fwcInst.filteredChoices && fwcInst.filteredChoices.length <= 6))"><ajf-checkbox-group class="ajf-choices-container" [formControl]="curControl"><ajf-checkbox-group-item *ngFor="let choice of fwcInst.filteredChoices" [value]="choice.value">{{ choice.label | translate }}</ajf-checkbox-group-item></ajf-checkbox-group></ng-container></ng-container><mat-form-field *ngSwitchCase="ajfFieldTypes.Formula"><input matInput type="text" [formControl]="curControl" readonly="readonly"></mat-form-field><ajf-calendar *ngSwitchCase="ajfFieldTypes.Date" selectionMode="date" dateOnlyForDay [minDate]="datefInst.field.minDateValue" [maxDate]="datefInst.field.maxDateValue" [formControl]="curControl"></ajf-calendar><ajf-time *ngSwitchCase="ajfFieldTypes.Time" [formControl]="curControl"></ajf-time><mat-form-field *ngSwitchCase="ajfFieldTypes.DateInput"><input matInput type="date" [formControl]="curControl"></mat-form-field><table *ngSwitchCase="ajfFieldTypes.Table" style="width:100%"><ng-template [ngIf]="!tablefInst.field.editable"><ng-template ngFor let-columns let-i="index" [ngForOf]="tablefInst.visibleColumns"><tr [ngClass]="i | tableRowClass"><td *ngFor="let cellValue of columns">{{ cellValue | translate }}</td></tr></ng-template></ng-template><ng-template [ngIf]="fieldInstance.field.editable"><ng-template ngFor let-columns let-indexRows="index" [ngForOf]="tablefInst.controlsWithLabels"><tr [ngClass]="indexRows | tableRowClass"><td *ngFor="let contr of columns; let indexColums = index"><ng-template [ngIf]="indexColums != 0 && indexRows != 0"><input *ngIf="contr.show" type="number" [formControl]="contr" autoFocus> <span *ngIf="!contr.show" class="ajf-table-cell" (click)="contr.show ? contr.show = false : contr.show = true;">{{ contr.value }}</span></ng-template><ng-template [ngIf]="indexColums == 0 || indexRows == 0">{{ contr | translate }}</ng-template></td></tr></ng-template></ng-template></table><ng-container *ngSwitchCase="ajfFieldTypes.Empty"><h1 [innerHTML]="emptyfInst.field.label | translate"></h1><div [innerHTML]="emptyfInst.field.HTML | translate"></div></ng-container></div><ng-container *ngIf="fieldInstance.field.hasAttachments"><a *ngFor="let attachment of fieldInstance.field.attachments" [href]="attachment.value" target="_blank">{{attachment.label | translate}}</a></ng-container><div *ngIf="fieldInstance.validationResults" class="ajf-errors"><ng-template ngFor let-res [ngForOf]="fieldInstance.validationResults"><div class="error" *ngIf="!res.result">{{ res.error }}</div></ng-template></div></ng-container>',styles:["ajf-field .ajf-choices-container{display:flex;flex-direction:row;flex-wrap:wrap;align-items:stretch}ajf-field .ajf-item-container{position:relative}ajf-field .ajf-errors{font-style:italic;padding:5px}ajf-field tr.ajf-row-odd{background-color:grey}.ajf-table-cell{-webkit-appearance:textfield;background-color:#fff;-webkit-rtl-ordering:logical;cursor:text;padding:1px;border-width:2px;border-style:inset;border-color:transparent;border-image:none;width:100%;box-sizing:border-box}table{border-collapse:collapse;table-layout:auto}table input{outline:0}table td:first-child{max-width:100%;font-size:1.5vh;padding-right:10px;white-space:nowrap;overflow:hidden;margin:2px}table td:not(:first-child){position:relative}table td:not(:first-child) input,table td:not(:first-child) span{position:absolute;width:100%;box-sizing:border-box;top:0;right:0;bottom:0;left:0}input::-webkit-inner-spin-button,input::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}"],encapsulation:a.ViewEncapsulation.None,inputs:["fieldInstance"],outputs:["valueChanged"],queries:{singleChoiceSelect:new a.ViewChild("singleChoiceSelect"),multipleChoiceSelect:new a.ViewChild("multipleChoiceSelect")},changeDetection:a.ChangeDetectionStrategy.OnPush}]}],e.ctorParameters=function(){return[{type:i.AjfFormRendererService},{type:a.ChangeDetectorRef},{type:t.MatDialog}]},e}(i.AjfFormField),F=function(n){function e(e,a){var t=n.call(this,e,a)||this;return t.topBar=!1,t}return y(e,n),e.prototype.scrollToSlide=function(e){this.formSlider.slide({to:e.position-1})},e.decorators=[{type:a.Component,args:[{selector:"ajf-form",template:'<ng-template [ngIf]="formGroup|async"><form novalidate [formGroup]="formGroup | async"><div class="ajf-form-container"><mat-toolbar *ngIf="!hideTopToolbar" class="ajf-btn-strip"><ng-template ngFor let-slideInstance [ngForOf]="slides|async" [ngForTrackBy]="trackNodeById"><button mat-button class="ajf-topbar-button" *ngIf="topBar && slideInstance.slide && slideInstance.slide.label != null && slideInstance.slide.label.length > 0" (click)="scrollToSlide(slideInstance)">{{slideInstance.slide.label | translate}}</button></ng-template></mat-toolbar><mat-toolbar *ngIf="!hideTopToolbar">{{ title }} <span class="ajf-spacer"></span> <button mat-button default *ngIf="!saveDisabled" (click)="onSave($event)" translate>Save</button></mat-toolbar><div class="ajf-slider-container"><ajf-page-slider (orientationChange)="orientationChangeHandler($event)" [fixedOrientation]="fixedOrientation" [hideNavigationButtons]="hideNavigationButtons" [orientation]="orientation" #formSlider><ng-container *ngIf="(slides|async) as curSlides"><ng-container *ngIf="formIsInit|async"><ng-template [ngIf]="curSlides.length > 0 && hasStartMessage"><ajf-page-slider-item><div class="ajf-form-page"><mat-card><mat-card-header><div class="ajf-page-slider-item-header"><h2><span class="ajf-form-header-number">1 &rarr; </span><span class="ajf-title"><ng-content select="[ajfFormStartMessageTitle]"></ng-content></span></h2></div></mat-card-header><mat-card-content><ng-content select="[ajfFormStartMessage]"></ng-content></mat-card-content></mat-card></div></ajf-page-slider-item></ng-template><ng-template ngFor let-slideInstance [ngForOf]="curSlides" [ngForTrackBy]="trackNodeById"><ng-template [ngIf]="(!isRepeatingSlide(slideInstance)) && slideInstance.visible"><ajf-page-slider-item><div class="ajf-form-page"><mat-card><mat-card-header><div class="ajf-page-slider-item-header"><h2><span class="ajf-form-header-number">{{ slideInstance.position + hasStartMessage }} &rarr;</span> <span [innerHTML]="slideInstance.slide.label | translate"></span></h2><mat-icon class="ajf-warning" *ngIf="!slideInstance.valid">warning</mat-icon><mat-icon class="ajf-success" *ngIf="slideInstance.valid">check</mat-icon></div></mat-card-header><mat-card-content><ng-template ngFor let-fieldInstance [ngForOf]="slideInstance.flatNodes" [ngForTrackBy]="trackNodeById"><div [ngClass]="\'ajf-\' + fieldInstance.field.size" class="ajf-field-entry" *ngIf="fieldInstance.visible"><i [class]="fieldInstance.field | fieldIcon" item-right></i><p>{{ fieldInstance.field.description | translate }}</p><label *ngIf="fieldInstance.field.fieldType !== 7" [innerHTML]="fieldInstance.field.label | translate"></label><ajf-form-field [fieldInstance]="fieldInstance"></ajf-form-field></div></ng-template></mat-card-content></mat-card></div></ajf-page-slider-item></ng-template><ng-template [ngIf]="isRepeatingSlide(slideInstance) && slideInstance.visible"><ajf-page-slider-item *ngFor="let curRep of slideInstance.repsArr; let idx = index; let lastSlide = last"><div class="ajf-form-page"><mat-card><mat-card-header><div class="ajf-page-slider-item-header"><h2><span class="ajf-form-header-number">{{ slideInstance.slidePosition(idx) }} &rarr;</span> <span [innerHTML]="slideInstance.slide.label | translate"></span></h2><mat-icon class="ajf-warning" *ngIf="!slideInstance.validSlide(idx)">warning</mat-icon><mat-icon class="ajf-success" *ngIf="slideInstance.validSlide(idx)">check</mat-icon></div></mat-card-header><mat-card-content><div *ngIf="lastSlide" class="ajf-group-actions"><button (click)="addGroup(slideInstance)" [disabled]="!slideInstance.canAddGroup" mat-mini-fab><mat-icon>add</mat-icon></button> <button (click)="removeGroup(slideInstance)" [disabled]="!slideInstance.canRemoveGroup" mat-mini-fab><mat-icon>remove</mat-icon></button></div><ng-template ngFor let-fieldInstance [ngForOf]="slideInstance.slideNodes[idx]" [ngForTrackBy]="trackNodeById"><div [ngClass]="\'ajf-\' + fieldInstance.field.size" class="ajf-field-entry" *ngIf="fieldInstance.visible"><i [class]="fieldInstance.field | fieldIcon" item-right></i><p>{{ fieldInstance.field.description | translate }}</p><label [innerHTML]="fieldInstance.field.label | translate"></label><ajf-form-field [fieldInstance]="fieldInstance"></ajf-form-field></div></ng-template></mat-card-content></mat-card></div></ajf-page-slider-item></ng-template></ng-template><ng-template [ngIf]="curSlides.length > 0 && hasEndMessage"><ajf-page-slider-item><div class="ajf-form-page"><mat-card><mat-card-header><div class="ajf-page-slider-item-header"><h2><span *ngIf="(slidesNum|async) as snum" class="ajf-form-header-number">{{ snum + (hasStartMessage | boolToInt ) + 1 }} &rarr; </span><span class="ajf-title"><ng-content select="[ajfFormEndMessageTitle]"></ng-content></span></h2></div></mat-card-header><mat-card-content><ng-content select="[ajfFormEndMessage]"></ng-content></mat-card-content></mat-card></div></ajf-page-slider-item></ng-template></ng-container></ng-container><div ajfPageSliderBar *ngIf="!hideBottomToolbar"><div class="ajf-left-bar"><div class="ajf-errors" *ngIf="((errors | async) || 0) > 0"><button mat-button (click)="goToPrevError()" danger><mat-icon>arrow_upward</mat-icon></button> <button mat-button (click)="goToNextError()" danger><mat-icon>arrow_downward</mat-icon></button></div><div class="ajf-info-box ajf-error"><div class="ajf-title" translate>Errors</div><div class="ajf-content">{{ errors | async }} / {{ slidesNum|async }}</div></div></div></div></ajf-page-slider></div></div></form></ng-template>',styles:["ajf-form{display:block}ajf-form .ajf-form-container{display:flex;flex-direction:column;position:absolute;top:0;right:0;bottom:0;left:0}ajf-form .ajf-form-container mat-toolbar.ajf-btn-strip{overflow:auto}ajf-form .ajf-form-container mat-toolbar.ajf-btn-strip button.ajf-topbar-button.mat-button{flex:1 1 auto}ajf-form .ajf-form-container mat-toolbar.ajf-btn-strip button.ajf-topbar-button.mat-button *{display:block;width:100%;overflow:hidden;text-overflow:ellipsis}ajf-form .ajf-form-container mat-toolbar.ajf-hidden{opacity:0}ajf-form .ajf-form-container .ajf-topbar-button{margin-right:10px}ajf-form .ajf-form-container>.ajf-slider-container{flex:1;position:relative}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider{height:100%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content{padding:16px}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page{flex:1;max-height:100%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card{margin:1em 0 3em}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content{display:flex;flex-wrap:wrap;flex-direction:row;align-content:flex-start;position:relative}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content .ajf-group-actions{position:absolute;right:0;top:-30px;padding:15px;z-index:10}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content>.ajf-field-entry{flex:1 0 auto;padding-left:10px;padding-right:10px;width:100%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content>.ajf-field-entry.ajf-normal{width:100%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content>.ajf-field-entry.ajf-small{width:50%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content>.ajf-field-entry.ajf-smaller{width:33%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content>.ajf-field-entry.ajf-tiny{width:25%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content>.ajf-field-entry.ajf-mini{width:20%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header{display:flex;align-items:center;width:100%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header>h2{flex:1}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header>h2>.ajf-form-header-number{margin-right:.5em}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header mat-icon.ajf-warning{color:#f53d3d}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header mat-icon.ajf-success{color:#32db64}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header h2>.ajf-title{display:inline-block;margin-right:40px;white-space:normal;vertical-align:top}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar{display:flex;align-items:flex-start;flex-direction:row;position:absolute;bottom:0}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-right-button{float:right}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-button-icon-only ion-icon{padding:0 .1em}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-info-box{height:40px;padding:4px}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-info-box>div{height:16px;line-height:16px}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-info-box>div.ajf-content{font-weight:700}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-info-box.ajf-error{order:2;color:red}ajf-form .ajf-form-container .ajf-spacer{flex:1 0 auto}"],encapsulation:a.ViewEncapsulation.None,changeDetection:a.ChangeDetectionStrategy.OnPush,inputs:["hasStartMessage","hasEndMessage","form","formSchema","saveDisabled","title","hideTopToolbar","hideBottomToolbar","hideNavigationButtons","orientation","fixedOrientation"],outputs:["formSave","formAction","orientationChange"],queries:{formSlider:new a.ViewChild("formSlider"),fields:new a.ViewChildren(S)}}]}],e.ctorParameters=function(){return[{type:i.AjfFormRendererService},{type:a.ChangeDetectorRef}]},e.propDecorators={topBar:[{type:a.Input}]},e}(i.AjfFormRenderer),M=function(){function e(){}return e.decorators=[{type:a.NgModule,args:[{imports:[r.CommonModule,o.ReactiveFormsModule,l.MatButtonModule,f.MatCardModule,t.MatDialogModule,s.MatFormFieldModule,d.MatIconModule,c.MatInputModule,m.MatRadioModule,g.MatSelectModule,p.MatSlideToggleModule,j.MatToolbarModule,u.TranslateModule,i.AjfFormsModule,b.AjfCalendarModule,I.AjfCheckboxGroupModule,v.AjfPageSliderModule,w.AjfTimeModule,h.AjfCommonModule],declarations:[S,C,F],exports:[S,F],entryComponents:[C]}]}],e}();e.AjfFormField=S,e.AjfFormFieldWarningDialog=C,e.AjfFormRenderer=F,e.AjfFormsModule=M,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=material-forms.umd.min.js.map
