!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@ajf/core/forms"),require("@angular/core"),require("@angular/material/dialog"),require("rxjs/operators"),require("@angular/material/input"),require("@angular/common/http"),require("@angular/platform-browser"),require("@ajf/core/common"),require("@ajf/material/barcode"),require("@ajf/material/calendar"),require("@ajf/material/checkbox-group"),require("@ajf/material/page-slider"),require("@ajf/material/time"),require("@angular/cdk/text-field"),require("@angular/common"),require("@angular/forms"),require("@angular/material/button"),require("@angular/material/card"),require("@angular/material/form-field"),require("@angular/material/icon"),require("@angular/material/radio"),require("@angular/material/select"),require("@angular/material/slide-toggle"),require("@angular/material/toolbar"),require("@ngx-translate/core")):"function"==typeof define&&define.amd?define("@ajf/material/forms",["exports","@ajf/core/forms","@angular/core","@angular/material/dialog","rxjs/operators","@angular/material/input","@angular/common/http","@angular/platform-browser","@ajf/core/common","@ajf/material/barcode","@ajf/material/calendar","@ajf/material/checkbox-group","@ajf/material/page-slider","@ajf/material/time","@angular/cdk/text-field","@angular/common","@angular/forms","@angular/material/button","@angular/material/card","@angular/material/form-field","@angular/material/icon","@angular/material/radio","@angular/material/select","@angular/material/slide-toggle","@angular/material/toolbar","@ngx-translate/core"],n):n(((e=e||self).ajf=e.ajf||{},e.ajf.material=e.ajf.material||{},e.ajf.material.forms={}),e.ajf.core.forms,e.ng.core,e.ng.material.dialog,e.rxjs.operators,e.ng.material.input,e.ng.common.http,e.ng.platformBrowser,e.ajf.core.common,e.ajf.material.barcode,e.ajf.material.calendar,e.ajf.material.checkboxGroup,e.ajf.material.pageSlider,e.ajf.material.time,e.ng.cdk.textField,e.ng.common,e.ng.forms,e.ng.material.button,e.ng.material.card,e.ng.material.formField,e.ng.material.icon,e.ng.material.radio,e.ng.material.select,e.ng.material.slideToggle,e.ng.material.toolbar,e.ngxTranslate.core)}(this,(function(e,n,a,t,r,o,i,l,c,s,f,d,m,p,g,j,u,h,y,b,I,C,v,A,F,x){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */var R,S=function(e,n){return(S=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])})(e,n)};function _(e,n){function a(){this.constructor=e}S(e,n),e.prototype=null===n?Object.create(n):(a.prototype=n.prototype,new a)}(R=function R(){}).decorators=[{type:a.Component,args:[{template:'<mat-dialog-content><div [innerHTML]="message"></div></mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button [mat-dialog-close]="true">Ok</button>\n  <button mat-button [mat-dialog-close]="false">Cancel</button>\n</mat-dialog-actions>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None}]}];
/**
     * @license
     * Copyright (C) Gnucoop soc. coop.
     *
     * This file is part of the Advanced JSON forms (ajf).
     *
     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or
     * modify it under the terms of the GNU Affero General Public License as
     * published by the Free Software Foundation, either version 3 of the License,
     * or (at your option) any later version.
     *
     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,
     * but WITHOUT ANY WARRANTY; without even the implied warranty of
     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
     * General Public License for more details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with Advanced JSON forms (ajf).
     * If not, see http://www.gnu.org/licenses/.
     *
     */
var T=function(){function e(e){this._dialog=e}return e.prototype.showWarningAlertPrompt=function(e){var n=this._dialog.open(R);return n.componentInstance.message=e.join("<br>"),n.afterClosed().pipe(r.map((function(e){return{result:e}})))},e}();T.decorators=[{type:a.Injectable}],T.ctorParameters=function(){return[{type:t.MatDialog}]};var D=function(e){function n(n,a,t){return e.call(this,n,a,t)||this}return _(n,e),n}(n.AjfBaseFieldComponent);D.decorators=[{type:a.Component,args:[{template:'<mat-slide-toggle *ngIf="control|async as ctrl" [formControl]="ctrl!"></mat-slide-toggle>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None,styles:["\n"]}]}],D.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:n.AjfFormRendererService},{type:T,decorators:[{type:a.Inject,args:[n.AJF_WARNING_ALERT_SERVICE]}]}]};var M=function(e){function n(n,a,t){return e.call(this,n,a,t)||this}return _(n,e),n}(n.AjfBaseFieldComponent);M.decorators=[{type:a.Component,args:[{template:'<ajf-calendar\n  *ngIf="control|async as ctrl"\n  selectionMode="day"\n  [dateOnlyForDay]="true"\n  [minDate]="instance.node.minDate|ajfDateValue"\n  [maxDate]="instance.node.maxDate|ajfDateValue"\n  [formControl]="ctrl!"\n></ajf-calendar>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None,styles:["\n"]}]}],M.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:n.AjfFormRendererService},{type:T,decorators:[{type:a.Inject,args:[n.AJF_WARNING_ALERT_SERVICE]}]}]};var w=function(e){function n(n,a,t,r){var o=e.call(this,n,a,t)||this;return o._dvs=r,o}return _(n,e),n.prototype.onChange=function(){if(null!=this.input){var e=this.input.value||"";e.length>0&&(null!=this._minDateStr&&e<this._minDateStr||null!=this._maxDateStr&&e>this._maxDateStr)&&(this.input.value="")}},n.prototype._onInstanceChange=function(){this._minDateStr=this._dvs.transform(this.instance.node.minDate),this._maxDateStr=this._dvs.transform(this.instance.node.maxDate)},n}(n.AjfBaseFieldComponent);w.decorators=[{type:a.Component,args:[{template:'<mat-form-field *ngIf="control|async as ctrl">\n  <input matInput type="date"\n      [attr.aria-label]="instance.node.label || (instance|ajfNodeCompleteName)"\n      [min]="instance.node.minDate|ajfDateValueString"\n      [max]="instance.node.maxDate|ajfDateValueString"\n      (change)="onChange()"\n      [formControl]="ctrl!">\n</mat-form-field>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None,styles:["\n"]}]}],w.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:n.AjfFormRendererService},{type:T,decorators:[{type:a.Inject,args:[n.AJF_WARNING_ALERT_SERVICE]}]},{type:n.AjfDateValueStringPipe}]},w.propDecorators={input:[{type:a.ViewChild,args:[o.MatInput,{static:!1}]}]};var E=function(e){function n(n,a,t){return e.call(this,n,a,t)||this}return _(n,e),n}(n.AjfBaseFieldComponent);E.decorators=[{type:a.Component,args:[{template:'<h1 [innerHTML]="instance.node.label | translate"></h1>\n<div [innerHTML]="instance.node.HTML | translate"></div>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None,styles:["\n"]}]}],E.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:n.AjfFormRendererService},{type:T,decorators:[{type:a.Inject,args:[n.AJF_WARNING_ALERT_SERVICE]}]}]};var N=function(e){function n(n,a,t){return e.call(this,n,a,t)||this}return _(n,e),n}(n.AjfBaseFieldComponent);N.decorators=[{type:a.Component,args:[{template:'<ajf-barcode *ngIf="control|async as ctrl" [formControl]="ctrl!"></ajf-barcode>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None,styles:["\n"]}]}],N.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:n.AjfFormRendererService},{type:T,decorators:[{type:a.Inject,args:[n.AJF_WARNING_ALERT_SERVICE]}]}]};var O=function(e){function n(n,a,t){return e.call(this,n,a,t)||this}return _(n,e),n}(n.AjfInputFieldComponent);O.decorators=[{type:a.Component,args:[{template:'<mat-form-field *ngIf="control|async as ctrl">\n  <input matInput *ngIf="type === \'text\'" type="text" [formControl]="ctrl!">\n  <input matInput *ngIf="type === \'number\'" type="number" [formControl]="ctrl!">\n</mat-form-field>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None,styles:["\n"]}]}],O.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:n.AjfFormRendererService},{type:T,decorators:[{type:a.Inject,args:[n.AJF_WARNING_ALERT_SERVICE]}]}]};var P=function(e){function n(n,a,t,r){return e.call(this,n,a,t,r)||this}return _(n,e),n}(n.AjfFieldWithChoicesComponent);P.decorators=[{type:a.Component,args:[{template:'<ng-container *ngIf="!(instance|ajfExpandFieldWithChoices:searchThreshold); else expanded">\n  <mat-select *ngIf="control|async as ctrl" [formControl]="ctrl!" [multiple]="true">\n    <mat-option [value]="choice.value"\n        *ngFor="let choice of instance.filteredChoices">\n      {{ choice.label | translate }}\n    </mat-option>\n  </mat-select>\n</ng-container>\n<ng-template #expanded>\n  <ajf-checkbox-group *ngIf="control|async as ctrl" class="ajf-choices-container"\n      [formControl]="ctrl!">\n    <ajf-checkbox-group-item *ngFor="let choice of instance.filteredChoices"\n        [value]="choice.value">\n      {{ choice.label | translate }}\n    </ajf-checkbox-group-item>\n  </ajf-checkbox-group>\n</ng-template>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None,styles:["\n"]}]}],P.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:n.AjfFormRendererService},{type:T,decorators:[{type:a.Inject,args:[n.AJF_WARNING_ALERT_SERVICE]}]},{type:Number,decorators:[{type:a.Optional},{type:a.Inject,args:[n.AJF_SEARCH_ALERT_THRESHOLD]}]}]};var k=function(e){function n(n,a,t,r){return e.call(this,n,a,t,r)||this}return _(n,e),n}(n.AjfFieldWithChoicesComponent);k.decorators=[{type:a.Component,args:[{template:'<ng-container *ngIf="!(instance|ajfExpandFieldWithChoices:searchThreshold) ; else expanded">\n  <mat-select *ngIf="control|async as ctrl" [formControl]="ctrl!">\n    <mat-option [value]="choice.value"\n        *ngFor="let choice of instance.filteredChoices">\n      {{ choice.label | translate }}\n    </mat-option>\n  </mat-select>\n</ng-container>\n<ng-template #expanded>\n  <mat-radio-group *ngIf="control|async as ctrl" class="ajf-choices-container"\n      [formControl]="ctrl!">\n    <mat-radio-button [value]="choice.value"\n        *ngFor="let choice of instance.filteredChoices">\n      {{ choice.label | translate }}\n    </mat-radio-button>\n  </mat-radio-group>\n</ng-template>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None,styles:["\n"]}]}],k.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:n.AjfFormRendererService},{type:T,decorators:[{type:a.Inject,args:[n.AJF_WARNING_ALERT_SERVICE]}]},{type:Number,decorators:[{type:a.Optional},{type:a.Inject,args:[n.AJF_SEARCH_ALERT_THRESHOLD]}]}]};var V=function(e){function n(n,a,t){return e.call(this,n,a,t)||this}return _(n,e),n}(n.AjfTableFieldComponent);V.decorators=[{type:a.Component,args:[{template:'<table class="ajf-table-field">\n  <ng-container *ngIf="instance.node as node">\n    <ng-container *ngFor="let columns of instance.controls; let row = index">\n      <tr [ngClass]="row | ajfTableRowClass">\n        <td>\n          <ng-container *ngIf="columns.length > 0 && columns[0] != null">\n            {{ columns[0] | ajfTranslateIfString | ajfFormatIfNumber: \'.0-2\' }}\n          </ng-container>\n        </td>\n        <ng-container *ngIf="columns.length > 1">\n          <td *ngFor="let c of columns[1]; let column = index">\n            <ng-container *ngIf="row == 0; else controlCell">\n              {{ c | ajfTranslateIfString | ajfFormatIfNumber: \'.0-2\' }}\n            </ng-container>\n            <ng-template #controlCell>\n              <ng-container *ngIf="c|ajfGetTableCellControl as contr">\n                <ng-container *ngIf="contr != null">\n                  <input *ngIf="contr!.show && (node.rows[row-1][column]|ajfIsCellEditable); else plainTextCell"\n                    (focusout)="contr!.show = false" type="number" [formControl]="contr.control"\n                    (keydown.tab)="goToNextCell($event, row, column)" autoFocus>\n                  <ng-template #plainTextCell>\n                    <span class="ajf-table-cell"\n                      (click)="goToCell(row, column)">{{ contr.control!.value | ajfTranslateIfString | ajfFormatIfNumber: \'.0-2\' }}</span>\n                  </ng-template>\n                </ng-container>\n              </ng-container>\n            </ng-template>\n          </td>\n        </ng-container>\n      </tr>\n    </ng-container>\n  </ng-container>\n</table>',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None,styles:["table.ajf-table-field{border-collapse:collapse;border-spacing:0;width:100%}table.ajf-table-field tr td{position:relative;min-width:1em}table.ajf-table-field tr td span,table.ajf-table-field tr td input{cursor:text;position:absolute;width:100%;box-sizing:border-box;outline:none;top:0;right:0;bottom:0;left:0;display:inline-block;border-top:solid 1px #ccc;border-right:solid 1px transparent;border-bottom:solid 1px transparent;border-left:solid 1px #ccc;font-family:inherit;font-size:inherit;line-height:inherit;text-align:center}table.ajf-table-field tr td:last-child span,table.ajf-table-field tr td:last-child input{border-right-color:#ccc}table.ajf-table-field tr:last-of-type td span,table.ajf-table-field tr:last-of-type td input{border-bottom-color:#ccc}\n"]}]}],V.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:n.AjfFormRendererService},{type:T,decorators:[{type:a.Inject,args:[n.AJF_WARNING_ALERT_SERVICE]}]}]};var B=function(e){function n(n,a,t){return e.call(this,n,a,t)||this}return _(n,e),n}(n.AjfInputFieldComponent);B.decorators=[{type:a.Component,args:[{template:'<mat-form-field *ngIf="control|async as ctrl">\n  <textarea matInput cdkTextareaAutosize [formControl]="ctrl!"></textarea>\n</mat-form-field>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None,styles:["\n"]}]}],B.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:n.AjfFormRendererService},{type:T,decorators:[{type:a.Inject,args:[n.AJF_WARNING_ALERT_SERVICE]}]}]};var q=function(e){function n(n,a,t){return e.call(this,n,a,t)||this}return _(n,e),n}(n.AjfBaseFieldComponent);q.decorators=[{type:a.Component,args:[{template:'<ajf-time *ngIf="control|async as ctrl" [formControl]="ctrl!"></ajf-time>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None,styles:["\n"]}]}],q.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:n.AjfFormRendererService},{type:T,decorators:[{type:a.Inject,args:[n.AJF_WARNING_ALERT_SERVICE]}]}]};var L=function(e){function n(n,a,t,r,o){return e.call(this,n,a,t,r,o)||this}return _(n,e),n}(n.AjfVideoUrlFieldComponent);L.decorators=[{type:a.Component,args:[{template:'<ng-container *ngIf="control|async as ctrl">\n  <mat-form-field class="ajf-video-input">\n    <input matInput type="url" [formControl]="ctrl!">\n  </mat-form-field>\n  <div class="ajf-video-thumbnail">\n    <ng-container *ngIf="validUrl|async">\n      <a target="_blank" [href]="ctrl.value">\n        <img *ngIf="videoThumbnail|async as thumb" [src]="thumb" class="" alt="">\n      </a>\n    </ng-container>\n  </div>\n</ng-container>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None,styles:[".ajf-video-input{width:100%}.ajf-video-thumbnail{width:212px;height:120px;background-color:#eee;display:flex;align-items:center;justify-content:center}.ajf-video-thumbnail img{flex:1 1 auto}\n"]}]}],L.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:n.AjfFormRendererService},{type:T,decorators:[{type:a.Inject,args:[n.AJF_WARNING_ALERT_SERVICE]}]},{type:l.DomSanitizer},{type:i.HttpClient}]};var G=function(e){function a(){var a=e.call(this)||this;return a.componentsMap[n.AjfFieldType.String]={component:O,readOnlyComponent:n.AjfReadOnlyFieldComponent},a.componentsMap[n.AjfFieldType.Text]={component:B,readOnlyComponent:n.AjfReadOnlyFieldComponent},a.componentsMap[n.AjfFieldType.Number]={component:O,readOnlyComponent:n.AjfReadOnlyFieldComponent,inputs:{type:"number"}},a.componentsMap[n.AjfFieldType.Boolean]={component:D,readOnlyComponent:n.AjfReadOnlyFieldComponent},a.componentsMap[n.AjfFieldType.Formula]={component:O,readOnlyComponent:n.AjfReadOnlyFieldComponent,inputs:{readonly:!0}},a.componentsMap[n.AjfFieldType.Date]={component:M,readOnlyComponent:n.AjfReadOnlyFieldComponent},a.componentsMap[n.AjfFieldType.DateInput]={component:w,readOnlyComponent:n.AjfReadOnlyFieldComponent},a.componentsMap[n.AjfFieldType.Table]={component:V,readOnlyComponent:n.AjfReadOnlyTableFieldComponent},a.componentsMap[n.AjfFieldType.Empty]={component:E},a.componentsMap[n.AjfFieldType.SingleChoice]={component:k,readOnlyComponent:n.AjfReadOnlySelectFieldComponent},a.componentsMap[n.AjfFieldType.MultipleChoice]={component:P,readOnlyComponent:n.AjfReadOnlySelectFieldComponent},a.componentsMap[n.AjfFieldType.Time]={component:q,readOnlyComponent:n.AjfReadOnlyFieldComponent},a.componentsMap[n.AjfFieldType.Barcode]={component:N,readOnlyComponent:n.AjfReadOnlyFieldComponent},a.componentsMap[n.AjfFieldType.File]={component:n.AjfFileFieldComponent,readOnlyComponent:n.AjfReadOnlyFileFieldComponent},a.componentsMap[n.AjfFieldType.Image]={component:n.AjfImageFieldComponent,readOnlyComponent:n.AjfReadOnlyImageFieldComponent},a.componentsMap[n.AjfFieldType.VideoUrl]={component:L,readOnlyComponent:n.AjfReadOnlyVideoUrlFieldComponent},a}return _(a,e),a}(n.AjfFieldService);G.ɵprov=a["ɵɵdefineInjectable"]({factory:function e(){return new G},token:G,providedIn:"root"}),G.decorators=[{type:a.Injectable,args:[{providedIn:"root"}]}],G.ctorParameters=function(){return[]};var W=function(e){function n(n,a,t){var r=e.call(this,n,a)||this;return r.componentsMap=t.componentsMap,r}return _(n,e),n}(n.AjfFormField);W.decorators=[{type:a.Component,args:[{selector:"ajf-field,ajf-form-field",template:'<div\n    [ngClass]="\'ajf-field-\' + (instance|ajfNodeCompleteName)"\n    [class.ajf-validated]="instance.validationResults|ajfFieldIsValid"\n>\n  <ng-template ajf-field-host></ng-template>\n</div>\n<ng-container *ngIf="instance && instance.node && instance.node.attachments">\n  <a *ngFor="let attachment of instance.node.attachments"\n    [href]="attachment.value" target="_blank">{{attachment.label | translate}}</a>\n</ng-container>\n<div *ngIf="!readonly && instance && instance.validationResults" class="ajf-errors">\n  <ng-container *ngFor="let res of instance.validationResults">\n    <div class="error" *ngIf="!res.result">\n      {{ res.error|translate }} \n    </div>\n  </ng-container>\n</div>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,encapsulation:a.ViewEncapsulation.None,styles:["ajf-field .ajf-choices-container{display:flex;flex-direction:row;flex-wrap:wrap;align-items:stretch}ajf-field .ajf-item-container{position:relative}ajf-field .ajf-errors{font-style:italic;padding:5px}ajf-field tr.ajf-row-odd{background-color:gray}table{border-collapse:collapse;border-spacing:0}table tr td{position:relative}table tr td span,table tr td input{cursor:text;position:absolute;width:100%;box-sizing:border-box;outline:none;top:0;right:0;bottom:0;left:0;display:inline-block;border-top:solid 1px #ccc;border-right:solid 1px transparent;border-bottom:solid 1px transparent;border-left:solid 1px #ccc;font-family:inherit;font-size:inherit;line-height:inherit;text-align:center}table tr td:last-child span,table tr td:last-child input{border-right-color:#ccc}table tr:last-of-type td span,table tr:last-of-type td input{border-bottom-color:#ccc}input::-webkit-outer-spin-button,input::-webkit-inner-spin-button{-webkit-appearance:none;margin:0}\n"]}]}],W.ctorParameters=function(){return[{type:a.ChangeDetectorRef},{type:a.ComponentFactoryResolver},{type:G}]};var H=function(e){function n(n,a){var t=e.call(this,n,a)||this;return t.topBar=!1,t}return _(n,e),n.prototype.scrollToSlide=function(e){this.formSlider.slide({to:e.position-1})},n}(n.AjfFormRenderer);H.decorators=[{type:a.Component,args:[{selector:"ajf-form",template:'<ng-container *ngIf="formGroup|async as fg">\n  <form novalidate [formGroup]="fg!">\n    <div class="ajf-form-container">\n\n      <mat-toolbar *ngIf="!hideTopToolbar" class="ajf-btn-strip">\n        <ng-template ngFor let-slideInstance [ngForOf]="slides|async" [ngForTrackBy]="trackNodeById">\n          <button mat-button class="ajf-topbar-button"\n          *ngIf="topBar != null && slideInstance.node != null && slideInstance.node.label != null && slideInstance.node.label.length > 0"\n              (click)="scrollToSlide(slideInstance)">{{slideInstance.node.label | translate}}</button>\n        </ng-template>\n      </mat-toolbar>\n\n      <mat-toolbar *ngIf="!hideTopToolbar">\n        {{ title }}\n        <span class="ajf-spacer"></span>\n        <button mat-button default *ngIf="!saveDisabled" (click)="onSave($event)"\n            translate>Save</button>\n      </mat-toolbar>\n      <div class="ajf-slider-container">\n        <ajf-page-slider (orientationChange)="orientationChangeHandler($event)"\n            [fixedOrientation]="fixedOrientation"\n            [hideNavigationButtons]="hideNavigationButtons"\n            [orientation]="orientation"\n            #formSlider>\n          <ng-container *ngIf="(slides|async) as curSlides">\n            <ng-container *ngIf="curSlides!.length > 0 && hasStartMessage">\n              <ajf-page-slider-item>\n                <div class="ajf-form-page">\n                  <mat-card>\n                    <mat-card-header>\n                      <div class="ajf-page-slider-item-header">\n                        <h2>\n                          <span class="ajf-form-header-number">\n                            1 &rarr;\n                          </span>\n                          <span class="ajf-title">\n                            <ng-content select="[ajfFormStartMessageTitle]"></ng-content>\n                          </span>\n                        </h2>\n                      </div>\n                    </mat-card-header>\n                    <mat-card-content>\n                      <ng-content select="[ajfFormStartMessage]"></ng-content>\n                    </mat-card-content>\n                  </mat-card>\n                </div>\n              </ajf-page-slider-item>\n            </ng-container>\n            <ng-container *ngFor="let slideInstance of curSlides; trackBy:trackNodeById">\n              \x3c!-- non repeating slides --\x3e\n              <ng-container *ngIf="slideInstance.visible">\n                <ng-container *ngIf="!(slideInstance|ajfIsRepeatingSlideInstance)">\n                  <ajf-page-slider-item>\n                    <div class="ajf-form-page">\n                      <mat-card>\n                        <mat-card-header>\n                          <div class="ajf-page-slider-item-header">\n                            <h2>\n                              <span class="ajf-form-header-number">{{ slideInstance.position + (hasStartMessage | ajfBoolToInt) }} &rarr;</span>\n                              <span [innerHTML]="slideInstance.node.label | translate"></span>\n                            </h2>\n                            <mat-icon class="ajf-warning" *ngIf="!slideInstance.valid">warning</mat-icon>\n                            <mat-icon class="ajf-success" *ngIf="slideInstance.valid">check</mat-icon>\n                          </div>\n                        </mat-card-header>\n                        <mat-card-content>\n                          <ng-template ngFor let-fieldInstance [ngForOf]="slideInstance.flatNodes" [ngForTrackBy]="trackNodeById">\n                            <div [ngClass]="\'ajf-\' + (fieldInstance|ajfAsFieldInstance).node.size" class="ajf-field-entry" *ngIf="fieldInstance.visible">\n                              <i [class]="(fieldInstance|ajfAsFieldInstance).node.fieldType | ajfFieldIcon" item-right></i>\n                              <p>{{ ((fieldInstance|ajfAsFieldInstance).node.description || \'\') | translate }}</p>\n                              <label *ngIf="(fieldInstance|ajfAsFieldInstance).node.fieldType !== 7" [innerHTML]="fieldInstance.node.label | translate"></label>\n                              <ajf-field [instance]="fieldInstance|ajfAsFieldInstance" [readonly]="readonly"></ajf-field>\n                            </div>\n                          </ng-template>\n                        </mat-card-content>\n                      </mat-card>\n                    </div>\n                  </ajf-page-slider-item>\n                </ng-container>\n                \x3c!-- repeating slides --\x3e\n                <ng-container *ngIf="(slideInstance|ajfIsRepeatingSlideInstance)">\n                  <ajf-page-slider-item *ngFor="let curRep of ((slideInstance|ajfAsRepeatingSlideInstance).reps|ajfRange); let idx = index; let lastSlide = last">\n                    <div class="ajf-form-page">\n                      <mat-card>\n                        <mat-card-header>\n                          <div class="ajf-page-slider-item-header">\n                            <h2>\n                              <span class="ajf-form-header-number">{{ slideInstance.position|ajfIncrement:idx + (hasStartMessage | ajfBoolToInt) }} &rarr;</span>\n                              <span [innerHTML]="slideInstance.node.label | translate"></span>\n                            </h2>\n                            <mat-icon class="ajf-warning" *ngIf="!(slideInstance|ajfValidSlide:idx)">warning</mat-icon>\n                            <mat-icon class="ajf-success" *ngIf="(slideInstance|ajfValidSlide:idx)">check</mat-icon>\n                          </div>\n                        </mat-card-header>\n                        <mat-card-content>\n                          <div *ngIf="lastSlide && !readonly" class="ajf-group-actions">\n                            <button (click)="addGroup(slideInstance)" [disabled]="!(slideInstance|ajfAsRepeatingSlideInstance).canAdd" mat-mini-fab>\n                              <mat-icon>add</mat-icon>\n                            </button>\n                            <button (click)="removeGroup(slideInstance)" [disabled]="!(slideInstance|ajfAsRepeatingSlideInstance).canRemove" mat-mini-fab>\n                              <mat-icon>remove</mat-icon>\n                            </button>\n                          </div>\n                          <ng-template ngFor let-fieldInstance [ngForOf]="slideInstance.slideNodes[idx]" [ngForTrackBy]="trackNodeById">\n                            <div [ngClass]="\'ajf-\' + (fieldInstance|ajfAsFieldInstance).node.size" class="ajf-field-entry" *ngIf="fieldInstance.visible">\n                              <i [class]="(fieldInstance|ajfAsFieldInstance).node.fieldType | ajfFieldIcon" item-right></i>\n                              <p>{{ ((fieldInstance|ajfAsFieldInstance).node.description || \'\') | translate }}</p>\n                              <label [innerHTML]="fieldInstance.node.label | translate"></label>\n                              <ajf-field [instance]="fieldInstance|ajfAsFieldInstance" [readonly]="readonly"></ajf-field>\n                            </div>\n                          </ng-template>\n                        </mat-card-content>\n                      </mat-card>\n                    </div>\n                  </ajf-page-slider-item>\n                </ng-container>\n              </ng-container>\n            </ng-container>\n            <ng-container *ngIf="curSlides && curSlides!.length > 0 && hasEndMessage">\n              <ajf-page-slider-item>\n                <div class="ajf-form-page">\n                  <mat-card>\n                    <mat-card-header>\n                      <div class="ajf-page-slider-item-header">\n                        <h2>\n                          <span *ngIf="(slidesNum|async) as snum" class="ajf-form-header-number">\n                            {{ snum! + (hasStartMessage | ajfBoolToInt ) + 1 }} &rarr;\n                          </span>\n                          <span class="ajf-title">\n                            <ng-content select="[ajfFormEndMessageTitle]"></ng-content>\n                          </span>\n                        </h2>\n                      </div>\n                    </mat-card-header>\n                    <mat-card-content>\n                      <ng-content select="[ajfFormEndMessage]"></ng-content>\n                    </mat-card-content>\n                  </mat-card>\n                </div>\n              </ajf-page-slider-item>\n            </ng-container>\n          </ng-container>\n          <div ajfPageSliderBar *ngIf="!hideBottomToolbar">\n            <div class="ajf-left-bar">\n              <div class="ajf-errors" *ngIf="((errors | async) || 0) > 0">\n                <button mat-button (click)="goToPrevError()" danger>\n                  <mat-icon>arrow_upward</mat-icon>\n                </button>\n                <button mat-button (click)="goToNextError()" danger>\n                  <mat-icon>arrow_downward</mat-icon>\n                </button>\n              </div>\n              <div class="ajf-info-box ajf-error">\n                <div class="ajf-title" translate>Errors</div>\n                <div class="ajf-content">\n                  {{ errors | async }} / {{ slidesNum|async }}\n                </div>\n              </div>\n            </div>\n          </div>\n        </ajf-page-slider>\n      </div>\n    </div>\n  </form>\n</ng-container>\n',encapsulation:a.ViewEncapsulation.None,changeDetection:a.ChangeDetectionStrategy.OnPush,styles:["ajf-form{display:block}ajf-form .ajf-form-container{display:flex;flex-direction:column;position:absolute;top:0;right:0;bottom:0;left:0}ajf-form .ajf-form-container mat-toolbar.ajf-btn-strip{overflow:auto}ajf-form .ajf-form-container mat-toolbar.ajf-btn-strip button.ajf-topbar-button.mat-button{flex:1 1 auto}ajf-form .ajf-form-container mat-toolbar.ajf-btn-strip button.ajf-topbar-button.mat-button *{display:block;width:100%;overflow:hidden;text-overflow:ellipsis}ajf-form .ajf-form-container mat-toolbar.ajf-hidden{opacity:0}ajf-form .ajf-form-container .ajf-topbar-button{margin-right:10px}ajf-form .ajf-form-container>.ajf-slider-container{flex:1;position:relative}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider{height:100%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content{padding:16px}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page{flex:1;max-height:100%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card{margin:1em 0 3em}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content{display:flex;flex-wrap:wrap;flex-direction:row;align-content:flex-start;position:relative}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content .ajf-group-actions{position:absolute;right:0;top:-30px;padding:15px;z-index:10}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content>.ajf-field-entry{flex:1 0 auto;padding-left:10px;padding-right:10px;width:100%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content>.ajf-field-entry.ajf-normal{width:100%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content>.ajf-field-entry.ajf-small{width:50%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content>.ajf-field-entry.ajf-smaller{width:33%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content>.ajf-field-entry.ajf-tiny{width:25%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content>.ajf-field-entry.ajf-mini{width:20%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header{display:flex;align-items:center;width:100%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header>h2{flex:1}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header>h2>.ajf-form-header-number{margin-right:.5em}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header mat-icon.ajf-warning{color:#f53d3d}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header mat-icon.ajf-success{color:#32db64}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header h2>.ajf-title{display:inline-block;margin-right:40px;white-space:normal;vertical-align:top}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar{display:flex;align-items:flex-start;flex-direction:row;position:absolute;bottom:0}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-right-button{float:right}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-button-icon-only ion-icon{padding:0 .1em}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-info-box{height:40px;padding:4px}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-info-box>div{height:16px;line-height:16px}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-info-box>div.ajf-content{font-weight:bold}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-info-box.ajf-error{order:2;color:red}ajf-form .ajf-form-container .ajf-spacer{flex:1 0 auto}\n"]}]}],H.ctorParameters=function(){return[{type:n.AjfFormRendererService},{type:a.ChangeDetectorRef}]},H.propDecorators={topBar:[{type:a.Input}]};
/**
     * @license
     * Copyright (C) Gnucoop soc. coop.
     *
     * This file is part of the Advanced JSON forms (ajf).
     *
     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or
     * modify it under the terms of the GNU Affero General Public License as
     * published by the Free Software Foundation, either version 3 of the License,
     * or (at your option) any later version.
     *
     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,
     * but WITHOUT ANY WARRANTY; without even the implied warranty of
     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
     * General Public License for more details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with Advanced JSON forms (ajf).
     * If not, see http://www.gnu.org/licenses/.
     *
     */
var J=function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:[G]}},e}();J.decorators=[{type:a.NgModule,args:[{imports:[s.AjfBarcodeModule,f.AjfCalendarModule,c.AjfCommonModule,n.AjfFormsModule,d.AjfCheckboxGroupModule,m.AjfPageSliderModule,p.AjfTimeModule,j.CommonModule,h.MatButtonModule,y.MatCardModule,t.MatDialogModule,b.MatFormFieldModule,I.MatIconModule,o.MatInputModule,C.MatRadioModule,v.MatSelectModule,A.MatSlideToggleModule,F.MatToolbarModule,u.ReactiveFormsModule,g.TextFieldModule,x.TranslateModule],declarations:[N,D,M,w,E,R,W,H,O,P,k,V,B,q,L],entryComponents:[N,D,M,w,E,O,P,k,V,B,q,L],exports:[W,H],providers:[G,{provide:n.AJF_WARNING_ALERT_SERVICE,useClass:T}]}]}],
/**
     * @license
     * Copyright (C) Gnucoop soc. coop.
     *
     * This file is part of the Advanced JSON forms (ajf).
     *
     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or
     * modify it under the terms of the GNU Affero General Public License as
     * published by the Free Software Foundation, either version 3 of the License,
     * or (at your option) any later version.
     *
     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,
     * but WITHOUT ANY WARRANTY; without even the implied warranty of
     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
     * General Public License for more details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with Advanced JSON forms (ajf).
     * If not, see http://www.gnu.org/licenses/.
     *
     */
e.AjfBooleanFieldComponent=D,e.AjfDateFieldComponent=M,e.AjfDateInputFieldComponent=w,e.AjfEmptyFieldComponent=E,e.AjfFieldService=G,e.AjfFieldWarningDialog=R,e.AjfFormField=W,e.AjfFormRenderer=H,e.AjfFormsModule=J,e.AjfInputFieldComponent=O,e.AjfMultipleChoiceFieldComponent=P,e.AjfSingleChoiceFieldComponent=k,e.AjfTableFieldComponent=V,e.AjfTimeFieldComponent=q,e.AjfWarningAlertService=T,e.ɵgc_ajf_src_material_forms_forms_a=N,e.ɵgc_ajf_src_material_forms_forms_b=B,e.ɵgc_ajf_src_material_forms_forms_c=L,Object.defineProperty(e,"__esModule",{value:!0})}));