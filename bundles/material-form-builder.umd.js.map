{"version":3,"file":"material-form-builder.umd.js","sources":["../../../../../../src/material/form-builder/branch-line.ts","../../../../../../src/material/form-builder/choices-origin-data-source.ts","../../../../../../src/material/form-builder/choices-origin-editor.ts","../../../../../../src/material/form-builder/form-builder-service.ts","../../../../../../src/material/form-builder/choices-origin-editor-dialog.ts","../../../../../../src/material/form-builder/condition-editor.ts","../../../../../../src/material/form-builder/condition-editor-dialog.ts","../../../../../../src/material/form-builder/string-identifier-dialog.ts","../../../../../../src/material/form-builder/form-builder.ts","../../../../../../src/material/form-builder/node-entry.ts","../../../../../../src/material/form-builder/validation-condition-editor-dialog.ts","../../../../../../src/material/form-builder/warning-condition-editor-dialog.ts","../../../../../../src/material/form-builder/node-properties.ts","../../../../../../src/material/form-builder/node-type-entry.ts","../../../../../../src/material/form-builder/form-builder-module.ts","../../../../../../src/material/form-builder/public-api.ts","../../../../../../src/material/form-builder/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2,\n  ViewEncapsulation} from '@angular/core';\n\n@Component({\n  selector: 'ajf-fb-branch-line',\n  templateUrl: 'branch-line.html',\n  styleUrls: ['branch-line.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbBranchLine {\n  private _offset = 0;\n  @Input() set offset(offset: number) {\n    this._offset = offset;\n    this._updateOffset();\n  }\n\n  private _color: string;\n  @Input() set color(color: string) {\n    this._color = color;\n    this._updateColor();\n  }\n\n  private _height = 0;\n  @Input() set height(height: number) {\n    this._height = height;\n    this._updateHeight();\n  }\n\n  constructor(private _el: ElementRef, private _renderer: Renderer2) { }\n\n  private _updateHeight(): void {\n    const height = `${Math.max(0, this._height - 25)}px`;\n    this._renderer.setStyle(this._el.nativeElement, 'height', height);\n  }\n\n  private _updateOffset(): void {\n    const margin = `${this._offset * 4}px`;\n    this._renderer.setStyle(this._el.nativeElement, 'margin-top', margin);\n    this._renderer.setStyle(this._el.nativeElement, 'margin-left', margin);\n  }\n\n  private _updateColor(): void {\n    this._renderer.setStyle(this._el.nativeElement, 'border-color', this._color);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {DataSource} from '@angular/cdk/collections';\n\nimport {BehaviorSubject, Observable} from 'rxjs';\n\n\nexport type ChoicesOriginChoiceEntry = {label: string, value: string};\n\nexport class ChoicesOriginDataSource\n    extends DataSource<ChoicesOriginChoiceEntry> {\n  private _choices: BehaviorSubject<ChoicesOriginChoiceEntry[]> =\n      new BehaviorSubject<ChoicesOriginChoiceEntry[]>([]);\n  private _choicesObs: Observable<ChoicesOriginChoiceEntry[]>;\n\n  constructor() {\n    super();\n    this._choicesObs = this._choices.asObservable();\n  }\n\n  connect(): Observable<ChoicesOriginChoiceEntry[]> {\n    return this._choicesObs;\n  }\n\n  disconnect() {}\n\n  updateChoices(choices: ChoicesOriginChoiceEntry[]) {\n    this._choices.next(choices);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin, isChoicesFixedOrigin} from '@ajf/core/forms';\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\n\nimport {ChoicesOriginChoiceEntry, ChoicesOriginDataSource} from './choices-origin-data-source';\n\n\n@Component({\n  selector: 'ajf-fb-choices-origin-editor',\n  templateUrl: 'choices-origin-editor.html',\n  styleUrls: ['choices-origin-editor.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbChoicesOriginEditor {\n  private _displayedColumns: string[] = ['label', 'value', 'delete'];\n  get displayedColumns(): string[] { return this._displayedColumns; }\n\n  private _choicesOrigin: AjfChoicesOrigin<any>;\n  get choicesOrigin(): AjfChoicesOrigin<any> {\n    return this._choicesOrigin;\n  }\n  @Input()\n  set choicesOrigin(choicesOrigin: AjfChoicesOrigin<any>) {\n    this._choicesOrigin = choicesOrigin;\n    this.name = choicesOrigin.name;\n    this.label = choicesOrigin.label;\n\n    this.canEditChoices = isChoicesFixedOrigin(choicesOrigin);\n    this._choicesArr = choicesOrigin.choices;\n    this._choices.updateChoices(this._choicesArr);\n  }\n\n  editing: {[key: string]: boolean} = {};\n  name: string;\n  label: string;\n  canEditChoices: boolean;\n\n  private _choices: ChoicesOriginDataSource = new ChoicesOriginDataSource();\n  get choices(): ChoicesOriginDataSource { return this._choices; }\n\n  private _choicesArr: ChoicesOriginChoiceEntry[] = [];\n  get choicesArr(): ChoicesOriginChoiceEntry[] { return this._choicesArr; }\n\n  updateValue(evt: any, cell: string, _value: any, rowIdx: number): void {\n    this.editing[rowIdx + '-' + cell] = false;\n    (this._choicesArr[rowIdx] as any)[cell] = evt.target.value;\n    this._choices.updateChoices(this._choicesArr);\n  }\n\n  deleteRow(rowIdx: number): void {\n    this._choicesArr.splice(rowIdx, 1);\n    this._choices.updateChoices(this._choicesArr);\n  }\n\n  addRow(): void {\n    this._choicesArr.push({label: '', value: ''});\n    this._choices.updateChoices(this._choicesArr);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfAttachmentsOrigin, AjfChoicesOrigin, AjfField, AjfFieldType,\n  AjfFieldWithChoices, AjfForm, AjfFormStringIdentifier, AjfNode, AjfNodeGroup, AjfNodesOperation,\n  AjfNodeType, AjfRepeatingContainerNode, AjfRepeatingSlide, AjfSlide, createChoicesFixedOrigin,\n  createField, createForm, createContainerNode, createValidation, createValidationGroup,\n  createWarning, createWarningGroup, isChoicesFixedOrigin, isContainerNode, isField,\n  isFieldWithChoices, isRepeatingContainerNode, isSlidesNode, maxDigitsValidation, maxValidation,\n  minDigitsValidation, minValidation, notEmptyValidation, notEmptyWarning\n} from '@ajf/core/forms';\nimport {AjfCondition, alwaysCondition, createCondition, createFormula} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {filter, map, publishReplay, refCount, scan, withLatestFrom} from 'rxjs/operators';\n\nimport {AjfAttachmentsOriginsOperation, AjfChoicesOriginsOperation,\n  AjfFormStringIdentifierOperation} from './operations';\n\n\nexport interface AjfFormBuilderNodeTypeEntry {\n  label: string;\n  icon: {\n    fontSet: string;\n    fontIcon: string;\n  };\n  nodeType: {\n    node: AjfNodeType;\n    field?: AjfFieldType,\n  };\n  isSlide?: boolean;\n}\n\n\nexport interface AjfFormBuilderNodeEntry {\n  node: AjfNode;\n  container: AjfContainerNode | null;\n  children: AjfFormBuilderNodeEntry[];\n  content: AjfFormBuilderNodeEntry[];\n}\n\n\nexport interface AjfFormBuilderEmptySlot {\n  parent: AjfNode;\n  parentNode: number;\n}\n\n\nexport type AjfFormBuilderNode = AjfFormBuilderNodeEntry | AjfFormBuilderEmptySlot;\nexport type AjfContainerNode = AjfSlide | AjfRepeatingSlide | AjfNodeGroup;\n\nfunction getNodeContainer(c: {nodes: AjfNode[]}, node: AjfNode): {nodes: AjfNode[]} | null {\n  if (c.nodes.indexOf(node) > -1) {\n    return c;\n  }\n  const cns = c.nodes.filter(n => isContainerNode(n));\n  const len = cns.length;\n  for (let i = 0 ; i < len ; i++) {\n    const cn = getNodeContainer(<AjfContainerNode>cns[i], node);\n    if (cn != null) { return cn; }\n  }\n  return null;\n}\n\nfunction buildFormBuilderNodesSubtree(\n  nodes: AjfNode[], parent: AjfNode, ignoreConditionalBranches = false\n): AjfFormBuilderNode[] {\n  const entries: AjfFormBuilderNode[] = nodes\n    .filter(n => n.parent === parent.id)\n    .sort((n1, n2) => n1.parentNode - n2.parentNode)\n    .map(n => {\n      const children = buildFormBuilderNodesSubtree(nodes, n);\n      if (children.length === 0) {\n        children.push({parent: n, parentNode: 0});\n      }\n      return <AjfFormBuilderNodeEntry>{\n        node: n,\n        children,\n        content: buildFormBuilderNodesContent(nodes, n)\n      };\n    });\n  if (!ignoreConditionalBranches) {\n    const entriesNum = entries.length;\n    const cbs = parent.conditionalBranches.length;\n    for (let i = entriesNum ; i < cbs ; i++) {\n      entries.push({\n        parent: parent,\n        parentNode: i\n      });\n    }\n  }\n  return entries;\n}\n\nfunction buildFormBuilderNodesContent(_nodes: AjfNode[], node: AjfNode): AjfFormBuilderNode[] {\n  if (isContainerNode(node)) {\n    return buildFormBuilderNodesSubtree((<AjfContainerNode>node).nodes, node, true);\n  }\n  return [];\n}\n\n\nfunction buildFormBuilderNodesTree(nodes: AjfNode[]): (AjfFormBuilderNode | null)[] {\n  const rootNodes = nodes.filter(n => n.parent == null || n.parent === 0);\n  if (rootNodes.length === 1) {\n    const rootNode = rootNodes[0];\n    if (isSlidesNode(rootNode)) {\n      const tree: AjfFormBuilderNode[] = [];\n      tree.push(<AjfFormBuilderNodeEntry>{\n        node: rootNode,\n        container: null,\n        children: buildFormBuilderNodesSubtree(nodes, rootNode),\n        content: buildFormBuilderNodesContent(nodes, rootNode)\n      });\n      return tree;\n    }\n  } else if (rootNodes.length === 0) {\n    return [null];\n  }\n  throw new Error('Invalid form definition');\n}\n\nexport function flattenNodes(nodes: AjfNode[]): AjfNode[] {\n  let flatNodes: AjfNode[] = [];\n\n  nodes.forEach((node: AjfNode) => {\n    if (isContainerNode(node)) {\n      flatNodes = flatNodes.concat(flattenNodes((<AjfContainerNode>node).nodes));\n    }\n    flatNodes.push(node);\n  });\n\n  return flatNodes;\n}\n\nfunction getDescendants(\n  flatNodes: AjfNode[], parentNode: AjfNode, branch: number | null = null\n): AjfNode[] {\n  return branch != null ?\n    flatNodes.filter(n => n.parent === parentNode.id && n.parentNode === branch) :\n    flatNodes.filter(n => n.parent === parentNode.id);\n}\n\nfunction removeNodes(nodes: AjfNode[], ids: number[]): AjfNode[] {\n  const len = nodes.length;\n  for (let i = 0 ; i < len ; i++) {\n    const node = nodes[i];\n    if (isContainerNode(node)) {\n      const container = (<AjfContainerNode>node);\n      container.nodes = removeNodes(container.nodes, ids);\n    }\n  }\n  return nodes.filter(n => ids.indexOf(n.id) === -1);\n}\n\nfunction deleteNodeSubtree(\n  nodes: AjfNode[], parentNode: AjfNode, branch: number | null = null\n): AjfNode[] {\n  const flatNodes = flattenNodes(nodes);\n  let delNodes: AjfNode[] = [];\n  let descendants = getDescendants(flatNodes, parentNode, branch);\n  const len = descendants.length;\n  for (let i = 0 ; i < len ; i++) {\n    delNodes = delNodes.concat(getDescendants(flatNodes, descendants[i]));\n  }\n  delNodes = delNodes.concat(descendants);\n  return removeNodes(nodes, delNodes.map(n => n.id));\n}\n\nlet nodeUniqueId = 0;\n\n\n@Injectable()\nexport class AjfFormBuilderService {\n  private _availableNodeTypes: AjfFormBuilderNodeTypeEntry[] = [\n    {\n      label: 'Slide',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-slide'},\n      nodeType: {node: AjfNodeType.AjfSlide},\n      isSlide: true\n    },\n    {\n      label: 'Repeating slide',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-repeatingslide'},\n      nodeType: {node: AjfNodeType.AjfRepeatingSlide},\n      isSlide: true\n    },\n    {\n      label: 'String',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-string'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.String}\n    },\n    {\n      label: 'Text',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-text'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Text}\n    },\n    {\n      label: 'Number',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-number'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Number}\n    },\n    {\n      label: 'Boolean',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-boolean'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Boolean}\n    },\n    {\n      label: 'Single choice',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-singlechoice'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.SingleChoice}\n    },\n    {\n      label: 'Multiple choice',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-multiplechoice'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.MultipleChoice}\n    },\n    {\n      label: 'Formula',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-formula'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Formula}\n    },\n    {\n      label: 'Date',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-date'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Date}\n    },\n    {\n      label: 'Date input',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-dateinput'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.DateInput}\n    },\n    {\n      label: 'Time',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-time'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Time}\n    },\n    {\n      label: 'Table',\n      icon: {fontSet: 'ajf-icon', fontIcon: 'field-table'},\n      nodeType: {node: AjfNodeType.AjfField, field: AjfFieldType.Table}\n    }\n  ];\n  /**\n   * Available node types\n   *\n   * @readonly\n   * @memberOf AjfFormBuilderService\n   */\n  get availableNodeTypes(): AjfFormBuilderNodeTypeEntry[] { return this._availableNodeTypes; }\n\n  private _form: BehaviorSubject<AjfForm | null> = new BehaviorSubject<AjfForm | null>(null);\n  private _formObs: Observable<AjfForm | null> = this._form.asObservable();\n  /**\n   * Current edited form stream\n   *\n   * @readonly\n   * @memberOf AjfFormBuilderService\n   */\n  get form(): Observable<AjfForm | null> { return this._formObs; }\n\n  private _attachmentsOrigins: Observable<AjfAttachmentsOrigin<any>[]>;\n  get attachmentsOrigins(): Observable<AjfAttachmentsOrigin<any>[]> {\n    return this._attachmentsOrigins;\n  }\n\n  private _choicesOrigins: Observable<AjfChoicesOrigin<any>[]>;\n  get choicesOrigins(): Observable<AjfChoicesOrigin<any>[]> {\n    return this._choicesOrigins;\n  }\n\n  private _stringIdentifier: Observable<AjfFormStringIdentifier[]>;\n  get stringIdentifier(): Observable<AjfFormStringIdentifier[]> {\n    return this._stringIdentifier;\n  }\n\n  private _nodes: Observable<AjfNode[]>;\n  get nodes(): Observable<AjfNode[]> { return this._nodes; }\n\n  private _flatNodes: Observable<AjfNode[]>;\n  get flatNodes(): Observable<AjfNode[]> {\n    return this._flatNodes;\n  }\n\n  private _flatFields: Observable<AjfField[]>;\n  get flatFields(): Observable<AjfField[]> { return this._flatFields; }\n\n  private _nodeEntriesTree: Observable<AjfFormBuilderNodeEntry[]>;\n  get nodeEntriesTree(): Observable<AjfFormBuilderNodeEntry[]> { return this._nodeEntriesTree; }\n\n  private _editedNodeEntry: BehaviorSubject<AjfFormBuilderNodeEntry | null> =\n    new BehaviorSubject<AjfFormBuilderNodeEntry | null>(null);\n  private _editedNodeEntryObs: Observable<AjfFormBuilderNodeEntry | null> =\n    this._editedNodeEntry.asObservable();\n  get editedNodeEntry(): Observable<AjfFormBuilderNodeEntry | null> {\n    return this._editedNodeEntryObs;\n  }\n\n  private _editedCondition: BehaviorSubject<AjfCondition | null> =\n    new BehaviorSubject<AjfCondition | null>(null);\n  private _editedConditionObs: Observable<AjfCondition | null> =\n    this._editedCondition.asObservable();\n  get editedCondition(): Observable<AjfCondition | null> { return this._editedConditionObs; }\n\n  private _editedChoicesOrigin: BehaviorSubject<AjfChoicesOrigin<any>|null> =\n      new BehaviorSubject<AjfChoicesOrigin<any>|null>(null);\n  private _editedChoicesOriginObs: Observable<AjfChoicesOrigin<any>|null> =\n      this._editedChoicesOrigin.asObservable();\n  get editedChoicesOrigin(): Observable<AjfChoicesOrigin<any>|null> {\n    return this._editedChoicesOriginObs;\n  }\n\n  private _beforeNodesUpdate: EventEmitter<void> = new EventEmitter<void>();\n  private _beforeNodesUpdateObs: Observable<void> = this._beforeNodesUpdate.asObservable();\n  get beforeNodesUpdate(): Observable<void> { return this._beforeNodesUpdateObs; }\n  private _afterNodeUpdate: EventEmitter<void> = new EventEmitter<void>();\n  private _afterNodeUpdateObs: Observable<void> = this._afterNodeUpdate.asObservable();\n  get afterNodeUpdate(): Observable<void> { return this._afterNodeUpdateObs; }\n\n  private _nodesUpdates: Subject<AjfNodesOperation> = new Subject<AjfNodesOperation>();\n  private _attachmentsOriginsUpdates: Subject<AjfAttachmentsOriginsOperation> =\n      new Subject<AjfAttachmentsOriginsOperation>();\n  private _choicesOriginsUpdates: Subject<AjfChoicesOriginsOperation> =\n      new Subject<AjfChoicesOriginsOperation>();\n  private _stringIdentifierUpdates: Subject<AjfFormStringIdentifierOperation> =\n      new Subject<AjfFormStringIdentifierOperation>();\n\n  private _saveNodeEntryEvent: EventEmitter<any> = new EventEmitter<any>();\n  private _deleteNodeEntryEvent: EventEmitter<AjfFormBuilderNodeEntry> =\n    new EventEmitter<AjfFormBuilderNodeEntry>();\n\n  constructor() {\n    this._initChoicesOriginsStreams();\n    this._initAttachmentsOriginsStreams();\n    this._initStringIdentifierStreams();\n    this._initNodesStreams();\n    this._initFormStreams();\n    this._initSaveNode();\n    this._initDeleteNode();\n  }\n\n  /**\n   * Sets the current edited form\n   *\n   * @param form\n   *\n   * @memberOf AjfFormBuilderService\n   */\n  setForm(form: AjfForm | null): void {\n    if (form !== this._form.getValue()) {\n      this._form.next(form);\n    }\n  }\n\n  editNodeEntry(nodeEntry: AjfFormBuilderNodeEntry): void {\n    this._editedNodeEntry.next(nodeEntry);\n  }\n\n  editCondition(condition: AjfCondition): void {\n    this._editedCondition.next(condition);\n  }\n\n  saveCurrentCondition(condition: string): void {\n    let c = this._editedCondition.getValue();\n    if (c == null) { return; }\n    c.condition = condition;\n    this._editedCondition.next(null);\n  }\n\n  cancelConditionEdit(): void {\n    this._editedChoicesOrigin.next(null);\n  }\n\n  insertNode(\n    nodeType: AjfFormBuilderNodeTypeEntry,\n    parent: AjfNode,\n    parentNode: number,\n    inContent = false\n  ): void {\n    let node: AjfNode|AjfField;\n    const id = ++nodeUniqueId;\n    const isFieldNode = nodeType.nodeType.field != null;\n    if (isFieldNode) {\n      node = createField({\n        id,\n        nodeType: AjfNodeType.AjfField,\n        fieldType: nodeType.nodeType.field!,\n        parent: parent.id,\n        parentNode,\n        name: '',\n      });\n    } else {\n      node = createContainerNode({\n        id,\n        nodeType: nodeType.nodeType.node,\n        parent: parent != null ? parent.id : 0,\n        parentNode,\n        name: '',\n        nodes: [],\n      });\n    }\n    this._beforeNodesUpdate.emit();\n    this._nodesUpdates.next((nodes: AjfNode[]): AjfNode[] => {\n      if (node.parent === 0) {\n        return [node];\n      }\n      const cn = isContainerNode(parent) && inContent ?\n        (<AjfContainerNode>parent) :\n        getNodeContainer({nodes}, parent);\n      if (cn != null) {\n        if (!isFieldNode) {\n          const replaceNodes = cn.nodes === nodes;\n          const newNodes = cn.nodes.slice(0);\n          newNodes.push(node);\n          cn.nodes = newNodes;\n          if (replaceNodes) {\n            nodes = newNodes;\n          }\n        } else {\n          cn.nodes.push(node);\n        }\n      }\n      return nodes;\n    });\n  }\n\n  saveNodeEntry(properties: any): void {\n    this._saveNodeEntryEvent.emit(properties);\n  }\n\n  cancelNodeEntryEdit(): void {\n    this._editedNodeEntry.next(null);\n  }\n\n  deleteNodeEntry(nodeEntry: AjfFormBuilderNodeEntry): void {\n    this._deleteNodeEntryEvent.next(nodeEntry);\n  }\n\n  getCurrentForm(): Observable<AjfForm> {\n    return combineLatest(\n      [this.form, this.nodes, this.attachmentsOrigins, this.choicesOrigins, this.stringIdentifier]\n    ).pipe(\n      filter(([form]) => form != null),\n      map(([form, nodes, attachmentsOrigins, choicesOrigins, stringIdentifier]) => {\n        return createForm({\n          choicesOrigins: choicesOrigins.slice(0),\n          attachmentsOrigins: attachmentsOrigins.slice(0),\n          stringIdentifier: (stringIdentifier || []).slice(0),\n          nodes: nodes.slice(0) as AjfSlide[],\n          supplementaryInformations: form!.supplementaryInformations,\n        });\n      })\n    );\n  }\n\n  editChoicesOrigin(choicesOrigin: AjfChoicesOrigin<any>): void {\n    this._editedChoicesOrigin.next(choicesOrigin);\n  }\n\n  createChoicesOrigin(): void {\n    this._editedChoicesOrigin.next(createChoicesFixedOrigin<any>({name: ''}));\n  }\n\n  cancelChoicesOriginEdit(): void {\n    this._editedChoicesOrigin.next(null);\n  }\n\n  saveChoicesOrigin(params: {label: string, name: string, choices: any[]}): void {\n    const choicesOrigin = this._editedChoicesOrigin.getValue();\n    if (choicesOrigin != null) {\n      choicesOrigin.label = params.label;\n      choicesOrigin.name = params.name;\n      if (isChoicesFixedOrigin(choicesOrigin)) {\n        choicesOrigin.choices = params.choices;\n      }\n      this._choicesOriginsUpdates.next((choicesOrigins) => {\n        const idx = choicesOrigins.indexOf(choicesOrigin);\n        if (idx > -1) {\n          choicesOrigins = [\n            ...choicesOrigins.slice(0, idx),\n            choicesOrigin,\n            ...choicesOrigins.slice(idx + 1),\n          ];\n        } else {\n          choicesOrigins = [...choicesOrigins, choicesOrigin];\n        }\n        return choicesOrigins;\n      });\n    }\n    this._editedChoicesOrigin.next(null);\n  }\n\n  saveStringIdentifier(identifier: AjfFormStringIdentifier[]): void {\n    this._stringIdentifierUpdates.next(() => [...identifier]);\n  }\n\n  private _findMaxNodeId(nodes: AjfNode[], _curMaxId = 0): number {\n    let maxId = 0;\n    nodes.forEach((n) => {\n      maxId = Math.max(maxId, n.id);\n      if (isContainerNode(n)) {\n        maxId = Math.max(maxId, this._findMaxNodeId((<AjfContainerNode>n).nodes));\n      }\n    });\n    return maxId;\n  }\n\n  private _initFormStreams(): void {\n    this._form\n      .subscribe((form: AjfForm | null) => {\n        nodeUniqueId = 0;\n        if (form != null && form.nodes != null && form.nodes.length > 0) {\n          nodeUniqueId = this._findMaxNodeId(form.nodes);\n        }\n        this._nodesUpdates.next(\n          (_nodes: AjfNode[]): AjfNode[] => {\n            return form != null && form.nodes != null ? form.nodes.slice(0) : [];\n          }\n        );\n        this._attachmentsOriginsUpdates.next(\n            (_attachmentsOrigins: AjfAttachmentsOrigin<any>[]): AjfAttachmentsOrigin<any>[] => {\n              return form != null && form.attachmentsOrigins != null ?\n                  form.attachmentsOrigins.slice(0) :\n                  [];\n            });\n        this._choicesOriginsUpdates.next(\n            (_choicesOrigins: AjfChoicesOrigin<any>[]): AjfChoicesOrigin<any>[] => {\n              return form != null && form.choicesOrigins != null ? form.choicesOrigins.slice(0) :\n                                                                   [];\n            });\n        this._stringIdentifierUpdates.next(\n            (_: AjfFormStringIdentifier[]): AjfFormStringIdentifier[] => {\n              return form != null && form.stringIdentifier != null\n                ? form.stringIdentifier.slice(0)\n                : [];\n            });\n      });\n  }\n\n  private _initChoicesOriginsStreams(): void {\n    this._choicesOrigins =\n        (<Observable<AjfChoicesOriginsOperation>>this._choicesOriginsUpdates)\n            .pipe(\n                scan((choicesOrigins: AjfChoicesOrigin<any>[], op: AjfChoicesOriginsOperation) => {\n                  return op(choicesOrigins);\n                }, []), publishReplay(1), refCount());\n  }\n\n  private _initAttachmentsOriginsStreams(): void {\n    this._attachmentsOrigins = this._attachmentsOriginsUpdates.pipe(\n      scan(\n        (attachmentsOrigins: AjfAttachmentsOrigin<any>[], op: AjfAttachmentsOriginsOperation) => {\n          return op(attachmentsOrigins);\n        }, []\n      ),\n      publishReplay(1),\n      refCount(),\n    );\n  }\n\n  private _initStringIdentifierStreams(): void {\n    this._stringIdentifier = this._stringIdentifierUpdates.pipe(\n      scan(\n        (stringIdentifier: AjfFormStringIdentifier[], op: AjfFormStringIdentifierOperation) => {\n          return op(stringIdentifier);\n        }, []\n      ),\n      publishReplay(1),\n      refCount(),\n    );\n  }\n\n  private _initNodesStreams(): void {\n    this._nodes = (<Observable<AjfNodesOperation>>this._nodesUpdates)\n                      .pipe(scan((nodes: AjfNode[], op: AjfNodesOperation) => {\n                              return op(nodes);\n                            }, []), publishReplay(1), refCount());\n\n    this._flatNodes = this._nodes.pipe(\n      map((nodes: AjfNode[]) => flattenNodes(nodes)),\n      publishReplay(1),\n      refCount()\n    );\n\n    this._flatFields = this._flatNodes.pipe(\n      map((nodes: AjfNode[]) => <AjfField[]>nodes.filter(n => !isContainerNode(n))),\n      publishReplay(1),\n      refCount()\n    );\n\n    this._nodeEntriesTree = this._nodes.pipe(\n      map(nodes => <AjfFormBuilderNodeEntry[]>buildFormBuilderNodesTree(nodes)),\n      publishReplay(1),\n      refCount()\n    );\n  }\n\n  private _initSaveNode(): void {\n    this._saveNodeEntryEvent\n        .pipe(\n            withLatestFrom(this.editedNodeEntry, this.choicesOrigins, this.attachmentsOrigins),\n            filter(([_, nodeEntry]) => nodeEntry != null),\n            map(([properties, nodeEntry]) => {\n              this._beforeNodesUpdate.emit();\n              nodeEntry = nodeEntry!;\n              const origNode = nodeEntry.node;\n              const node = deepCopy(origNode);\n              node.id = nodeEntry.node.id;\n              node.name = properties.name;\n              node.label = properties.label;\n              node.visibility = properties.visibility != null ?\n                  createCondition({condition: properties.visibility}) :\n                  null;\n\n              const oldConditionalBranches = node.conditionalBranches.length;\n              node.conditionalBranches = properties.conditionalBranches != null ?\n                  properties.conditionalBranches.map(\n                      (condition: string) => createCondition({condition})) :\n                  [alwaysCondition()];\n              const newConditionalBranches = node.conditionalBranches.length;\n\n              if (isRepeatingContainerNode(node)) {\n                const repNode = <AjfRepeatingContainerNode>node;\n                repNode.formulaReps = properties.formulaReps != null ?\n                    createFormula({formula: properties.formulaReps}) :\n                    undefined;\n                repNode.minReps = properties.minReps;\n                repNode.maxReps = properties.maxReps;\n              }\n\n              if (isField(node)) {\n                const field = node as AjfField;\n                field.description = properties.description;\n                field.defaultValue = properties.defaultValue;\n                field.formula = properties.formula != null ?\n                    createFormula({formula: properties.formula}) :\n                    undefined;\n                const forceValue = properties.value;\n                const notEmpty = properties.notEmpty;\n                const validationConditions = properties.validationConditions;\n                let minValue: number|null = parseInt(properties.minValue, 10);\n                let maxValue: number|null = parseInt(properties.maxValue, 10);\n                let minDigits: number|null = parseInt(properties.minDigits, 10);\n                let maxDigits: number|null = parseInt(properties.maxDigits, 10);\n                if (isNaN(minValue)) {\n                  minValue = null;\n                }\n                if (isNaN(maxValue)) {\n                  maxValue = null;\n                }\n                if (isNaN(minDigits)) {\n                  minDigits = null;\n                }\n                if (isNaN(maxDigits)) {\n                  maxDigits = null;\n                }\n                if (forceValue != null || notEmpty != null ||\n                    (validationConditions != null && validationConditions.length > 0) ||\n                    minValue != null || maxValue != null || minDigits != null ||\n                    maxDigits != null) {\n                  const validation = field.validation || createValidationGroup({});\n                  validation.forceValue = forceValue;\n                  validation.notEmpty = notEmpty ? notEmptyValidation() : undefined;\n                  validation.minValue = minValue != null ? minValidation(minValue) : undefined;\n                  validation.maxValue = maxValue != null ? maxValidation(maxValue) : undefined;\n                  validation.minDigits =\n                      minDigits != null ? minDigitsValidation(minDigits) : undefined;\n                  validation.maxDigits =\n                      maxDigits != null ? maxDigitsValidation(maxDigits) : undefined;\n                  validation.conditions =\n                      (validationConditions ||\n                       []).map((c: {condition: string, errorMessage: string}) => createValidation({\n                                 condition: c.condition,\n                                 errorMessage: c.errorMessage\n                               }));\n                  field.validation = validation;\n                } else {\n                  field.validation = undefined;\n                }\n                const notEmptyWarn = properties.notEmptyWarning;\n                const warningConditions = properties.warningConditions;\n                if (notEmptyWarn != null ||\n                    (warningConditions != null && warningConditions.length > 0)) {\n                  const warning = field.warning || createWarningGroup({});\n                  warning.notEmpty = notEmptyWarn ? notEmptyWarning() : undefined;\n                  warning.conditions =\n                      (warningConditions ||\n                       []).map((w: {condition: string, warningMessage: string}) => createWarning({\n                                 condition: w.condition,\n                                 warningMessage: w.warningMessage\n                               }));\n                  field.warning = warning;\n                } else {\n                  field.warning = undefined;\n                }\n                field.nextSlideCondition = properties.nextSlideCondition != null ?\n                    createCondition({condition: properties.nextSlideCondition}) :\n                    undefined;\n                field.size = properties.size;\n                field.defaultValue = properties.defaultValue;\n\n                if (isFieldWithChoices(field)) {\n                  const fwc = <AjfFieldWithChoices<any>>field;\n                  (fwc as any).choicesOriginRef = properties.choicesOriginRef;\n                  fwc.forceExpanded = properties.forceExpanded;\n                  fwc.forceNarrow = properties.forceNarrow;\n                  fwc.triggerConditions = (properties.triggerConditions ||\n                                           []).map((t: string) => createCondition({condition: t}));\n                }\n              }\n\n              this._editedNodeEntry.next(null);\n\n              return (nodes: AjfNode[]): AjfNode[] => {\n                let cn = getNodeContainer({nodes}, origNode);\n                if (cn != null) {\n                  // TODO: @trik check this, was always true?\n                  // if (cn instanceof AjfNode) {\n                  const replaceNodes = cn.nodes === nodes;\n                  const idx = cn.nodes.indexOf(origNode);\n                  let newNodes = cn.nodes.slice(0, idx);\n                  newNodes.push(node);\n                  newNodes = newNodes.concat(cn.nodes.slice(idx + 1));\n                  cn.nodes = newNodes;\n                  if (replaceNodes) {\n                    nodes = newNodes;\n                  } else {\n                    nodes = nodes.slice(0);\n                  }\n                  // } else {\n                  //   const idx = nodes.indexOf(origNode);\n                  //   nodes = nodes.slice(0, idx).concat([node]).concat(nodes.slice(idx + 1));\n                  // }\n                  if (newConditionalBranches < oldConditionalBranches) {\n                    for (let i = newConditionalBranches; i < oldConditionalBranches; i++) {\n                      nodes = deleteNodeSubtree(nodes, node, i);\n                    }\n                  }\n                }\n                return nodes;\n              };\n            }))\n        .subscribe(this._nodesUpdates);\n  }\n\n  private _initDeleteNode(): void {\n    (<Observable<AjfFormBuilderNodeEntry>>this._deleteNodeEntryEvent).pipe(\n      map((nodeEntry: AjfFormBuilderNodeEntry) => {\n        this._beforeNodesUpdate.emit();\n        return (nodes: AjfNode[]): AjfNode[] => {\n          const node = nodeEntry.node;\n          let cn = getNodeContainer({nodes}, node);\n          if (cn != null) {\n            const replaceNodes = cn.nodes === nodes;\n            const idx = cn.nodes.indexOf(node);\n            let newNodes = cn.nodes.slice(0, idx);\n            newNodes = newNodes.concat(cn.nodes.slice(idx + 1));\n            cn.nodes = newNodes;\n            if (replaceNodes) {\n              nodes = newNodes;\n            } else {\n              nodes = nodes.slice(0);\n            }\n            nodes = deleteNodeSubtree(nodes, node);\n          }\n          return nodes;\n        };\n      })\n    ).subscribe(this._nodesUpdates);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin} from '@ajf/core/forms';\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\n\nimport {AjfFbChoicesOriginEditor} from './choices-origin-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  selector: 'ajf-fb-choices-origin-editor-dialog',\n  templateUrl: 'choices-origin-editor-dialog.html',\n  styleUrls: ['choices-origin-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbChoicesOriginEditorDialog {\n  @ViewChild(AjfFbChoicesOriginEditor, {static: false}) editor: AjfFbChoicesOriginEditor;\n\n  private _choicesOrigin: Observable<AjfChoicesOrigin<any>>;\n  get choicesOrigin(): Observable<AjfChoicesOrigin<any>> {\n    return this._choicesOrigin;\n  }\n\n  constructor(private _service: AjfFormBuilderService) {\n    this._choicesOrigin = this._service.editedChoicesOrigin.pipe(\n      filter(c => c != null),\n      map(c => c!)\n    );\n  }\n\n  saveChoicesOrigin(): void {\n    this._service.saveChoicesOrigin({\n      label: this.editor.label,\n      name: this.editor.name,\n      choices: this.editor.choicesArr\n    });\n  }\n\n  cancelChoicesOriginEdit(): void {\n    this._service.cancelChoicesOriginEdit();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField, AjfFieldType, AjfValidationService} from '@ajf/core/forms';\nimport {AjfExpressionUtils} from '@ajf/core/models';\nimport {AjfMonacoEditor} from '@ajf/material/monaco-editor';\nimport {\n  ChangeDetectionStrategy, Component, Input, ViewChild, ViewEncapsulation\n} from '@angular/core';\n\ndeclare var monaco: any;\n\n@Component({\n  selector: 'ajf-condition-editor',\n  templateUrl: 'fb-condition-editor.html',\n  styleUrls: ['fb-condition-editor.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class AjfFbConditionEditor {\n  @ViewChild(AjfMonacoEditor, {static: true}) monacoEditor: AjfMonacoEditor;\n\n  private _fields: AjfField[];\n  get fields(): AjfField[] { return this._fields; }\n  @Input() set fields(fields: AjfField[]) {\n    this._fields = fields;\n    this._updateVariables();\n  }\n  @Input() condition: string;\n\n  editedValue: string;\n\n  constructor(_: AjfValidationService) { }\n\n  insertVariable(variable: string): void {\n    if (this.monacoEditor != null && this.monacoEditor.editor != null) {\n      const editor = this.monacoEditor.editor;\n      let value: string[] = editor.getValue().split('\\n');\n      let position: {column: number, lineNumber: number} = editor.getPosition();\n      const ln = position.lineNumber - 1;\n      let line = value[ln];\n      let col = position.column - 1;\n      line = line.substring(0, col) + variable + line.substring(col);\n      value[ln] = line;\n      position.column += variable.length;\n      this.monacoEditor.value = value.join('\\n');\n      editor.setPosition(position);\n      editor.focus();\n      this.editedValue = editor.getValue();\n    }\n  }\n\n  onEditorInit(): void {\n    monaco.languages.typescript.javascriptDefaults.setDiagnosticsOptions({\n      noSemanticValidation: false,\n      noSyntaxValidation: false\n    });\n\n    monaco.languages.typescript.javascriptDefaults.setCompilerOptions({\n      target: monaco.languages.typescript.ScriptTarget.ES2015,\n      allowNonTsExtensions: true,\n      allowJs: true,\n      module: monaco.languages.typescript.ModuleKind.None\n    });\n\n    try {\n      monaco.languages.typescript.javascriptDefaults.addExtraLib(\n        '', 'condition-editor-variables.d.ts'\n      );\n    } catch (e) {\n      monaco.languages.typescript.javascriptDefaults\n          ._extraLibs['condition-editor-variables.d.ts'] = '';\n    }\n\n    try {\n      monaco.languages.typescript.javascriptDefaults.addExtraLib(\n        '', 'condition-editor-functions.d.ts'\n      );\n    } catch (e) {\n      monaco.languages.typescript.javascriptDefaults\n          ._extraLibs['condition-editor-functions.d.ts'] = '';\n    }\n\n    this._updateVariables();\n    this._updateFunctions();\n  }\n\n  private _updateVariables(): void {\n    if (this._fields == null) { return; }\n    try {\n      monaco.languages.typescript.javascriptDefaults\n        ._extraLibs['condition-editor-variables.d.ts'] =\n          this._fields\n            .map((field: AjfField) => {\n              return `declare const ${field.name}: ${this._fieldVarType(field.fieldType)};`;\n            })\n            .join('\\n');\n    } catch (e) { }\n  }\n\n  private _updateFunctions(): void {\n    try {\n      monaco.languages.typescript.javascriptDefaults._extraLibs['condition-editor-functions.d.ts'] =\n          AjfExpressionUtils.UTIL_FUNCTIONS;\n    } catch (e) { }\n  }\n\n  private _fieldVarType(fieldType: AjfFieldType): string | null {\n    switch (fieldType) {\n      case AjfFieldType.Boolean:\n      return 'boolean';\n      case AjfFieldType.Date:\n      case AjfFieldType.DateInput:\n      case AjfFieldType.Time:\n      return 'Date';\n      case AjfFieldType.Empty:\n      return 'void';\n      case AjfFieldType.Formula:\n      return 'number';\n      case AjfFieldType.MultipleChoice:\n      case AjfFieldType.SingleChoice:\n      return 'any';\n      case AjfFieldType.Number:\n      return 'number';\n      case AjfFieldType.Table:\n      return 'Array';\n      case AjfFieldType.String:\n      case AjfFieldType.Text:\n      return 'string';\n    }\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AjfField} from '@ajf/core/forms';\n\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  selector: 'ajf-condition-editor-dialog',\n  templateUrl: 'condition-editor-dialog.html',\n  styleUrls: ['condition-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbConditionEditorDialog {\n  @ViewChild(AjfFbConditionEditor, {static: false}) editor: AjfFbConditionEditor;\n\n  private _fields: Observable<AjfField[]>;\n  get fields(): Observable<AjfField[]> { return this._fields; }\n\n  condition: string;\n\n  constructor(\n    service: AjfFormBuilderService,\n    public dialogRef: MatDialogRef<AjfFbConditionEditorDialog>\n  ) {\n    this._fields = service.flatFields.pipe(\n      map((fields: AjfField[]) => fields.sort((f1, f2) => f1.name.localeCompare(f2.name)))\n    );\n  }\n\n  saveCondition(): void {\n    if (this.editor == null) { return; }\n    const newValue = this.editor.editedValue;\n    this.dialogRef.close(newValue);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormStringIdentifier} from '@ajf/core/forms';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy,\n  ViewEncapsulation} from '@angular/core';\nimport {MatAutocompleteSelectedEvent} from '@angular/material/autocomplete';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {Observable, Subscription} from 'rxjs';\nimport {map, shareReplay} from 'rxjs/operators';\n\nimport {AjfFormBuilderService} from './form-builder-service';\n\n@Component({\n  selector: 'ajf-fb-string-identifier-dialog',\n  templateUrl: 'string-identifier-dialog.html',\n  styleUrls: ['./string-identifier-dialog.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfFbStringIdentifierDialogComponent implements OnDestroy {\n  readonly dataSource: MatTableDataSource<AjfFormStringIdentifier>\n      = new MatTableDataSource<AjfFormStringIdentifier>();\n  readonly displayedColumns = ['label', 'value', 'delete'];\n  readonly fields$: Observable<string[]>;\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  private _stringIdentifierSub: Subscription = Subscription.EMPTY;\n\n  constructor(private _service: AjfFormBuilderService, private _cdr: ChangeDetectorRef) {\n    this._stringIdentifierSub = _service.stringIdentifier.subscribe(identifier => {\n      this.dataSource.data = [...identifier];\n    });\n    this.fields$ = _service.flatFields.pipe(\n      map(fields =>\n        fields.sort((f1, f2) => f1.name.localeCompare(f2.name)).map(f => f.name)\n          .filter(f => f.length > 0)),\n      shareReplay(1),\n    );\n  }\n\n  addRow(): void {\n    this.dataSource.data = [...this.dataSource.data, {label: '', value: []}];\n  }\n\n  deleteRow(rowIdx: number): void {\n    this.dataSource.data = [\n      ...this.dataSource.data.slice(0, rowIdx),\n      ...this.dataSource.data.slice(rowIdx + 1),\n    ];\n  }\n\n  addValue(\n    row: AjfFormStringIdentifier, evt: MatChipInputEvent, valueInput: HTMLInputElement\n  ): void {\n    if (evt.value.length === 0) { return; }\n    row.value = [...row.value, evt.value];\n    valueInput.value = '';\n    this._cdr.markForCheck();\n  }\n\n  removeValue(row: AjfFormStringIdentifier, value: string): void {\n    const idx = row.value.indexOf(value);\n    if (idx > -1) {\n      row.value = [\n        ...row.value.slice(0, idx),\n        ...row.value.slice(idx + 1),\n      ];\n      this._cdr.markForCheck();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._stringIdentifierSub.unsubscribe();\n  }\n\n  saveStringIdentifier(): void {\n    this._service.saveStringIdentifier(this.dataSource.data);\n  }\n\n  selected(\n    row: AjfFormStringIdentifier, evt: MatAutocompleteSelectedEvent\n  ): void {\n    row.value = [...row.value, evt.option.value];\n    this._cdr.markForCheck();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChoicesOrigin, AjfForm} from '@ajf/core/forms';\nimport {AjfCondition} from '@ajf/core/models';\nimport {\n  AfterContentInit, AfterViewChecked, ChangeDetectionStrategy, Component, ElementRef, EventEmitter,\n  Input, OnDestroy, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {Observable, Subscription} from 'rxjs';\nimport {sample} from 'rxjs/operators';\n\nimport {AjfFbChoicesOriginEditorDialog} from './choices-origin-editor-dialog';\nimport {AjfFbConditionEditorDialog} from './condition-editor-dialog';\nimport {\n  AjfFormBuilderNodeEntry, AjfFormBuilderNodeTypeEntry, AjfFormBuilderService\n} from './form-builder-service';\nimport {AjfFbStringIdentifierDialogComponent} from './string-identifier-dialog';\n\n@Component({\n  selector: 'ajf-form-builder',\n  templateUrl: 'form-builder.html',\n  styleUrls: ['form-builder.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class AjfFormBuilder implements AfterViewChecked, AfterContentInit, OnDestroy {\n  @ViewChild('designer', {static: true}) designerCont: ElementRef;\n\n  private _form: AjfForm;\n  get form(): AjfForm { return this._form; }\n  @Input() set form(form: AjfForm) {\n    if (this._form !== form) {\n      this._form = form;\n      if (this._init) {\n        this._setCurrentForm();\n      }\n    }\n  }\n\n  private _nodeTypes: AjfFormBuilderNodeTypeEntry[];\n  get nodeTypes(): AjfFormBuilderNodeTypeEntry[] { return this._nodeTypes; }\n\n  private _nodeEntriesTree: Observable<AjfFormBuilderNodeEntry[]>;\n  get nodeEntriesTree(): Observable<AjfFormBuilderNodeEntry[]> { return this._nodeEntriesTree; }\n\n  private _choicesOrigins: Observable<AjfChoicesOrigin<any>[]>;\n  get choicesOrigins(): Observable<AjfChoicesOrigin<any>[]> {\n    return this._choicesOrigins;\n  }\n\n  private _vc: EventEmitter<void> = new EventEmitter<void>();\n\n  private _init = false;\n  private _editConditionSub: Subscription = Subscription.EMPTY;\n  private _editConditionDialog: MatDialogRef<AjfFbConditionEditorDialog> | null;\n  private _beforeNodesUpdateSub: Subscription = Subscription.EMPTY;\n  private _editChoicesOriginSub: Subscription = Subscription.EMPTY;\n  private _editChoicesOriginDialog: MatDialogRef<AjfFbChoicesOriginEditorDialog> | null;\n  private _stringIdentifierDialog: MatDialogRef<AjfFbStringIdentifierDialogComponent> | null;\n  private _stringIdentifierSub: Subscription = Subscription.EMPTY;\n\n  private _lastScrollTop: number;\n\n  constructor(\n    private _service: AjfFormBuilderService,\n    private _dialog: MatDialog\n  ) {\n    this._nodeTypes = _service.availableNodeTypes;\n    this._nodeEntriesTree = _service.nodeEntriesTree;\n    this._choicesOrigins = _service.choicesOrigins;\n    this._editConditionSub = this._service.editedCondition\n      .subscribe((condition: AjfCondition | null) => {\n        if (this._editConditionDialog != null) {\n          this._editConditionDialog.close();\n          this._editConditionDialog = null;\n        }\n        if (condition != null) {\n          this._editConditionDialog = this._dialog.open(\n            AjfFbConditionEditorDialog, {disableClose: true}\n          );\n        }\n      });\n    this._editChoicesOriginSub =\n        this._service.editedChoicesOrigin.subscribe((choicesOrigin: AjfChoicesOrigin<any>|null) => {\n          if (this._editChoicesOriginDialog != null) {\n            this._editChoicesOriginDialog.close();\n            this._editChoicesOriginDialog = null;\n          }\n          if (choicesOrigin != null) {\n            this._editChoicesOriginDialog =\n                this._dialog.open(AjfFbChoicesOriginEditorDialog, {disableClose: true});\n          }\n        });\n\n    this._beforeNodesUpdateSub = this._service.beforeNodesUpdate\n      .subscribe(() => {\n        if (this.designerCont == null) { return; }\n        this._lastScrollTop = this.designerCont.nativeElement.scrollTop;\n      });\n\n    this.nodeEntriesTree\n      .pipe(sample((<Observable<void>>this._vc)))\n      .subscribe(() => {\n        if (this.designerCont == null) { return; }\n        this.designerCont.nativeElement.scrollTop = this._lastScrollTop;\n      });\n\n    this._stringIdentifierSub = this._service.stringIdentifier.subscribe(() => {});\n  }\n\n  ngAfterViewChecked(): void {\n    this._vc.emit();\n  }\n\n  ngAfterContentInit(): void {\n    this._setCurrentForm();\n    this._init = true;\n  }\n\n  ngOnDestroy(): void {\n    this._editConditionSub.unsubscribe();\n    this._beforeNodesUpdateSub.unsubscribe();\n    this._editChoicesOriginSub.unsubscribe();\n    this._stringIdentifierSub.unsubscribe();\n    this._service.setForm(null);\n  }\n\n  createChoicesOrigin(): void {\n    this._service.createChoicesOrigin();\n  }\n\n  disableDropPredicate(): boolean {\n    return false;\n  }\n\n  editChoicesOrigin(choicesOrigin: AjfChoicesOrigin<any>): void {\n    this._service.editChoicesOrigin(choicesOrigin);\n  }\n\n  editStringIdentifier(): void {\n    if (this._stringIdentifierDialog != null) {\n      this._stringIdentifierDialog.close();\n      this._stringIdentifierDialog = null;\n    }\n    this._stringIdentifierDialog =\n        this._dialog.open(AjfFbStringIdentifierDialogComponent, {\n          disableClose: true,\n          width: '60%',\n          height: '60%'\n        });\n  }\n\n  private _setCurrentForm(): void {\n    this._service.setForm(this._form);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {isContainerNode} from '@ajf/core/forms';\nimport {CdkDrag, CdkDragDrop, CdkDropList} from '@angular/cdk/drag-drop';\nimport {\n  AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, Input, OnDestroy, QueryList,\n  ViewChildren, ViewEncapsulation\n} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\n\nimport {AjfFbBranchLine} from './branch-line';\nimport {\n  AjfFormBuilderEmptySlot, AjfFormBuilderNode, AjfFormBuilderNodeEntry,\n  AjfFormBuilderNodeTypeEntry, AjfFormBuilderService\n} from './form-builder-service';\n\n\nconst branchColors: string [] = [\n  '#F44336', // RED\n  '#4CAF50', // GREEN\n  '#3F51B5', // INDIGO\n  '#FFC107', // AMBER\n  '#795548', // BROWN\n];\n\n\n@Component({\n  selector: 'ajf-fb-node-entry',\n  templateUrl: 'node-entry.html',\n  styleUrls: ['node-entry.css'],\n  host: {\n    '(window.resize)': 'onResize()'\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbNodeEntry implements AfterViewInit, OnDestroy {\n  @ViewChildren(AjfFbBranchLine) branchLines: QueryList<AjfFbBranchLine>;\n  @ViewChildren(AjfFbNodeEntry, {read: ElementRef}) childEntries: QueryList<ElementRef>;\n\n  private _hasContent = false;\n  get hasContent(): boolean { return this._hasContent; }\n\n  private _isFirst = false;\n  get isFirst(): boolean { return this._isFirst; }\n  @Input() set isFirst(isFirst: boolean) { this._isFirst = isFirst; }\n\n  private _isNodeEntry = false;\n  get isNodeEntry(): boolean { return this._isNodeEntry; }\n\n  private _nodeEntry: AjfFormBuilderNode;\n  get nodeEntry(): AjfFormBuilderNode { return this._nodeEntry; }\n  @Input() set nodeEntry(nodeEntry: AjfFormBuilderNode) {\n    this._nodeEntry = nodeEntry;\n    if (nodeEntry != null && (<AjfFormBuilderNodeEntry>nodeEntry).node !== void 0) {\n      const ne = <AjfFormBuilderNodeEntry>nodeEntry;\n      this._isNodeEntry = true;\n      const node = ne.node;\n      this._hasContent = node != null && isContainerNode(node);\n    } else {\n      this._isNodeEntry = false;\n      this._hasContent = false;\n    }\n  }\n\n  private _level = 0;\n  get level(): number { return this._level; }\n  @Input() set level(value: number) { this._level = value; }\n\n  get realNodeEntry(): AjfFormBuilderNodeEntry {\n    return this._nodeEntry as AjfFormBuilderNodeEntry;\n  }\n\n  private _branchColors: string[] = branchColors.slice(0);\n  get branchColors(): string[] { return this._branchColors; }\n\n  private _dropZones: string[] = ['fbdz-node'];\n  get dropZones(): string[] { return this._dropZones; }\n\n  private _slideDropZones: string[] = ['fbdz-slide'];\n  get slideDropZones(): string[] { return this._slideDropZones; }\n\n  private _originOffset = 0;\n  get originOffset(): number { return this._originOffset; }\n  @Input() set originOffset(originOffset: number) {\n    this._originOffset = originOffset;\n    this._originLeftMargin = `${this._originOffset * 4}px`;\n  }\n  private _originLeftMargin = '0';\n  get originLeftMargin(): string { return this._originLeftMargin; }\n\n  private _firstBranchColor = branchColors[0];\n  get firstBranchColor(): string { return this._firstBranchColor; }\n  @Input() set firstBranchColor(firstBranchColor: string) {\n    const idx = branchColors.indexOf(firstBranchColor);\n    if (idx > 0) {\n      this._firstBranchColor = firstBranchColor;\n      this._branchColors = branchColors.slice(idx).concat(branchColors.slice(0, idx));\n    } else {\n      this._firstBranchColor = branchColors[0];\n      this._branchColors = branchColors.slice(0);\n    }\n  }\n\n  private _currentEditedNode: Observable<AjfFormBuilderNodeEntry | null>;\n  get currentEditedNode(): Observable<AjfFormBuilderNodeEntry | null> {\n    return this._currentEditedNode;\n  }\n\n  private _branchLinesSubscription: Subscription = Subscription.EMPTY;\n  private _childEntriesSubscription: Subscription = Subscription.EMPTY;\n\n  constructor(private _service: AjfFormBuilderService) {\n    this._currentEditedNode = this._service.editedNodeEntry;\n  }\n\n  onResize(): void {\n  }\n\n  edit(): void {\n    if (this.nodeEntry == null || !this.isNodeEntry) { return; }\n    this._service.editNodeEntry(<AjfFormBuilderNodeEntry>this.nodeEntry);\n  }\n\n  delete(): void {\n    if (this.nodeEntry == null || !this.isNodeEntry) { return; }\n    this._service.deleteNodeEntry(<AjfFormBuilderNodeEntry>this.nodeEntry);\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this._updateBranchHeights());\n    this._childEntriesSubscription = this.childEntries.changes\n      .subscribe(() => {\n        this._updateBranchHeights();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this._branchLinesSubscription.unsubscribe();\n    this._childEntriesSubscription.unsubscribe();\n  }\n\n  onDropSuccess(evt: CdkDragDrop<AjfFormBuilderNodeTypeEntry>, content = false): void {\n    const dd = evt.item.data as AjfFormBuilderNodeTypeEntry;\n    if (this._nodeEntry == null) {\n      this._service.insertNode(dd, null as any, 0, content);\n      return;\n    }\n    if (dd.nodeType !== void 0 && (!this.isNodeEntry || (this.isNodeEntry && content))) {\n      const emptySlot = content ?\n        {parent: (<AjfFormBuilderNodeEntry>this.nodeEntry).node, parentNode: 0} :\n        <AjfFormBuilderEmptySlot>this._nodeEntry;\n      this._service.insertNode(\n        <AjfFormBuilderNodeTypeEntry>dd,\n        emptySlot.parent,\n        emptySlot.parentNode,\n        content\n      );\n    }\n  }\n\n  disableSlideDropPredicate(item: CdkDrag<AjfFormBuilderNodeTypeEntry>): boolean {\n    return !item.data.isSlide;\n  }\n\n  emptyAreaDropPredicate(): (item: CdkDrag, _drop: CdkDropList) => boolean {\n    return (item: CdkDrag, _drop: CdkDropList): boolean => {\n      if (this._level > 0) {\n        return !item.data.isSlide;\n      }\n      return item.data.isSlide || false;\n    };\n  }\n\n  private _updateBranchHeights(): void {\n    if (\n      this.nodeEntry == null || !this.isNodeEntry\n      || this.branchLines == null || this.childEntries == null) { return; }\n    const nodeEntry = <AjfFormBuilderNodeEntry>this.nodeEntry;\n    const branchLines: AjfFbBranchLine[] = this.branchLines.toArray();\n    const sliceIdx = nodeEntry.content != null ? nodeEntry.content.length : 0;\n    const childEntries: ElementRef[] = this.childEntries.toArray().slice(sliceIdx);\n\n    if (branchLines.length != childEntries.length) { return; }\n\n    branchLines.forEach((bl: AjfFbBranchLine, idx: number) => {\n      const ce: ElementRef  = childEntries[idx];\n      bl.height = ce.nativeElement.offsetTop;\n    });\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AjfField} from '@ajf/core/forms';\n\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  selector: 'ajf-fb-validation-condition-editor-dialog',\n  templateUrl: 'validation-condition-editor-dialog.html',\n  styleUrls: ['validation-condition-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbValidationConditionEditorDialog {\n  @ViewChild(AjfFbConditionEditor, {static: false}) editor: AjfFbConditionEditor;\n\n  private _fields: Observable<AjfField[]>;\n  get fields(): Observable<AjfField[]> { return this._fields; }\n\n  condition: string;\n  errorMessage: string;\n\n  constructor(\n    service: AjfFormBuilderService,\n    public dialogRef: MatDialogRef<AjfFbValidationConditionEditorDialog>\n  ) {\n    this._fields = service.flatFields.pipe(\n      map((fields: AjfField[]) => fields.sort((f1, f2) => f1.name.localeCompare(f2.name)))\n    );\n  }\n\n  saveCondition(): void {\n    if (this.editor == null) { return; }\n    const newValue = this.editor.editedValue;\n    this.dialogRef.close({condition: newValue, errorMessage: this.errorMessage});\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AjfField} from '@ajf/core/forms';\n\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilderService} from './form-builder-service';\n\n\n@Component({\n  selector: 'ajf-fb-warning-condition-editor-dialog',\n  templateUrl: 'warning-condition-editor-dialog.html',\n  styleUrls: ['warning-condition-editor-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbWarningConditionEditorDialog {\n  @ViewChild(AjfFbConditionEditor, {static: false}) editor: AjfFbConditionEditor;\n\n  private _fields: Observable<AjfField[]>;\n  get fields(): Observable<AjfField[]> { return this._fields; }\n\n  condition: string;\n  warningMessage: string;\n\n  constructor(\n    service: AjfFormBuilderService,\n    public dialogRef: MatDialogRef<AjfFbWarningConditionEditorDialog>\n  ) {\n    this._fields = service.flatFields.pipe(\n      map((fields: AjfField[]) => fields.sort((f1, f2) => f1.name.localeCompare(f2.name)))\n    );\n  }\n\n  saveCondition(): void {\n    if (this.editor == null) { return; }\n    const newValue = this.editor.editedValue;\n    this.dialogRef.close({condition: newValue, warningMessage: this.warningMessage});\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfChoicesOrigin, AjfField, AjfFieldWithChoices, AjfNode, AjfNumberField,\n  AjfRepeatingContainerNode, isField, isFieldWithChoices, isNumberField,\n  isRepeatingContainerNode\n} from '@ajf/core/forms';\nimport {AjfCondition, alwaysCondition, neverCondition} from '@ajf/core/models';\nimport {\n  ChangeDetectionStrategy, Component, EventEmitter, OnDestroy, ViewEncapsulation\n} from '@angular/core';\nimport {AbstractControl, FormBuilder, FormGroup, ValidatorFn, Validators} from '@angular/forms';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {Observable, Subscription} from 'rxjs';\nimport {\n  distinctUntilChanged, filter, map, publishReplay, refCount, withLatestFrom\n} from 'rxjs/operators';\n\nimport {AjfFbConditionEditorDialog} from './condition-editor-dialog';\nimport {AjfFormBuilderNodeEntry, AjfFormBuilderService} from './form-builder-service';\nimport {AjfFbValidationConditionEditorDialog} from './validation-condition-editor-dialog';\nimport {AjfFbWarningConditionEditorDialog} from './warning-condition-editor-dialog';\n\n\nfunction checkRepsValidity(c: AbstractControl): {[key: string]: any} | null {\n  const minReps = c.value.minReps;\n  const maxReps = c.value.maxReps;\n  if (minReps != null && maxReps != null && minReps > maxReps) {\n    return {\n      reps: 'Min repetions cannot be greater than max repetitions'\n    };\n  }\n  return null;\n}\n\nfunction checkValueLimitsValidity(c: AbstractControl): {[key: string]: any} | null {\n  const minValue = c.value.minValue;\n  const maxValue = c.value.maxValue;\n  if (minValue != null && maxValue != null && minValue > maxValue) {\n    return {\n      valueLimit: 'Min value cannot be greater than max value'\n    };\n  }\n  return null;\n}\n\nfunction checkDigitsValidity(c: AbstractControl): {[key: string]: any} | null {\n  const minDigits = c.value.minDigits;\n  const maxDigits = c.value.maxDigits;\n  if (minDigits != null && maxDigits != null && minDigits > maxDigits) {\n    return {\n      digits: 'Min digits cannot be greater than max digits'\n    };\n  }\n  return null;\n}\n\nexport interface ValidationCondition {\n  condition: string;\n  errorMessage: string;\n}\n\nexport interface WarningCondition {\n  condition: string;\n  warningMessage: string;\n}\n\n\n@Component({\n  selector: 'ajf-fb-node-properties',\n  templateUrl: 'node-properties.html',\n  styleUrls: ['node-properties.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbNodeProperties implements OnDestroy {\n  private _fieldSizes: {label: string, value: string}[] = [\n    {label: 'Normal', value: 'normal'},\n    {label: 'Small', value: 'small'},\n    {label: 'Smaller', value: 'smaller'},\n    {label: 'Tiny', value: 'tiny'},\n    {label: 'Mini', value: 'mini'}\n  ];\n  get fieldSizes(): {label: string, value: string}[] { return this._fieldSizes; }\n\n  private _nodeEntry: Observable<AjfFormBuilderNodeEntry | null>;\n  get nodeEntry(): Observable<AjfFormBuilderNodeEntry | null> { return this._nodeEntry; }\n\n  private _choicesOrigins: AjfChoicesOrigin<any>[] = [];\n  get choicesOrigins(): AjfChoicesOrigin<any>[] {\n    return this._choicesOrigins;\n  }\n\n  private _enabled: Observable<boolean>;\n  get enabled(): Observable<boolean> { return this._enabled; }\n\n  private _propertiesForm: Observable<FormGroup>;\n  get propertiesForm(): Observable<FormGroup> { return this._propertiesForm; }\n\n  private _hasChoices: Observable<boolean>;\n  get hasChoices(): Observable<boolean> { return this._hasChoices; }\n\n  private _curVisibility: string | null;\n  get curVisibility(): string | null { return this._curVisibility; }\n\n  private _curFormulaReps: string | null;\n  get curFormulaReps(): string | null { return this._curFormulaReps; }\n\n  private _curChoicesFilter: string;\n  get curChoicesFilter(): string { return this._curChoicesFilter; }\n\n  private _curForceValue: string | null;\n  get curForceValue(): string | null { return this._curForceValue; }\n\n  private _curFormula: string | null;\n  get curFormula(): string | null { return this._curFormula; }\n\n  private _conditionalBranches: string[] = [];\n  get conditionalBranches(): string[] { return this._conditionalBranches; }\n\n  private _validationConditions: ValidationCondition[] = [];\n  get validationConditions(): ValidationCondition[] { return this._validationConditions; }\n\n  private _warningConditions: WarningCondition[] = [];\n  get warningConditions(): WarningCondition[] { return this._warningConditions; }\n\n  private _nextSlideCondition: string;\n  get nextSlideCondition(): string { return this._nextSlideCondition; }\n\n  private _triggerConditions: string[];\n  get triggerConditions(): string[] { return this._triggerConditions; }\n\n  isRepeatingContainerNode: (nodeEntry: AjfFormBuilderNodeEntry|null) => boolean = (nodeEntry) => {\n    return nodeEntry != null && isRepeatingContainerNode(nodeEntry.node);\n  }\n\n  private _visibilitySub: Subscription = Subscription.EMPTY;\n  private _conditionalBranchesSub = Subscription.EMPTY;\n  private _formulaRepsSub = Subscription.EMPTY;\n  private _choicesFilterSub = Subscription.EMPTY;\n  private _formulaSub = Subscription.EMPTY;\n  private _forceValueSub = Subscription.EMPTY;\n  private _validationConditionsSub = Subscription.EMPTY;\n  private _warningConditionsSub = Subscription.EMPTY;\n  private _nextSlideConditionSub = Subscription.EMPTY;\n  private _choicesOriginsSub = Subscription.EMPTY;\n  private _triggerConditionsSub = Subscription.EMPTY;\n\n  private _editConditionDialog: MatDialogRef<AjfFbConditionEditorDialog> | null;\n  private _editConditionDialogSub: Subscription = Subscription.EMPTY;\n  private _editValidationConditionDialog: MatDialogRef<AjfFbValidationConditionEditorDialog> | null;\n  private _editValidationConditionDialogSub: Subscription = Subscription.EMPTY;\n  private _editWarningConditionDialog: MatDialogRef<AjfFbWarningConditionEditorDialog> | null;\n  private _editWarningConditionDialogSub: Subscription = Subscription.EMPTY;\n\n  private _editVisibilityEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editVisibilitySub = Subscription.EMPTY;\n\n  private _editConditionalBranchEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editConditionalBranchSub = Subscription.EMPTY;\n\n  private _editFormulaRepsEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editFormulaRepsSub = Subscription.EMPTY;\n\n  private _editChoicesFilterEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editChoicesFilterSub = Subscription.EMPTY;\n\n  private _editFormulaEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editFormulaSub = Subscription.EMPTY;\n\n  private _editForceValueEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editForceValueSub = Subscription.EMPTY;\n\n  private _editValidationConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editValidationConditionSub = Subscription.EMPTY;\n\n  private _addValidationConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _addValidationConditionSub = Subscription.EMPTY;\n\n  private _removeValidationConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _removeValidationConditionSub = Subscription.EMPTY;\n\n  private _editWarningConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editWarningConditionSub = Subscription.EMPTY;\n\n  private _addWarningConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _addWarningConditionSub = Subscription.EMPTY;\n\n  private _removeWarningConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _removeWarningConditionSub = Subscription.EMPTY;\n\n  private _editNextSlideConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _editNextSlideConditionSub = Subscription.EMPTY;\n\n  private _editTriggerConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _editTriggerConditionSub = Subscription.EMPTY;\n\n  private _addTriggerConditionEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _addTriggerConditionSub = Subscription.EMPTY;\n\n  private _removeTriggerConditionEvt: EventEmitter<number> = new EventEmitter<number>();\n  private _removeTriggerConditionSub = Subscription.EMPTY;\n\n  private _saveEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _saveSub = Subscription.EMPTY;\n\n  constructor(\n    private _service: AjfFormBuilderService,\n    private _dialog: MatDialog,\n    private _fb: FormBuilder\n  ) {\n    this._nodeEntry = _service.editedNodeEntry;\n    this._choicesOriginsSub = _service.choicesOrigins\n      .subscribe((c) => this._choicesOrigins = c || []);\n\n    this._enabled = this._nodeEntry.pipe(map((n) => n != null));\n\n    this._initForm();\n    this._initVisibilityEdit();\n    this._initConditionalBranchEdit();\n    this._initFormulaRepsEdit();\n    this._initChoicesFilterEdit();\n    this._initFormulaEdit();\n    this._initForceValueEdit();\n    this._initValidationConditionEdit();\n    this._initAddValidationCondition();\n    this._initRemoveValidationCondition();\n    this._initWarningConditionEdit();\n    this._initAddWarningCondition();\n    this._initRemoveWarningCondition();\n    this._initNextSlideConditionEdit();\n    this._initTriggerConditionEdit();\n    this._initAddTriggerCondition();\n    this._initRemoveTriggerCondition();\n    this._initSave();\n  }\n\n  editVisibility(): void {\n    this._editVisibilityEvt.emit();\n  }\n\n  editConditionalBranch(idx: number): void {\n    if (idx < 0 || idx >= this._conditionalBranches.length) { return; }\n    this._editConditionalBranchEvt.emit(idx);\n  }\n\n  editFormulaReps(): void {\n    this._editFormulaRepsEvt.emit();\n  }\n\n  editChoicesFilter(): void {\n    this._editChoicesFilterEvt.emit();\n  }\n\n  editFormula(): void {\n    this._editFormulaEvt.emit();\n  }\n\n  editForceValue(): void {\n    this._editForceValueEvt.emit();\n  }\n\n  editValidationCondition(idx: number): void {\n    if (idx < 0 || idx >= this._validationConditions.length) { return; }\n    this._editValidationConditionEvt.emit(idx);\n  }\n\n  addValidationCondition(): void {\n    this._addValidationConditionEvt.emit();\n  }\n\n  removeValidationCondition(idx: number): void {\n    if (idx < 0 || idx >= this._validationConditions.length) { return; }\n    this._removeValidationConditionEvt.emit(idx);\n  }\n\n  editWarningCondition(idx: number): void {\n    if (idx < 0 || idx >= this._warningConditions.length) { return; }\n    this._editWarningConditionEvt.emit(idx);\n  }\n\n  addWarningCondition(): void {\n    this._addWarningConditionEvt.emit();\n  }\n\n  removeWarningCondition(idx: number): void {\n    if (idx < 0 || idx >= this._warningConditions.length) { return; }\n    this._removeWarningConditionEvt.emit(idx);\n  }\n\n  editNextSlideCondition(): void {\n    this._editNextSlideConditionEvt.emit();\n  }\n\n  editTriggerCondition(idx: number): void {\n    if (idx < 0 || idx >= this._triggerConditions.length) { return; }\n    this._editTriggerConditionEvt.emit(idx);\n  }\n\n  addTriggerCondition(): void {\n    this._addTriggerConditionEvt.emit();\n  }\n\n  removeTriggerCondition(idx: number): void {\n    if (idx < 0 || idx >= this._triggerConditions.length) { return; }\n    this._removeTriggerConditionEvt.emit(idx);\n  }\n\n  isField(nodeEntry: AjfFormBuilderNodeEntry|null): boolean {\n    return nodeEntry != null && isField(nodeEntry.node);\n  }\n\n  isNumericField(node: AjfNode): boolean {\n    return isField(node) && isNumberField(node as AjfField);\n  }\n\n  isFieldWithChoices(node: AjfNode): boolean {\n    return isField(node) && isFieldWithChoices(node as AjfField);\n  }\n\n  save(): void {\n    this._saveEvt.emit();\n  }\n\n  cancel(): void {\n    this._service.cancelNodeEntryEdit();\n  }\n\n  ngOnDestroy(): void {\n    this._choicesOriginsSub.unsubscribe();\n\n    this._visibilitySub.unsubscribe();\n    this._formulaRepsSub.unsubscribe();\n    this._choicesFilterSub.unsubscribe();\n    this._formulaSub.unsubscribe();\n    this._forceValueSub.unsubscribe();\n    this._validationConditionsSub.unsubscribe();\n    this._warningConditionsSub.unsubscribe();\n    this._triggerConditionsSub.unsubscribe();\n\n    this._editConditionDialogSub.unsubscribe();\n    this._editValidationConditionDialogSub.unsubscribe();\n    this._editWarningConditionDialogSub.unsubscribe();\n\n    this._editChoicesFilterSub.unsubscribe();\n    this._editConditionalBranchSub.unsubscribe();\n    this._editVisibilitySub.unsubscribe();\n    this._editFormulaRepsSub.unsubscribe();\n    this._editFormulaSub.unsubscribe();\n    this._editForceValueSub.unsubscribe();\n    this._editValidationConditionSub.unsubscribe();\n    this._editWarningConditionSub.unsubscribe();\n    this._nextSlideConditionSub.unsubscribe();\n\n    this._addTriggerConditionSub.unsubscribe();\n    this._addValidationConditionSub.unsubscribe();\n    this._addWarningConditionSub.unsubscribe();\n    this._editNextSlideConditionSub.unsubscribe();\n    this._editTriggerConditionSub.unsubscribe();\n    this._removeTriggerConditionSub.unsubscribe();\n    this._removeValidationConditionSub.unsubscribe();\n    this._removeWarningConditionSub.unsubscribe();\n\n    this._saveSub.unsubscribe();\n  }\n\n  private _initSave(): void {\n    this._saveSub = this._saveEvt.pipe(withLatestFrom(this.propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        const fg = r[1];\n        const val = {...fg.value,\n          conditionalBranches: this._conditionalBranches\n        };\n        this._service.saveNodeEntry(val);\n      });\n  }\n\n  private _initForm(): void {\n    this._propertiesForm = this._nodeEntry.pipe(\n      filter((n) => n != null),\n      map((n) => {\n        if (this._visibilitySub != null) { this._visibilitySub.unsubscribe(); }\n        if (this._conditionalBranchesSub != null) { this._conditionalBranchesSub.unsubscribe(); }\n        n = n!;\n\n        const visibility = n.node.visibility != null ?\n          n.node.visibility.condition : null;\n        const visibilityOpt = n.node.visibility != null ?\n          this._guessVisibilityOpt(n.node.visibility) : null;\n        let controls: any = {\n          name: [n.node.name, Validators.required],\n          label: n.node.label,\n          visibilityOpt: [visibilityOpt, Validators.required],\n          visibility: [visibility, Validators.required],\n          conditionalBranchesNum: n.node.conditionalBranches.length\n        };\n        const validators: ValidatorFn[] = [];\n\n        if (isRepeatingContainerNode(n.node)) {\n          const rn = <AjfRepeatingContainerNode>n.node;\n\n          const formulaReps = rn.formulaReps != null ? rn.formulaReps.formula : null;\n\n          controls.formulaReps = [formulaReps, Validators.required];\n          controls.minReps = rn.minReps;\n          controls.maxReps = rn.maxReps;\n\n          this._curFormulaReps = formulaReps;\n\n          validators.push(checkRepsValidity);\n        }\n\n        if (this.isField(n)) {\n          const field = <AjfField>n.node;\n\n          let forceValue: string | null = null;\n          let notEmpty: boolean = false;\n          let validationConditions: ValidationCondition[] = [];\n          if (field.validation != null) {\n            if (field.validation.forceValue != null) {\n              forceValue = field.validation.forceValue.condition;\n            }\n            notEmpty = field.validation.notEmpty != null;\n            validationConditions = (field.validation.conditions || [])\n              .map(c => {\n                return {\n                  condition: c.condition,\n                  errorMessage: c.errorMessage\n                };\n              });\n          }\n\n          let notEmptyW: boolean = false;\n          let warningConditions: WarningCondition[] = [];\n          if (field.warning != null) {\n            notEmptyW = field.warning.notEmpty != null;\n            warningConditions = (field.warning.conditions || [])\n              .map(w => {\n                return {\n                  condition: w.condition,\n                  warningMessage: w.warningMessage\n                };\n              });\n          }\n          const formula = field.formula != null ? field.formula.formula : null;\n\n          controls.description = field.description;\n          controls.defaultValue = field.defaultValue;\n          controls.size = field.size;\n          controls.formula = formula;\n          controls.forceValue = forceValue;\n          controls.notEmpty = notEmpty;\n          controls.validationConditions = [validationConditions, []];\n          controls.notEmptyWarning = notEmptyW;\n          controls.warningConditions = [warningConditions, []];\n          controls.nextSlideCondition = [field.nextSlideCondition];\n\n          this._curForceValue = forceValue;\n          this._curFormula = formula;\n          this._validationConditions = validationConditions;\n          this._warningConditions = warningConditions;\n        }\n\n        if (this.isNumericField(n.node)) {\n          const numField = <AjfNumberField>n.node;\n\n          let minValue: any;\n          let maxValue: any;\n          let minDigits: any;\n          let maxDigits: any;\n          if (numField.validation != null) {\n            if (numField.validation.minValue != null) {\n              minValue = (numField.validation.minValue.condition || '').replace('$value >= ', '');\n            }\n            if (numField.validation.maxValue != null) {\n              maxValue = (numField.validation.maxValue.condition || '').replace('$value <= ', '');\n            }\n            if (numField.validation.minDigits != null) {\n              minDigits = (numField.validation.minDigits.condition || '')\n                .replace('$value.toString().length >= ', '');\n            }\n            if (numField.validation.maxDigits != null) {\n              maxDigits = (numField.validation.maxDigits.condition || '')\n                .replace('$value.toString().length <= ', '');\n            }\n          }\n\n          controls.minValue = minValue;\n          controls.maxValue = maxValue;\n          controls.minDigits = minDigits;\n          controls.maxDigits = maxDigits;\n\n          validators.push(checkValueLimitsValidity);\n          validators.push(checkDigitsValidity);\n        }\n\n        if (this.isFieldWithChoices(n.node)) {\n          const fieldWithChoices = <AjfFieldWithChoices<any>>n.node;\n\n          let triggerConditions: string[] = (fieldWithChoices.triggerConditions || [])\n            .map((c) => c.condition);\n\n          controls.choicesOriginRef = (fieldWithChoices as any).choicesOriginRef;\n          controls.choicesFilter = fieldWithChoices.choicesFilter != null ?\n            fieldWithChoices.choicesFilter.formula : null;\n          controls.forceExpanded = fieldWithChoices.forceExpanded;\n          controls.forceNarrow = fieldWithChoices.forceNarrow;\n          controls.triggerConditions = triggerConditions;\n\n          this._triggerConditions = triggerConditions;\n        }\n\n        const fg = this._fb.group(controls);\n        fg.setValidators(validators);\n\n        this._conditionalBranches = n.node.conditionalBranches.map(c => c.condition);\n        this._curVisibility = n.node.visibility != null ? n.node.visibility.condition : null;\n\n        this._handleConditionalBranchesChange(fg);\n        this._handleVisibilityChange(fg);\n        this._handleFormulaRepsChange(fg);\n        this._handleChoicesFilterChange(fg);\n        this._handleFormulaChange(fg);\n        this._handleForceValueChange(fg);\n        this._handleValidationCondtionsChange(fg);\n        this._handleWarningCondtionsChange(fg);\n        this._handleNextSlideConditionChange(fg);\n        this._handleTriggerCondtionsChange(fg);\n\n        return fg;\n      }),\n      publishReplay(1),\n      refCount()\n    );\n  }\n\n  private _destroyConditionDialog(): void {\n    if (this._editConditionDialogSub != null) {\n      this._editConditionDialogSub.unsubscribe();\n      this._editConditionDialogSub = Subscription.EMPTY;\n    }\n    if (this._editConditionDialog != null) {\n      this._editConditionDialog.close();\n      this._editConditionDialog = null;\n    }\n  }\n\n  private _destroyValidationConditionDialog(): void {\n    if (this._editValidationConditionDialogSub != null) {\n      this._editValidationConditionDialogSub.unsubscribe();\n      this._editValidationConditionDialogSub = Subscription.EMPTY;\n    }\n    if (this._editValidationConditionDialog != null) {\n      this._editValidationConditionDialog.close();\n      this._editValidationConditionDialog = null;\n    }\n  }\n\n  private _destroyWarningConditionDialog(): void {\n    if (this._editWarningConditionDialogSub != null) {\n      this._editWarningConditionDialogSub.unsubscribe();\n      this._editWarningConditionDialogSub = Subscription.EMPTY;\n    }\n    if (this._editWarningConditionDialog != null) {\n      this._editWarningConditionDialog.close();\n      this._editWarningConditionDialog = null;\n    }\n  }\n\n  private _initRemoveTriggerCondition(): void {\n    this._removeTriggerConditionSub = (<Observable<number>>this._removeTriggerConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['triggerConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        if (vcIdx < 0 || vcIdx >= vcs.length) { return; }\n        vcs.splice(vcIdx, 1);\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initAddTriggerCondition(): void {\n    this._addTriggerConditionSub = (<Observable<void>>this._addTriggerConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['triggerConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        vcs.push('');\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initTriggerConditionEdit(): void {\n    this._editTriggerConditionSub = (<Observable<number>>this._editTriggerConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        this._destroyConditionDialog();\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (vcIdx < 0 || vcIdx >= this._triggerConditions.length || fg == null) { return; }\n        this._editConditionDialog = this._dialog\n          .open(AjfFbConditionEditorDialog);\n        const cmp = this._editConditionDialog.componentInstance;\n        cmp.condition = this._triggerConditions[vcIdx];\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              this._triggerConditions[vcIdx] = cond;\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initRemoveWarningCondition(): void {\n    this._removeWarningConditionSub = (<Observable<number>>this._removeWarningConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['warningConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        if (vcIdx < 0 || vcIdx >= vcs.length) { return; }\n        vcs.splice(vcIdx, 1);\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initAddWarningCondition(): void {\n    this._addWarningConditionSub = (<Observable<void>>this._addWarningConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['warningConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        vcs.push({condition: '', errorMessage: ''});\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initWarningConditionEdit(): void {\n    this._editWarningConditionSub = (<Observable<number>>this._editWarningConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        this._destroyWarningConditionDialog();\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (vcIdx < 0 || vcIdx >= this._warningConditions.length || fg == null) { return; }\n        this._editWarningConditionDialog = this._dialog\n          .open(AjfFbWarningConditionEditorDialog);\n        const cmp = this._editWarningConditionDialog.componentInstance;\n        const w = this._warningConditions[vcIdx];\n        cmp.condition = w.condition;\n        cmp.warningMessage = w.warningMessage;\n        this._editWarningConditionDialogSub = this._editWarningConditionDialog.afterClosed()\n          .subscribe((cond: WarningCondition) => {\n            if (cond !== void 0) {\n              this._warningConditions[vcIdx] = cond;\n            }\n            this._editWarningConditionDialogSub.unsubscribe();\n            this._editWarningConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initRemoveValidationCondition(): void {\n    this._removeValidationConditionSub = (<Observable<number>>this._removeValidationConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['validationConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        if (vcIdx < 0 || vcIdx >= vcs.length) { return; }\n        vcs.splice(vcIdx, 1);\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initAddValidationCondition(): void {\n    this._addValidationConditionSub = (<Observable<void>>this._addValidationConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['validationConditions'];\n        let vcs = (ctrl.value || []).slice(0);\n        vcs.push({condition: '', errorMessage: ''});\n        ctrl.setValue(vcs);\n      });\n  }\n\n  private _initValidationConditionEdit(): void {\n    this._editValidationConditionSub = (<Observable<number>>this._editValidationConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        this._destroyValidationConditionDialog();\n        const vcIdx = r[0];\n        const fg = r[1];\n        if (vcIdx < 0 || vcIdx >= this._validationConditions.length || fg == null) { return; }\n        this._editValidationConditionDialog = this._dialog\n          .open(AjfFbValidationConditionEditorDialog);\n        const cmp = this._editValidationConditionDialog.componentInstance;\n        const v = this._validationConditions[vcIdx];\n        cmp.condition = v.condition;\n        cmp.errorMessage = v.errorMessage;\n        this._editValidationConditionDialogSub = this._editValidationConditionDialog.afterClosed()\n          .subscribe((cond: ValidationCondition) => {\n            if (cond !== void 0) {\n              this._validationConditions[vcIdx] = cond;\n            }\n            this._editValidationConditionDialogSub.unsubscribe();\n            this._editValidationConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initForceValueEdit(): void {\n    this._editForceValueSub = (<Observable<void>>this._editForceValueEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['forceValue'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initNextSlideConditionEdit(): void {\n    this._editNextSlideConditionSub = (<Observable<void>>this._editNextSlideConditionEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['nextSlideCondition'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initFormulaEdit(): void {\n    this._editFormulaSub = (<Observable<void>>this._editFormulaEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['formula'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initFormulaRepsEdit(): void {\n    this._editFormulaRepsSub = (<Observable<void>>this._editFormulaRepsEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['formulaReps'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initChoicesFilterEdit(): void {\n    this._editChoicesFilterSub = (<Observable<void>>this._editChoicesFilterEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['choicesFilter'];\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = ctrl.value;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initConditionalBranchEdit(): void {\n    this._editConditionalBranchSub = (<Observable<number>>this._editConditionalBranchEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [number, FormGroup]) => {\n        this._destroyConditionDialog();\n        const cbIdx = r[0];\n        const fg = r[1];\n        if (cbIdx < 0 || cbIdx >= this._conditionalBranches.length || fg == null) { return; }\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = this._conditionalBranches[cbIdx];\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              this._conditionalBranches[cbIdx] = cond;\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _initVisibilityEdit(): void {\n    this._editVisibilitySub = (<Observable<void>>this._editVisibilityEvt)\n      .pipe(withLatestFrom(this._propertiesForm))\n      .subscribe((r: [void, FormGroup]) => {\n        this._destroyConditionDialog();\n        const fg = r[1];\n        if (fg == null) { return; }\n        const ctrl = fg.controls['visibility'];\n        const condition = ctrl.value;\n        this._editConditionDialog = this._dialog.open(AjfFbConditionEditorDialog);\n        this._editConditionDialog.componentInstance.condition = condition;\n        this._editConditionDialogSub = this._editConditionDialog.afterClosed()\n          .subscribe((cond: string) => {\n            if (cond !== void 0) {\n              ctrl.setValue(cond);\n            }\n            this._editConditionDialogSub.unsubscribe();\n            this._editConditionDialogSub = Subscription.EMPTY;\n          });\n      });\n  }\n\n  private _handleTriggerCondtionsChange(fg: FormGroup): void {\n    this._triggerConditionsSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) =>\n        JSON.stringify(v1.triggerConditions) === JSON.stringify(v2.triggerConditions)))\n      .subscribe((v: any) => {\n        this._triggerConditions = v.triggerConditions;\n      });\n  }\n\n  private _handleWarningCondtionsChange(fg: FormGroup): void {\n    this._warningConditionsSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) =>\n        JSON.stringify(v1.warningConditions) === JSON.stringify(v2.warningConditions)))\n      .subscribe((v: any) => {\n        this._warningConditions = v.warningConditions;\n      });\n  }\n\n  private _handleValidationCondtionsChange(fg: FormGroup): void {\n    this._validationConditionsSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) =>\n        JSON.stringify(v1.validationConditions) === JSON.stringify(v2.validationConditions)))\n      .subscribe((v: any) => {\n        this._validationConditions = v.validationConditions;\n      });\n  }\n\n  private _handleForceValueChange(fg: FormGroup): void {\n    this._forceValueSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.forceValue === v2.forceValue))\n      .subscribe((v: any) => {\n        this._curForceValue = v.forceValue;\n      });\n  }\n\n  private _handleNextSlideConditionChange(fg: FormGroup): void {\n    this._formulaSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.nextSlideCondition === v2.nextSlideCondition))\n      .subscribe((v: any) => {\n        this._nextSlideCondition = v.nextSlideCondition;\n      });\n  }\n\n  private _handleFormulaChange(fg: FormGroup): void {\n    this._formulaSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.formula === v2.formula))\n      .subscribe((v: any) => {\n        this._curFormula = v.formula;\n      });\n  }\n\n  private _handleFormulaRepsChange(fg: FormGroup): void {\n    this._formulaRepsSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.formulaReps === v2.formulaReps))\n      .subscribe((v: any) => {\n        this._curFormulaReps = v.formulaReps;\n      });\n  }\n\n  private _handleChoicesFilterChange(fg: FormGroup): void {\n    this._choicesFilterSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.choicesFilter === v2.choicesFilter))\n      .subscribe((v: any) => {\n        this._curChoicesFilter = v.choicesFilter;\n      });\n  }\n\n  private _handleConditionalBranchesChange(fg: FormGroup): void {\n    this._conditionalBranchesSub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) =>\n          v1.conditionalBranchesNum === v2.conditionalBranchesNum))\n      .subscribe((v: any) => {\n        const cbNum: number = v.conditionalBranchesNum;\n        const curCbNum = this._conditionalBranches.length;\n        if (curCbNum < cbNum) {\n          let newCbs: string[] = [];\n          for (let i = curCbNum ; i < cbNum ; i++) {\n            newCbs.push(alwaysCondition().condition);\n          }\n          this._conditionalBranches = this._conditionalBranches.concat(newCbs);\n        } else if (curCbNum > cbNum) {\n          this._conditionalBranches.splice(0, curCbNum - cbNum);\n        }\n      });\n  }\n\n  private _handleVisibilityChange(fg: FormGroup): void {\n    this._visibilitySub = fg.valueChanges\n      .pipe(distinctUntilChanged((v1, v2) => v1.visibilityOpt === v2.visibilityOpt))\n      .subscribe((v) => {\n        const visibilityOpt = v.visibilityOpt;\n        let newCondition: string | null;\n        switch (visibilityOpt) {\n          case 'always':\n            newCondition = alwaysCondition().condition;\n            break;\n          case 'never':\n            newCondition = neverCondition().condition;\n            break;\n          default:\n          newCondition = null;\n        }\n        this._curVisibility = newCondition;\n        fg.controls['visibility'].setValue(newCondition);\n      });\n  }\n\n  private _guessVisibilityOpt(condition: AjfCondition): string {\n    if (condition.condition.localeCompare(alwaysCondition().condition) === 0) {\n      return 'always';\n    }\n    if (condition.condition.localeCompare(neverCondition().condition) === 0) {\n      return 'never';\n    }\n    return 'condition';\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation\n} from '@angular/core';\n\nimport {AjfFormBuilderNodeTypeEntry} from './form-builder-service';\n\n\n@Component({\n  selector: 'ajf-fb-node-type-entry',\n  templateUrl: 'node-type-entry.html',\n  styleUrls: ['node-type-entry.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfFbNodeTypeEntry {\n  private _nodeType: AjfFormBuilderNodeTypeEntry;\n  get nodeType(): AjfFormBuilderNodeTypeEntry { return this._nodeType; }\n  @Input()\n  set nodeType(nodeType: AjfFormBuilderNodeTypeEntry) {\n    this._nodeType = nodeType;\n    this._cdr.markForCheck();\n  }\n\n  constructor(private _cdr: ChangeDetectorRef) { }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\nimport {TranslateModule} from '@ngx-translate/core';\n\nimport {AjfMonacoEditorModule} from '@ajf/material/monaco-editor';\nimport {AjfNodeIconModule} from '@ajf/material/node-icon';\n\nimport {AjfFbBranchLine} from './branch-line';\nimport {AjfFbChoicesOriginEditorDialog} from './choices-origin-editor-dialog';\nimport {AjfFbChoicesOriginEditor} from './choices-origin-editor';\nimport {AjfFbConditionEditorDialog} from './condition-editor-dialog';\nimport {AjfFbConditionEditor} from './condition-editor';\nimport {AjfFormBuilder} from './form-builder';\nimport {AjfFormBuilderService} from './form-builder-service';\nimport {AjfFbNodeEntry} from './node-entry';\nimport {AjfFbNodeProperties} from './node-properties';\nimport {AjfFbNodeTypeEntry} from './node-type-entry';\nimport {AjfFbStringIdentifierDialogComponent} from './string-identifier-dialog';\nimport {AjfFbValidationConditionEditorDialog} from './validation-condition-editor-dialog';\nimport {AjfFbWarningConditionEditorDialog} from './warning-condition-editor-dialog';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatTableModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    TranslateModule,\n    AjfMonacoEditorModule,\n    AjfNodeIconModule,\n  ],\n  declarations: [\n    AjfFbBranchLine,\n    AjfFbChoicesOriginEditorDialog,\n    AjfFbChoicesOriginEditor,\n    AjfFbConditionEditorDialog,\n    AjfFbConditionEditor,\n    AjfFbNodeEntry,\n    AjfFbNodeProperties,\n    AjfFbNodeTypeEntry,\n    AjfFbStringIdentifierDialogComponent,\n    AjfFbValidationConditionEditorDialog,\n    AjfFbWarningConditionEditorDialog,\n    AjfFormBuilder,\n  ],\n  exports: [\n    AjfFormBuilder,\n  ],\n  providers: [\n    AjfFormBuilderService\n  ]\n})\nexport class AjfFormBuilderModule { }\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport * from './form-builder-module';\nexport * from './form-builder-service';\nexport * from './form-builder';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {AjfFbBranchLine as Éµajf_src_material_form_builder_form_builder_a} from './branch-line';\nexport {AjfFbChoicesOriginEditor as Éµajf_src_material_form_builder_form_builder_c} from './choices-origin-editor';\nexport {AjfFbChoicesOriginEditorDialog as Éµajf_src_material_form_builder_form_builder_b} from './choices-origin-editor-dialog';\nexport {AjfFbConditionEditor as Éµajf_src_material_form_builder_form_builder_e} from './condition-editor';\nexport {AjfFbConditionEditorDialog as Éµajf_src_material_form_builder_form_builder_d} from './condition-editor-dialog';\nexport {AjfFbNodeEntry as Éµajf_src_material_form_builder_form_builder_f} from './node-entry';\nexport {AjfFbNodeProperties as Éµajf_src_material_form_builder_form_builder_g} from './node-properties';\nexport {AjfFbNodeTypeEntry as Éµajf_src_material_form_builder_form_builder_h} from './node-type-entry';\nexport {AjfFbStringIdentifierDialogComponent as Éµajf_src_material_form_builder_form_builder_i} from './string-identifier-dialog';\nexport {AjfFbValidationConditionEditorDialog as Éµajf_src_material_form_builder_form_builder_j} from './validation-condition-editor-dialog';\nexport {AjfFbWarningConditionEditorDialog as Éµajf_src_material_form_builder_form_builder_k} from './warning-condition-editor-dialog';"],"names":["Component","ViewEncapsulation","ChangeDetectionStrategy","ElementRef","Renderer2","Input","__extends","BehaviorSubject","DataSource","isChoicesFixedOrigin","isContainerNode","isSlidesNode","AjfNodeType","AjfFieldType","EventEmitter","Subject","createField","createContainerNode","combineLatest","filter","map","createForm","createChoicesFixedOrigin","scan","publishReplay","refCount","withLatestFrom","deepCopy","createCondition","alwaysCondition","isRepeatingContainerNode","createFormula","isField","createValidationGroup","notEmptyValidation","minValidation","maxValidation","minDigitsValidation","maxDigitsValidation","createValidation","createWarningGroup","notEmptyWarning","createWarning","isFieldWithChoices","Injectable","ViewChild","AjfExpressionUtils","AjfValidationService","AjfMonacoEditor","MatDialogRef","MatTableDataSource","ENTER","COMMA","Subscription","shareReplay","ChangeDetectorRef","sample","MatDialog","ViewChildren","isNumberField","Validators","distinctUntilChanged","neverCondition","FormBuilder","NgModule","CommonModule","FormsModule","ReactiveFormsModule","DragDropModule","MatAutocompleteModule","MatButtonModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatTableModule","MatToolbarModule","MatTooltipModule","TranslateModule","AjfMonacoEditorModule","AjfNodeIconModule"],"mappings":"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"}