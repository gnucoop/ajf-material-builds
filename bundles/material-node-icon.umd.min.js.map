{"version":3,"sources":["src/material/material-node-icon.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ajf","material","nodeIcon","ng","common","core","icon","tslib","this","AjfNodeIcon","_super","apply","arguments","__extends","decorators","type","Component","args","selector","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","styles","AjfNodeIconModule","NgModule","imports","CommonModule","MatIconModule","declarations","Object","defineProperty","value"],"mappings":"CAAC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,mBAAoBA,QAAQ,iBAAkBA,QAAQ,0BAA2BA,QAAQ,SAAUA,QAAQ,wBACjL,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,0BAA2B,CAAC,UAAW,kBAAmB,gBAAiB,yBAA0B,QAAS,uBAAwBJ,GAChKA,IAAzBD,EAASA,GAAUO,MAAsBC,IAAMR,EAAOQ,KAAO,GAAIR,EAAOQ,IAAIC,SAAWT,EAAOQ,IAAIC,UAAY,GAAIT,EAAOQ,IAAIC,SAASC,SAAW,IAAKV,EAAOW,GAAGC,OAAQZ,EAAOW,GAAGE,KAAMb,EAAOW,GAAGF,SAASK,KAAMd,EAAOe,MAAOf,EAAOW,GAAGE,KAAKH,UAHnP,CAIEM,MAAM,SAAWd,EAASU,EAAQC,EAAMC,EAAMC,EAAOL,GAAY;;;;;;;;;;;;;;;;;;;;;OAuB/D,IAAIO,EAA6B,SAAUC,GAEvC,SAASD,IACL,OAAkB,OAAXC,GAAmBA,EAAOC,MAAMH,KAAMI,YAAcJ,KAW/D,OAbAD,EAAMM,UAAUJ,EAAaC,GAI7BD,EAAYK,WAAa,CACrB,CAAEC,KAAMV,EAAKW,UAAWC,KAAM,CAAC,CACnBC,SAAU,gBACVC,SAAU,mHACVC,cAAef,EAAKgB,kBAAkBC,KACtCC,gBAAiBlB,EAAKmB,wBAAwBC,OAC9CC,OAAQ,CAAC,UAGlBjB,EAdqB,CAe9BP,EAASO,aAuBPkB,EAAmC,WACnC,SAASA,KAgBT,OAdAA,EAAkBb,WAAa,CAC3B,CAAEC,KAAMV,EAAKuB,SAAUX,KAAM,CAAC,CAClBY,QAAS,CACLzB,EAAO0B,aACPxB,EAAKyB,eAETC,aAAc,CACVvB,GAEJf,QAAS,CACLe,OAIbkB,EAjB2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CtCjC,EAAQe,YAAcA,EACtBf,EAAQiC,kBAAoBA,EAE5BM,OAAOC,eAAexC,EAAS,aAAc,CAAEyC,OAAO","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@angular/material/icon'), require('tslib'), require('@ajf/core/node-icon')) :\n    typeof define === 'function' && define.amd ? define('@ajf/material/node-icon', ['exports', '@angular/common', '@angular/core', '@angular/material/icon', 'tslib', '@ajf/core/node-icon'], factory) :\n    (global = global || self, factory((global.ajf = global.ajf || {}, global.ajf.material = global.ajf.material || {}, global.ajf.material.nodeIcon = {}), global.ng.common, global.ng.core, global.ng.material.icon, global.tslib, global.ng.core.nodeIcon));\n}(this, (function (exports, common, core, icon, tslib, nodeIcon) { 'use strict';\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfNodeIcon = /** @class */ (function (_super) {\n        tslib.__extends(AjfNodeIcon, _super);\n        function AjfNodeIcon() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        AjfNodeIcon.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-node-icon',\n                        template: \"<ng-template [ngIf]=\\\"node\\\">\\n  <mat-icon [fontSet]=\\\"fontSet\\\" [fontIcon]=\\\"fontIcon\\\"></mat-icon>\\n</ng-template>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        return AjfNodeIcon;\n    }(nodeIcon.AjfNodeIcon));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfNodeIconModule = /** @class */ (function () {\n        function AjfNodeIconModule() {\n        }\n        AjfNodeIconModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [\n                            common.CommonModule,\n                            icon.MatIconModule,\n                        ],\n                        declarations: [\n                            AjfNodeIcon,\n                        ],\n                        exports: [\n                            AjfNodeIcon,\n                        ],\n                    },] }\n        ];\n        return AjfNodeIconModule;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.AjfNodeIcon = AjfNodeIcon;\n    exports.AjfNodeIconModule = AjfNodeIconModule;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-node-icon.umd.js.map\n"]}