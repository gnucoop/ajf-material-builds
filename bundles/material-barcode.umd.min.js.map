{"version":3,"sources":["src/material/material-barcode.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ajf","material","barcode","tslib","ng","core","forms","common","button","buttonToggle","icon","ngxTranslate","this","core$1","common$1","BARCODE_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","AjfBarcodeComponent","multi","_super","cdr","renderer","call","__extends","decorators","type","Component","args","selector","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","providers","styles","ctorParameters","ChangeDetectorRef","Renderer2","AjfBarcode","AjfBarcodeModule","NgModule","imports","CommonModule","FormsModule","TranslateModule","MatButtonModule","MatButtonToggleModule","MatIconModule","AjfCommonModule","declarations","Object","defineProperty","value"],"mappings":"CAAC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,SAAUA,QAAQ,qBAAsBA,QAAQ,iBAAkBA,QAAQ,kBAAmBA,QAAQ,mBAAoBA,QAAQ,4BAA6BA,QAAQ,mCAAoCA,QAAQ,0BAA2BA,QAAQ,uBAAwBA,QAAQ,qBAC3V,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,wBAAyB,CAAC,UAAW,QAAS,oBAAqB,gBAAiB,iBAAkB,kBAAmB,2BAA4B,kCAAmC,yBAA0B,sBAAuB,oBAAqBJ,GACxRA,IAAzBD,EAASA,GAAUO,MAAsBC,IAAMR,EAAOQ,KAAO,GAAIR,EAAOQ,IAAIC,SAAWT,EAAOQ,IAAIC,UAAY,GAAIT,EAAOQ,IAAIC,SAASC,QAAU,IAAKV,EAAOW,MAAOX,EAAOY,GAAGC,KAAKH,QAASV,EAAOY,GAAGC,KAAMb,EAAOY,GAAGE,MAAOd,EAAOY,GAAGG,OAAQf,EAAOY,GAAGH,SAASO,OAAQhB,EAAOY,GAAGH,SAASQ,aAAcjB,EAAOY,GAAGH,SAASS,KAAMlB,EAAOmB,aAAaN,KAAMb,EAAOY,GAAGC,KAAKE,QAHjX,CAIEK,MAAM,SAAWlB,EAASS,EAAOD,EAASG,EAAMC,EAAOC,EAAQC,EAAQC,EAAcC,EAAMG,EAAQC,GAAY;;;;;;;;;;;;;;;;;;;;;OAuB7G,IAAIC,EAAiC,CACjCC,QAASV,EAAMW,kBACfC,YAAab,EAAKc,YAAW,WAAc,OAAOC,KAClDC,OAAO,GAKPD,EAAqC,SAAUE,GAE/C,SAASF,EAAoBG,EAAKC,GAC9B,OAAOF,EAAOG,KAAKb,KAAMW,EAAKC,IAAaZ,KAiB/C,OAnBAT,EAAMuB,UAAUN,EAAqBE,GAIrCF,EAAoBO,WAAa,CAC7B,CAAEC,KAAMvB,EAAKwB,UAAWC,KAAM,CAAC,CACnBC,SAAU,cACVC,SAAU,wiDACVC,cAAe5B,EAAK6B,kBAAkBC,KACtCC,gBAAiB/B,EAAKgC,wBAAwBC,OAC9CC,UAAW,CAACxB,GACZyB,OAAQ,CAAC,2vBAIzBpB,EAAoBqB,eAAiB,WAAc,MAAO,CACtD,CAAEb,KAAMvB,EAAKqC,mBACb,CAAEd,KAAMvB,EAAKsC,aAEVvB,EApB6B,CAqBtClB,EAAQ0C,YAuBNC,EAAkC,WAClC,SAASA,KAqBT,OAnBAA,EAAiBlB,WAAa,CAC1B,CAAEC,KAAMvB,EAAKyC,SAAUhB,KAAM,CAAC,CAClBiB,QAAS,CACLxC,EAAOyC,aACP1C,EAAM2C,YACNpC,EAAOqC,gBACP1C,EAAO2C,gBACP1C,EAAa2C,sBACb1C,EAAK2C,cACLvC,EAASwC,iBAEbC,aAAc,CACVnC,GAEJ1B,QAAS,CACL0B,OAIbyB,EAtB0B;;;;;;;;;;;;;;;;;;;;;;AAmDrCnD,EAAQ0B,oBAAsBA,EAC9B1B,EAAQmD,iBAAmBA,EAC3BnD,EAAQqB,+BAAiCA,EAEzCyC,OAAOC,eAAe/D,EAAS,aAAc,CAAEgE,OAAO","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('@ajf/core/barcode'), require('@angular/core'), require('@angular/forms'), require('@angular/common'), require('@angular/material/button'), require('@angular/material/button-toggle'), require('@angular/material/icon'), require('@ngx-translate/core'), require('@ajf/core/common')) :\n    typeof define === 'function' && define.amd ? define('@ajf/material/barcode', ['exports', 'tslib', '@ajf/core/barcode', '@angular/core', '@angular/forms', '@angular/common', '@angular/material/button', '@angular/material/button-toggle', '@angular/material/icon', '@ngx-translate/core', '@ajf/core/common'], factory) :\n    (global = global || self, factory((global.ajf = global.ajf || {}, global.ajf.material = global.ajf.material || {}, global.ajf.material.barcode = {}), global.tslib, global.ng.core.barcode, global.ng.core, global.ng.forms, global.ng.common, global.ng.material.button, global.ng.material.buttonToggle, global.ng.material.icon, global.ngxTranslate.core, global.ng.core.common));\n}(this, (function (exports, tslib, barcode, core, forms, common, button, buttonToggle, icon, core$1, common$1) { 'use strict';\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var BARCODE_CONTROL_VALUE_ACCESSOR = {\n        provide: forms.NG_VALUE_ACCESSOR,\n        useExisting: core.forwardRef(function () { return AjfBarcodeComponent; }),\n        multi: true\n    };\n    /**\n     * Ajf barcode component.\n     */\n    var AjfBarcodeComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfBarcodeComponent, _super);\n        function AjfBarcodeComponent(cdr, renderer) {\n            return _super.call(this, cdr, renderer) || this;\n        }\n        AjfBarcodeComponent.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-barcode',\n                        template: \"<ng-container *ngIf=\\\"value; else barcode\\\">\\n  <div class=\\\"ajf-code-container\\\">\\n    <span>{{ value }}</span>\\n    <button mat-raised-button (click)=\\\"reset()\\\">\\n      <mat-icon style=\\\"transform: rotate(90deg)\\\">format_align_justify</mat-icon>\\n    </button>\\n  </div>\\n</ng-container>\\n<ng-template #barcode>\\n  <mat-button-toggle-group [(ngModel)]=toggle>\\n    <mat-button-toggle value=\\\"drop\\\" (click)=\\\"fileInput.click()\\\" [disabled]=\\\"readonly\\\">\\n      <span translate>Upload image</span>\\n      <mat-icon>add_circle_outline</mat-icon>\\n      <input #fileInput type=\\\"file\\\" (change)=\\\"onSelectFile($event)\\\" multiple style=\\\"display:none;\\\" [disabled]=\\\"readonly\\\"/>\\n    </mat-button-toggle>\\n    <mat-button-toggle value=\\\"drop\\\" [disabled]=\\\"readonly\\\">\\n      <span translate>Drop image</span>\\n    </mat-button-toggle>\\n    <mat-button-toggle value=\\\"camera\\\" [disabled]=\\\"readonly\\\">\\n      <span translate>Camera</span>\\n    </mat-button-toggle>\\n  </mat-button-toggle-group>\\n  <ng-container [ngSwitch]=\\\"toggle\\\">\\n    <ng-container *ngSwitchCase=\\\"'drop'\\\">\\n      <div class=\\\"ajf-drop-container\\\">\\n        <div class=\\\"ajf-dropzone\\\" [attr.ajfDnd]=\\\"!readonly\\\" (file)=\\\"onSelectFile($event)\\\">\\n          <div class=\\\"ajf-text-wrapper\\\">\\n            <div class=\\\"ajf-centered\\\" translate>Drop your image here!</div>\\n          </div>\\n        </div>\\n      </div>\\n    </ng-container>\\n    <ng-container *ngSwitchCase=\\\"'snapshot'\\\">\\n      <div ajfVideoDirective [source]=\\\"videoSource\\\" class=\\\"left\\\" (isInit)=\\\"takeSnapshot()\\\"></div>\\n    </ng-container>\\n  </ng-container>\\n</ng-template>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        providers: [BARCODE_CONTROL_VALUE_ACCESSOR],\n                        styles: [\"ajf-barcode .ajf-code-container{display:inline-flex;flex-direction:row;flex-wrap:wrap;justify-content:center;align-content:stretch;align-items:center}ajf-barcode .ajf-code-container button{margin-left:10px}ajf-barcode .ajf-drop-container{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:flex-start;align-content:stretch;align-items:stretch}ajf-barcode .ajf-drop-container .ajf-dropzone{order:0;flex:1 1 auto;align-self:auto;min-height:480px;display:table;background-color:#eee;border:dotted 1px #aaa}ajf-barcode .ajf-drop-container .ajf-dropzone .ajf-text-wrapper{display:table-cell;vertical-align:middle}ajf-barcode .ajf-drop-container .ajf-dropzone .ajf-centered{font-family:sans-serif;font-size:1.3em;font-weight:bold;text-align:center}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfBarcodeComponent.ctorParameters = function () { return [\n            { type: core.ChangeDetectorRef },\n            { type: core.Renderer2 }\n        ]; };\n        return AjfBarcodeComponent;\n    }(barcode.AjfBarcode));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfBarcodeModule = /** @class */ (function () {\n        function AjfBarcodeModule() {\n        }\n        AjfBarcodeModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [\n                            common.CommonModule,\n                            forms.FormsModule,\n                            core$1.TranslateModule,\n                            button.MatButtonModule,\n                            buttonToggle.MatButtonToggleModule,\n                            icon.MatIconModule,\n                            common$1.AjfCommonModule\n                        ],\n                        declarations: [\n                            AjfBarcodeComponent,\n                        ],\n                        exports: [\n                            AjfBarcodeComponent,\n                        ],\n                    },] }\n        ];\n        return AjfBarcodeModule;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.AjfBarcodeComponent = AjfBarcodeComponent;\n    exports.AjfBarcodeModule = AjfBarcodeModule;\n    exports.BARCODE_CONTROL_VALUE_ACCESSOR = BARCODE_CONTROL_VALUE_ACCESSOR;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-barcode.umd.js.map\n"]}