{"version":3,"file":"material-report-builder.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/material/report-builder/tokens.ts","../../src/material/report-builder/report-builder-service.ts","../../src/material/report-builder/column.ts","../../src/material/report-builder/utils.ts","../../src/material/report-builder/condition-editor.ts","../../src/material/report-builder/content.ts","../../src/material/report-builder/custom-widget-dialog.ts","../../src/material/report-builder/custom-widget-toolbar-button.ts","../../src/material/report-builder/custom-widgets-toolbar.ts","../../src/material/report-builder/forms-analyzer-dialog.ts","../../src/material/report-builder/forms-analyzer.ts","../../src/material/report-builder/image-filter.ts","../../src/material/report-builder/image-group.ts","../../src/material/report-builder/properties.ts","../../src/material/report-builder/quill-editor.ts","../../src/material/report-builder/renderer-widget.ts","../../src/material/report-builder/theme-color-dialog.ts","../../src/material/report-builder/theme-color.ts","../../src/material/report-builder/toolbar-dialog.ts","../../src/material/report-builder/toolbar.ts","../../src/material/report-builder/widget-toolbar-button.ts","../../src/material/report-builder/widgets-row-buttons.ts","../../src/material/report-builder/widgets-toolbar.ts","../../src/material/report-builder/report-builder.ts","../../src/material/report-builder/report-builder-module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {InjectionToken} from '@angular/core';\n\nimport {AjfReportsConfig} from './models';\n\nexport const AJF_REPORTS_CONFIG = new InjectionToken<AjfReportsConfig>('AJF_REPORTS_CONFIG');\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {EventEmitter, Inject, Injectable, Optional} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {\n  combineLatest, filter, map, publishReplay, refCount,\n  scan, share, startWith\n} from 'rxjs/operators';\n\nimport {AjfFormula} from '@ajf/core/models';\nimport {\n  AjfField,\n  AjfFieldType,\n  AjfForm,\n  AjfNode,\n  AjfNodeGroup,\n  AjfRepeatingSlide,\n  AjfSlide,\n  AjfStringField,\n  flattenNodes\n} from '@ajf/core/forms';\nimport {\n  AjfAggregation,\n  AjfReport,\n  AjfReportChartWidget,\n  AjfReportColumnWidget,\n  AjfReportContainer,\n  AjfReportCustomWidget,\n  AjfReportDataWidget,\n  AjfReportImageWidget,\n  AjfReportLayoutWidget,\n  AjfReportStyles,\n  AjfReportTableWidget,\n  AjfReportTextWidget,\n  AjfReportWidget,\n  AjfReportWidgetType,\n} from '@ajf/core/reports';\n\nimport {\n  IAjfReportWidgetsOperation,\n  IAjfReportCustomWidgetsOperation,\n  IAjfReportStylesOperation,\n  IAjfReportWidgetOperation,\n  IAjfColorOperation,\n  IAjfFormVariablesOperation,\n  IAjfReportFormsOperation\n} from './operations';\n\nimport {\n  AjfFormVariables,\n  AjfReportIcons,\n  AjfReportsConfig,\n  AjfReportWidgetsContainer\n} from './models';\n\nimport {AJF_REPORTS_CONFIG} from './tokens';\n\n/**\n * This service contains all the logic to model the report widget.\n *\n * @export\n */\n@Injectable()\nexport class AjfReportBuilderService {\n\n  /**\n   *  this Observable observe the customWidgets obj\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _customWidgets: Observable<AjfReportCustomWidget[]>;\n  private _customWidgetsUpdate: Subject<IAjfReportCustomWidgetsOperation> =\n  new Subject<IAjfReportCustomWidgetsOperation>();\n\n  /**\n   * this Observable observe the name of the section that contains the current widget.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _origin: Observable<string>;\n  private _originUpdate: Subject<string> = new Subject<string>();\n\n  /**\n   * this Observable observe the exported json\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _savedReport: Observable<AjfReport>;\n  private _savedReportUpdate: Subject<AjfReport> = new Subject<AjfReport>();\n\n  private _jsonStack: BehaviorSubject<string[]> =\n  new BehaviorSubject<string[]>([]);\n\n  private _lastDeletedJson: string | undefined;\n\n  private _emptyContent: BehaviorSubject<boolean> =\n  new BehaviorSubject<boolean>(true);\n\n  /**\n   *  this Observable observe if is fired drag mouse event.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _onDragged: Observable<boolean>;\n  private _onDraggedUpdate: Subject<boolean> = new Subject<boolean>();\n\n\n  private _onOver: Observable<boolean>;\n  private _onOverUpdate: Subject<boolean> = new Subject<boolean>();\n\n\n  /**\n   * this Observable observe the status of permanent zoom\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _fixedZoom: Observable<boolean>;\n  private _fixedZoomUpdate: Subject<boolean> = new Subject<boolean>();\n\n\n  /**\n   *  this Observable observe if is fired drag mouse event.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _onDragEnter: Observable<any>;\n  private _onDragEnterUpdate: Subject<any> = new Subject<any>();\n\n  /**\n   * Observe the header widget array.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _headerWidgets: Observable<AjfReportWidgetsContainer>;\n  private _headerWidgetsUpdate: Subject<IAjfReportWidgetsOperation> =\n  new Subject<IAjfReportWidgetsOperation>();\n\n  /**\n   * observe the header styles.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _headerStyles: Observable<AjfReportStyles>;\n\n  /**\n   * Observe the content widget array\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _contentWidgets: Observable<AjfReportWidgetsContainer>;\n  private _contentWidgetsUpdate: Subject<IAjfReportWidgetsOperation> =\n  new Subject<IAjfReportWidgetsOperation>();\n\n  /**\n   * this Observable observe the content styles.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _contentStyles: Observable<AjfReportStyles>;\n\n  /**\n   * this Observable observe the footer widget array.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _footerWidgets: Observable<AjfReportWidgetsContainer>;\n  private _footerWidgetsUpdate: Subject<IAjfReportWidgetsOperation> =\n  new Subject<IAjfReportWidgetsOperation>();\n\n\n  private _color: Observable<string[]>;\n  private _colorUpdate: Subject<IAjfColorOperation> =\n  new Subject<IAjfColorOperation>();\n  private _defaultColor: string[] =\n  [\n    'rgba(0, 0, 0, 1)', 'rgba(51, 153, 255, 1)', 'rgba(153, 204, 0, 1)', 'rgba(255, 102, 0, 1)',\n    'rgba(0, 204, 204, 1)', 'rgba(204, 204, 153, 1)', 'rgba(255, 153, 0, 1)', 'rgba(230, 0, 0, 1)',\n    'rgba(255, 153, 0, 1)', 'rgba(255, 255, 0, 1)', 'rgba(0, 138, 0, 1)', 'rgba(0, 102, 204, 1)',\n    'rgba(153, 51, 255, 1)', 'rgba(255, 255, 255, 1)', 'rgba(250, 204, 204, 1)',\n    'rgba(255, 235, 204, 1)', 'rgba(255, 255, 204, 1)', 'rgba(204, 232, 204, 1)',\n    'rgba(204, 224, 245, 1)', 'rgba(235, 214, 255, 1)', 'rgba(187, 187, 187, 1)',\n    'rgba(240, 102, 102, 1)', 'rgba(255, 194, 102, 1)', 'rgba(255, 255, 102, 1)',\n    'rgba(102, 185, 102, 1)', 'rgba(102, 163, 224, 1)', 'rgba(194, 133, 255, 1)',\n    'rgba(136, 136, 136, 1)', 'rgba(161, 0, 0, 1)', 'rgba(178, 107, 0, 1)',\n    'rgba(178, 178, 0, 1)', 'rgba(0, 97, 0, 1)', 'rgba(0, 71, 178, 1)',\n    'rgba(107, 36, 178, 1)', 'rgba(68, 68, 68, 1)', 'rgba(92, 0, 0, 1)', 'rgba(102, 61, 0, 1)',\n    'rgba(102, 102, 0, 1)', 'rgba(0, 55, 0, 1)', 'rgba(0, 41, 102, 1)', 'rgba(61, 20, 102, 1)'\n  ];\n\n\n  /**\n   * this Observable observe the footer styles.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _footerStyles: Observable<AjfReportStyles>;\n\n  /**\n   *  this Observable observe the current widget which holds the focus.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _currentWidget: Observable<AjfReportWidget | null>;\n  private _currentWidgetUpdate: BehaviorSubject<IAjfReportWidgetOperation | null> =\n    new BehaviorSubject<IAjfReportWidgetOperation | null>(null);\n\n\n  /**\n   * Observe the AjfFormVariables exploit for field selecting from forms\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _formsVariables: Observable<AjfFormVariables[]>;\n  private _formsVariablesUpdate: BehaviorSubject<IAjfFormVariablesOperation | null> =\n    new BehaviorSubject<IAjfFormVariablesOperation | null>(null);\n\n  /**\n   * Observe the AjfFormVariables exploit for field selecting from forms\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _conditionNames: Observable<AjfFormVariables[]>;\n  private _conditionNamesUpdate: BehaviorSubject<IAjfFormVariablesOperation | null> =\n    new BehaviorSubject<IAjfFormVariablesOperation | null>(null);\n\n  /**\n   * this BehaviorSubject update export report.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _saveReport: BehaviorSubject<any> =\n  new BehaviorSubject<any>(null);\n\n  /**\n   * this BehaviorSubject contains the AjfReport.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _report: BehaviorSubject<AjfReport | null> =\n    new BehaviorSubject<AjfReport | null>(null);\n\n  /**\n   *  this Observable observe the styles of report.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _reportStyles: Observable<AjfReportStyles>;\n  private _reportStylesUpdate: Subject<IAjfReportStylesOperation> =\n  new Subject<IAjfReportStylesOperation>();\n\n  /**\n   * observe the forms fetched\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _reportForms: Observable<AjfForm[]>;\n  private _reportFormsUpdate: Subject<IAjfReportFormsOperation> =\n  new Subject<IAjfReportFormsOperation>();\n\n  /**\n   * dictionary for  widgetsUpdate\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _updates: any = {\n    header: this._headerWidgetsUpdate,\n    content: this._contentWidgetsUpdate,\n    footer: this._footerWidgetsUpdate,\n    color: this._colorUpdate,\n    customWidgets: this._customWidgetsUpdate\n  };\n\n  /**\n   * event emitter that notify when wont to save report\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _saveReportEvent: EventEmitter<void> = new EventEmitter<void>();\n\n  private _saveFormulaTOHtml: EventEmitter<any> = new EventEmitter<any>();\n\n  getFormulaToHtmlEvent(): Observable<string> {\n    return this._saveFormulaTOHtml.asObservable();\n  }\n\n  /**\n   * event emitter that notify when column width changed\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  columnWidthChangedEmitter: EventEmitter<void> = new EventEmitter<void>();\n\n  private _iconSets: AjfReportIcons = {\n    'ajf-icon': []\n  };\n  get iconSets(): AjfReportIcons { return this._iconSets; }\n\n  /**\n   * Creates an instance of AjfReportBuilderService.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  constructor(\n    @Optional() @Inject(AJF_REPORTS_CONFIG) reportsConfig: AjfReportsConfig\n  ) {\n\n    this._lastDeletedJson = '';\n\n    if (reportsConfig != null) {\n      if (reportsConfig.icons != null) {\n        this._iconSets = {...this._iconSets, ...reportsConfig.icons};\n      }\n    }\n\n    this._origin = (<Observable<string>>this._originUpdate).pipe(\n      startWith('header'),\n      share()\n    );\n\n    this._savedReport = (<Observable<AjfReport>>this._savedReportUpdate).pipe(\n      share()\n    );\n\n    this._onDragged = (<Observable<boolean>>this._onDraggedUpdate).pipe(\n      startWith(false),\n      share()\n    );\n\n    this._onOver = (<Observable<boolean>>this._onOverUpdate).pipe(\n      startWith(false),\n      share()\n    );\n\n    this._fixedZoom = (<Observable<boolean>>this._fixedZoomUpdate).pipe(\n      startWith(false),\n      share()\n    );\n\n    this._onDragEnter = this._onDragEnterUpdate.pipe(share());\n\n    this._reportStyles = (<Observable<IAjfReportStylesOperation>>this._reportStylesUpdate).pipe(\n      scan((styles: AjfReportStyles, op: IAjfReportStylesOperation) => {\n        return op(styles);\n      }, <AjfReportStyles>{}),\n      share(),\n      startWith(<AjfReportStyles>{})\n    );\n\n    this._reportForms = (<Observable<IAjfReportFormsOperation>>this._reportFormsUpdate).pipe(\n      scan((forms: AjfForm[], op: IAjfReportFormsOperation) => {\n        return op(forms);\n      }, []),\n      share(),\n      startWith([])\n    );\n\n    this._customWidgets = (<Observable<IAjfReportCustomWidgetsOperation>>this._customWidgetsUpdate)\n      .pipe(\n        scan((widgets: AjfReportCustomWidget[], op: IAjfReportCustomWidgetsOperation) => {\n          return op(widgets);\n        }, []),\n        share(),\n        startWith([])\n      );\n\n    this._formsVariables = (<Observable<IAjfFormVariablesOperation>>this._formsVariablesUpdate)\n      .pipe(\n        filter(s => s != null),\n        scan((variables: AjfFormVariables[], op: IAjfFormVariablesOperation) => {\n          return op(variables);\n        }, []),\n        publishReplay(1),\n        refCount()\n      );\n\n    this._conditionNames = (<Observable<IAjfFormVariablesOperation>>this._conditionNamesUpdate)\n      .pipe(\n        filter(s => s != null),\n        scan((variables: AjfFormVariables[], op: IAjfFormVariablesOperation) => {\n          return op(variables);\n        }, []),\n        share(),\n        startWith([])\n      );\n\n    this._headerWidgets = (<Observable<IAjfReportWidgetsOperation>>this._headerWidgetsUpdate).pipe(\n      scan((widgets: AjfReportWidgetsContainer, op: IAjfReportWidgetsOperation) => {\n        return op(widgets);\n      }, <AjfReportWidgetsContainer>{ widgets: [], styles: {} }),\n      startWith(<AjfReportWidgetsContainer>{ widgets: [], styles: {} }),\n      publishReplay(1),\n      refCount()\n    );\n\n    this._headerStyles = this._headerWidgets.pipe(\n      map((widgets: AjfReportWidgetsContainer) => {\n        return widgets != null ? widgets.styles : {};\n      })\n    );\n\n    this._contentWidgets = (<Observable<IAjfReportWidgetsOperation>>this._contentWidgetsUpdate)\n      .pipe(\n        scan((widgets: AjfReportWidgetsContainer, op: IAjfReportWidgetsOperation) => {\n          return op(widgets);\n        }, <AjfReportWidgetsContainer>{ widgets: [], styles: {} }),\n        startWith(<AjfReportWidgetsContainer>{ widgets: [], styles: {} }),\n        publishReplay(1),\n        refCount()\n      );\n\n    this._contentStyles = this._contentWidgets.pipe(\n      map((widgets: AjfReportWidgetsContainer) => {\n        return widgets != null ? widgets.styles : {};\n      })\n    );\n\n    this._footerWidgets = (<Observable<IAjfReportWidgetsOperation>>this._footerWidgetsUpdate).pipe(\n      scan((widgets: AjfReportWidgetsContainer, op: IAjfReportWidgetsOperation) => {\n        return op(widgets);\n      }, <AjfReportWidgetsContainer>{ widgets: [], styles: {} }),\n      startWith(<AjfReportWidgetsContainer>{ widgets: [], styles: {} }),\n      publishReplay(1),\n      refCount()\n    );\n\n    this._footerStyles = this._footerWidgets.pipe(\n      map((widgets: AjfReportWidgetsContainer) => {\n        return widgets != null ? widgets.styles : {};\n      })\n    );\n\n    this._color = (<Observable<IAjfColorOperation>>this._colorUpdate).pipe(\n      scan((color: string[], op: IAjfColorOperation) => {\n        return op(color);\n      }, this._defaultColor),\n      share(),\n      startWith(this._defaultColor)\n    );\n\n    this._currentWidget = (<Observable<IAjfReportWidgetOperation>>this._currentWidgetUpdate).pipe(\n      filter(s => s != null),\n      scan((widget: AjfReportWidget | null, op: IAjfReportWidgetOperation) => {\n        return op(widget);\n      }, undefined),\n      publishReplay(1),\n      refCount()\n    );\n\n    this._reportForms.pipe(\n      filter(f => f.length != 0),\n      map((forms: AjfForm[]) => {\n        return (_c: AjfFormVariables[]): AjfFormVariables[] => {\n          return this.fillFormsVariables(forms);\n        };\n      })\n    ).subscribe(this._formsVariablesUpdate);\n\n    this._reportForms.pipe(\n      filter(f => f.length != 0),\n      map((forms: AjfForm[]) => {\n        return (_c: AjfFormVariables[]): AjfFormVariables[] => {\n          return this.fillFormsVariables(forms);\n        };\n      })\n    ).subscribe(this._conditionNamesUpdate);\n\n    const reportObs = this._report;\n\n    reportObs.pipe(\n      map((r: AjfReport | null) => {\n        return (_colors: string[]): string[] => {\n          let tempColors: string[] = this._defaultColor;\n          if (r == null) {\n            return [];\n          } else {\n            this.parseColor(r.styles, tempColors);\n            this.parseColor(r.content.styles, tempColors);\n            this.parseColor(r.footer.styles, tempColors);\n            this.parseColor(r.header.styles, tempColors);\n            for (let i = 0; i < r.header.content.length; i++) {\n              let obj = r.header.content[i];\n              this.parseColor(obj.styles, tempColors);\n              if (obj instanceof AjfReportLayoutWidget) {\n                let layoutObj = <AjfReportLayoutWidget>obj;\n                for (let j = 0; j < layoutObj.content.length; j++) {\n                  let columnObj = <AjfReportColumnWidget>layoutObj.content[j];\n                  this.parseColor(columnObj.styles, tempColors);\n                  for (let z = 0; z < columnObj.content.length; z++) {\n                    let widgetObj = columnObj.content[z];\n                    this.parseColor(widgetObj.styles, tempColors);\n                  }\n                }\n              }\n            }\n          }\n          return <string[]>tempColors;\n        };\n      })\n    ).subscribe(this._colorUpdate);\n\n    reportObs.pipe(\n      map((r: AjfReport | null) => {\n        return (_styles: AjfReportStyles): AjfReportStyles => {\n          if (r == null || r.styles == null) {\n            return <AjfReportStyles>{};\n          } else {\n            return <AjfReportStyles>r.styles;\n          }\n        };\n      })\n    ).subscribe(this._reportStylesUpdate);\n\n    reportObs.pipe(\n      map((r: AjfReport | null) => {\n        return (_widgets: AjfReportWidgetsContainer): AjfReportWidgetsContainer => {\n          if (r == null || r.header == null) {\n            return <AjfReportWidgetsContainer>{ widgets: [], styles: {} };\n          } else {\n            return <AjfReportWidgetsContainer>{\n              widgets: r.header.content || [],\n              styles: r.header.styles || {}\n            };\n          }\n        };\n      })\n    ).subscribe(this._headerWidgetsUpdate);\n\n    reportObs.pipe(\n      map((r: AjfReport | null) => {\n        return (_widgets: AjfReportWidgetsContainer): AjfReportWidgetsContainer => {\n          if (r == null || r.content == null) {\n            return <AjfReportWidgetsContainer>{ widgets: [], styles: {} };\n          } else {\n            return <AjfReportWidgetsContainer>{\n              widgets: r.content.content || [],\n              styles: r.content.styles || {}\n            };\n          }\n        };\n      })\n    ).subscribe(this._contentWidgetsUpdate);\n\n    reportObs.pipe(\n      map((r: AjfReport | null) => {\n        return (_widgets: AjfReportWidgetsContainer): AjfReportWidgetsContainer => {\n          if (r == null || r.footer == null) {\n            return <AjfReportWidgetsContainer>{ widgets: [], styles: {} };\n          } else {\n            return <AjfReportWidgetsContainer>{\n              widgets: r.footer.content || [],\n              styles: r.footer.styles || {}\n            };\n          }\n        };\n      })\n    ).subscribe(this._footerWidgetsUpdate);\n\n    this._saveReport.pipe(\n      map((json: any) => {\n        return (_r: any): any => {\n          if (json = null) {\n            return {};\n          }\n          return json;\n        };\n      })\n    );\n\n    this._saveReportEvent.pipe(\n      combineLatest(this.report, this.reportForms),\n      combineLatest(\n        this._headerWidgets.pipe(filter(w => w != null)),\n        this._contentWidgets.pipe(filter(w => w != null)),\n        this._footerWidgets.pipe(filter(w => w != null)),\n        this._reportStyles.pipe(filter(w => w != null)),\n      )\n    ).subscribe((r: [\n        [void, AjfReport | null, AjfForm[]],\n        AjfReportWidgetsContainer, AjfReportWidgetsContainer,\n        AjfReportWidgetsContainer, AjfReportStyles\n      ]) => {\n        let obj: any = {};\n        const curRo = r[0][1];\n        const forms = r[0][2] != null ? r[0][2] || [] : (\n          curRo != null ? curRo.forms || [] : []\n        );\n\n        obj['header'] = { content: r[1].widgets.map(w => w.toJson()), styles: r[1].styles };\n        obj['content'] = { content: r[2].widgets.map(w => w.toJson()), styles: r[2].styles };\n        obj['footer'] = { content: r[3].widgets.map(w => w.toJson()), styles: r[3].styles };\n        obj['styles'] = r[4];\n\n        const ro = new AjfReport(forms, {\n          header: new AjfReportContainer({\n            content: r[1].widgets,\n            styles: r[1].styles\n          }),\n          content: new AjfReportContainer({\n            content: r[2].widgets,\n            styles: r[2].styles\n          }),\n          footer: new AjfReportContainer({\n            content: r[3].widgets,\n            styles: r[3].styles\n          }),\n          styles: r[4]\n        });\n\n        this.setSaveReport(obj);\n        this._savedReportUpdate.next(ro);\n        this.pushJsonStack(JSON.stringify(obj));\n      });\n  }\n\n  /**\n   *\n   *  functions\n   *\n   */\n\n  /**\n   * utils:\n   * remove AjfNodeGroup, AjfSlide, AjfRepeatingSlide, AjfStringField from ajfnode array\n   *\n   * @param nodes\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  filterNodes(nodes: AjfNode[]): AjfNode[] {\n    for (let i = 0; i < nodes.length; i++) {\n      if (\n        nodes[i] instanceof AjfNodeGroup ||\n        nodes[i] instanceof AjfSlide ||\n        nodes[i] instanceof AjfRepeatingSlide ||\n        nodes[i] instanceof AjfStringField\n      ) {\n        nodes.splice(i, 1);\n        i--;\n      }\n    }\n    return nodes;\n  }\n\n  parseColor(cssStyles: any, colors: string[]): void {\n    const styleKeys = ['background-color', 'backgroundColor', 'color'];\n    styleKeys.forEach((k) => {\n      if (\n        cssStyles[k] &&\n        colors.indexOf(cssStyles[k]) == -1\n      ) {\n        colors.push(cssStyles[k]);\n      }\n    });\n  }\n\n  fillFormsVariables(forms: AjfForm[]) {\n    let variables: AjfFormVariables[] = [];\n    for (let i = 0; i < forms.length; i++) {\n      variables[i] = { nodes: [], labels: [], names: [], types: [] };\n\n      if (forms[i].nodes != null && forms[i].nodes.length > 0) {\n        variables[i].nodes = this.filterNodes(flattenNodes(forms[i].nodes));\n      }\n      variables[i].labels = this.extractLabelsNodes(variables[i].nodes);\n      variables[i].names = this.extractNamesNodes(variables[i].nodes);\n      variables[i].types = this.extractTypesNodes(variables[i].nodes);\n\n    }\n    return variables;\n  }\n  /**\n   * utils:\n   *  the obj returned contains the label field of ajfNode\n   * @param nodes\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  extractLabelsNodes(nodes: AjfNode[]): any {\n    let obj: string[] = [];\n    for (let i = 0; i < nodes.length; i++) {\n      obj.push(nodes[i].label);\n    }\n    return obj;\n  }\n\n  extractNamesNodes(nodes: AjfNode[]): any {\n    let obj: string[] = [];\n    for (let i = 0; i < nodes.length; i++) {\n      obj.push(nodes[i].name);\n    }\n    return obj;\n  }\n  extractTypesNodes(nodes: AjfNode[]): any {\n    let obj: AjfFieldType[] = [];\n    for (let i = 0; i < nodes.length; i++) {\n      let p: AjfField = <AjfField>nodes[i];\n      obj.push(p.fieldType);\n    }\n    return obj;\n  }\n\n  setOrigin(origin: string): void {\n    this._originUpdate.next(origin);\n  }\n\n  /**\n   * utils:\n   * This method round the value to the decimal position\n   *\n   * @param value\n   * @param decimalpositions\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  roundTo(value: number, decimalPositions: number) {\n    let i = value * Math.pow(10, decimalPositions);\n\n    i = Math.floor(i);\n\n    return i / Math.pow(10, decimalPositions);\n  }\n\n  /**\n   * utils:\n   * This validator check if the value is a number.\n   *\n   * @param value\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  isNumber(value: any): boolean {\n    return /^\\d+(\\.\\d+)?/.test(value);\n  }\n\n  isNumberArray(value: any[]): boolean {\n    value.forEach((v) => {\n      if (!this.isNumber(v)) {\n        return false;\n      }\n    });\n    return true;\n  }\n\n  /**\n   * get _onDragged Observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get onDragged(): Observable<any> {\n    return this._onDragged;\n  }\n\n  /**\n   * get _onOver Observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get onOver(): Observable<any> {\n    return this._onOver;\n  }\n\n  /**\n   * get _fixedZoom Observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get fixedZoom(): Observable<boolean> {\n    return this._fixedZoom;\n  }\n\n  /**\n   *  change status of _fixedZoom in true\n   *\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  fixedZoomIn(): void {\n    this._fixedZoomUpdate.next(true);\n  }\n\n  /**\n   *  change status of _fixedZoom in false\n   *\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  fixedZoomOut(): void {\n    this._fixedZoomUpdate.next(false);\n  }\n\n  /**\n   * get _onDragEnter observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get onDragEnter(): Observable<any> {\n    return this._onDragEnter;\n  }\n\n  /**\n   *  update _onDragEnter with  section(header,content,footer) and index\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  dragEnter(array: string, index: number): void {\n    this._onDragEnterUpdate.next({ array, index });\n  }\n\n  /**\n   *  update _ondragged with true\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  dragStarted(): void {\n    this._onDraggedUpdate.next(true);\n  }\n\n  /**\n   *  update _onDragged with false\n   *\n   * @memberOf AjfReportBuilderService\n   */\n\n  dragEnded(): void {\n    this._onDraggedUpdate.next(false);\n  }\n\n\n  /**\n   *  update _onOver with true\n   *\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  overStarted(): void {\n    this._onOverUpdate.next(true);\n  }\n\n\n  /**\n   * update _onOver with false\n   *\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  overEnded(): void {\n    this._onOverUpdate.next(false);\n  }\n\n  /**\n   *\n   *  update _onDragged with false\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  dragLeave(): void {\n    this._onDragEnterUpdate.next({});\n  }\n\n  /**\n   * Get the report\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get report(): Observable<AjfReport | null> {\n    return this._report.asObservable();\n  }\n\n  /**\n   * emit save report event\n   *\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  saveReport() {\n    if (this._saveReportEvent != null) {\n      this._saveReportEvent.emit();\n    }\n  }\n\n  saveImageFormula(formula: AjfFormula) {\n    this._currentWidgetUpdate.next(\n      (widget: AjfReportWidget | null): AjfReportWidget | null => {\n        if (widget == null) { return widget; }\n        const w = widget as AjfReportImageWidget;\n        w.flag = formula;\n        w.icon = formula;\n        return w;\n      });\n  }\n\n  saveFormulaToHtml(htmlFormula: string, reference: any) {\n    if (this._saveFormulaTOHtml != null) {\n      const obj = {\n        'formula': htmlFormula,\n        'reference': reference\n      };\n      this._saveFormulaTOHtml.emit(obj);\n    }\n  }\n\n  setEmptyContent(val: boolean): void {\n    this._emptyContent.next(val);\n  }\n\n\n  pushJsonStack(json: string): void {\n    let currentStack = this._jsonStack.getValue();\n\n    if (currentStack.indexOf(json) === -1 && json !== this._lastDeletedJson) {\n      currentStack.push(json);\n    }\n\n    this._jsonStack.next(currentStack);\n  }\n\n  popJsonStack(): string | undefined {\n    let emptyJson =\n      '{\"header\":{\"content\":[],\"styles\":{}},' +\n      '\"content\":{\"content\":[],\"styles\":{}},\"' +\n      'footer\":{\"content\":[],\"styles\":{}},\"styles\":{}}';\n    let currentStack = this._jsonStack.getValue();\n    currentStack.pop();\n    this._lastDeletedJson = currentStack.pop();\n\n    if (currentStack.length <= 0) {\n      this._lastDeletedJson = '';\n      this._jsonStack.next([]);\n      this.updateCurrentWidget(null);\n      this.setEmptyContent(true);\n      return emptyJson;\n    }\n    this._jsonStack.next(currentStack);\n\n    return this._lastDeletedJson;\n  }\n\n\n  /**\n   * get the emitter\n   *\n   * @readonly\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  get columnWidthChanged() {\n    return this.columnWidthChangedEmitter;\n  }\n\n  /**\n   * get _customWidgets Observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get customWidgets(): Observable<AjfReportCustomWidget[]> {\n    return this._customWidgets;\n  }\n\n  /**\n   * Get the header widget\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get headerWidgets(): Observable<AjfReportWidgetsContainer> {\n    return this._headerWidgets;\n  }\n\n  /**\n   * Get the header styles\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get headerStyles(): Observable<AjfReportStyles> {\n    return this._headerStyles;\n  }\n\n  /**\n   * Get the Content widget\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get contentWidgets(): Observable<AjfReportWidgetsContainer> {\n    return this._contentWidgets;\n  }\n\n  /**\n   * Get the content styles\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get contentStyles(): Observable<AjfReportStyles> {\n    return this._contentStyles;\n  }\n\n  /**\n   * Get the footer widget\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get footerWidgets(): Observable<AjfReportWidgetsContainer> {\n    return this._footerWidgets;\n  }\n\n  /**\n   * Get the footer styles\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get footerStyles(): Observable<AjfReportStyles> {\n    return this._footerStyles;\n  }\n\n  /**\n   * Get the colors of report\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get colors(): Observable<string[]> {\n    return this._color;\n  }\n\n  get emptyContent(): Observable<boolean> {\n    return <Observable<boolean>>this._emptyContent;\n  }\n\n  /**\n   *\n   * @param type\n   * @param newWidget\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  updateArrayWidgets(type: string, newWidget: AjfReportWidgetsContainer) {\n    if ((type !== 'header') && (type !== 'content') && (type !== 'footer')) {\n      throw new Error('Unknown type ' + type);\n    }\n    this._updates[type].next((_widgets: AjfReportWidgetsContainer): AjfReportWidgetsContainer => {\n      return newWidget;\n    });\n  }\n\n  /**\n   * get _formsVariables Observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get formsVariables(): Observable<AjfFormVariables[]> {\n    return this._formsVariables;\n  }\n\n  get conditionNames(): Observable<AjfFormVariables[]> {\n    return this._conditionNames;\n  }\n  /**\n   * Get the current widget\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get currentWidget(): Observable<AjfReportWidget | null> {\n    return this._currentWidget;\n  }\n\n  /**\n   * This method Update _currentWidgetUpdate with newWidget.\n   *\n   * @param newWidget\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  updateCurrentWidget(newWidget: AjfReportWidget | null) {\n    this._currentWidgetUpdate.next(\n      (_widget: AjfReportWidget | null): AjfReportWidget | null => {\n        this._saveReportEvent.emit();\n        return newWidget;\n      }\n    );\n  }\n\n  /**\n   * Get the report\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get getSaveReport(): Observable<any> {\n    return this._saveReport.asObservable();\n  }\n\n  /**\n   * get _jsonSavedReport obeservable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get reportSaved(): Observable<AjfReport> {\n    return this._savedReport;\n  }\n\n\n  /**\n   * get _reportStyles observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get reportStyles(): Observable<AjfReportStyles> {\n    return this._reportStyles;\n  }\n\n  /**\n   * get _reportForms observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get reportForms(): Observable<AjfForm[]> {\n    return this._reportForms;\n  }\n\n  /**\n   * get the _origin Observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get origin(): Observable<string> {\n    return this._origin;\n  }\n\n  /**\n   * This method assigns the new width to the idx column\n   * and recalculates the width of the remaining columns of the layout.\n   * The range value are from 0,1 to 1.\n   *\n   * RULES:\n   * The min value for column is 0,1.\n   * The sum of all columns width is always 1.\n   * The method round the values.\n   * If is present only one column the width is always 1.\n   *\n   * When the new value `>` old value:\n   * the width of the remaining columns decreases.\n   * When the new value `<` old value:\n   * the width of the remaining columns increases.\n   *\n   * When values ​​are periodic, rounding assigns the gap to the current value.\n   * For example: 3 columns with 0,33 believe 1 column 0,34 and 2 columns 0,33.\n   *\n   * @param newValue\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  instantColumnValue(newValue: number, idx: number) {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      if (widget == null) { return widget; }\n      let myObj = <AjfReportLayoutWidget>widget;\n\n      let size = myObj.columns.length;\n\n      let spreadValue = 0;\n      let objNum = 0;\n      let sum = 0;\n      let idxFirstNoObj = -1;\n\n      let add = false;\n      let foundFirstNoObj = false;\n\n      let re1 = new RegExp('(^[0]\\.\\[1-9][0-9]$)');\n      let re2 = new RegExp('(^[0]\\.\\[1-9]$)');\n      let re3 = new RegExp('^[1]$');\n\n      let oldValue = myObj.columns[idx];\n\n      newValue = Number(this.roundTo(newValue, 2).toFixed(2));\n\n      if (myObj.columns[idx] == null) {\n        throw new Error('invalid value');\n      }\n\n      for (let j = 0; j < size; j++) {\n        if (myObj.columns[j] === -1) { objNum++; }\n      }\n\n      if (oldValue == -1) {\n        oldValue = 0.1;\n        objNum--;\n        newValue = Number(this.roundTo(1 / (size - objNum), 2).toFixed(2));\n        myObj.columns[idx] = 0.1;\n      } else if (oldValue < 0.1) {\n        oldValue = 0.1;\n      }\n\n\n      if (newValue !== -1) {\n\n        if (myObj.columns.length === 1) {\n          myObj.columns[0] = 1;\n          return myObj;\n        }\n\n        if (newValue < 0.1) {\n          newValue = 0.1;\n        } else if (newValue + 0.1 * (size - objNum - 1) > 1) {\n          newValue = 1 - (0.1 * (size - objNum - 1));\n        }\n\n        if ((oldValue === newValue) && (oldValue === 0.1)) {\n          myObj.columns[idx] = newValue;\n          return myObj;\n        }\n\n        if (oldValue > newValue) {\n          add = true;\n          spreadValue = (oldValue - newValue) / (size - objNum - 1);\n        } else {\n          add = false;\n          spreadValue = (newValue - oldValue) / (size - objNum - 1);\n        }\n\n        spreadValue = Number(this.roundTo(spreadValue, 2).toFixed(2));\n\n        if (spreadValue < 0.01) {\n          spreadValue = 0.1;\n        }\n\n      } else {\n        myObj.columns[idx] = -1;\n        objNum++;\n        add = true;\n        if (myObj.columns.length == 1) {\n          spreadValue = 1;\n        } else {\n          spreadValue = (oldValue) / (size - objNum);\n        }\n      }\n\n      for (let i = 0; i < size; i++) {\n        if (myObj.columns[i] !== -1) {\n\n          if ((i == idx)) {\n            myObj.columns[idx] = newValue;\n          } else {\n\n            if (add) {\n              myObj.columns[i] += spreadValue;\n              if ((myObj.columns[i] > 0.9) && (myObj.columns.length - objNum != 1)) {\n                myObj.columns[i] = 0.90;\n              }\n\n            } else {\n              myObj.columns[i] -= spreadValue;\n              if (myObj.columns[i] < 0.1) {\n                myObj.columns[i] = 0.10;\n              }\n            }\n\n            myObj.columns[i] = Number(this.roundTo(myObj.columns[i], 2).toFixed(2));\n            sum += myObj.columns[i];\n          }\n\n          sum = Number(this.roundTo(sum, 2).toFixed(2));\n\n          if (foundFirstNoObj == false) {\n            idxFirstNoObj = i;\n            foundFirstNoObj = true;\n          }\n        }\n      }\n\n      if (newValue === -1) {\n        myObj.columns[idx] = -1;\n        if (foundFirstNoObj) {\n          myObj.columns[idxFirstNoObj] += Number(this.roundTo(1 - sum, 2).toFixed(2));\n        }\n      } else {\n        myObj.columns[idx] = Number(this.roundTo(1 - sum, 2).toFixed(2));\n\n      }\n\n      for (let j = 0; j < myObj.columns.length; j++) {\n        if (\n          myObj.columns[j] !== -1 &&\n          !re1.test(String(myObj.columns[j])) &&\n          !re2.test(String(myObj.columns[j])) &&\n          !re3.test(String(myObj.columns[j]))\n        ) {\n          this.instantColumnValue(0.10, j);\n        }\n      }\n      this.columnWidthChangedEmitter.emit();\n      this._saveReportEvent.emit();\n      return myObj;\n    });\n\n  }\n\n  /**\n   * This method set the imageUrl on the current AjfReportImageWidget.\n   *\n   * @param imageUrl\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setImageUrl(imageUrl: string) {\n    this._currentWidgetUpdate.next(\n      (widget: AjfReportWidget | null): AjfReportWidget | null => {\n        if (widget == null) { return null; }\n        const myObj = <AjfReportImageWidget>widget;\n        myObj.setUrl(imageUrl);\n        return myObj;\n      }\n    );\n  }\n\n  setIcon(icon: { fontSet: string, fontIcon: string }) {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      if (widget == null) { return null; }\n      const myObj = <AjfReportImageWidget>widget;\n      myObj.setIcon(icon);\n      return myObj;\n    });\n  }\n\n  setFlag(value: string) {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      if (widget == null) { return null; }\n      const myObj = <AjfReportImageWidget>widget;\n      myObj.setFlag(value);\n      return myObj;\n    });\n  }\n\n  saveCondition(conditionText: string) {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      if (widget == null) { return null; }\n      if (widget.visibility != null) { widget.visibility.condition = conditionText; }\n      return widget;\n    });\n  }\n\n  saveChartFormula(\n    _label: string,\n    _level: number,\n    _mainIndex: number,\n    _index: number,\n    formulaText: string,\n    aggregationType: number) {\n    this._currentWidgetUpdate.next((w: AjfReportWidget | null): AjfReportWidget | null => {\n      if (w == null) { return null; }\n      const widget = w as AjfReportChartWidget;\n      if (widget != null && widget.dataset != null) {\n        let formula: AjfFormula = new AjfFormula();\n        let aggregation: AjfAggregation = new AjfAggregation();\n        // let obj: any;\n\n        formula.formula = formulaText;\n        aggregation.aggregation = aggregationType;\n\n        // obj = {\n        //   'formula': formula.toJson(),\n        //   'aggregation': aggregation.toJson(),\n        //   'label': label\n        // };\n\n        // dataset = AjfDataset.fromJson(obj);\n        // check if the row that contains main data is defined\n        /* if (widget.dataset[0] == null) {\n          widget.dataset[0] = [];\n        }\n\n        if (level == 0 && mainIndex == -1 && index == -1) {\n\n          widget.dataset[0].push(dataset);\n        } else if (level == 1 && mainIndex == -1 && index == -1) {\n\n          widget.dataset[widget.dataset.length] = [];\n          widget.dataset[widget.dataset.length - 1].push(dataset);\n        } else if (index === - 1) {\n          widget.dataset[mainIndex + 1].push(dataset);\n        } else {\n          widget.dataset[mainIndex].splice(index, 1, dataset);\n        } */\n\n      }\n      return widget;\n    });\n  }\n\n  saveTableFormula(\n    _label: string,\n    aggregationType: number,\n    formulaText: string,\n    _mainIndex: number,\n    _index: number) {\n    this._currentWidgetUpdate.next((w: AjfReportWidget | null): AjfReportWidget | null => {\n      if (w == null) { return null; }\n      const widget = w as AjfReportTableWidget;\n      if (widget.dataset != null) {\n        let formula: AjfFormula = new AjfFormula();\n        let aggregation: AjfAggregation = new AjfAggregation();\n        // let dataset: AjfDataset = new AjfDataset();\n        // let rowDataset: AjfDataset[] = [];\n        // let obj: any;\n\n        formula.formula = formulaText;\n        aggregation.aggregation = aggregationType;\n\n        // obj = {\n        //   'formula': formula.toJson(),\n        //   'aggregation': aggregation.toJson(),\n        //   'label': label\n        // };\n\n        // dataset = AjfDataset.fromJson(obj);\n        /* if (mainIndex === - 1) {\n          widget.dataset[widget.dataset.length] = [];\n          widget.dataset[widget.dataset.length - 1].push(dataset);\n        } else {\n          if (index === -1) {\n            widget.dataset[mainIndex].push(dataset);\n          } else {\n            widget.dataset[mainIndex].splice(index, 1, dataset);\n          }\n        } */\n      }\n      return widget;\n    });\n  }\n\n  removeTableMainData(index: number) {\n    this._removeFromCurrentWidgetArrayProperty('dataset', index);\n  }\n\n  removeData(_mainIndex: number, _index: number) {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      let myObj = <AjfReportDataWidget>widget;\n\n      /* if (index === -1) {\n        myObj.dataset.splice(mainIndex, 1);\n      } else {\n        myObj.dataset[mainIndex].splice(index, 1);\n      } */\n\n      return myObj;\n    });\n  }\n\n  /**\n   * update type field of AjfReportChartWidget current widget\n   *\n   * @param type\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setChartType(type: number) {\n    this._setCurrentWidgetProperty('type', type);\n  }\n\n  /**\n   * remove  idx element of xLabels field of AjfReportChartWidget current widget\n   *\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  removeMainData(_idx: number) {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      let myObj = <AjfReportChartWidget>widget;\n      // myObj.dataset[0].splice(idx, 1);\n\n      return myObj;\n    });\n  }\n\n  removeRelatedData(_mainIdx: number, _idx: number) {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      let myObj = <AjfReportChartWidget>widget;\n      /* if (idx == -1) {\n        myObj.dataset.splice(mainIdx + 1, 1);\n      } else {\n        myObj.dataset[mainIdx + 1].splice(idx, 1);\n      } */\n\n      return myObj;\n    });\n  }\n\n\n  /**\n   * update backgroundColor field of AjfReportChartWidget current widget\n   *\n   * @param colors\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setChartBackgroundColor(colors: string[]) {\n    this._setCurrentWidgetProperty('backgroundColor', colors);\n  }\n\n  addChartBackgroundColor(color: string) {\n    this._addToCurrentWidgetArrayProperty('backgroundColor', color);\n  }\n\n  removeChartBackgroundColor(idx: number) {\n    this._removeFromCurrentWidgetArrayProperty('backgroundColor', idx);\n  }\n\n  /**\n   * update borderColor field of AjfReportChartWidget current widget\n   *\n   * @param colors\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setChartBorderColor(colors: string[]) {\n    this._setCurrentWidgetProperty('borderColor', colors);\n  }\n\n  setChartBorderWidth(value: number) {\n    this._setCurrentWidgetProperty('borderWidth', value);\n  }\n\n  addChartBorderColor(color: string) {\n    this._addToCurrentWidgetArrayProperty('borderColor', color);\n  }\n\n  removeChartBorderColor(idx: number) {\n    this._removeFromCurrentWidgetArrayProperty('borderColor', idx);\n  }\n\n  /**\n   * This method set the AjfReport.\n   *\n   * @param report\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setReport(report: AjfReport): void {\n    this._report.next(report);\n  }\n\n  /**\n   * This method set the export report.\n   *\n   * @param report\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setSaveReport(json: any): void {\n    this._saveReport.next(json);\n  }\n\n  /**\n   * This method set the font attribute on the current AjfReportWidget.\n   *\n   * There is a check on font-size attribute,\n   * if is no specificate the type of size font set 'pt' as default.\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setWidgetStyles(label: string, value: string | string[]) {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      let myObj = <AjfReportTextWidget>widget;\n\n      const pxStyles = [\n        'font-size', 'height', 'width', 'border-width', 'border-radius', 'padding', 'margin'\n      ];\n      const isPxStyle = pxStyles.indexOf(label) > -1;\n      if (isPxStyle && !(value instanceof Array) && this.isNumber(value)) {\n        value += 'px';\n      } else if (isPxStyle && value instanceof Array && this.isNumberArray(value)) {\n        value = `${value.join('px ')}px`;\n      }\n\n      myObj.styles[label] = value;\n\n      return myObj;\n    });\n  }\n\n  /**\n   * this method update the styles of origin widget array\n   *\n   * @param origin can be header content or footer\n   * @param label for example background-color\n   * @param value for example rgb(255,255,255,1)\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setSectionStyles(origin: string, label: string, value: string) {\n    if ((origin !== 'header') && (origin !== 'content') && (origin !== 'footer')) {\n      throw new Error('uncknow origin ' + origin);\n    }\n\n    this._updates[origin].next((widget: AjfReportWidgetsContainer): AjfReportWidgetsContainer => {\n      widget.styles[label] = value;\n\n      widget.styles = <AjfReportStyles>{...widget.styles};\n\n      return widget;\n    });\n  }\n\n  /**\n   * this method set the style of the whole report.\n   *\n   * @param label for example background-color\n   * @param value for example rgb(255,255,255,1)\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setReportStyles(label: string, value: string) {\n    this._reportStylesUpdate.next((styles: AjfReportStyles): AjfReportStyles => {\n      if (styles == null) {\n        styles = {};\n      } else {\n        styles[label] = value;\n        styles = <AjfReportStyles>{...styles};\n      }\n      return styles;\n    });\n  }\n\n  /**\n   *  update forms\n   *\n   * @param forms\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setReportForms(forms: AjfForm[]) {\n    this._reportFormsUpdate.next((_form: AjfForm[]): AjfForm[] => {\n      return forms || [];\n    });\n  }\n\n  /**\n   * update customWidgets\n   *\n   * @param widget\n   * @param [position]\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  addCustomWidgets(widget: AjfReportCustomWidget, position?: number) {\n    this._customWidgetsUpdate.next(\n      (customWidgets: AjfReportCustomWidget[]): AjfReportCustomWidget[] => {\n        customWidgets = customWidgets || [];\n        if (position != null && position >= 0) {\n          customWidgets.splice(position, 0, widget);\n        } else {\n          customWidgets.push(widget);\n        }\n        return customWidgets;\n      }\n    );\n  }\n\n  /**\n   * reset customWidgets\n   *\n   * @param widget\n   * @param [position]\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  resetCustomWidgets() {\n    this._customWidgetsUpdate.next(\n      (customWidgets: AjfReportCustomWidget[]): AjfReportCustomWidget[] => {\n        customWidgets.length = 0;\n        return customWidgets;\n      }\n    );\n  }\n\n  /**\n   * update label of widget\n   *\n   * @param label\n   * @param position\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  changeLabelCustomWidget(label: string, position: number) {\n    this._customWidgetsUpdate.next(\n      (customWidgets: AjfReportCustomWidget[]): AjfReportCustomWidget[] => {\n        customWidgets[position].type = label;\n        return customWidgets;\n      }\n    );\n  }\n\n  /**\n   * Add an AjfReportWidget on _headerWidgetsUpdate\n   *\n   * @param widget\n   * @param [position]\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  addHeaderWidget(widget: AjfReportWidget, position?: number) {\n    this._addWidgetToContainer(this._headerWidgetsUpdate, widget, position);\n  }\n\n  /**\n   * Add an AjfReportWidget on _contentWidgetsUpdate\n   *\n   * @param widget\n   * @param [position]\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  addContentWidget(widget: AjfReportWidget, position?: number) {\n    this._addWidgetToContainer(this._contentWidgetsUpdate, widget, position);\n  }\n\n  /**\n   * Add an AjfReportWidget on _footerWidgetsUpdate\n   *\n   * @param widget\n   * @param [position]\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  addfooterWidget(widget: AjfReportWidget, position?: number) {\n    this._addWidgetToContainer(this._footerWidgetsUpdate, widget, position);\n  }\n\n  unfixedColumn(idx: number) {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      if (widget == null) { return widget; }\n      let myObj = <AjfReportLayoutWidget>widget;\n      let num = myObj.columns.length;\n      let checkSum = 0;\n      let objNum = 0;\n      let value = 1;\n      let spreadValue: any;\n      myObj.columns[idx] = 0;\n\n      for (let j = 0; j < num; j++) {\n        if (myObj.columns[j] === -1) { objNum++; }\n      }\n\n      value = Number(this.roundTo(1 / (num - objNum), 2).toFixed(2));\n\n      for (let i = 0; i < num; i++) {\n        if (myObj.columns[i] !== - 1) {\n          myObj.columns[i] = value;\n          checkSum = Number(this.roundTo(checkSum + value, 2).toFixed(2));\n        }\n      }\n\n      checkSum = Number(this.roundTo(checkSum, 2).toFixed(2));\n\n      if (checkSum > 1) {\n        spreadValue = parseFloat(this.roundTo(((checkSum - 1) % 1), 2).toFixed(2));\n        myObj.columns[idx] -= spreadValue;\n        myObj.columns[idx] = this.roundTo(myObj.columns[idx], 2);\n      } else if (checkSum < 1) {\n        myObj.columns[idx] += (1 - (checkSum % 1));\n        myObj.columns[idx] = Number(this.roundTo(myObj.columns[idx], 2).toFixed(2));\n      }\n\n      return myObj;\n    });\n  }\n\n  /**\n   * Add column on the current AjfReportLayoutWidget.\n   *\n   * When adding a column the width of the other columns is recalculated\n   * by dividing it by the number of column\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  addColumn() {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      if (widget == null) { return null; }\n      let myObj = <AjfReportLayoutWidget>widget;\n      let tempObj: number[] = [];\n      let num = myObj.columns.length + 1;\n      let checkSum = 0;\n      let objNum = 0;\n      let value = 1;\n      let tmpValue: any;\n\n      if (num > 10) {\n        throw new Error('exceed max columns');\n      }\n\n      for (let j = 0; j < num; j++) {\n        if (myObj.columns[j] === -1) { objNum++; }\n      }\n      value = Number(this.roundTo(1 / (num - objNum), 2).toFixed(2));\n\n      for (let i = 0; i < num; i++) {\n        if (myObj.columns[i] === -1) {\n          tempObj.push(-1);\n        } else {\n          tempObj.push(value);\n          checkSum = Number(this.roundTo(checkSum + value, 2).toFixed(2));\n        }\n      }\n      checkSum = Number(this.roundTo(checkSum, 2).toFixed(2));\n\n      if (checkSum > 1) {\n        tmpValue =\n          parseFloat(\n            this.roundTo(\n              ((checkSum - 1) % 1), 2\n            ).toFixed(2));\n        tempObj[0] -= tmpValue;\n        tempObj[0] = this.roundTo(tempObj[0], 2);\n      } else if (checkSum < 1) {\n        tempObj[0] += (1 - (checkSum % 1));\n        tempObj[0] = Number(this.roundTo(tempObj[0], 2).toFixed(2));\n      }\n\n      myObj.columns = tempObj;\n\n      let columnObj = {\n        widgetType: 7,\n        value: myObj.columns[myObj.columns.length - 1]\n      };\n\n      myObj.content.push(new AjfReportColumnWidget(columnObj));\n      this._saveReportEvent.emit();\n      return myObj;\n    });\n  }\n\n  removeWidgetToColumn(column: AjfReportColumnWidget, index: number) {\n    column.content.splice(index, 1);\n  }\n\n  /**\n   * This method remove a widget on the current AjfReport.\n   *\n   * @param node\n   * the position array:\n   *\n   * header -`>` headerWidgets\n   * content -`>` contentWidgets\n   * footer -`>` footerWidgets\n   * column -`>` column of layout\n   * layoutContent -`>` content of layout\n   * obj -`>` obj of layout\n   * customWidget -`>` custom widget\n   *\n   * @param idx the position array\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  remove(node: string, idx: number) {\n\n    switch (node) {\n      case 'header':\n      case 'content':\n      case 'footer':\n        this._updates[node].next(\n          (widgets: AjfReportWidgetsContainer): AjfReportWidgetsContainer => {\n            if (widgets.widgets.length === 0) {\n              throw new Error('you can not remove from empty array');\n            }\n            if (widgets.widgets[idx] == null) {\n              throw new Error('invalid index');\n            }\n            widgets.widgets.splice(idx, 1);\n            this.updateCurrentWidget(null);\n            return widgets;\n          }\n        );\n        break;\n      case 'layout':\n        this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n          if (widget == null) { return null; }\n          let myObj = <AjfReportLayoutWidget>widget;\n\n          if (myObj.columns.length === 1) {\n            myObj.content[0].content.length = 0;\n            return myObj;\n          }\n\n          if (myObj.columns[idx] == null) {\n            throw new Error('this content is undefined');\n          } else {\n            let spread = myObj.columns[idx] / (myObj.columns.length - 1);\n\n            if (myObj.columns.length > 1) {\n              myObj.columns.splice(idx, 1);\n              myObj.content.splice(idx, 1);\n            }\n\n            for (let i = 0; i < myObj.columns.length; i++) {\n              myObj.columns[i] += spread;\n            }\n            this.instantColumnValue(myObj.columns[0], 0);\n          }\n          return myObj;\n        });\n        break;\n      case 'column':\n      case 'layoutContent':\n      case 'unfixedColumn':\n        this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n          if (widget == null) { return null; }\n          let myObj = <AjfReportLayoutWidget>widget;\n\n          if (node === 'column') {\n            let clm = <AjfReportColumnWidget>widget;\n            clm.content.splice(idx, 1);\n          } else if (node === 'layoutContent') {\n            if (myObj.columns.length === 0) {\n              throw new Error('the column length is 0');\n            }\n            if (myObj.content.length === 0) {\n              throw new Error('can not remove any widget from empty content');\n            }\n            if (myObj.columns[idx] != null && myObj.content[idx] == null) {\n              throw new Error('this content is undefined');\n            }\n          } else if (node === 'unfixedColumn') {\n            if (myObj.columns[idx] !== -1) {\n              throw new Error('the column position value  isnt -1');\n            }\n            this.unfixedColumn(idx);\n          }\n          // if (node !== 'obj') {\n          //   let spread = myObj.columns[idx] / (myObj.columns.length - 1);\n          //   myObj.content.splice(idx, 1);\n          //   if (myObj.columns.length > 1) {\n          //     myObj.columns.splice(idx, 1);\n          //   }\n          //   for (let i = 0; i < myObj.columns.length; i++) {\n          //     myObj.columns[i] += spread;\n          //   }\n          //   this.instantColumnValue(myObj.columns[0], 0);\n          // }\n          return myObj;\n        });\n        break;\n      case 'customWidgets':\n        {\n          this._updates[node].next((widgets: AjfReportCustomWidget[]): AjfReportCustomWidget[] => {\n            if (widgets.length === 0) {\n              throw new Error('you can not remove from empty array');\n            }\n            if (widgets[idx] == null) {\n              throw new Error('invalid index');\n            }\n            widgets.splice(idx, 1);\n            return widgets;\n          });\n        }\n        break;\n      default: throw new Error('unknown node ' + node);\n    }\n  }\n\n  /**\n   * This method add a AjfReportWidget on the current AjfReportLayoutWidget.\n   *\n   * @param newWidget\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  addToContent(newWidget: AjfReportWidget, idx: number) {\n\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      if (widget == null) { return null; }\n      let myObj = <AjfReportLayoutWidget>widget;\n\n      if (myObj.content[idx] != null) {\n        myObj.content.splice(idx, 1);\n      }\n      myObj.content.splice(idx, 0, newWidget);\n      return myObj;\n    });\n  }\n\n  addToColumn(event: any, toColumn: AjfReportColumnWidget, position?: number) {\n    if (event.dragData && event.dragData.fromColumn != null) {\n      let fromColumn: AjfReportColumnWidget = event.dragData.fromColumn;\n      let widget: AjfReportWidget = event.dragData.widget;\n      let fromIndex: number = event.dragData.fromIndex;\n\n      fromColumn.content.splice(fromIndex, 1);\n      toColumn.content.push(widget);\n\n    } else if (event.dragData && event.dragData.arrayFrom) {\n      this.remove(event.dragData.arrayFrom, event.dragData.fromIndex);\n      toColumn.content.push(event.dragData.widget);\n    } else if (event.dragData && event.dragData.json) {\n      let obj = JSON.parse(event.dragData.json);\n      let newWidget = AjfReportWidget.fromJson(obj);\n\n      if (position != null) {\n        toColumn.content.splice(position, 0, newWidget);\n      } else {\n        toColumn.content.push(newWidget);\n      }\n    } else {\n      let obj = {\n        'widgetType': AjfReportWidgetType[event.dragData]\n      };\n      let newWidget = AjfReportWidget.fromJson(obj);\n\n      if (position != null) {\n        toColumn.content.splice(position, 0, newWidget);\n      } else {\n        toColumn.content.push(newWidget);\n      }\n    }\n  }\n  changePositionOnColumn(event: any, toColumn: AjfReportColumnWidget, toIndex: number) {\n    let fromColumn: AjfReportColumnWidget = event.dragData.fromColumn;\n    let fromIndex: number = event.dragData.fromIndex;\n    let fromWidget: AjfReportWidget = fromColumn.content[fromIndex];\n    let toWidget: AjfReportWidget = fromColumn.content[toIndex];\n\n    if (fromColumn == toColumn) {\n      fromColumn.content[fromIndex] = toWidget;\n      fromColumn.content[toIndex] = fromWidget;\n    } else {\n      fromColumn.content.splice(fromIndex, 1);\n      toColumn.content.splice(toIndex, 0, fromWidget);\n    }\n  }\n\n  /**\n   * This method add the obj on the idx position.\n   * Obj have a no specificate width and is not calculate as columns\n   *\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  fixedColumn(idx: number) {\n    this.instantColumnValue(-1, idx);\n  }\n\n  changeColumn(from: number, to: number, layoutWidget: AjfReportLayoutWidget) {\n    if (to < 0 || to >= layoutWidget.content.length) {\n      return;\n    }\n    if (from > layoutWidget.content.length - 1 && to > from) {\n      return;\n    }\n\n    let fromColumn: AjfReportColumnWidget = <AjfReportColumnWidget>layoutWidget.content[from];\n    let fromColumnValue: number = layoutWidget.columns[from];\n    let toColumn: AjfReportColumnWidget = <AjfReportColumnWidget>layoutWidget.content[to];\n    let toColumnValue: number = layoutWidget.columns[to];\n\n    layoutWidget.content[from] = toColumn;\n    layoutWidget.columns[from] = toColumnValue;\n    layoutWidget.content[to] = fromColumn;\n    layoutWidget.columns[to] = fromColumnValue;\n\n    this.updateCurrentWidget(layoutWidget);\n  }\n\n  addCustomColor(color: string) {\n\n    this._updates['color'].next((colors: string[]): string[] => {\n\n      if (colors.indexOf(color) < 0) {\n        colors.push(color);\n      }\n      return colors;\n    });\n  }\n\n  private _addWidgetToContainer(\n    subj: Subject<IAjfReportWidgetsOperation>,\n    widget: AjfReportWidget, position?: number\n  ) {\n    subj.next((widgets: AjfReportWidgetsContainer): AjfReportWidgetsContainer => {\n      if (position != null && position >= 0) {\n        widgets.widgets.splice(position, 0, widget);\n      } else {\n        widgets.widgets.push(widget);\n      }\n      return widgets;\n    });\n    this.updateCurrentWidget(widget);\n    this.setEmptyContent(false);\n  }\n\n  private _setCurrentWidgetProperty(propName: string, value: any) {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      if (widget == null) { return null; }\n      (widget as any)[propName] = value;\n      return widget;\n    });\n  }\n\n  private _addToCurrentWidgetArrayProperty(propName: string, value: any) {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      if (widget == null) { return null; }\n      const arr = (<Array<any>>(widget as any)[propName]);\n      arr.push(value);\n      (widget as any)[propName] = arr;\n      return widget;\n    });\n  }\n\n  private _removeFromCurrentWidgetArrayProperty(propName: string, idx: number) {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      (<Array<any>>(widget as any)[propName]).splice(idx, 1);\n      return widget;\n    });\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Subscription, timer} from 'rxjs';\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {AjfReportColumnWidget} from '@ajf/core/reports';\nimport {AjfReportBuilderService} from './report-builder-service';\n\n/**\n * this component manages the report text\n *\n * @export\n */\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-column',\n  templateUrl: 'column.html',\n  styleUrls: ['column.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderColumn implements OnDestroy, OnInit {\n\n  /**\n   * if true mouse event is on dragged status\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  showActions = false;\n\n  layoutShow = false;\n\n  // this boolean sign if is dragged a widget\n  onDragged = false;\n\n\n  /**\n   * is the array of values\n   *\n   * @memberOf TableComponent\n   */\n  @Input()\n  column: AjfReportColumnWidget;\n\n  private _onDraggedSub: Subscription = Subscription.EMPTY;\n\n  addToList(event: any, idx: number, toColumn: AjfReportColumnWidget) {\n    this.onDragEndHandler();\n    if (event.dragData.fromColumn) {\n      this._service.changePositionOnColumn(event, toColumn, idx);\n    } else {\n      this._service.addToColumn(event, toColumn, idx);\n    }\n  }\n\n  /**\n   *  sign the start of mouse drag with 200 ms of delay\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragStartHandler(): void {\n    let s = timer(200)\n      .subscribe(() => {\n        s.unsubscribe();\n        this._service.dragStarted();\n      });\n  }\n\n  /**\n   * sign the end of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEndHandler(): void {\n    this._service.dragEnded();\n  }\n  constructor(\n    private _service: AjfReportBuilderService\n  ) {\n  }\n\n  ngOnInit() {\n    // this.widget = changes.widget.currentValue;\n\n    this._onDraggedSub = this._service.onDragged\n      .subscribe(x => {\n        this.onDragged = x;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this._onDraggedSub.unsubscribe();\n  }\n}\n\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfReportWidgetType} from '@ajf/core/reports';\n\nexport function ajfReportBuilderWidgetToString(widgetType: string): string {\n  return `reportbuilder-${widgetType.toLowerCase()}`;\n}\n\nexport function ajfWidgetTypeStringToIcon(widgetType: string): string {\n  return `widget-${widgetType.toLowerCase()}`;\n}\n\nexport function ajfWidgetTypeToIcon(widgetType: AjfReportWidgetType): string {\n  return ajfWidgetTypeStringToIcon(AjfReportWidgetType[widgetType]);\n}\n\nexport function ajfWidgetTypeStringToLabel(widgetType: string): string {\n  return `widgetType.${widgetType}`;\n}\n\nexport function ajfWidgetTypeToLabel(type: AjfReportWidgetType): string {\n  return ajfWidgetTypeStringToLabel(AjfReportWidgetType[type]);\n}\n\nexport function widgetReportBuilderIconName(type: AjfReportWidgetType): string {\n  return `reportbuilder-${AjfReportWidgetType[type].toLowerCase()}`;\n}\n\nexport function sanitizeConditionString(str: string): string {\n  str = str.trim();\n  while (str.indexOf('  ') > 0) {\n    str = str.replace('  ', ' ');\n  }\n  return str;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n  OnDestroy,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {Subscription, timer} from 'rxjs';\n\nimport {AjfCondition} from '@ajf/core/models';\nimport {AjfFormVariables} from './models';\nimport {AjfReportBuilderService} from './report-builder-service';\nimport {sanitizeConditionString} from './utils';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-condition-editor',\n  templateUrl: 'condition-editor.html',\n  styleUrls: ['condition-editor.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an ajf builder builder condition editor\n * @implements : OnDestroy\n * @implements : AfterViewInit\n */\nexport class AjfReportBuilderConditionEditor implements OnInit, OnDestroy {\n\n  @Input()\n  visibility: AjfCondition;\n\n  formsVariables: AjfFormVariables[];\n  isValid = false;\n  names: string[] = [];\n  currentId: number;\n\n  // conditionText is a string\n  conditionText = 'true';\n\n  a: any;\n  b: any;\n\n\n  @ViewChild('conditionTextArea', {static: false}) conditionTextArea: any;\n  @ViewChild('errorMessage', {static: false}) errorMessage: any;\n\n  //  operators is an array of any type that contains all allow operators\n  operators: string[] = [\n    '( )', '\\' \\'',\n    '<', '<=', '==', '>=', '>', '!=', '!',\n    '&&', '||',\n    '+', '-', '*', '/', '%',\n    'true', 'false'\n  ];\n\n  private _conditionNamesSub: Subscription = Subscription.EMPTY;\n\n  /**\n   * this constructor will init current condition by ajfBuilderservice\n   * and init condition and availableFieldNames subscriptions\n   */\n  constructor(\n    private _service: AjfReportBuilderService\n  ) {\n\n  }\n  extractNames(formsVariables: AjfFormVariables[]) {\n    this.names.length = 0;\n    for (let i = 0; i < formsVariables.length; i++) {\n      this.names = this.names.concat(formsVariables[i].names);\n    }\n  }\n\n  setCurrent(id: number, index: number) {\n    this.currentId = id;\n    this.appendText(this.formsVariables[id].names[index]);\n    this.checkValidation();\n  }\n\n  /**\n   * this method will return success if the current condtion is valid\n   * @return boolean\n   */\n  validateCondition(): boolean {\n    return AjfCondition.validate(this.conditionText, this.names);\n  }\n\n  // TODO complete the comment\n  /**\n   * this method will append text to json\n   * @param text      : string -\n   * @param goBackNum : number -\n   */\n  appendText(text: string, _goBackNum?: number): void {\n    if (text == null || this.conditionTextArea == null) {\n      return;\n    }\n\n    let el = this.conditionTextArea.nativeElement;\n    let sStart: number = Math.min(el.selectionStart, el.selectionEnd);\n    let sEnd: number = Math.max(el.selectionStart, el.selectionEnd);\n    let startingString: string = this.conditionText.substr(0, sStart);\n    let endingString: string = this.conditionText.substr(sEnd);\n    let initialLenght: number = startingString.length;\n    let newStr = '';\n\n    startingString = sanitizeConditionString(startingString);\n    endingString = sanitizeConditionString(endingString);\n    sStart += startingString.length - initialLenght +\n      text.length + (startingString.length > 0 ? 2 : 1);\n    newStr = startingString.length > 0 ? `${startingString} ` : '';\n    this.conditionText = `${newStr}${text} ${endingString}`;\n\n    const s = timer(0).subscribe(() => {\n      if (s && !s.closed) { s.unsubscribe(); }\n      if (el.createTextRange) {\n        let range = el.createTextRange();\n        range.move('character', sStart);\n        range.select();\n      } else {\n        if (el.selectionStart) {\n          el.focus();\n          el.setSelectionRange(sStart, sStart);\n        } else {\n          el.focus();\n        }\n      }\n    });\n  }\n\n  checkValidation() {\n    this.isValid = this.validateCondition();\n    if (this.isValid) {\n      this.saveCondition();\n    }\n  }\n\n  /**\n   * this method will save current condition\n   */\n  saveCondition(): void {\n    this._service.saveCondition(this.conditionText);\n  }\n\n  /**\n   * this method will hide the error message\n   */\n  hideErrorMessage(): void {\n    if (this.errorMessage == null) {\n      return;\n    }\n  }\n\n  ngOnInit(): void {\n    this.conditionText = this.visibility.condition;\n    this.isValid = true;\n\n    if (this.conditionText == 'true') {\n      this.conditionText = '';\n    }\n\n    this._conditionNamesSub = this._service.conditionNames\n      .subscribe((x) => {\n        this.formsVariables = x;\n        if (x != null) {\n          this.extractNames(this.formsVariables);\n        }\n      });\n\n  }\n  /**\n   * this method will destroy a conditionSubscriptions\n   */\n  ngOnDestroy(): void {\n    this._conditionNamesSub.unsubscribe();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterViewChecked, ChangeDetectionStrategy, ChangeDetectorRef, Component,\n  OnInit, OnDestroy, ViewEncapsulation\n} from '@angular/core';\nimport {CdkDrag, CdkDragDrop} from '@angular/cdk/drag-drop';\n\nimport {Observable, Subscription, timer} from 'rxjs';\n\nimport {\n  AjfReportLayoutWidget, AjfReportStyles, AjfReportWidget, AjfReportWidgetType\n} from '@ajf/core/reports';\nimport {deepCopy} from '@ajf/core/utils';\nimport {AjfReportBuilderDragData} from './report-builder-drag-data';\nimport {AjfReportBuilderService} from './report-builder-service';\n\n/**\n *  manage the content page\n *\n * @export\n */\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-content',\n  templateUrl: 'content.html',\n  styleUrls: ['content.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '(mouseover)': 'onMouseOver()',\n    '(mouseleave)': 'onMouseLeave()'\n  }\n})\nexport class AjfReportBuilderContent implements OnInit, AfterViewChecked, OnDestroy {\n  onMouseOver(): void {\n    this.showActions = true;\n    this._service.overStarted();\n  }\n\n  onMouseLeave(): void {\n    this.showActions = false;\n    this._service.overEnded();\n  }\n\n  canDropPredicate(\n    dropZones: string[]\n  ): (item: CdkDrag<AjfReportBuilderDragData>) => boolean {\n    return item => {\n      item.data.dropZones.forEach(d => {\n        if (dropZones.indexOf(d) > -1) { return true; }\n      });\n      return false;\n    };\n  }\n\n  reportStyles: Observable<AjfReportStyles>;\n\n  // this boolean sign if is dragged a widget\n  onDragged = false;\n\n\n  /**\n   *  observe the status of the fixed zoom\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  fixedZoom = false;\n\n  // this boolean sign if widget is in drag enter status\n  onDragEnter: any = {};\n\n\n  show = false;\n\n\n  // this array contains all widget locate in header zone\n  headerWidgets: AjfReportWidget[] = [];\n  /**\n   * observe the css style of header\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  headerStyles: Observable<AjfReportStyles>;\n\n  // this array contains all widget locate in content zone\n  contentWidgets: AjfReportWidget[] = [];\n\n  /**\n   * observe the css style of content\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  contentStyles: Observable<AjfReportStyles>;\n\n  // this array contains all widget locate in footer zone\n  footerWidgets: AjfReportWidget[] = [];\n\n\n  onOver: boolean = false;\n  /**\n   * observe the css style of footer\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  footerStyles: Observable<AjfReportStyles>;\n\n\n  // this is the current widget\n  currentWidget: AjfReportWidget | null = null;\n\n\n  /**\n   * if true mouse event is on dragged status\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  showActions = false;\n\n  private _onDraggedSub: Subscription = Subscription.EMPTY;\n  private _fixedZoomSub: Subscription = Subscription.EMPTY;\n  private _onDragEnterSub: Subscription = Subscription.EMPTY;\n  private _headerWidgetsSub: Subscription = Subscription.EMPTY;\n  private _contentWidgetsSub: Subscription = Subscription.EMPTY;\n  private _footerWidgetsSub: Subscription = Subscription.EMPTY;\n  private _onOverSub: Subscription = Subscription.EMPTY;\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n    private _service: AjfReportBuilderService,\n    private _cdRef: ChangeDetectorRef) {\n    this.headerStyles = this._service.headerStyles;\n    this.contentStyles = this._service.contentStyles;\n    this.footerStyles = this._service.footerStyles;\n  }\n\n  isLayout(widget: AjfReportWidget): boolean {\n    if (widget instanceof AjfReportLayoutWidget) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   *  sign the start of mouse drag with 200 ms of delay\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragStartHandler(): void {\n    let s = timer(200)\n      .subscribe(() => {\n        if (s != null) { s.unsubscribe(); }\n        this._service.dragStarted();\n      });\n  }\n\n  /**\n   * sign the end of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEndHandler(): void {\n    this._service.dragEnded();\n  }\n\n  /**\n   *  sign the enter of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEnterHandler(array: string, index: number): void {\n    this._service.dragEnter(array, index);\n  }\n\n  /**\n   * sign the leave of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragLeaveHandler(): void {\n    this._service.dragLeave();\n  }\n\n\n  /**\n   *  return true if array and index is === with array and index of onDragEnter\n   *\n   * @param array\n   * @param index\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEnterCheck(array: string, index: number): boolean {\n    if (\n      (array === this.onDragEnter.array) &&\n      ((index === this.onDragEnter.index) || (index === -1))\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * remove widget element from type array in idx position\n   *\n   * @param type can be header content or footer\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  remove(type: string, idx: number) {\n    this._service.remove(type, idx);\n  }\n\n  /**\n   * add widget element into type array in idx position\n   *\n   * @param type\n   * @param event\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  addToList(arrayTo: string, event: CdkDragDrop<AjfReportBuilderDragData>, to?: number) {\n    this.onDragEndHandler();\n    this._service.setOrigin(arrayTo);\n    const itemData = event.item.data as AjfReportBuilderDragData;\n    if (itemData.fromColumn != null) {\n        this._service.removeWidgetToColumn(itemData.fromColumn, itemData.fromIndex!);\n        this.currentWidget = itemData.widget!;\n    } else if (itemData.widget != null) {\n      this.remove(itemData.arrayFrom!, itemData.from!);\n      this.currentWidget = itemData.widget;\n    } else if (itemData.json != null && itemData.json !== '') {\n      this.currentWidget = AjfReportWidget.fromJson(JSON.parse(deepCopy(itemData.json)));\n    } else {\n      let obj = {\n        'widgetType': (AjfReportWidgetType as any)[itemData.widgetType!]\n      };\n      this.currentWidget = AjfReportWidget.fromJson(obj);\n    }\n    this.onDragEndHandler();\n    if (this.currentWidget != null) {\n      switch (arrayTo) {\n        case 'header':\n          this._service.addHeaderWidget(this.currentWidget, to);\n          break;\n        case 'content':\n          this._service.addContentWidget(this.currentWidget, to);\n          break;\n        case 'footer':\n          this._service.addfooterWidget(this.currentWidget, to);\n          break;\n      }\n    }\n    this.onDragLeaveHandler();\n  }\n\n  ngOnInit(): void {\n    this._headerWidgetsSub = this._service.headerWidgets\n      .subscribe(x => {\n        this.headerWidgets = x.widgets;\n      });\n    this._contentWidgetsSub = this._service.contentWidgets\n      .subscribe(x => {\n        this.contentWidgets = x.widgets;\n      });\n    this._footerWidgetsSub = this._service.footerWidgets\n      .subscribe(x => {\n        this.footerWidgets = x.widgets;\n      });\n    this._onDraggedSub = this._service.onDragged\n      .subscribe(x => {\n        this.onDragged = x;\n      });\n    this._fixedZoomSub = this._service.fixedZoom\n      .subscribe(bool => {\n        this.fixedZoom = bool;\n      });\n    this._onDragEnterSub = this._service.onDragEnter\n      .subscribe(x => {\n        this.onDragEnter = x;\n      });\n    this._onOverSub = this._service.onOver\n      .subscribe(x => {\n        this.onOver = x;\n      });\n  }\n\n  ngAfterViewChecked() {\n    this._cdRef.detectChanges();\n  }\n\n  ngOnDestroy(): void {\n    [\n      this._headerWidgetsSub, this._contentWidgetsSub, this._footerWidgetsSub,\n      this._currentWidgetSub, this._onDraggedSub, this._fixedZoomSub,\n      this._onOverSub, this._onDragEnterSub\n    ].forEach(s => { s.unsubscribe(); });\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {AjfReportBuilderService} from './report-builder-service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'custom-widget-dialog',\n  templateUrl: 'custom-widget-dialog.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderCustomWidgetDialog {\n  @Input()\n  label: string;\n  @Input()\n  position: number;\n\n  constructor(\n    private _service: AjfReportBuilderService,\n    private _dialogRef: MatDialogRef<AjfReportBuilderCustomWidgetDialog>\n  ) { }\n\n  changeLabel() {\n    this._service.changeLabelCustomWidget(this.label, this.position);\n    this._dialogRef.close();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation} from '@angular/core';\n\nimport {AjfReportBuilderService} from './report-builder-service';\nimport {ajfWidgetTypeStringToIcon, ajfWidgetTypeStringToLabel} from './utils';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-custom-widget-toolbar-button',\n  inputs: ['widgetType', 'position'],\n  templateUrl: 'custom-widget-toolbar-button.html',\n  styleUrls: ['custom-widget-toolbar-button.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an ajf builder field toolbar button\n * @implements : OnInit\n */\nexport class AjfReportBuilderCustomWidgetToolbarButton implements OnInit {\n  widgetType: string;\n  widgetIcon: string;\n  widgetLabel: string;\n  position: number;\n  customWidgets: any[] = [];\n\n  // {...t, dropZones: ['header','content','footer','column','widget']}\n\n  /**\n   * this constructor will init icon registry\n   */\n  constructor(\n    private _service: AjfReportBuilderService\n  ) {\n  }\n\n  /**\n   * this method call a service method for remove custom widget\n   *\n   * @memberOf AjfReportBuilderCustomWidgetToolbarButton\n   */\n  remove() {\n    this._service.remove('customWidgets', this.position);\n  }\n  /**\n   * this method will init  fieldIcon and fieldLabel\n   */\n  ngOnInit(): void {\n    this.widgetIcon = ajfWidgetTypeStringToIcon(this.widgetType);\n    this.widgetLabel = ajfWidgetTypeStringToLabel(this.widgetType);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewEncapsulation\n} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\n\nimport {Subscription, timer} from 'rxjs';\n\nimport {AjfReportBuilderCustomWidgetDialog} from './custom-widget-dialog';\nimport {AjfReportBuilderService} from './report-builder-service';\n\nexport interface AjfReportStyles {\n  [style: string]: any;\n}\n\nexport interface CustomWidget {\n  json: string;\n  type: string;\n}\n\nexport interface CustomWidgets {\n  widgets: CustomWidget[];\n}\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-custom-widgets-toolbar',\n  styleUrls: ['custom-widgets-toolbar.css'],\n  templateUrl: 'custom-widgets-toolbar.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an ajf builder toolbar\n * @implements : OnDestroy\n */\nexport class AjfReportBuilderCustomWidgetsToolbar implements OnDestroy, OnInit {\n  customWidgets: CustomWidget[] = [];\n\n  private _customWidgetsSub: Subscription = Subscription.EMPTY;\n\n  private _dialogRef: MatDialogRef<AjfReportBuilderCustomWidgetDialog>;\n\n  private _threeColumnsLayout: string =\n  '{\"widgetType\":0,' +\n  '\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"columns\":[0.34,0.33,0.33],' +\n  '\"content\":' +\n  '[{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]},' +\n  '{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]},' +\n  '{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]}]}';\n  private _fourColumnsLayout: string =\n  '{\"widgetType\":0,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},' +\n  '\"columns\":[0.25,0.25,0.25,0.25],\"content\":' +\n  '[{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]},' +\n  '{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]},' +\n  '{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]},' +\n  '{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]}]}';\n\n  constructor(\n    private _service: AjfReportBuilderService,\n    public dialog: MatDialog) {\n  }\n\n  openDialog(idx: number) {\n    this._dialogRef = this.dialog.open(AjfReportBuilderCustomWidgetDialog);\n    this._dialogRef.componentInstance.label = this.customWidgets[idx].type;\n    this._dialogRef.componentInstance.position = idx;\n  }\n\n\n  /**\n   *  sign the start of mouse drag with 200 ms of delay\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragStartHandler(): void {\n    let s = timer(200)\n      .subscribe(() => {\n        if (s != null) { s.unsubscribe(); }\n        this._service.dragStarted();\n      });\n  }\n\n  /**\n   * sign the end of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEndHandler(): void {\n    this._service.dragEnded();\n  }\n\n  /**\n   *  sign the enter of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEnterHandler(array: string, index: number): void {\n    this._service.dragEnter(array, index);\n  }\n\n  /**\n   * sign the leave of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragLeaveHandler(): void {\n    this._service.dragLeave();\n  }\n  ngOnInit(): void {\n    this._customWidgetsSub = this._service.customWidgets\n      .subscribe(x => {\n        this.customWidgets = x;\n        if (\n          this.customWidgets.length > 0 &&\n          this.customWidgets[this.customWidgets.length - 1].type == ''\n        ) {\n          this.openDialog(this.customWidgets.length - 1);\n        }\n      });\n    this._service.addCustomWidgets({\n      json: this._threeColumnsLayout,\n      type: 'LayoutWidgetWith3Columns',\n    });\n    this._service.addCustomWidgets({\n      json: this._fourColumnsLayout,\n      type: 'LayoutWidgetWith4Columns'\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._customWidgetsSub.unsubscribe();\n    this._service.resetCustomWidgets();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ViewChild,\n  Input,\n  OnInit,\n  AfterViewChecked,\n  OnDestroy,\n  ViewEncapsulation\n} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {Subscription} from 'rxjs';\n\nimport {AjfFieldType, AjfValidationService} from '@ajf/core/forms';\nimport {AjfImageType} from '@ajf/core/image';\nimport {AjfFormula, AjfValidatedProperty} from '@ajf/core/models';\nimport {\n  AjfAggregationType, AjfDataset, AjfReportDataWidget, AjfReportImageWidget, AjfReportWidget\n} from '@ajf/core/reports';\nimport {sizedEnumToStringArray} from '@ajf/core/utils';\nimport {AjfMonacoEditor} from '@ajf/material/monaco-editor';\nimport {AjfFormVariables} from './models';\nimport {AjfReportBuilderService} from './report-builder-service';\n\nexport enum AjfDataType {\n  MainData,\n  Dataset,\n  RelatedData,\n  LENGTH\n}\ndeclare var monaco: any;\n\n@Component({\n  moduleId: module.id,\n  selector: 'forms-analyzer-dialog',\n  templateUrl: 'forms-analyzer-dialog.html',\n  styleUrls: ['forms-analyzer-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderFormsAnalyzerDialog implements OnInit, AfterViewChecked, OnDestroy {\n\n  aggregationTypes: string[] = sizedEnumToStringArray(AjfAggregationType);\n\n  //  operators is an array of any type that contains all allow operators\n  operators: string[] = [\n    'true', 'false', '( )', '\\' \\'',\n    '<', '<=', '>=', '>', '!=', '!',\n    '&&', '||',\n    '+', '-', '*', '/', '%', '=='\n  ];\n\n  formulaText: string = '';\n  formulaDate: string = '';\n  safeFormulaText: string = '';\n  label: string = '';\n  condition: string = '';\n  aggregationType: AjfAggregationType = AjfAggregationType.Sum;\n  dataset: AjfDataset;\n  currentId: number = 0;\n  currentIndex: number = 0;\n  labels: string[] = [];\n  currentWidget: AjfReportWidget | null = null;\n  formsVariables: AjfFormVariables[];\n  formsVariablesName: string[] = [];\n  formsVariablesType: string[] = [];\n  isValid: boolean;\n\n  @Input()\n  formula: string;\n\n  @Input()\n  isFormula: boolean;\n\n  @Input()\n  labelText: string;\n\n  @Input()\n  aggregation: number;\n\n  @Input()\n  init: boolean;\n\n  @Input()\n  level: number;\n\n  @Input()\n  index: number;\n\n  @Input()\n  mainIndex: number;\n\n  @Input()\n  reference: any;\n\n  @ViewChild('formulaTextArea', {static: true}) formulaTextArea: any;\n  @ViewChild('errorMessage', {static: true}) errorMessage: any;\n  @ViewChild(AjfMonacoEditor, {static: false}) monacoEditor: AjfMonacoEditor;\n\n  private _formAnalyzerSub: Subscription = Subscription.EMPTY;\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n  private _first: boolean = true;\n\n  constructor(\n    private _service: AjfReportBuilderService,\n    private _dialogRef: MatDialogRef<AjfReportBuilderFormsAnalyzerDialog>,\n    _: AjfValidationService\n  ) {\n    if (this.init == false) {\n      this.formulaText = '';\n      this.aggregationType = AjfAggregationType.Sum;\n    }\n    this._currentWidgetSub = this._service.currentWidget\n      .subscribe(x => {\n        if (x != null) {\n\n          this.currentWidget = <AjfReportDataWidget>x;\n\n          if (this.currentWidget.widgetType == 2) {\n            let myObj: AjfReportImageWidget = <AjfReportImageWidget>this.currentWidget;\n            if (myObj.imageType == AjfImageType.Flag) {\n              this.formula = (myObj.flag) ? myObj.flag.formula : '';\n            } else {\n              this.formula = (myObj.icon) ? myObj.icon.formula : '';\n            }\n          }\n\n        }\n      });\n\n    this._formAnalyzerSub = this._service.formsVariables\n      .subscribe((x) => {\n        if (x != null) {\n          this.formsVariables = x;\n        }\n      });\n  }\n\n  onEditorInit(): void {\n    monaco.languages.typescript.javascriptDefaults.setDiagnosticsOptions({\n      noSemanticValidation: false,\n      noSyntaxValidation: false\n    });\n\n    monaco.languages.typescript.javascriptDefaults.setCompilerOptions({\n      target: monaco.languages.typescript.ScriptTarget.ES2015,\n      allowNonTsExtensions: true,\n      allowJs: true,\n      module: monaco.languages.typescript.ModuleKind.None\n    });\n\n    try {\n      monaco.languages.typescript.javascriptDefaults.addExtraLib(\n        '', 'condition-editor-variables.d.ts'\n      );\n    } catch (e) {\n      monaco.languages.typescript.javascriptDefaults\n        ._extraLibs['condition-editor-variables.d.ts'] = '';\n    }\n    try {\n      monaco.languages.typescript.javascriptDefaults.addExtraLib(\n        '', 'condition-editor-functions.d.ts'\n      );\n    } catch (e) {\n      monaco.languages.typescript.javascriptDefaults\n        ._extraLibs['condition-editor-functions.d.ts'] = '';\n    }\n\n    this._initFormsVariablesNames();\n    this._updateVariables();\n    this._updateFunctions();\n  }\n\n\n  private _initFormsVariablesNames(): void {\n    this.formsVariables.forEach((formVar) => {\n      formVar.names.forEach((name) => {\n        this.formsVariablesName.push(name);\n      });\n      formVar.types.forEach((type) => {\n        this.formsVariablesType.push(this._fieldVarType(type) || '');\n      });\n    });\n  }\n\n\n  private _updateVariables(): void {\n    if (this.formsVariables == null) { return; }\n    try {\n      let value: string = '';\n\n      for (let i = 0; i < this.formsVariablesName.length; i++) {\n        value += `declare const ${this.formsVariablesName[i]}: ${this.formsVariablesType[i]};`;\n      }\n\n      value += `\\n`;\n      monaco.languages.typescript.javascriptDefaults\n        ._extraLibs['condition-editor-variables.d.ts'] = value;\n    } catch (e) { }\n  }\n\n  private _updateFunctions(): void {\n    try {\n      monaco.languages.typescript.javascriptDefaults\n        ._extraLibs['condition-editor-functions.d.ts'] = AjfValidatedProperty.UTIL_FUNCTIONS;\n    } catch (e) { }\n  }\n\n  private _fieldVarType(fieldType: AjfFieldType): string | null {\n    switch (fieldType) {\n      case AjfFieldType.Boolean:\n        return 'boolean';\n      case AjfFieldType.Date:\n      case AjfFieldType.DateInput:\n      case AjfFieldType.Time:\n        return 'Date';\n      case AjfFieldType.Empty:\n        return 'void';\n      case AjfFieldType.Formula:\n        return 'number';\n      case AjfFieldType.MultipleChoice:\n      case AjfFieldType.SingleChoice:\n        return 'any';\n      case AjfFieldType.Number:\n        return 'number';\n      case AjfFieldType.Table:\n        return 'Array';\n      case AjfFieldType.String:\n      case AjfFieldType.Text:\n        return 'string';\n    }\n    return null;\n  }\n\n  setCurrent(id: number, label: string, index: number) {\n    if (!this.init) {\n      this.label = label;\n      this.init = true;\n    }\n    this.insertVariable(this.formsVariables[id].names[index] || '');\n  }\n\n  setCurrentId(id: number) {\n    this.currentId = id;\n    this.labels = this.formsVariables[id].labels;\n    this._updateVariables();\n  }\n\n  setAggregationType(type: AjfAggregationType) {\n    this.aggregationType = type;\n  }\n\n  checkValidation() {\n    if (this.validateFormula()) {\n      this.safeFormulaText = this.formulaText;\n      this.isValid = true;\n    } else {\n      this.isValid = false;\n    }\n    if (this.formulaText == '') {\n      this.isValid = false;\n    }\n  }\n\n  validateFormula(): boolean {\n    if (this.formulaText == '') {\n      this.init = false;\n    }\n    if (this.formsVariables == null) {\n      return false;\n    } else {\n      return AjfFormula.validate(this.formulaText, this.formsVariablesName);\n    }\n  }\n\n  saveDataset() {\n    if (this.currentWidget != null) {\n      switch (this.currentWidget.widgetType) {\n        case 2:\n          this.saveImageFormula();\n          break;\n        case 3:\n          this.saveFormulaHtml();\n          break;\n        case 4:\n          this.saveChartFormula();\n          break;\n        case 5:\n          this.saveTableFormula();\n          break;\n      }\n    }\n    this.close();\n  }\n\n  saveImageFormula() {\n    this._service.saveImageFormula(new AjfFormula(this.formulaText));\n  }\n\n  saveFormulaHtml() {\n    this._service.saveFormulaToHtml(this.formulaText, this.reference);\n  }\n\n  saveChartFormula(): void {\n    this._service.saveChartFormula(\n      this.label,\n      this.level,\n      this.mainIndex,\n      this.index,\n      this.formulaText,\n      this.aggregationType);\n  }\n\n  saveTableFormula(): void {\n    this._service.saveTableFormula(\n      this.label,\n      this.aggregationType,\n      this.formulaText,\n      this.mainIndex,\n      this.index);\n  }\n\n  hideErrorMessage(): void {\n    if (this.errorMessage == null) {\n      return;\n    }\n  }\n\n  insertVariable(variable: string): void {\n    if (this.monacoEditor != null && this.monacoEditor.editor != null) {\n      const editor = this.monacoEditor.editor;\n      let value: string[] = editor.getValue().split('\\n');\n      let position: { column: number, lineNumber: number } = editor.getPosition();\n      const ln = position.lineNumber - 1;\n      let line = value[ln];\n      let col = position.column - 1;\n      line = line.substring(0, col) + variable + line.substring(col);\n      value[ln] = line;\n      position.column += variable.length;\n      this.monacoEditor.value = value.join('\\n');\n      editor.setPosition(position);\n      editor.focus();\n      this.formulaText = editor.getValue();\n      this.checkValidation();\n    }\n  }\n\n  setVariable(variable: string): void {\n    if (this.monacoEditor != null && this.monacoEditor.editor != null) {\n      const editor = this.monacoEditor.editor;\n      editor.setValue(variable);\n    }\n  }\n\n  reset() {\n    this.formulaText = '';\n    this.aggregationType = AjfAggregationType.None;\n  }\n\n  close() {\n    this.reset();\n    this._dialogRef.close();\n  }\n\n  ngOnInit() {\n    this.formulaText = this.formula;\n    this.aggregationType = this.aggregation;\n    this.label = this.labelText;\n\n    if (this.formulaText == '' || this.formulaText == null) {\n      this.isValid = false;\n    } else {\n      this.isValid = true;\n    }\n\n  }\n\n  ngAfterViewChecked() {\n    if (this._first && this.monacoEditor != null && this.monacoEditor.editor != null) {\n      this.insertVariable(this.formulaText || '');\n      this._first = false;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._formAnalyzerSub.unsubscribe();\n    this._currentWidgetSub.unsubscribe();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\n\nimport {Subscription} from 'rxjs';\n\nimport {AjfForm} from '@ajf/core/forms';\nimport {\n  AjfAggregationType,\n  AjfChartType,\n  AjfDataset,\n  AjfReportChartWidget,\n  AjfReportDataWidget,\n  AjfReportWidgetType,\n  AjfReportWidget,\n} from '@ajf/core/reports';\n\nimport {AjfReportBuilderFormsAnalyzerDialog} from './forms-analyzer-dialog';\nimport {AjfFormVariables} from './models';\nimport {AjfReportBuilderService} from './report-builder-service';\n\n/**\n * this component provides the support for connect the form fields with the report\n *\n * @export\n */\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-forms-analyzer',\n  templateUrl: 'forms-analyzer.html',\n  styleUrls: ['forms-analyzer.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderFormsAnalyzer implements OnDestroy {\n  currentWidget: AjfReportWidget | null = null;\n\n  forms: AjfForm[] = [];\n\n  formsVariables: AjfFormVariables[];\n  choicesOrigins: any = {};\n\n  dialogRef: MatDialogRef<AjfReportBuilderFormsAnalyzerDialog>;\n\n  currentMainDataIndex: number = -1;\n  private _dataset: AjfDataset[][] = [];\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n  private _formAnalyzerSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n    private _service: AjfReportBuilderService,\n    public dialog: MatDialog\n  ) {\n    this._currentWidgetSub = this._service.currentWidget\n      .subscribe(x => {\n        if (x != null) {\n          this.currentWidget = x;\n          // this._dataset = myObj.dataset;\n        } else {\n          this.currentWidget = null;\n        }\n      });\n\n\n    this._formAnalyzerSub = this._service.formsVariables\n      .subscribe((x) => {\n        if (x != null) {\n          this.formsVariables = x;\n        }\n      });\n\n\n  }\n\n  setCurrentIndex(index: number) {\n    this.currentMainDataIndex = index;\n  }\n\n  isSelected(index: number): string {\n    if (index === this.currentMainDataIndex) {\n      return 'primary';\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   *  get the X components label of the chart.\n   *  they are contained in the first row of dataset\n   *\n   *\n   * @memberof AjfReportBuilderFormsAnalyzer\n   */\n  getMainData(): string[] {\n    if (this._dataset[0] != null) {\n      let mainData: string[] = [];\n\n      for (let i = 0; i < this._dataset[0].length; i++) {\n        mainData.push(this._dataset[0][i].label);\n      }\n      return mainData;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   *  get the Y components label of the chart.\n   *  they are contained in the first column of dataset\n   *\n   *\n   * @memberof AjfReportBuilderFormsAnalyzer\n   */\n  getDataset(): string[] {\n    let dataset: string[] = [];\n    if (this._dataset[0] != null) {\n      for (let i = 1; i < this._dataset.length; i++) {\n        dataset.push(this._dataset[i][0].label);\n      }\n      return dataset;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * get the related data label of the chart.\n   * they are contained in the row of the Y component\n   *\n   *\n   * @memberof AjfReportBuilderFormsAnalyzer\n   */\n  getRelatedData(): string[] {\n    if (this._dataset[this.currentMainDataIndex + 1] != null) {\n      let relatedData: string[] = [];\n\n      for (let i = 1; i < this._dataset[this.currentMainDataIndex + 1].length; i++) {\n        relatedData.push(this._dataset[this.currentMainDataIndex + 1][i].label);\n      }\n      return relatedData;\n    } else {\n      return [];\n    }\n  }\n\n  getTableHeader(): string[] {\n    let mainData: string[] = [];\n    if (this._dataset != null) {\n      for (let i = 0; i < this._dataset.length; i++) {\n        if (this._dataset[i][0] != null) {\n          mainData.push(this._dataset[i][0].label);\n        }\n      }\n    }\n    return mainData;\n  }\n\n  getTableData(): string[] {\n    if (this._dataset[this.currentMainDataIndex] != null) {\n      let tableData: string[] = [];\n\n      for (let i = 1; i < this._dataset[this.currentMainDataIndex].length; i++) {\n        if (this._dataset[this.currentMainDataIndex][i] != null) {\n          tableData.push(this._dataset[this.currentMainDataIndex][i].label);\n        }\n      }\n      return tableData;\n    } else {\n      return [];\n    }\n  }\n\n  needMainData(): boolean {\n    let myObj = <AjfReportChartWidget>this.currentWidget;\n    if (\n      myObj.chartType === AjfChartType.Scatter ||\n      myObj.chartType === AjfChartType.Bubble\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  removeMainData(index: number) {\n    this._service.removeMainData(index);\n  }\n\n  removeDataset(index: number) {\n    this.currentMainDataIndex = index;\n    this._service.removeRelatedData(this.currentMainDataIndex, -1);\n  }\n  removeTableMainData(index: number) {\n    this._service.removeTableMainData(index);\n  }\n\n  removeRelatedData(index: number) {\n    this._service.removeRelatedData(this.currentMainDataIndex, index);\n  }\n\n  removeData(mainIndex: number, index: number) {\n    this._service.removeData(mainIndex, index);\n  }\n\n  /**\n   *\n   *\n   *\n   * @param index\n   * @param editMode\n   *\n   * @memberof AjfReportBuilderFormsAnalyzer\n   */\n  openDialog(level: number, mainIndex: number, index: number, editMode: boolean) {\n\n    this.dialogRef = this.dialog.open(AjfReportBuilderFormsAnalyzerDialog);\n\n    if (editMode) {\n      if (level === 1 && index === -1) {\n        index = 0;\n      }\n      if (level === 1) {\n        if (\n          this.currentWidget != null &&\n          this.currentWidget.widgetType == AjfReportWidgetType.Chart\n        ) {\n          mainIndex++;\n        }\n        index++;\n      }\n\n      this.dialogRef.componentInstance.labelText =\n        this._dataset[mainIndex] &&\n        this._dataset[mainIndex][index].label || '';\n      /* this.dialogRef.componentInstance.formula =\n        this._dataset[mainIndex] &&\n        this._dataset[mainIndex][index].formula.formula || ''; */\n      this.dialogRef.componentInstance.aggregation =\n        this._dataset[mainIndex] &&\n        this._dataset[mainIndex][index].aggregation.aggregation || AjfAggregationType.None;\n    } else {\n      this.dialogRef.componentInstance.labelText = '';\n      this.dialogRef.componentInstance.formula = '';\n      this.dialogRef.componentInstance.aggregation = 0;\n    }\n\n    // this.dialogRef.componentInstance.formsVariables = this.formsVariables;\n    this.dialogRef.componentInstance.currentWidget = <AjfReportDataWidget>this.currentWidget;\n    this.dialogRef.componentInstance.level = level;\n    this.dialogRef.componentInstance.mainIndex = mainIndex;\n    this.dialogRef.componentInstance.index = index;\n    this.dialogRef.componentInstance.init = false;\n  }\n\n  openDialogAddMainData() {\n    this.openDialog(0, -1, -1, false);\n  }\n\n  openDialogChartEditMainData() {\n    this.openDialog(0, 0, this.currentMainDataIndex, true);\n  }\n\n  openDialogTableEditMainData() {\n    this.openDialog(0, this.currentMainDataIndex, 0, true);\n  }\n\n  openDialogChartAddDataset() {\n    this.openDialog(1, -1, -1, false);\n  }\n  openDialogTableAddDataset() {\n    this.openDialog(1, this.currentMainDataIndex, -1, false);\n  }\n  openDialogChartAddDataOfDataset() {\n    this.openDialog(1, this.currentMainDataIndex, -1, false);\n  }\n  openDialogChartEditDataset() {\n    this.openDialog(1, this.currentMainDataIndex, -1, true);\n  }\n  openDialogTableEditDataset(index: number) {\n    this.openDialog(1, this.currentMainDataIndex, index, true);\n  }\n  openDialogChartEditDataOfDataset(index: number) {\n    this.openDialog(1, this.currentMainDataIndex, index, true);\n  }\n\n  ngOnDestroy(): void {\n    this._currentWidgetSub.unsubscribe();\n    this._formAnalyzerSub.unsubscribe();\n  }\n\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Injectable, Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'ajfImageFilter'\n})\n@Injectable()\nexport class AjfImageFilterPipe implements PipeTransform {\n  transform(items: any[], args: any): any {\n    return items.filter(item =>\n      (args.length === 0) || item.info.toLowerCase().includes(args.toLowerCase()));\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy, Component, Input, Output, EventEmitter, ViewEncapsulation\n} from '@angular/core';\n\nimport {AjfReportBuilderService} from './report-builder-service';\n\n/**\n * this component handle a group of image object\n * there are 2 types of view\n *  ajf-icon and class\n *\n * take a json in input\n *  'icon': 'false', // if true ajf-icon activated\n *  'class': ['flag-icon'], // add class in object style\n *  'prefixClass': 'flag-icon-', // prefix of class contained on data set\n *  'title': 'flags', title of data set\n *  'data': [\n *    {\n *      'class': 'dz', strind added on prefix\n *      'info': 'Algeria' info related to object (exploit on toolTip)\n *    }\n *  ]\n * };\n *\n * @export\n */\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-image-group',\n  templateUrl: 'image-group.html',\n  styleUrls: ['image-group.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderImageGroup  {\n\n  private _icon: {fontSet: string, fontIcon: string} | null = null;\n  private _classes: string = '';\n\n  get icon(): {fontSet: string, fontIcon: string} | null { return this._icon; }\n  get classes(): string { return this._classes; }\n\n  open: boolean = false;\n  valueToSearch: string = '';\n\n  @Input()\n  data: any;\n\n  /**\n   * this event is fired when the user click on formula button on quill editor rool barƒ\n   *\n   * @memberof QuillEditorComponent\n   */\n  @Output() formulaClick: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private _service: AjfReportBuilderService) { }\n\n\n  setIcon(fontSet: string, fontIcon: string) {\n    this._icon = {fontSet, fontIcon};\n    this._service.setIcon(this._icon);\n  }\n\n  setFlag(value: string) {\n    this._classes = value;\n    this._service.setFlag(value);\n  }\n\n  setSearch(value: any) {\n    this.valueToSearch = value.currentTarget.value;\n  }\n\n  emitFormula() {\n    this.formulaClick.emit();\n  }\n\n  getFlag(value: string) {\n    let returnValue = '';\n\n    for (let i = 0; i < this.data.class.length; i++) {\n      returnValue += this.data.class[i] + ' ';\n    }\n\n    returnValue += this.data.prefixClass + value;\n    return returnValue;\n  }\n\n  toggle() {\n    this.open = !this.open;\n  }\n\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy, Component, EventEmitter, OnInit, OnChanges, OnDestroy, ViewEncapsulation\n} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {Observable, Subscription} from 'rxjs';\nimport {distinctUntilChanged, filter, map, startWith, withLatestFrom} from 'rxjs/operators';\n\nimport {\n  AjfAggregationType, AjfReportChartWidget, AjfReportTextWidget,\n  AjfReportWidget, AjfReportWidgetType, AjfReportLayoutWidget\n} from '@ajf/core/reports';\nimport {AjfForm} from '@ajf/core/forms';\nimport {AjfCondition} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\n\nimport {AjfReportBuilderFormsAnalyzerDialog} from './forms-analyzer-dialog';\nimport {AjfFormVariables} from './models';\nimport {AjfReportBuilderService} from './report-builder-service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-properties',\n  templateUrl: 'properties.html',\n  styleUrls: ['properties.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderProperties implements OnInit, OnChanges, OnDestroy {\n  /**\n   *  true when the first time chart type is setted\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  initChartType = false;\n\n  /**\n   * the current widget\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  currentWidget: AjfReportWidget | null = null;\n  get currentLayoutWidget(): AjfReportLayoutWidget {\n    return this.currentWidget as AjfReportLayoutWidget;\n  }\n  get currentTextWidget(): AjfReportTextWidget {\n    return this.currentWidget as AjfReportTextWidget;\n  }\n\n  /**\n   * this array contains the forms exploited for generate data labels\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  forms: AjfForm[] = [];\n\n\n  colors: string[] = [];\n\n  /**\n   * the name of the section that contains the currentWidget\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  origin: string;\n\n  /**\n   * FAKE DATA\n   */\n\n  formsJson: any = {forms: []};\n\n  /**\n   * WIDGET\n   */\n\n  widgetName = '';\n  getHTML: Observable<string | undefined>;\n  getHeightWidget: Observable<number | undefined>;\n  getFontSizeWidget: Observable<number | undefined>;\n  getFontAlignWidget: Observable<number | undefined>;\n  getBackgroundColorWidget: Observable<string>;\n  getColorWidget: Observable<string>;\n  getStyle: Observable<any>;\n  getChartBackgroundColor: Observable<string[]>;\n  getChartBorderColor: Observable<string[]>;\n  getVisibility: Observable<AjfCondition>;\n  getColor: Observable<String[]>;\n\n  marginExpanded: boolean = false;\n  getMarginWidget: Observable<number[] | undefined>;\n  getMarginWidgetTop: Observable<number>;\n  getMarginWidgetRight: Observable<number>;\n  getMarginWidgetBottom: Observable<number>;\n  getMarginWidgetLeft: Observable<number>;\n\n  paddingExpanded: boolean = false;\n  getPaddingWidget: Observable<number[] | undefined>;\n  getPaddingWidgetTop: Observable<number>;\n  getPaddingWidgetRight: Observable<number>;\n  getPaddingWidgetBottom: Observable<number>;\n  getPaddingWidgetLeft: Observable<number>;\n\n  borderWidthExpanded: boolean = false;\n  getBorderWidthWidget: Observable<number[] | undefined>;\n  getBorderWidthWidgetTop: Observable<number>;\n  getBorderWidthWidgetRight: Observable<number>;\n  getBorderWidthWidgetBottom: Observable<number>;\n  getBorderWidthWidgetLeft: Observable<number>;\n\n  borderRadiusExpanded: boolean = false;\n  getBorderRadiusWidget: Observable<number[] | undefined>;\n  getBorderRadiusWidgetTopLeft: Observable<number>;\n  getBorderRadiusWidgetTopRight: Observable<number>;\n  getBorderRadiusWidgetBottomRight: Observable<number>;\n  getBorderRadiusWidgetBottomLeft: Observable<number>;\n\n  backgroundColor = '#127bdc';\n  styleBackgroundColor = 'rgb(255,255,255,0)';\n  borderColor = '#127bdc';\n  styleColor = 'rgb(0,0,0,0)';\n  wbackgroundColor: string;\n  fontSize: string;\n  bubble: string;\n\n  dialogRef: MatDialogRef<AjfReportBuilderFormsAnalyzerDialog>;\n  container: AjfFormVariables;\n\n\n\n  align = [false, 'center', 'right', 'justify'];\n\n  fonts = [\n    false,\n    'blackr',\n    'black-italic',\n    'bold',\n    'bold-condensed',\n    'bold-condensed-italic',\n    'bold-italic',\n    'condensed',\n    'condensed-italic',\n    'italic',\n    'light',\n    'light-italic',\n    'medium',\n    'medium-italic',\n    'thinr',\n    'thin-italic'\n  ];\n  currentModule: any = {};\n  quillModules = {\n    toolbar: [\n      ['formula'],\n      ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n      // ['blockquote', 'code-block'],\n\n      [{ 'header': 1 }, { 'header': 2 }],               // custom button values\n      [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n      [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript\n      // [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\n      // [{ 'direction': 'rtl' }],                         // text direction\n\n      [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\n      [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n\n      [{ 'color': this.colors },\n      { 'background': this.colors }],          // dropdown with defaults from theme\n      [{ 'font': this.fonts }],\n      [{ 'align': this.align }],\n\n      ['clean'],                                         // remove formatting button\n\n      // ['link', 'class', 'video']                         // link and image, video\n    ]\n  };\n\n  /**\n   * CHART\n   */\n\n\n  getChartYLabels: Observable<string[]>;\n\n  chartBorderColor: string[] = [];\n  chartBorderWidth = 3;\n\n  /**\n   *\n   * IMAGE\n   */\n\n  imageUrl = 'https://angular.io/resources/images/logos/angular2/angular.png';\n\n  /**\n   *\n   * TEXT\n   */\n\n  htmlText = '';\n\n\n  /**\n   * these variables indicate that the user want to change section\n   */\n  reportStyles = false;\n  sectionStyles = false;\n  widgetStyles = true;\n  sectionColor = false;\n  widgetColor = false;\n  visibilitySection = false;\n  currentColor = '';\n\n  private _icon: { fontSet: string, fontIcon: string } | null = null;\n  get icon(): { fontSet: string, fontIcon: string } | null { return this._icon; }\n\n  iconSet: any = {\n    'icon': 'true',\n    'title': 'report',\n    'data': null\n  };\n\n  flagSet: any = {\n    'icon': 'false',\n    'class': ['flag-icon'],\n    'prefixClass': 'flag-icon-',\n    'title': 'flags',\n    'data': [\n      {\n        'class': 'dz',\n        'info': 'Algeria'\n      },\n      {\n        'class': 'ao',\n        'info': 'Angola'\n      },\n      {\n        'class': 'bj',\n        'info': 'Benin'\n      },\n      {\n        'class': 'bw',\n        'info': 'Botswana'\n      },\n      {\n        'class': 'bf',\n        'info': 'Burkina Faso'\n      },\n      {\n        'class': 'bi',\n        'info': 'Burundi'\n      },\n      {\n        'class': 'cm',\n        'info': 'Cameroon'\n      },\n      {\n        'class': 'cv',\n        'info': 'Cabo Verde'\n      },\n      {\n        'class': 'cf',\n        'info': 'The Central African Republic'\n      },\n      {\n        'class': 'td',\n        'info': 'Chad'\n      },\n      {\n        'class': 'km',\n        'info': 'The Comoros'\n      },\n      {\n        'class': 'ci',\n        'info': 'Cote D\\'avoire'\n      },\n      {\n        'class': 'cd',\n        'info': 'The Democratic Republic of Congo'\n      },\n      {\n        'class': 'dj',\n        'info': 'Dijibouti'\n      },\n      {\n        'class': 'eg',\n        'info': 'Egypt'\n      },\n      {\n        'class': 'gq',\n        'info': 'Equatorial Guinea'\n      },\n      {\n        'class': 'er',\n        'info': 'Eritrea'\n      },\n      {\n        'class': 'et',\n        'info': 'Ethiopia'\n      },\n      {\n        'class': 'tf',\n        'info': 'French Southern Territories'\n      },\n      {\n        'class': 'ga',\n        'info': 'Gabon'\n      },\n      {\n        'class': 'gm',\n        'info': 'The Gambia'\n      },\n      {\n        'class': 'gh',\n        'info': 'Ghana'\n      },\n      {\n        'class': 'gn',\n        'info': 'Guinea'\n      },\n      {\n        'class': 'gw',\n        'info': 'Guinea-Bissau'\n      },\n      {\n        'class': 'ke',\n        'info': 'Kenya'\n      },\n      {\n        'class': 'ls',\n        'info': 'Leshotho'\n      },\n      {\n        'class': 'lr',\n        'info': 'Liberia'\n      },\n      {\n        'class': 'ly',\n        'info': 'Libya'\n      },\n      {\n        'class': 'mg',\n        'info': 'Madagascar'\n      },\n      {\n        'class': 'mw',\n        'info': 'Malawy'\n      },\n      {\n        'class': 'ml',\n        'info': 'Mali'\n      },\n      {\n        'class': 'mr',\n        'info': 'Mauritania'\n      },\n      {\n        'class': 'mu',\n        'info': 'Mauritius'\n      },\n      {\n        'class': 'yt',\n        'info': 'Mayotte'\n      },\n      {\n        'class': 'ma',\n        'info': 'Marocco'\n      },\n      {\n        'class': 'mz',\n        'info': 'Mozambique'\n      },\n      {\n        'class': 'na',\n        'info': 'Namibia'\n      },\n      {\n        'class': 'ne',\n        'info': 'Niger'\n      },\n      {\n        'class': 'ng',\n        'info': 'Nigeria'\n      },\n      {\n        'class': 'cg',\n        'info': 'Republic of the Congo'\n      },\n      {\n        'class': 'rw',\n        'info': 'Rwnda'\n      },\n      {\n        'class': 're',\n        'info': 'rèunion'\n      },\n      {\n        'class': 'sh',\n        'info': 'Saint Helena, Ascension and Tristan da Cunha'\n      },\n      {\n        'class': 'st',\n        'info': 'Sao Tome and Principe'\n      },\n      {\n        'class': 'sn',\n        'info': 'Senegal'\n      },\n      {\n        'class': 'sc',\n        'info': 'Seychelles'\n      },\n      {\n        'class': 'sl',\n        'info': 'Sierra Leone'\n      },\n      {\n        'class': 'so',\n        'info': 'Somalia'\n      },\n      {\n        'class': 'za',\n        'info': 'South Africa'\n      },\n      {\n        'class': 'ss',\n        'info': 'South Sudan'\n      },\n      {\n        'class': 'sd',\n        'info': 'Sudan'\n      },\n      {\n        'class': 'sz',\n        'info': 'Swaziland'\n      },\n      {\n        'class': 'tz',\n        'info': 'Tanzania'\n      },\n      {\n        'class': 'tg',\n        'info': 'Togo'\n      },\n      {\n        'class': 'tn',\n        'info': 'Tunisia'\n      },\n      {\n        'class': 'ug',\n        'info': 'Uganda'\n      },\n      {\n        'class': 'eh',\n        'info': 'Western Sahara'\n      },\n      {\n        'class': 'zm',\n        'info': 'Zambia'\n      },\n      {\n        'class': 'zw',\n        'info': 'Zimbawe'\n      },\n      {\n        'class': 'iq',\n        'info': 'Iraq'\n      },\n      {\n        'class': 'lb',\n        'info': 'Lebanon'\n      },\n      {\n        'class': 'bd',\n        'info': 'Bangladesh'\n      },\n      {\n        'class': 'ir',\n        'info': 'Iran (Islamic Republic of)'\n      },\n      {\n        'class': 'my',\n        'info': 'Malaysia'\n      },\n      {\n        'class': 'np',\n        'info': 'Nepal'\n      },\n      {\n        'class': 'pk',\n        'info': 'Pakistan'\n      },\n      {\n        'class': 'th',\n        'info': 'Thailand'\n      },\n      {\n        'class': 'jo',\n        'info': 'Jordan'\n      },\n      {\n        'class': 'ye',\n        'info': 'Yemen'\n      }\n    ]\n  };\n\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n  private _formsSub: Subscription = Subscription.EMPTY;\n  private _colorSub: Subscription = Subscription.EMPTY;\n  private _headerStyleSub: Subscription = Subscription.EMPTY;\n  private _contentStylesSub: Subscription = Subscription.EMPTY;\n  private _footerStylesSub: Subscription = Subscription.EMPTY;\n  private _originSub: Subscription = Subscription.EMPTY;\n  private _stylesUpdatesSubs: Subscription = Subscription.EMPTY;\n\n  private _updateWidgetMarginEvt: EventEmitter<{ idx: number, value: any }> =\n  new EventEmitter<{ idx: number, value: any }>();\n  private _updateWidgetPaddingEvt: EventEmitter<{ idx: number, value: any }> =\n  new EventEmitter<{ idx: number, value: any }>();\n  private _updateWidgetBorderWidthEvt: EventEmitter<{ idx: number, value: any }> =\n  new EventEmitter<{ idx: number, value: any }>();\n  private _updateWidgetBorderRadiusEvt: EventEmitter<{ idx: number, value: any }> =\n  new EventEmitter<{ idx: number, value: any }>();\n\n  constructor(\n    private _dialog: MatDialog,\n    private _service: AjfReportBuilderService\n  ) {\n    this.setForms();\n\n    this.iconSet.data = Object.keys(_service.iconSets).filter(x => x != 'ajf-icon').map(i => {\n      return { name: i, icons: _service.iconSets[i] };\n    });\n\n    this._headerStyleSub = this._service.headerStyles.subscribe(s => {\n      if (s['background-color'] != null) {\n        this.styleBackgroundColor = s['background-color'];\n      }\n    });\n    this._contentStylesSub = this._service.contentStyles.subscribe(s => {\n      if (s['background-color'] != null) {\n        this.styleBackgroundColor = s['background-color'];\n      }\n    });\n    this._footerStylesSub = this._service.footerStyles.subscribe(s => {\n      if (s['background-color'] != null) {\n        this.styleBackgroundColor = s['background-color'];\n      }\n    });\n    this._originSub = this._service.origin.subscribe(s => {\n      this.origin = s;\n    });\n  }\n\n\n  /**\n   *\n   * UTILS\n   */\n\n\n  /**\n   * return a number value\n   *\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  toNumber(value: string): number {\n    let numberPattern = /^(-)?\\d+/g;\n\n    if (value == null) {\n      return 0;\n    } else {\n      const matches = value.match(numberPattern);\n      if (matches == null || matches.length == 0) { return 0; }\n      return Number(matches[0]);\n    }\n  }\n\n  toNumberArray(value: string): number[] {\n    if (value == null) {\n      return [];\n    } else {\n      return (value || '').replace('px', '').split(' ')\n        .filter(v => v !== '' && v != null)\n        .map(v => this.toNumber(v));\n    }\n  }\n\n  fillPxNumberArray(value: number[]) {\n    const vl = value.length;\n    switch (vl) {\n      case 0:\n        return [0, 0, 0, 0];\n      case 1:\n        const v = value[0];\n        return [v, v, v, v];\n      case 2:\n        const v21 = value[0];\n        const v22 = value[1];\n        return [v21, v22, v21, v22];\n      case 3:\n        const v31 = value[0];\n        const v32 = value[1];\n        const v33 = value[2];\n        return [v31, v32, v33, v32];\n      default:\n        return value;\n    }\n  }\n\n  percent(value: number) {\n    let temp = this.roundTo(value * 100, 3);\n    return temp;\n  }\n\n  roundTo(value: number, decimalPositions: number) {\n    let i = value * Math.pow(10, decimalPositions);\n\n    i = Math.floor(i);\n\n    return i / Math.pow(10, decimalPositions);\n  }\n  /**\n   * call to service to set the forms\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n\n  setForms(): void {\n    let forms: AjfForm[] = [];\n    try {\n      for (let i = 0; i < this.formsJson.forms.length; i++) {\n        forms.push(AjfForm.fromJson(this.formsJson.forms[i]));\n      }\n      this._service.setReportForms(forms);\n    } catch (e) { }\n  }\n\n  /**\n   * call to service to set the width of the idx column of layout widget\n   *\n   * @param col\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  instantColumnValue(col: number, idx: number) {\n    this._service.instantColumnValue(col, idx);\n  }\n\n  /**\n   *  force copy of style\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  // TODO delete this\n  setStyle() {\n    if (this.currentWidget == null) { return; }\n    this.currentWidget.styles = deepCopy(this.currentWidget.styles);\n    this._service.updateCurrentWidget(this.currentWidget);\n  }\n\n  /**\n   * call to service to add new style to widget\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setWidgetStyles(label: string, value: any) {\n    this._service.setWidgetStyles(label, value);\n    this.currentColor = value;\n    this.setStyle();\n  }\n\n  setWidgetMargin(idx: number, value: any): void {\n    this._updateWidgetMarginEvt.emit({ idx, value });\n  }\n\n  setWidgetPadding(idx: number, value: any): void {\n    this._updateWidgetPaddingEvt.emit({ idx, value });\n  }\n\n  setWidgetBorderWidth(idx: number, value: any): void {\n    this._updateWidgetBorderWidthEvt.emit({ idx, value });\n  }\n\n  setWidgetBorderRadius(idx: number, value: any): void {\n    this._updateWidgetBorderRadiusEvt.emit({ idx, value });\n  }\n\n  /**\n   * call to service to add new style to section\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setSectionStyles(label: string, value: any) {\n    this._service.setSectionStyles(this.origin, label, value);\n    this.styleColor = value;\n  }\n\n\n  /**\n   * call to service to add new style to report\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setReportStyles(label: string, value: any) {\n    this._service.setReportStyles(label, value);\n    this.styleBackgroundColor = value;\n  }\n\n  /**\n   * add custom color\n   *\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  addCustomColor() {\n    this._service.addCustomColor(this.currentColor);\n    this._service.updateCurrentWidget(this.currentWidget);\n  }\n\n  /**\n   * get the module exploit to quill text editor\n   *\n   * @returns\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  getModule() {\n    return this.quillModules;\n  }\n\n  /**\n   * true is the input type value is equal to current widget type\n   *\n   * @param value\n   * @returns\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  isChartTypeSelected(value: number) {\n    if (this.initChartType == false) {\n      return false;\n    }\n    const myObj = <AjfReportChartWidget>this.currentWidget;\n    if (value === myObj.chartType) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n\n  /* layout functions */\n\n  /**\n   * call to service to add a column to current layout widget\n   *\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  addColumn() {\n    this._service.addColumn();\n  }\n\n  /**\n   * call to service to add a obj to current layout widget\n   *\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  fixedColumn(idx: number) {\n    this._service.fixedColumn(idx);\n  }\n\n  /**\n   * call to service to remove obj of current layout widget\n   *\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  unfixedColumn(idx: number) {\n    this._service.remove('unfixedColumn', idx);\n  }\n\n  /* image functions */\n\n  /**\n   * call to service to set image url\n   *\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setImageUrl() {\n    this._service.setImageUrl(this.imageUrl);\n  }\n\n  setIcon(icon: { fontSet: string, fontIcon: string }) {\n    this._icon = icon;\n    this._service.setIcon(icon);\n  }\n\n  /* chart functions */\n\n  /**\n   * call to service to set the type of chart\n   *\n   * @param type\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setChartType(type: number) {\n    this.initChartType = true;\n    this._service.setChartType(type);\n  }\n\n  setChartBorderColor(value: number) {\n    this._service.setChartBorderWidth(value);\n  }\n\n  tabValue: string = 'backgroundColor';\n  setTab(event: any) {\n    if (event.index === 0) {\n      this.tabValue = 'backgroundColor';\n    } else {\n      this.tabValue = 'borderColor';\n    }\n  }\n\n  /**\n   * call to service to remove background color to current chart\n   *\n   * @param index\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  removeChartBackgroundColor(index: number) {\n    this._service.removeChartBackgroundColor(index);\n  }\n\n  /**\n   * call to service to remove border color to current chart\n   *\n   * @param index\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  removeChartBorderColor(index: number) {\n    this._service.removeChartBorderColor(index);\n  }\n\n  hideMenu() {\n    this._service.updateCurrentWidget(null);\n  }\n\n  openFormulaDialog(event: any) {\n    this.dialogRef = this._dialog.open(AjfReportBuilderFormsAnalyzerDialog);\n    this.dialogRef.componentInstance.aggregation = AjfAggregationType.None;\n    this.dialogRef.componentInstance.isFormula = true;\n    if (event != null && event.reference != null) {\n      this.dialogRef.componentInstance.formula = event.formula;\n      this.dialogRef.componentInstance.reference = event.reference;\n    }\n\n  }\n\n  ngOnInit(): void {\n    this._formsSub = this._service.reportForms\n      .subscribe(x => {\n        this.forms = x || [];\n      });\n\n    this._currentWidgetSub = this._service.currentWidget\n      .subscribe(x => {\n        if (x != null) {\n          if (this.currentWidget !== x) {\n            this.currentWidget = x;\n            this.widgetName = AjfReportWidgetType[x.widgetType];\n            this.reportStyles = false;\n            this.sectionStyles = false;\n            this.widgetStyles = false;\n            this.sectionColor = false;\n            this.widgetColor = false;\n            this.visibilitySection = false;\n          }\n        } else {\n          this.currentWidget = null;\n          this.widgetName = '';\n        }\n      });\n    this._colorSub = this._service.colors\n      .subscribe(x => {\n        if (x && x.length > 0) {\n          this.colors = x;\n\n          this.quillModules = {\n            toolbar: [\n              ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n              // ['blockquote', 'code-block'],\n              [{ 'header': 1 }, { 'header': 2 }],               // custom button values\n              [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n              [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript\n              // [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\n              // [{ 'direction': 'rtl' }],                         // text direction\n\n              [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\n              [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n\n              [{ 'color': this.colors },\n              { 'background': this.colors }],          // dropdown with defaults from theme\n              [{ 'font': this.fonts }],\n              [{ 'align': this.align }],\n              ['formula'],\n              ['clean'],                                         // remove formatting button\n\n              // ['link', 'class', 'video']                         // link and image, video\n            ]\n          };\n        }\n      });\n\n\n    this.getHTML = this._service.currentWidget.pipe(\n      map((widget: AjfReportWidget | null) => {\n        if (widget != null) {\n          const myObj = <AjfReportTextWidget>this.currentWidget;\n          return myObj.htmlText;\n        }\n        return '';\n      }),\n      distinctUntilChanged(),\n      startWith('<p><br></p>')\n    );\n\n\n    this.getHeightWidget = this._service.currentWidget.pipe(\n      filter(x => x != null),\n      map((myObj: AjfReportWidget | null) => {\n        if (myObj != null) {\n          let value = this.toNumber(myObj.styles['height']);\n          if (value != null || value != null) {\n            return value;\n          }\n        }\n      }),\n      distinctUntilChanged()\n    );\n\n    this.getFontSizeWidget = this._service.currentWidget.pipe(\n      map((myObj: AjfReportWidget | null) => {\n        if (myObj != null) {\n          return (this.toNumber(myObj.styles['font-size']) || 12);\n        }\n      }),\n      distinctUntilChanged()\n    );\n\n    this.getFontAlignWidget = this._service.currentWidget.pipe(\n      map((myObj: AjfReportWidget | null) => {\n        if (myObj != null) {\n          return ((myObj.styles['text-align']) || 'center');\n        }\n      }),\n      distinctUntilChanged()\n    );\n\n    this.getBorderWidthWidget = this._service.currentWidget.pipe(\n      map((myObj: AjfReportWidget | null) => {\n        if (myObj != null) {\n          return this.fillPxNumberArray(this.toNumberArray(myObj.styles['border-width']));\n        }\n      }),\n      distinctUntilChanged(),\n      startWith([0, 0, 0, 0])\n    );\n    this.getBorderWidthWidgetTop = this.getBorderWidthWidget.pipe(\n      filter(m => m != null),\n      map(m => m![0])\n    );\n    this.getBorderWidthWidgetRight = this.getBorderWidthWidget.pipe(\n      filter(m => m != null),\n      map(m => m![1])\n    );\n    this.getBorderWidthWidgetBottom = this.getBorderWidthWidget.pipe(\n      filter(m => m != null),\n      map(m => m![2])\n    );\n    this.getBorderWidthWidgetLeft = this.getBorderWidthWidget.pipe(\n      filter(m => m != null),\n      map(m => m![3])\n    );\n\n    this.getBorderRadiusWidget = this._service.currentWidget.pipe(\n      map((myObj: AjfReportWidget | null) => {\n        if (myObj != null) {\n          return this.fillPxNumberArray(this.toNumberArray(myObj.styles['border-radius']));\n        }\n      }),\n      distinctUntilChanged(),\n      startWith([0, 0, 0, 0])\n    );\n    this.getBorderRadiusWidgetTopLeft = this.getBorderRadiusWidget.pipe(\n      filter(m => m != null),\n      map(m => m![0])\n    );\n    this.getBorderRadiusWidgetTopRight = this.getBorderRadiusWidget.pipe(\n      filter(m => m != null),\n      map(m => m![1])\n    );\n    this.getBorderRadiusWidgetBottomRight = this.getBorderRadiusWidget.pipe(\n      filter(m => m != null),\n      map(m => m![2])\n    );\n    this.getBorderRadiusWidgetBottomLeft = this.getBorderRadiusWidget.pipe(\n      filter(m => m != null),\n      map(m => m![3])\n    );\n\n    this.getMarginWidget = this._service.currentWidget.pipe(\n      map((myObj: AjfReportWidget | null) => {\n        if (myObj != null && myObj.styles != null && myObj.styles['margin'] != null) {\n          return this.fillPxNumberArray(this.toNumberArray(myObj.styles['margin']));\n        }\n      }),\n      distinctUntilChanged(),\n      startWith([0, 0, 0, 0])\n    );\n    this.getMarginWidgetTop = this.getMarginWidget.pipe(\n      filter(m => m != null),\n      map(m => m![0])\n    );\n    this.getMarginWidgetRight = this.getMarginWidget.pipe(\n      filter(m => m != null),\n      map(m => m![1])\n    );\n    this.getMarginWidgetBottom = this.getMarginWidget.pipe(\n      filter(m => m != null),\n      map(m => m![2])\n    );\n    this.getMarginWidgetLeft = this.getMarginWidget.pipe(\n      filter(m => m != null),\n      map(m => m![3])\n    );\n\n    this.getPaddingWidget = this._service.currentWidget.pipe(\n      map((myObj: AjfReportWidget | null) => {\n        if (myObj != null && myObj.styles != null && myObj.styles['padding'] != null) {\n          return this.fillPxNumberArray(this.toNumberArray(myObj.styles['padding']));\n        }\n      }),\n      distinctUntilChanged()\n    );\n    this.getPaddingWidgetTop = this.getPaddingWidget.pipe(\n      filter(m => m != null),\n      map(m => m![0])\n    );\n    this.getPaddingWidgetRight = this.getPaddingWidget.pipe(\n      filter(m => m != null),\n      map(m => m![1])\n    );\n    this.getPaddingWidgetBottom = this.getPaddingWidget.pipe(\n      filter(m => m != null),\n      map(m => m![2])\n    );\n    this.getPaddingWidgetLeft = this.getPaddingWidget.pipe(\n      filter(m => m != null),\n      map(m => m![3])\n    );\n\n    this.getBackgroundColorWidget = this._service.currentWidget.pipe(\n      map((myObj: AjfReportWidget | null) => {\n        if (myObj != null && myObj.styles != null) {\n          return myObj.styles['backgroundColor'] || '';\n        }\n      }),\n      distinctUntilChanged()\n    );\n\n    this.getColorWidget = this._service.currentWidget.pipe(\n      map((myObj: AjfReportWidget | null) => {\n        if (myObj != null && myObj.styles != null) {\n          return myObj.styles['color'] || '';\n        }\n      }),\n      distinctUntilChanged()\n    );\n\n    this._stylesUpdatesSubs = (<Observable<{idx: any; value: any}>>this._updateWidgetMarginEvt)\n      .pipe(withLatestFrom(this.getMarginWidget))\n      .subscribe((r: [{ idx: number, value: any }, number[] | undefined]) => {\n        if (r == null) { return; }\n        const idx = r[0].idx;\n        const value = r[0].value;\n        const v = r[1] || [0, 0, 0, 0];\n        if (v == null || v.length < idx) { return; }\n        v[idx] = value;\n        this.setWidgetStyles('margin', v);\n      });\n\n    this._stylesUpdatesSubs.add((<Observable<{idx: any; value: any}>>this._updateWidgetPaddingEvt)\n      .pipe(withLatestFrom(this.getPaddingWidget))\n      .subscribe((r: [{ idx: number, value: any }, number[] | undefined]) => {\n        if (r == null) { return; }\n        const idx = r[0].idx;\n        const value = r[0].value;\n        const v = r[1] || [0, 0, 0, 0];\n        if (v == null || v.length < idx) { return; }\n        v[idx] = value;\n        this.setWidgetStyles('padding', v);\n      }));\n\n    this._stylesUpdatesSubs\n      .add((<Observable<{idx: any; value: any}>>this._updateWidgetBorderWidthEvt)\n        .pipe(withLatestFrom(this.getBorderWidthWidget))\n        .subscribe((r: [{ idx: number, value: any }, number[] | undefined]) => {\n          if (r == null) { return; }\n          const idx = r[0].idx;\n          const value = r[0].value;\n          const v = r[1] || [0, 0, 0, 0];\n          if (v == null || v.length < idx) { return; }\n          v[idx] = value;\n          this.setWidgetStyles('border-width', v);\n        })\n      );\n\n    this._stylesUpdatesSubs.add(\n      (<Observable<{idx: any; value: any}>>this._updateWidgetBorderRadiusEvt)\n        .pipe(withLatestFrom(this.getBorderRadiusWidget))\n        .subscribe((r: [{ idx: number, value: any }, number[] | undefined]) => {\n          if (r == null) { return; }\n          const idx = r[0].idx;\n          const value = r[0].value;\n          const v = r[1] || [0, 0, 0, 0];\n          if (v == null || v.length < idx) { return; }\n          v[idx] = value;\n          this.setWidgetStyles('border-radius', v);\n        })\n      );\n  }\n\n  ngOnChanges(changes: any) {\n    this.currentWidget = changes.widget.currentValue;\n    if (this.currentWidget == null) { return; }\n    this.widgetName = AjfReportWidgetType[this.currentWidget.widgetType];\n  }\n\n  ngOnDestroy(): void {\n    this._currentWidgetSub.unsubscribe();\n    this._formsSub.unsubscribe();\n    this._colorSub.unsubscribe();\n    this._headerStyleSub.unsubscribe();\n    this._contentStylesSub.unsubscribe();\n    this._footerStylesSub.unsubscribe();\n    this._originSub.unsubscribe();\n    this._stylesUpdatesSubs.unsubscribe();\n  }\n\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Renderer2,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {\n  NG_VALUE_ACCESSOR,\n  NG_VALIDATORS,\n  ControlValueAccessor,\n  FormControl,\n  Validator\n} from '@angular/forms';\n\nimport {Subscription} from 'rxjs';\n\nimport {AjfReportBuilderService} from './report-builder-service';\n\nimport {default as Quill} from 'quill';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-quill-editor',\n  template: `\n    <ng-content select=\"[ajf-quill-editor-toolbar]\"></ng-content>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AjfQuillEditor),\n    multi: true\n  }, {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => AjfQuillEditor),\n    multi: true\n  }],\n  styleUrls: ['quill-editor.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfQuillEditor\n  implements AfterViewInit, ControlValueAccessor, OnChanges, OnDestroy, Validator {\n\n  quillEditor: any;\n  editorElem: HTMLElement;\n  emptyArray: any[] = [];\n  content: any;\n\n  listenFunc: Function;\n\n  previewElemFormula: any;\n  private _init: boolean = false;\n\n  dateFormats = [\n    {\n      'label': 'June 23rd 2017, 12:39:12 pm',\n      'value': 'MMMM Do YYYY, h:mm:ss a',\n      'validator': 'MMMMDoYYYYhmmssa'\n    }, {\n      'label': 'Friday',\n      'value': 'dddd',\n      'validator': 'dddd'\n    }, {\n      'label': 'Jun 23rd 17',\n      'value': 'MMM Do YY',\n      'validator': 'MMMDoYY'\n    }];\n\n\n  fonts = [\n    false,\n    'blackr',\n    'black-italic',\n    'bold',\n    'bold-condensed',\n    'bold-condensed-italic',\n    'bold-italic',\n    'condensed',\n    'condensed-italic',\n    'italic',\n    'light',\n    'light-italic',\n    'medium',\n    'medium-italic',\n    'thinr',\n    'thin-italic'\n  ];\n\n  defaultModules = {\n    formula: true,\n    toolbar: [\n      ['formula'],\n      ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n      // ['blockquote', 'code-block'],\n\n      [{ 'header': 1 }, { 'header': 2 }],               // custom button values\n      [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n      [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript\n      // [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\n      // [{ 'direction': 'rtl' }],                         // text direction\n\n      [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\n      [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n\n      [{ 'color': this.emptyArray.slice() },\n      { 'background': this.emptyArray.slice() }],          // dropdown with defaults from theme\n      [{ 'font': this.fonts }],\n      [{ 'align': this.emptyArray.slice() }],\n\n      ['clean'],                                         // remove formatting button\n\n      // ['link', 'image', 'video']                         // link and image, video\n    ]\n  };\n\n  font = Quill.import('formats/font');\n\n\n  @Input() theme: string;\n  @Input() modules: Object;\n  @Input() readOnly: boolean;\n  @Input() placeholder: string;\n  @Input() maxLength: number;\n  @Input() minLength: number;\n  @Input() formats: string[];\n  @Input() initHTML: string;\n\n  @Output() editorCreated: EventEmitter<any> = new EventEmitter();\n  @Output() contentChanged: EventEmitter<any> = new EventEmitter();\n  @Output() selectionChanged: EventEmitter<any> = new EventEmitter();\n\n\n  /**\n   * this event is fired when the user click on formula button on quill editor rool barƒ\n   *\n   * @memberof QuillEditorComponent\n   */\n  @Output() formulaClick: EventEmitter<any> = new EventEmitter<any>();\n\n\n  onModelChange: Function = () => { };\n  onModelTouched: Function = () => { };\n\n  private _formulas: { formula: any, unlisten: Function | null }[] = [];\n  private _formulaTextSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2,\n    private _service: AjfReportBuilderService) {\n    this.font.whitelist = this.fonts;\n    this.font.whitelist.push('regular');\n\n    this._formulaTextSub =\n      this._service.getFormulaToHtmlEvent()\n        .subscribe((event: any) => {\n\n          // reference is defined only when the user want to edit the formula\n          if (event.reference !== undefined) {\n            event.reference.innerHTML = event.formula;\n            this._renderer.setAttribute(event.reference, 'formula', event.formula);\n            const efs = this._formulas.filter(f => f.formula === event.reference);\n            let formulaEntry;\n            let unlisten;\n            if (efs.length > 0) {\n              formulaEntry = efs[0];\n              unlisten = formulaEntry.unlisten;\n              if (unlisten != null) {\n                unlisten();\n              }\n            } else {\n              formulaEntry = { formula: event.reference, unlisten: null };\n              this._formulas.push(formulaEntry);\n            }\n            formulaEntry.unlisten = this._renderer.listen(\n              event.reference, 'click', () => {\n                let obj = {\n                  'formula': event.formula,\n                  'reference': event.reference\n                };\n                this.formulaClick.emit(obj);\n              }\n            );\n          } else {\n            const quillEditor = this._elementRef.nativeElement.querySelector('.ajf-ql-editor');\n            const link = this._renderer.createElement('a');\n            this._renderer.setAttribute(link, 'href', 'javascript:void(0)');\n            this._renderer.setStyle(link, 'cursor', 'pointer');\n            this._renderer.setAttribute(link, 'formula', this.check(event.formula));\n            const linkLabel = this._renderer.createText(event.formula);\n            this._renderer.appendChild(link, linkLabel);\n            // add listener related on the click event of the new formula\n            const unlisten = this._renderer.listen(\n              link, 'click', (_) => {\n                let obj = {\n                  'formula': this.check(event.formula),\n                  'reference': link\n                };\n                this.formulaClick.emit(obj);\n              }\n            );\n            this._renderer.appendChild(quillEditor, link);\n            this._formulas.push({ unlisten, formula: link });\n          }\n        });\n  }\n\n  check(value: string): string {\n    this.dateFormats.forEach((elem: any) => {\n      if (elem.value == value) {\n        return <string>elem.validator;\n      }\n    });\n    return <string>value;\n  }\n  /**\n   * this function search fomulas inside the init text\n   * and allocate the related listener on click event\n   *\n   * @memberof QuillEditorComponent\n   */\n  setHTML() {\n    this.writeValue(this.initHTML);\n  }\n\n  ngAfterViewInit() {\n    const toolbarElem = this._elementRef.nativeElement.querySelector('[ajf-quill-editor-toolbar]');\n    let modules: any = this.modules || this.defaultModules;\n\n    Quill.register(this.font, true);\n\n    if (toolbarElem) {\n      modules['toolbar'] = toolbarElem;\n      modules['formula'] = true;\n    }\n    this._elementRef.nativeElement.insertAdjacentHTML(\n      'beforeend', '<div quill-editor-element></div>'\n    );\n\n    this.editorElem = this._elementRef.nativeElement.querySelector('[quill-editor-element]');\n\n    this.quillEditor = new Quill(this.editorElem, {\n      modules: modules,\n      placeholder: this.placeholder || 'Insert text here ...',\n      readOnly: this.readOnly || false,\n      theme: this.theme || 'snow',\n      formats: this.formats\n    });\n\n\n    this.editorCreated.emit(this.quillEditor);\n    this.setHTML();\n\n    // mark model as touched if editor lost focus\n    this.quillEditor.on('selection-change', (range: any, oldRange: any, source: string) => {\n      this.selectionChanged.emit({\n        editor: this.quillEditor,\n        range: range,\n        oldRange: oldRange,\n        source: source\n      });\n\n      if (!range) {\n        this.onModelTouched();\n      }\n    });\n\n    // update model if text changes\n    this.quillEditor.on('text-change', (delta: any, oldDelta: any, source: string) => {\n      let html: any = this.editorElem.children[0].innerHTML;\n      const text = this.quillEditor.getText();\n\n      if (html === '<p><br></p>') {\n        html = null;\n      }\n\n      this.onModelChange(html);\n\n      this.contentChanged.emit({\n        editor: this.quillEditor,\n        html: html,\n        text: text,\n        delta: delta,\n        oldDelta: oldDelta,\n        source: source\n      });\n    });\n\n    let elem = this._elementRef.nativeElement.querySelector('.ajf-ql-formula');\n    this.listenFunc = this._renderer.listen(elem, 'click', (_) => {\n      this.formulaClick.emit();\n\n    });\n\n  }\n\n  writeValue(currentValue: any) {\n    this.content = currentValue;\n\n    if (this.quillEditor) {\n      if (currentValue) {\n        if (currentValue == this.initHTML && !this._init) {\n          let editor = this._elementRef.nativeElement.querySelector('.ajf-ql-editor');\n          editor.innerHTML = this.initHTML;\n          let allFormulas = this._elementRef.nativeElement.querySelectorAll('[formula]');\n          allFormulas.forEach((elem: any) => {\n            const unlisten = this._renderer.listen(\n              elem, 'click', (_) => {\n                let obj = {\n                  'formula': this.check(elem.innerText),\n                  'reference': elem\n                };\n                this.formulaClick.emit(obj);\n              }\n            );\n            this._renderer.setStyle(elem, 'cursor', 'pointer');\n            this._formulas.push({ unlisten, formula: elem });\n            this._init = true;\n          });\n        } else if (currentValue != this.initHTML) {\n          this.quillEditor.pasteHTML(currentValue);\n        }\n        return;\n      }\n      this.quillEditor.setText('');\n    }\n  }\n\n  registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n\n  validate(_c: FormControl) {\n    if (!this.quillEditor) {\n      return null;\n    }\n\n    let err: {\n      minLengthError?: { given: number, minLength: number };\n      maxLengthError?: { given: number, maxLength: number };\n    } = {},\n      valid = true;\n\n    const textLength = this.quillEditor.getText().trim().length;\n\n    if (this.minLength) {\n      err.minLengthError = {\n        given: textLength,\n        minLength: this.minLength\n      };\n\n      valid = textLength >= this.minLength || !textLength;\n    }\n\n    if (this.maxLength) {\n      err.maxLengthError = {\n        given: textLength,\n        maxLength: this.maxLength\n      };\n\n      valid = textLength <= this.maxLength && valid;\n    }\n\n    return valid ? null : err;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    if (changes['readOnly'] && this.quillEditor) {\n      this.quillEditor.enable(!changes['readOnly'].currentValue);\n    }\n    if (changes['modules'] && this.quillEditor) {\n\n      Quill.register(this.font, true);\n      this.quillEditor = new Quill(this.editorElem, {\n        modules: changes['modules']['currentValue'],\n        placeholder: this.placeholder || 'Insert text here ...',\n        readOnly: this.readOnly || false,\n        theme: this.theme || 'snow',\n        formats: this.formats\n      });\n      this._elementRef.nativeElement.children[0].remove();\n    }\n  }\n  ngOnDestroy() {\n    for (let i = 0; i < this._formulas.length; i++) {\n      let unlisten = this._formulas[i].unlisten;\n      if (unlisten != null) {\n        unlisten();\n      }\n    }\n    this._formulaTextSub.unsubscribe();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Observable, Subscription, timer} from 'rxjs';\nimport {distinctUntilChanged, map, startWith} from 'rxjs/operators';\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  ViewEncapsulation\n} from '@angular/core';\nimport {CdkDrag, CdkDragDrop} from '@angular/cdk/drag-drop';\n\nimport {AjfImageType} from '@ajf/core/image';\nimport {\n  AjfDataset,\n  AjfReportChartWidget,\n  AjfReportColumnWidget,\n  AjfReportImageWidget,\n  AjfReportLayoutWidget,\n  AjfReportMapWidget,\n  AjfReportTableWidget,\n  AjfReportTextWidget,\n  AjfReportWidget,\n  AjfReportWidgetType,\n} from '@ajf/core/reports';\n\nimport {AjfReportBuilderDragData} from './report-builder-drag-data';\nimport {AjfReportBuilderService} from './report-builder-service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-renderer-widget',\n  templateUrl: 'renderer-widget.html',\n  styleUrls: ['renderer-widget.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderRendererWidget implements OnInit, OnDestroy, OnChanges {\n  get widgetTypes() { return AjfReportWidgetType; }\n\n  @Input()\n  widget: AjfReportWidget;\n\n  get layoutWidget(): AjfReportLayoutWidget {\n    return this.widget as AjfReportLayoutWidget;\n  }\n\n  @Input()\n  position: number;\n\n  @Input()\n  section: string;\n\n  // this boolean sign if is dragged a widget\n  onDragged = false;\n\n  currentContentWidget: AjfReportWidget | null = null;\n  obj: any;\n  fixedZoom: any;\n\n  getTableTitles: Observable<string[]>;\n  getTableContent: Observable<string[][] | undefined>;\n\n  getChartType: Observable<number>;\n  getDataset: Observable<AjfDataset[][]>;\n  getChartBackgroundColor: Observable<string[]>;\n  getChartBorderColor: Observable<string[]>;\n  getChartBorderWidth: Observable<number>;\n\n  layoutShow: boolean;\n\n  private _onDraggedSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n    private _service: AjfReportBuilderService\n  ) { }\n\n  canDropPredicate(item: CdkDrag<AjfReportBuilderDragData>): boolean {\n    item.data.dropZones.forEach(d => {\n      if (['header', 'widget'].indexOf(d) > -1) {\n        return true;\n      }\n    });\n    return false;\n  }\n\n  /**\n   *  sign the start of mouse drag with 200 ms of delay\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragStartHandler(): void {\n    let s = timer(200)\n      .subscribe(() => {\n        s.unsubscribe();\n        this._service.dragStarted();\n      });\n  }\n\n  /**\n   * sign the end of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEndHandler(): void {\n    this._service.dragEnded();\n  }\n\n  getColumnContent(): AjfReportColumnWidget[] {\n    const myObj: AjfReportLayoutWidget = <AjfReportLayoutWidget>this.widget;\n\n    return <AjfReportColumnWidget[]>myObj.content;\n  }\n\n  getIcon(): {fontSet: string, fontIcon: string} | null {\n    const defVal = {fontSet: '', fontIcon: ''};\n    const myObj: AjfReportImageWidget = <AjfReportImageWidget>this.widget;\n    if (myObj.icon == null) { return null; }\n    return myObj.icon.evaluate({}) || defVal;\n  }\n\n  getFlag(): string | null {\n    const defVal = 'ch';\n    const myObj: AjfReportImageWidget = <AjfReportImageWidget>this.widget;\n    if (myObj.flag == null) { return null; }\n    return myObj.flag.evaluate({}) || defVal;\n  }\n\n  getPercent(index: number): string {\n    const myObj: AjfReportLayoutWidget = <AjfReportLayoutWidget>this.widget;\n    const percent = myObj.columns[index] * 100;\n\n    return `${percent.toString()}%`;\n  }\n\n  getImageUrl(): string | null {\n    const defVal = '';\n    const myObj: AjfReportImageWidget = <AjfReportImageWidget>this.widget;\n    if (myObj.url == null) { return null; }\n    return myObj.url.evaluate({}) || defVal;\n  }\n\n  getImageType() {\n    return this.widget != null ?\n      (<AjfReportImageWidget>this.widget).imageType :\n      AjfImageType.Image;\n  }\n\n  getHtmlText(): string {\n    let myObj: AjfReportTextWidget;\n    myObj = <AjfReportTextWidget>this.widget;\n    if (myObj.htmlText === '') {\n      return '...';\n    } else {\n      return myObj.htmlText;\n    }\n  }\n\n  getCoordinate(): number[] {\n    let myObj: AjfReportMapWidget;\n    myObj = <AjfReportMapWidget>this.widget;\n    if (myObj.coordinate == null) {\n      return [51.505, -0.09, 13];\n    } else {\n      return myObj.coordinate as any;\n    }\n  }\n\n  getTileLayer(): string {\n    let myObj: AjfReportMapWidget;\n    myObj = <AjfReportMapWidget>this.widget;\n    if (myObj.tileLayer === '') {\n      return 'http://{s}.tile.osm.org/{z}/{x}/{y}.png';\n    } else {\n      return myObj.tileLayerMap;\n    }\n  }\n\n  getAttribution(): string {\n    let myObj: AjfReportMapWidget;\n    myObj = <AjfReportMapWidget>this.widget;\n    if (myObj.attribution === '') {\n      return \"&copy; <a href='http://osm.org/copyright'>O</a> contributors\";\n    } else {\n      return myObj.attributionMap;\n    }\n  }\n\n  addToList(event: CdkDragDrop<AjfReportBuilderDragData>, toColumn: AjfReportColumnWidget): void {\n    this.onDragEndHandler();\n    this._service.addToColumn(event, toColumn);\n  }\n\n  ngOnInit(): void {\n    this._onDraggedSub = this._service.onDragged\n      .subscribe(x => {\n        this.onDragged = x;\n      });\n\n    this.getChartType = this._service.currentWidget.pipe(\n      map((widget: AjfReportWidget | null) => {\n        if (widget == null) { return 0; }\n        const myObj = <AjfReportChartWidget>this.widget;\n        return <number>(myObj.chartType);\n      }),\n      distinctUntilChanged(),\n      startWith(0)\n    );\n\n    this.getDataset = this._service.currentWidget.pipe(\n      map((widget: AjfReportWidget | null) => {\n        if (widget != null && (widget as AjfReportChartWidget).dataset != null) {\n          const myObj = <AjfReportChartWidget>this.widget;\n          return <any>myObj.dataset;\n        } else {\n          return [];\n        }\n      }),\n      distinctUntilChanged()\n    );\n\n    this.getTableTitles = this._service.currentWidget.pipe(\n      map((widget: AjfReportWidget | null) => {\n        if (widget == null) { return []; }\n\n        const myObj = <AjfReportTableWidget>this.widget;\n\n        if (myObj.dataset != null) {\n          let tableTitle: string[] = [];\n\n          for (let i = 0; i < myObj.dataset.length; i++) {\n            if (myObj.dataset[i][0] != null) {\n              tableTitle.push(myObj.dataset[i][0].label);\n            }\n          }\n          return tableTitle;\n        } else {\n          return [];\n        }\n      })\n    );\n\n    this.getTableContent = this._service.currentWidget.pipe(\n      map((widget: AjfReportWidget | null) => {\n        if (widget == null) { return []; }\n\n        const myObj = <AjfReportTableWidget>this.widget;\n\n        if (myObj.dataset != null) {\n          let tableContent: string[][] = [];\n\n          for (let i = 0; i < myObj.dataset.length; i++) {\n            for (let j = 0; j < myObj.dataset[i].length; j++) {\n              if (\n                (myObj.dataset[i] != null) &&\n                (myObj.dataset[i][j + 1] != null)\n              ) {\n                if (tableContent[j] == null) {\n                  tableContent[j] = [];\n                }\n                if (tableContent[j][i] == null) {\n                  tableContent[j][i] = ' ';\n                }\n                tableContent[j].splice(i, 1, myObj.dataset[i][j + 1].label);\n              }\n            }\n          }\n          return tableContent;\n        }\n      })\n    );\n\n    this._service.updateCurrentWidget(this.widget);\n  }\n\n  ngOnChanges(changes: any) {\n    if (changes.widget && changes.widget.currentValue != null) {\n      this.widget = changes.widget.currentValue;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._onDraggedSub.unsubscribe();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {Subscription} from 'rxjs';\n\nimport {AjfReportWidget} from '@ajf/core/reports';\nimport {deepCopy} from '@ajf/core/utils';\nimport {AjfReportBuilderService} from './report-builder-service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'theme-color-dialog',\n  templateUrl: 'theme-color-dialog.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderThemeColorDialog implements OnInit , AfterViewInit, OnDestroy {\n  @ViewChild('colorpic', {static: true})\n  elem: any;\n\n  currentWidget: AjfReportWidget | null = null;\n\n  currentColor = 'rgb(255,255,255,0)';\n  section: string = 'color';\n\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n    private _service: AjfReportBuilderService,\n    private _dialogRef: MatDialogRef<AjfReportBuilderThemeColorDialog>\n  ) { }\n\n  setWidgetStyles(value: any) {\n    this._service.setWidgetStyles(this.section, value);\n    this.currentColor = value;\n    this.setStyle();\n  }\n\n  setStyle() {\n    if (this.currentWidget == null) { return; }\n    this.currentWidget.styles = deepCopy(this.currentWidget.styles);\n    this._service.updateCurrentWidget(this.currentWidget);\n  }\n\n  addCustomColor() {\n    this._service.addCustomColor(this.currentColor);\n    this._service.updateCurrentWidget(this.currentWidget);\n    this._dialogRef.close();\n  }\n\n  close() {\n    this._dialogRef.close();\n  }\n  ngOnInit() {\n    this._currentWidgetSub = this._service.currentWidget\n      .subscribe(x => {\n        if (x !== null) {\n          if (this.currentWidget !== x) {\n            this.currentWidget = x;\n          }\n        } else {\n          this.currentWidget = null;\n        }\n      });\n  }\n\n  ngAfterViewInit() {\n    this.elem.nativeElement.children[1].firstElementChild['style']['position'] = 'initial';\n  }\n\n  ngOnDestroy() {\n    this._currentWidgetSub.unsubscribe();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Observable, Subscription} from 'rxjs';\nimport {distinctUntilChanged, map} from 'rxjs/operators';\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\n\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\n\nimport {AjfReportWidget} from '@ajf/core/reports';\nimport {deepCopy} from '@ajf/core/utils';\n\nimport {AjfReportBuilderThemeColorDialog} from './theme-color-dialog';\nimport {AjfReportBuilderService} from './report-builder-service';\n/**\n * this component manages the report text\n *\n * @export\n */\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-theme-color',\n  templateUrl: 'theme-color.html',\n  styleUrls: ['theme-color.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderThemeColor implements OnInit, OnDestroy {\n  currentWidget: AjfReportWidget | null = null;\n\n  alphaColor: number = 1;\n  colors: string[];\n  currentColor: string;\n\n  getColorWidget: Observable<string>;\n\n  dialogRef: MatDialogRef<AjfReportBuilderThemeColorDialog>;\n\n  styleBackgroundColor = 'rgb(255,255,255,0)';\n  styleColor = 'rgb(0,0,0,0)';\n\n  @Input()\n  section: string;\n\n  @Input()\n  label: string;\n\n  @Input()\n  init: string;\n\n  /**\n   * the name of the section that contains the currentWidget\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  origin: string;\n\n  private _colorsSub: Subscription = Subscription.EMPTY;\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n  private _originSub: Subscription = Subscription.EMPTY;\n  private _headerStyleSub: Subscription = Subscription.EMPTY;\n  private _contentStylesSub: Subscription = Subscription.EMPTY;\n  private _footerStylesSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n    private _service: AjfReportBuilderService,\n    public dialog: MatDialog\n  ) {\n  }\n\n  setStyles(value: any) {\n    switch (this.section) {\n      case 'widget':\n        this.setWidgetStyles(value);\n        break;\n      case 'report':\n        this.setReportStyles(value);\n        break;\n      case 'section':\n        this.setSectionStyles(value);\n        break;\n      case 'chart':\n        this.setChartStyle(value);\n        break;\n    }\n  }\n\n  setChartStyle(value: any) {\n    if (this.label === 'backgroundColor') {\n      this.addChartBackgroundColor(value);\n    } else {\n      this.addChartBorderColor(value);\n    }\n  }\n\n  setAlphaColor(value: any) {\n\n    value = value.toFixed(2);\n    for (let i = 0; i < this.colors.length; i++) {\n      let lastComma = this.colors[i].lastIndexOf(',');\n      this.colors[i] = this.colors[i].substring(0, lastComma) + ',' + value + ')';\n    }\n  }\n\n  /**\n   * call to service to add new style to widget\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setWidgetStyles(value: any) {\n    if (this.section === 'chart') {\n      this.setChartStyle(value);\n    } else {\n      this._service.setWidgetStyles(this.label, value);\n      this.currentColor = value;\n      this.setStyle();\n    }\n  }\n\n  /**\n   * call to service to add new style to section\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setSectionStyles(value: any) {\n    this._service.setSectionStyles(this.origin, this.label, value);\n    this.styleColor = value;\n  }\n\n  /**\n   * call to service to add new style to report\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setReportStyles(value: any) {\n    this._service.setReportStyles(this.label, value);\n    this.styleBackgroundColor = value;\n  }\n\n  /**\n   * call to service to add background color to current chart\n   *\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  addChartBackgroundColor(value: any) {\n    this._service.addChartBackgroundColor(value);\n  }\n\n  /**\n   * call to service to add border color to current chart\n   *\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  addChartBorderColor(value: any) {\n    this._service.addChartBorderColor(value);\n  }\n\n  setStyle() {\n    if (this.currentWidget == null) { return; }\n    this.currentWidget.styles = deepCopy(this.currentWidget.styles);\n    this._service.updateCurrentWidget(this.currentWidget);\n  }\n\n  openDialog() {\n    this.dialogRef = this.dialog.open(AjfReportBuilderThemeColorDialog);\n  }\n\n  ngOnInit() {\n\n    this._colorsSub = this._service.colors\n      .subscribe(x => {\n        this.colors = x;\n      }\n      );\n\n    this._currentWidgetSub = this._service.currentWidget\n      .subscribe(x => {\n        if (x != null) {\n          if (this.currentWidget !== x) {\n            this.currentWidget = x;\n          }\n        } else {\n          this.currentWidget = null;\n        }\n      });\n\n    this.getColorWidget = this._service.currentWidget.pipe(\n      map((myObj: AjfReportWidget | null) => {\n        if (myObj != null) {\n          return myObj.styles['color'] || '';\n        }\n      }),\n      distinctUntilChanged()\n    );\n\n    this._originSub = this._service.origin.subscribe(s => {\n      this.origin = s;\n    });\n\n    this._headerStyleSub = this._service.headerStyles.subscribe(s => {\n      if (s['background-color'] != null) {\n        this.styleBackgroundColor = s['background-color'];\n      }\n    });\n    this._contentStylesSub = this._service.contentStyles.subscribe(s => {\n      if (s['background-color'] != null) {\n        this.styleBackgroundColor = s['background-color'];\n      }\n    });\n    this._footerStylesSub = this._service.footerStyles.subscribe(s => {\n      if (s['background-color'] != null) {\n        this.styleBackgroundColor = s['background-color'];\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._colorsSub.unsubscribe();\n    this._currentWidgetSub.unsubscribe();\n    this._originSub.unsubscribe();\n    this._headerStyleSub.unsubscribe();\n    this._contentStylesSub.unsubscribe();\n    this._footerStylesSub.unsubscribe();\n  }\n}\n\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {AjfReportBuilderService} from './report-builder-service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'toolbar-dialog',\n  templateUrl: 'toolbar-dialog.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderToolbarDialog {\n  constructor(\n    private _service: AjfReportBuilderService,\n    private _dialogRef: MatDialogRef<AjfReportBuilderToolbarDialog>\n  ) { }\n\n  resetReport() {\n    let emptyReport: any = {\n      'header': { 'content': [], 'styles': {} },\n      'content': { 'content': [], 'styles': {} },\n      'footer': { 'content': [], 'styles': {} },\n      'styles': {}\n    };\n    this._service.setReport(emptyReport);\n    this._dialogRef.close();\n  }\n\n  close() {\n    this._dialogRef.close();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy, Component, EventEmitter, ViewEncapsulation\n} from '@angular/core';\nimport {CdkDrag, CdkDragDrop} from '@angular/cdk/drag-drop';\n\nimport {Observable} from 'rxjs';\n\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\n\nimport {AjfReport} from '@ajf/core/reports';\nimport {AjfReportBuilderDragData} from './report-builder-drag-data';\nimport {AjfReportBuilderService} from './report-builder-service';\nimport {AjfReportBuilderToolbarDialog} from './toolbar-dialog';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-toolbar',\n  outputs: ['addClick'],\n  styleUrls: ['toolbar.css'],\n  templateUrl: 'toolbar.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an ajf builder toolbar\n * @implements : OnDestroy\n */\nexport class AjfReportBuilderToolbar {\n  // this is an any EventEmitter\n  addClick: EventEmitter<any> = new EventEmitter<any>();\n  dialogRef: MatDialogRef<AjfReportBuilderToolbarDialog>;\n  zoom = false;\n\n  lastJson: string;\n\n  emptyContent: Observable<boolean>;\n\n  constructor(\n    private _service: AjfReportBuilderService,\n    public dialog: MatDialog) {\n      this.emptyContent = this._service.emptyContent;\n  }\n\n  canDropPredicate(item: CdkDrag<AjfReportBuilderDragData>): boolean {\n    return item.data.dropZones.indexOf('widget') > -1;\n  }\n\n  JSONRequest() {\n  }\n  /**\n   * this method will pass event to event emitter\n   */\n  onAddClick(event: any): void {\n    this.addClick.emit(event);\n  }\n\n  addToList(event: CdkDragDrop<AjfReportBuilderDragData>) {\n    if (event.item.data.widget != null) {\n      this._service.addCustomWidgets({\n        json: JSON.stringify(event.item.data.widget.toJson()),\n        type: ''\n      });\n    }\n  }\n\n  undoLastOperation() {\n    try {\n      let myObj = JSON.parse(this._service.popJsonStack() || '');\n      this._service.setReport(AjfReport.fromJson(myObj));\n    } catch (e) { }\n  }\n\n  isZoomed() {\n    this.zoom = !this.zoom;\n    if (this.zoom) {\n      this._service.fixedZoomIn();\n    } else {\n      this._service.fixedZoomOut();\n    }\n  }\n\n  openDialog() {\n    this.dialogRef = this.dialog.open(AjfReportBuilderToolbarDialog);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation} from '@angular/core';\n\nimport {ajfReportBuilderWidgetToString} from './utils';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-widget-toolbar-button',\n  inputs: ['widgetType'],\n  templateUrl: 'widget-toolbar-button.html',\n  styleUrls: ['widget-toolbar-button.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an ajf builder field toolbar button\n * @implements : OnInit\n */\nexport class AjfReportBuilderWidgetToolbarButton implements OnInit {\n  widgetType: string;\n  widgetIcon: string;\n\n  constructor() { }\n  ngOnInit(): void {\n    this.widgetIcon = ajfReportBuilderWidgetToString(this.widgetType);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {Subscription} from 'rxjs';\n\nimport {AjfReportLayoutWidget, AjfReportWidget, AjfReportWidgetType} from '@ajf/core/reports';\nimport {AjfReportBuilderService} from './report-builder-service';\nimport {ajfWidgetTypeToLabel, widgetReportBuilderIconName} from './utils';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-widgets-row-buttons',\n  inputs: ['from', 'fromWidget', 'position', 'widget', 'child', 'isOver'],\n  templateUrl: 'widgets-row-buttons.html',\n  styleUrls: ['widgets-row-buttons.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderWidgetsRowButtons implements OnDestroy, OnInit {\n  from: string;\n  fromWidget: AjfReportWidget;\n  position: number;\n  widget: AjfReportWidget;\n  child: boolean;\n  currentWidget: AjfReportWidget | null = null;\n  isClicked = false;\n  color: string[] = [];\n  isOver = false;\n\n  widgetIcon: string;\n  widgetLabel: string;\n  label: string;\n\n  // this boolean sign if is dragged a widget\n  onDragged = false;\n\n  // this boolean sign if is on over a widget\n  onOver = false;\n\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n  private _onDraggedSub: Subscription = Subscription.EMPTY;\n  private _onOverSub: Subscription = Subscription.EMPTY;\n\n\n  /**\n   *\n   * @param private _afjBuilderService: AjfBuilderService\n   */\n  constructor(private _service: AjfReportBuilderService) {\n\n  }\n\n  selectedWidget() {\n    this.isClicked = !this.isClicked;\n    this._service.setOrigin(this.from);\n    this._service.updateCurrentWidget(this.widget);\n  }\n\n  remove() {\n    if (this.fromWidget != null) {\n      this._service.updateCurrentWidget(this.fromWidget);\n    }\n    this._service.remove(this.from, this.position);\n  }\n\n  onFocus(): boolean {\n    if (this.widget === this.currentWidget) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  changeColumn(direction: string) {\n\n    if (direction == 'back') {\n      this._service.changeColumn(\n        this.position, this.position - 1, <AjfReportLayoutWidget>this.fromWidget);\n    } else {\n      this._service.changeColumn(\n        this.position, this.position + 1, <AjfReportLayoutWidget>this.fromWidget);\n    }\n  }\n  isColumn(): boolean {\n    if (this.label === 'Column') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isOneColumn(): boolean {\n    let rootObj = <AjfReportLayoutWidget>this.fromWidget;\n    if (rootObj.columns.length > 1) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  ngOnInit() {\n    this.label = AjfReportWidgetType[this.widget.widgetType];\n    this.widgetIcon = widgetReportBuilderIconName(this.widget.widgetType);\n    this.widgetLabel = ajfWidgetTypeToLabel(this.widget.widgetType);\n\n    this._onDraggedSub = this._service.onDragged\n      .subscribe(x => {\n        this.onDragged = x;\n      });\n\n    this._onOverSub = this._service.onOver\n      .subscribe(x => {\n        this.onOver = x;\n      });\n\n    this._currentWidgetSub = this._service.currentWidget\n      .subscribe(\n      x => {\n        this.currentWidget = x;\n        if (x !== this.widget) {\n          this.isClicked = false;\n        }\n      });\n\n  }\n  ngOnDestroy(): void {\n    this._onDraggedSub.unsubscribe();\n    this._onOverSub.unsubscribe();\n    this._currentWidgetSub.unsubscribe();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\n\nimport {timer} from 'rxjs';\n\nimport {AjfChartType, AjfReportWidgetType} from '@ajf/core/reports';\nimport {sizedEnumToStringArray} from '@ajf/core/utils';\nimport {AjfReportBuilderService} from './report-builder-service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-widgets-toolbar',\n  templateUrl: 'widgets-toolbar.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an Ajf builder fields toolbar\n */\nexport class AjfReportBuilderWidgetsToolbar {\n  // fieldTypes is an array string that contains the field options\n  chartTypes: string[] = sizedEnumToStringArray(AjfChartType);\n  widgetTypes: string[] = sizedEnumToStringArray(AjfReportWidgetType);\n\n\n  /**\n   *\n   * @param private _afjBuilderService: AjfBuilderService\n   */\n  constructor(private _service: AjfReportBuilderService) {\n    // delete Column widget\n    let pos = this.widgetTypes.indexOf('Column');\n    if (pos !== -1) {\n      this.widgetTypes.splice(pos, 1);\n    }\n  }\n  /**\n   *  sign the start of mouse drag with 200 ms of delay\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragStartHandler(): void {\n    let s = timer(200)\n      .subscribe(() => {\n        if (s != null) { s.unsubscribe(); }\n        this._service.dragStarted();\n      });\n  }\n\n  /**\n   * sign the end of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEndHandler(): void {\n    this._service.dragEnded();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterContentInit, ChangeDetectionStrategy, Component, Input, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport {MatSidenav} from '@angular/material/sidenav';\n\nimport {AjfReport} from '@ajf/core/reports';\nimport {AjfReportBuilderService} from './report-builder-service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder',\n  templateUrl: 'report-builder.html',\n  styleUrls: ['report-builder.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an ajf form builderx\n */\nexport class AjfReportBuilder implements AfterContentInit {\n  @ViewChild(MatSidenav, {static: true}) startSidenav: MatSidenav;\n\n  private _init: boolean = false;\n\n  private _report: AjfReport;\n  get report(): AjfReport { return this._report; }\n  @Input() set report(report: AjfReport) {\n    if (report != null) {\n      this._report = report;\n      if (this._init) {\n        this._setCurrentReport();\n      }\n    }\n  }\n\n  constructor(private _service: AjfReportBuilderService) { }\n\n  ngAfterContentInit(): void {\n    this._setCurrentReport();\n    this._init = true;\n  }\n\n  private _setCurrentReport(): void {\n    this._service.setReportForms(this.report != null ? this.report.forms || [] : []);\n    this._service.setReport(this.report);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\nimport {TranslateModule} from '@ngx-translate/core';\n\nimport {ColorPickerModule} from 'ngx-color-picker';\n\nimport {AjfCommonModule} from '@ajf/core/common';\nimport {AjfMapModule} from '@ajf/core/map';\nimport {AjfTableModule} from '@ajf/core/table';\nimport {AjfTextModule} from '@ajf/core/text';\nimport {AjfImageModule} from '@ajf/material/image';\nimport {AjfMonacoEditorModule} from '@ajf/material/monaco-editor';\n\nimport {AjfReportBuilderColumn} from './column';\nimport {AjfReportBuilderConditionEditor} from './condition-editor';\nimport {AjfReportBuilderContent} from './content';\nimport {AjfReportBuilderCustomWidgetDialog} from './custom-widget-dialog';\nimport {AjfReportBuilderCustomWidgetToolbarButton} from './custom-widget-toolbar-button';\nimport {AjfReportBuilderCustomWidgetsToolbar} from './custom-widgets-toolbar';\nimport {AjfReportBuilderFormsAnalyzerDialog} from './forms-analyzer-dialog';\nimport {AjfReportBuilderFormsAnalyzer} from './forms-analyzer';\nimport {AjfImageFilterPipe} from './image-filter';\nimport {AjfReportBuilderImageGroup} from './image-group';\nimport {AjfReportBuilderProperties} from './properties';\nimport {AjfQuillEditor} from './quill-editor';\nimport {AjfReportBuilderRendererWidget} from './renderer-widget';\nimport {AjfReportBuilderThemeColorDialog} from './theme-color-dialog';\nimport {AjfReportBuilderThemeColor} from './theme-color';\nimport {AjfReportBuilderToolbarDialog} from './toolbar-dialog';\nimport {AjfReportBuilderToolbar} from './toolbar';\nimport {AjfReportBuilderWidgetToolbarButton} from './widget-toolbar-button';\nimport {AjfReportBuilderWidgetsRowButtons} from './widgets-row-buttons';\nimport {AjfReportBuilderWidgetsToolbar} from './widgets-toolbar';\nimport {AjfReportBuilderService} from './report-builder-service';\nimport {AjfReportBuilder} from './report-builder';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    DragDropModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatIconModule,\n    MatListModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n    MatSliderModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    TranslateModule,\n    ColorPickerModule,\n    AjfCommonModule,\n    AjfImageModule,\n    AjfMapModule,\n    AjfMonacoEditorModule,\n    AjfTableModule,\n    AjfTextModule,\n  ],\n  declarations: [\n    AjfQuillEditor,\n    AjfReportBuilderColumn,\n    AjfReportBuilderConditionEditor,\n    AjfReportBuilderContent,\n    AjfReportBuilderCustomWidgetDialog,\n    AjfReportBuilderCustomWidgetToolbarButton,\n    AjfReportBuilderCustomWidgetsToolbar,\n    AjfReportBuilderFormsAnalyzerDialog,\n    AjfReportBuilderFormsAnalyzer,\n    AjfReportBuilderImageGroup,\n    AjfReportBuilderProperties,\n    AjfReportBuilderRendererWidget,\n    AjfReportBuilderThemeColorDialog,\n    AjfReportBuilderThemeColor,\n    AjfReportBuilderToolbarDialog,\n    AjfReportBuilderToolbar,\n    AjfReportBuilderWidgetToolbarButton,\n    AjfReportBuilderWidgetsRowButtons,\n    AjfReportBuilderWidgetsToolbar,\n    AjfReportBuilder,\n    AjfImageFilterPipe,\n  ],\n  exports: [\n    AjfReportBuilder,\n  ],\n  entryComponents: [\n    AjfReportBuilderFormsAnalyzerDialog,\n    AjfReportBuilderThemeColorDialog,\n    AjfReportBuilderToolbarDialog,\n  ],\n  providers: [\n    AjfReportBuilderService,\n  ]\n})\nexport class AjfReportBuilderModule { }\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","AJF_REPORTS_CONFIG","InjectionToken","AjfReportBuilderService","getFormulaToHtmlEvent","_saveFormulaTOHtml","asObservable","defineProperty","_iconSets","filterNodes","nodes","AjfNodeGroup","AjfSlide","AjfRepeatingSlide","AjfStringField","splice","parseColor","cssStyles","colors","forEach","k","indexOf","push","fillFormsVariables","forms","variables","labels","names","types","flattenNodes","extractLabelsNodes","extractNamesNodes","extractTypesNodes","obj","label","name","fieldType","setOrigin","origin","_originUpdate","next","roundTo","value","decimalPositions","Math","pow","floor","isNumber","test","isNumberArray","_this","v","_onDragged","_onOver","_fixedZoom","fixedZoomIn","_fixedZoomUpdate","fixedZoomOut","_onDragEnter","dragEnter","array","index","_onDragEnterUpdate","dragStarted","_onDraggedUpdate","dragEnded","overStarted","_onOverUpdate","overEnded","dragLeave","_report","saveReport","_saveReportEvent","emit","saveImageFormula","formula","_currentWidgetUpdate","widget","w","flag","icon","saveFormulaToHtml","htmlFormula","reference","setEmptyContent","val","_emptyContent","pushJsonStack","json","currentStack","_jsonStack","getValue","_lastDeletedJson","popJsonStack","pop","updateCurrentWidget","columnWidthChangedEmitter","_customWidgets","_headerWidgets","_headerStyles","_contentWidgets","_contentStyles","_footerWidgets","_footerStyles","_color","updateArrayWidgets","type","newWidget","Error","_updates","_widgets","_formsVariables","_conditionNames","_currentWidget","_widget","_saveReport","_savedReport","_reportStyles","_reportForms","_origin","instantColumnValue","newValue","idx","myObj","size","columns","spreadValue","objNum","sum","idxFirstNoObj","add","foundFirstNoObj","re1","RegExp","re2","re3","oldValue","Number","toFixed","j","String","setImageUrl","imageUrl","setUrl","setIcon","setFlag","saveCondition","conditionText","visibility","condition","saveChartFormula","_label","_level","_mainIndex","_index","formulaText","aggregationType","dataset","AjfFormula","aggregation","AjfAggregation","saveTableFormula","removeTableMainData","_removeFromCurrentWidgetArrayProperty","removeData","setChartType","_setCurrentWidgetProperty","removeMainData","_idx","removeRelatedData","_mainIdx","setChartBackgroundColor","addChartBackgroundColor","color","_addToCurrentWidgetArrayProperty","removeChartBackgroundColor","setChartBorderColor","setChartBorderWidth","addChartBorderColor","removeChartBorderColor","setReport","report","setSaveReport","setWidgetStyles","isPxStyle","Array","join","styles","setSectionStyles","tslib_1.__assign","setReportStyles","_reportStylesUpdate","setReportForms","_reportFormsUpdate","_form","addCustomWidgets","position","_customWidgetsUpdate","customWidgets","resetCustomWidgets","changeLabelCustomWidget","addHeaderWidget","_addWidgetToContainer","_headerWidgetsUpdate","addContentWidget","_contentWidgetsUpdate","addfooterWidget","_footerWidgetsUpdate","unfixedColumn","num","checkSum","parseFloat","addColumn","tmpValue","tempObj","columnObj","widgetType","content","AjfReportColumnWidget","removeWidgetToColumn","column","remove","node","widgets","spread","addToContent","addToColumn","event","toColumn","dragData","fromColumn","fromIndex","arrayFrom","JSON","parse","AjfReportWidget","fromJson","AjfReportWidgetType","changePositionOnColumn","toIndex","fromWidget","toWidget","fixedColumn","changeColumn","from","to","layoutWidget","fromColumnValue","toColumnValue","addCustomColor","subj","propName","arr","Injectable","undefined","decorators","Optional","Inject","args","reportsConfig","Subject","_savedReportUpdate","BehaviorSubject","_colorUpdate","_defaultColor","_formsVariablesUpdate","_conditionNamesUpdate","header","footer","EventEmitter","ajf-icon","icons","pipe","startWith","share","scan","op","filter","publishReplay","refCount","map","f","_c","subscribe","reportObs","r","_colors","tempColors","AjfReportLayoutWidget","layoutObj","z","widgetObj","_styles","_r","combineLatest","reportForms","curRo","toJson","ro","AjfReport","AjfReportContainer","stringify","AjfReportBuilderColumn","addToList","onDragEndHandler","_service","onDragStartHandler","timer","unsubscribe","ngOnInit","_onDraggedSub","onDragged","x","ngOnDestroy","Component","selector","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","propDecorators","showActions","layoutShow","Subscription","EMPTY","ajfWidgetTypeStringToLabel","sanitizeConditionString","str","trim","replace","AjfReportBuilderConditionEditor","extractNames","formsVariables","concat","setCurrent","id","currentId","appendText","checkValidation","validateCondition","AjfCondition","validate","text","_goBackNum","conditionTextArea","newStr","el","nativeElement","sStart","min","selectionStart","selectionEnd","sEnd","max","startingString","substr","endingString","initialLenght","closed","createTextRange","range","move","select","focus","setSelectionRange","isValid","hideErrorMessage","errorMessage","_conditionNamesSub","conditionNames","ViewChild","static","operators","AjfReportBuilderContent","onMouseOver","onMouseLeave","canDropPredicate","dropZones","item","data","d","isLayout","onDragEnterHandler","onDragLeaveHandler","onDragEnterCheck","onDragEnter","arrayTo","itemData","currentWidget","deepCopy","_headerWidgetsSub","headerWidgets","_contentWidgetsSub","contentWidgets","_footerWidgetsSub","footerWidgets","_fixedZoomSub","fixedZoom","bool","_onDragEnterSub","_onOverSub","onOver","ngAfterViewChecked","_cdRef","detectChanges","_currentWidgetSub","host","(mouseover)","(mouseleave)","show","headerStyles","contentStyles","footerStyles","AjfReportBuilderCustomWidgetDialog","changeLabel","_dialogRef","close","AjfReportBuilderCustomWidgetToolbarButton","widgetIcon","toLowerCase","ajfWidgetTypeStringToIcon","widgetLabel","inputs","AjfReportBuilderCustomWidgetsToolbar","openDialog","dialog","open","componentInstance","_customWidgetsSub","_threeColumnsLayout","_fourColumnsLayout","AjfReportBuilderFormsAnalyzerDialog","onEditorInit","monaco","languages","typescript","javascriptDefaults","setDiagnosticsOptions","noSemanticValidation","noSyntaxValidation","setCompilerOptions","target","ScriptTarget","ES2015","allowNonTsExtensions","allowJs","module","ModuleKind","addExtraLib","e","_extraLibs","_initFormsVariablesNames","_updateVariables","_updateFunctions","formVar","formsVariablesName","formsVariablesType","_fieldVarType","AjfValidatedProperty","UTIL_FUNCTIONS","AjfFieldType","Boolean","Date","DateInput","Time","Empty","Formula","MultipleChoice","SingleChoice","Table","Text","init","insertVariable","setCurrentId","setAggregationType","validateFormula","safeFormulaText","saveDataset","saveFormulaHtml","level","mainIndex","variable","monacoEditor","editor","split","getPosition","ln","lineNumber","line","col","substring","setPosition","setVariable","setValue","reset","AjfAggregationType","labelText","_first","_formAnalyzerSub","AjfValidationService","Input","formulaTextArea","AjfMonacoEditor","_","aggregationTypes","sizedEnumToStringArray","formulaDate","Sum","currentIndex","imageType","AjfImageType","Flag","AjfReportBuilderFormsAnalyzer","setCurrentIndex","currentMainDataIndex","isSelected","getMainData","_dataset","mainData","getDataset","getRelatedData","relatedData","getTableHeader","getTableData","tableData","needMainData","chartType","AjfChartType","Scatter","Bubble","removeDataset","editMode","dialogRef","Chart","openDialogAddMainData","openDialogChartEditMainData","openDialogTableEditMainData","openDialogChartAddDataset","openDialogTableAddDataset","openDialogChartAddDataOfDataset","openDialogChartEditDataset","openDialogTableEditDataset","openDialogChartEditDataOfDataset","choicesOrigins","AjfImageFilterPipe","transform","items","info","includes","Pipe","AjfReportBuilderImageGroup","_icon","_classes","fontSet","fontIcon","setSearch","valueToSearch","currentTarget","emitFormula","formulaClick","getFlag","returnValue","class","prefixClass","toggle","AjfReportBuilderProperties","toNumber","matches","match","toNumberArray","fillPxNumberArray","v21","v22","v31","v32","percent","setForms","formsJson","AjfForm","setStyle","currentColor","setWidgetMargin","_updateWidgetMarginEvt","setWidgetPadding","_updateWidgetPaddingEvt","setWidgetBorderWidth","_updateWidgetBorderWidthEvt","setWidgetBorderRadius","_updateWidgetBorderRadiusEvt","styleColor","styleBackgroundColor","getModule","quillModules","isChartTypeSelected","initChartType","setTab","tabValue","hideMenu","openFormulaDialog","_dialog","isFormula","_formsSub","widgetName","reportStyles","sectionStyles","widgetStyles","sectionColor","widgetColor","visibilitySection","_colorSub","toolbar","list","script","background","font","fonts","align","getHTML","htmlText","distinctUntilChanged","getHeightWidget","getFontSizeWidget","getFontAlignWidget","getBorderWidthWidget","getBorderWidthWidgetTop","m","getBorderWidthWidgetRight","getBorderWidthWidgetBottom","getBorderWidthWidgetLeft","getBorderRadiusWidget","getBorderRadiusWidgetTopLeft","getBorderRadiusWidgetTopRight","getBorderRadiusWidgetBottomRight","getBorderRadiusWidgetBottomLeft","getMarginWidget","getMarginWidgetTop","getMarginWidgetRight","getMarginWidgetBottom","getMarginWidgetLeft","getPaddingWidget","getPaddingWidgetTop","getPaddingWidgetRight","getPaddingWidgetBottom","getPaddingWidgetLeft","getBackgroundColorWidget","getColorWidget","_stylesUpdatesSubs","withLatestFrom","ngOnChanges","changes","currentValue","_headerStyleSub","_contentStylesSub","_footerStylesSub","_originSub","marginExpanded","paddingExpanded","borderWidthExpanded","borderRadiusExpanded","backgroundColor","borderColor","currentModule","chartBorderColor","chartBorderWidth","iconSet","title","flagSet","keys","iconSets","AjfQuillEditor","check","dateFormats","elem","setHTML","writeValue","initHTML","ngAfterViewInit","toolbarElem","_elementRef","querySelector","modules","defaultModules","Quill","register","insertAdjacentHTML","editorElem","quillEditor","placeholder","readOnly","theme","formats","editorCreated","on","oldRange","source","selectionChanged","onModelTouched","delta","oldDelta","html","children","innerHTML","getText","onModelChange","contentChanged","listenFunc","_renderer","listen","_init","pasteHTML","querySelectorAll","unlisten","innerText","_formulas","setText","registerOnChange","fn","registerOnTouched","err","valid","textLength","minLength","minLengthError","given","maxLength","maxLengthError","enable","_formulaTextSub","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","NG_VALIDATORS","Output","emptyArray","validator","slice","import","whitelist","setAttribute","efs","formulaEntry","link_1","createElement","linkLabel","createText","appendChild","AjfReportBuilderRendererWidget","getColumnContent","getIcon","evaluate","getPercent","toString","getImageUrl","url","getImageType","Image","getHtmlText","getCoordinate","coordinate","getTileLayer","tileLayer","tileLayerMap","getAttribution","attribution","attributionMap","getChartType","getTableTitles","tableTitle","getTableContent","tableContent","section","currentContentWidget","AjfReportBuilderThemeColorDialog","firstElementChild","AjfReportBuilderThemeColor","setStyles","setChartStyle","setAlphaColor","lastComma","lastIndexOf","_colorsSub","alphaColor","AjfReportBuilderToolbarDialog","resetReport","AjfReportBuilderToolbar","JSONRequest","onAddClick","addClick","undoLastOperation","isZoomed","zoom","outputs","emptyContent","AjfReportBuilderWidgetToolbarButton","ajfReportBuilderWidgetToString","AjfReportBuilderWidgetsRowButtons","selectedWidget","isClicked","onFocus","direction","isColumn","isOneColumn","widgetReportBuilderIconName","ajfWidgetTypeToLabel","isOver","AjfReportBuilderWidgetsToolbar","chartTypes","widgetTypes","pos","AjfReportBuilder","_setCurrentReport","ngAfterContentInit","AjfReportBuilderModule","NgModule","imports","CommonModule","FormsModule","DragDropModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatDialogModule","MatGridListModule","MatIconModule","MatListModule","MatSelectModule","MatSidenavModule","MatSlideToggleModule","MatSliderModule","MatTabsModule","MatToolbarModule","MatTooltipModule","TranslateModule","ColorPickerModule","AjfCommonModule","AjfImageModule","AjfMapModule","AjfMonacoEditorModule","AjfTableModule","AjfTextModule","declarations","exports","entryComponents"],"mappings":"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"}