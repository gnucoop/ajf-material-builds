{"version":3,"file":"material-report-builder.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/material/report-builder/tokens.ts","../../src/material/report-builder/report-builder-service.ts","../../src/material/report-builder/column.ts","../../src/material/report-builder/utils.ts","../../src/material/report-builder/condition-editor.ts","../../src/material/report-builder/content.ts","../../src/material/report-builder/custom-widget-dialog.ts","../../src/material/report-builder/custom-widget-toolbar-button.ts","../../src/material/report-builder/custom-widgets-toolbar.ts","../../src/material/report-builder/forms-analyzer-dialog.ts","../../src/material/report-builder/forms-analyzer.ts","../../src/material/report-builder/image-filter.ts","../../src/material/report-builder/image-group.ts","../../src/material/report-builder/properties.ts","../../src/material/report-builder/quill-editor.ts","../../src/material/report-builder/renderer-widget.ts","../../src/material/report-builder/theme-color-dialog.ts","../../src/material/report-builder/theme-color.ts","../../src/material/report-builder/toolbar-dialog.ts","../../src/material/report-builder/toolbar.ts","../../src/material/report-builder/widget-toolbar-button.ts","../../src/material/report-builder/widgets-row-buttons.ts","../../src/material/report-builder/widgets-toolbar.ts","../../src/material/report-builder/report-builder.ts","../../src/material/report-builder/report-builder-module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {InjectionToken} from '@angular/core';\n\nimport {AjfReportsConfig} from './models';\n\nexport const AJF_REPORTS_CONFIG = new InjectionToken<AjfReportsConfig>('AJF_REPORTS_CONFIG');\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfField, AjfFieldType, AjfForm, AjfNode, AjfNodeType, flattenNodes} from '@ajf/core/forms';\nimport {AjfFormula, createFormula} from '@ajf/core/models';\nimport {\n  AjfAggregation, AjfChartWidget, AjfColumnWidget, AjfCustomWidget, AjfDataWidget, AjfImageWidget,\n  AjfLayoutWidget, AjfReport, AjfReportContainer, AjfStyles, AjfTableWidget, AjfTextWidget,\n  AjfWidget, AjfWidgetType, createAggregation, createWidget\n} from '@ajf/core/reports';\nimport {deepCopy} from '@ajf/core/utils';\nimport {EventEmitter, Inject, Injectable, Optional} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {\n  combineLatest, filter, map, publishReplay, refCount, scan, share, startWith\n} from 'rxjs/operators';\n\nimport {AjfFormVariables, AjfReportIcons, AjfReportsConfig, AjfWidgetsContainer} from './models';\nimport {\n  AjfColorOperation, AjfCustomWidgetsOperation, AjfFormVariablesOperation, AjfReportFormsOperation,\n  AjfStylesOperation, AjfWidgetOperation, AjfWidgetsOperation\n} from './operations';\nimport {AJF_REPORTS_CONFIG} from './tokens';\n\n/**\n * This service contains all the logic to model the report widget.\n *\n * @export\n */\n@Injectable()\nexport class AjfReportBuilderService {\n\n  /**\n   *  this Observable observe the customWidgets obj\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _customWidgets: Observable<AjfCustomWidget[]>;\n  private _customWidgetsUpdate: Subject<AjfCustomWidgetsOperation> =\n      new Subject<AjfCustomWidgetsOperation>();\n\n  /**\n   * this Observable observe the name of the section that contains the current widget.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _origin: Observable<string>;\n  private _originUpdate: Subject<string> = new Subject<string>();\n\n  /**\n   * this Observable observe the exported json\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _savedReport: Observable<AjfReport>;\n  private _savedReportUpdate: Subject<AjfReport> = new Subject<AjfReport>();\n\n  private _jsonStack: BehaviorSubject<string[]> =\n  new BehaviorSubject<string[]>([]);\n\n  private _lastDeletedJson: string | undefined;\n\n  private _emptyContent: BehaviorSubject<boolean> =\n  new BehaviorSubject<boolean>(true);\n\n  /**\n   *  this Observable observe if is fired drag mouse event.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _onDragged: Observable<boolean>;\n  private _onDraggedUpdate: Subject<boolean> = new Subject<boolean>();\n\n\n  private _onOver: Observable<boolean>;\n  private _onOverUpdate: Subject<boolean> = new Subject<boolean>();\n\n\n  /**\n   * this Observable observe the status of permanent zoom\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _fixedZoom: Observable<boolean>;\n  private _fixedZoomUpdate: Subject<boolean> = new Subject<boolean>();\n\n\n  /**\n   *  this Observable observe if is fired drag mouse event.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _onDragEnter: Observable<any>;\n  private _onDragEnterUpdate: Subject<any> = new Subject<any>();\n\n  /**\n   * Observe the header widget array.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _headerWidgets: Observable<AjfWidgetsContainer>;\n  private _headerWidgetsUpdate: Subject<AjfWidgetsOperation> = new Subject<AjfWidgetsOperation>();\n\n  /**\n   * observe the header styles.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _headerStyles: Observable<AjfStyles>;\n\n  /**\n   * Observe the content widget array\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _contentWidgets: Observable<AjfWidgetsContainer>;\n  private _contentWidgetsUpdate: Subject<AjfWidgetsOperation> = new Subject<AjfWidgetsOperation>();\n\n  /**\n   * this Observable observe the content styles.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _contentStyles: Observable<AjfStyles>;\n\n  /**\n   * this Observable observe the footer widget array.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _footerWidgets: Observable<AjfWidgetsContainer>;\n  private _footerWidgetsUpdate: Subject<AjfWidgetsOperation> = new Subject<AjfWidgetsOperation>();\n\n\n  private _color: Observable<string[]>;\n  private _colorUpdate: Subject<AjfColorOperation> = new Subject<AjfColorOperation>();\n  private _defaultColor: string[] =\n  [\n    'rgba(0, 0, 0, 1)', 'rgba(51, 153, 255, 1)', 'rgba(153, 204, 0, 1)', 'rgba(255, 102, 0, 1)',\n    'rgba(0, 204, 204, 1)', 'rgba(204, 204, 153, 1)', 'rgba(255, 153, 0, 1)', 'rgba(230, 0, 0, 1)',\n    'rgba(255, 153, 0, 1)', 'rgba(255, 255, 0, 1)', 'rgba(0, 138, 0, 1)', 'rgba(0, 102, 204, 1)',\n    'rgba(153, 51, 255, 1)', 'rgba(255, 255, 255, 1)', 'rgba(250, 204, 204, 1)',\n    'rgba(255, 235, 204, 1)', 'rgba(255, 255, 204, 1)', 'rgba(204, 232, 204, 1)',\n    'rgba(204, 224, 245, 1)', 'rgba(235, 214, 255, 1)', 'rgba(187, 187, 187, 1)',\n    'rgba(240, 102, 102, 1)', 'rgba(255, 194, 102, 1)', 'rgba(255, 255, 102, 1)',\n    'rgba(102, 185, 102, 1)', 'rgba(102, 163, 224, 1)', 'rgba(194, 133, 255, 1)',\n    'rgba(136, 136, 136, 1)', 'rgba(161, 0, 0, 1)', 'rgba(178, 107, 0, 1)',\n    'rgba(178, 178, 0, 1)', 'rgba(0, 97, 0, 1)', 'rgba(0, 71, 178, 1)',\n    'rgba(107, 36, 178, 1)', 'rgba(68, 68, 68, 1)', 'rgba(92, 0, 0, 1)', 'rgba(102, 61, 0, 1)',\n    'rgba(102, 102, 0, 1)', 'rgba(0, 55, 0, 1)', 'rgba(0, 41, 102, 1)', 'rgba(61, 20, 102, 1)'\n  ];\n\n\n  /**\n   * this Observable observe the footer styles.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _footerStyles: Observable<AjfStyles>;\n\n  /**\n   *  this Observable observe the current widget which holds the focus.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _currentWidget: Observable<AjfWidget|null>;\n  private _currentWidgetUpdate: BehaviorSubject<AjfWidgetOperation|null> =\n      new BehaviorSubject<AjfWidgetOperation|null>(null);\n\n\n  /**\n   * Observe the AjfFormVariables exploit for field selecting from forms\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _formsVariables: Observable<AjfFormVariables[]>;\n  private _formsVariablesUpdate: BehaviorSubject<AjfFormVariablesOperation|null> =\n      new BehaviorSubject<AjfFormVariablesOperation|null>(null);\n\n  /**\n   * Observe the AjfFormVariables exploit for field selecting from forms\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _conditionNames: Observable<AjfFormVariables[]>;\n  private _conditionNamesUpdate: BehaviorSubject<AjfFormVariablesOperation|null> =\n      new BehaviorSubject<AjfFormVariablesOperation|null>(null);\n\n  /**\n   * this BehaviorSubject update export report.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _saveReport: BehaviorSubject<any> =\n  new BehaviorSubject<any>(null);\n\n  /**\n   * this BehaviorSubject contains the AjfReport.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _report: BehaviorSubject<AjfReport | null> =\n    new BehaviorSubject<AjfReport | null>(null);\n\n  /**\n   *  this Observable observe the styles of report.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _reportStyles: Observable<AjfStyles>;\n  private _reportStylesUpdate: Subject<AjfStylesOperation> = new Subject<AjfStylesOperation>();\n\n  /**\n   * observe the forms fetched\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _reportForms: Observable<AjfForm[]>;\n  private _reportFormsUpdate: Subject<AjfReportFormsOperation> =\n      new Subject<AjfReportFormsOperation>();\n\n  /**\n   * dictionary for  widgetsUpdate\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _updates: any = {\n    header: this._headerWidgetsUpdate,\n    content: this._contentWidgetsUpdate,\n    footer: this._footerWidgetsUpdate,\n    color: this._colorUpdate,\n    customWidgets: this._customWidgetsUpdate\n  };\n\n  /**\n   * event emitter that notify when wont to save report\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _saveReportEvent: EventEmitter<void> = new EventEmitter<void>();\n\n  private _saveFormulaTOHtml: EventEmitter<any> = new EventEmitter<any>();\n\n  getFormulaToHtmlEvent(): Observable<string> {\n    return this._saveFormulaTOHtml.asObservable();\n  }\n\n  /**\n   * event emitter that notify when column width changed\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  columnWidthChangedEmitter: EventEmitter<void> = new EventEmitter<void>();\n\n  private _iconSets: AjfReportIcons = {\n    'ajf-icon': []\n  };\n  get iconSets(): AjfReportIcons { return this._iconSets; }\n\n  /**\n   * Creates an instance of AjfReportBuilderService.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  constructor(\n    @Optional() @Inject(AJF_REPORTS_CONFIG) reportsConfig: AjfReportsConfig\n  ) {\n\n    this._lastDeletedJson = '';\n\n    if (reportsConfig != null) {\n      if (reportsConfig.icons != null) {\n        this._iconSets = {...this._iconSets, ...reportsConfig.icons};\n      }\n    }\n\n    this._origin = (<Observable<string>>this._originUpdate).pipe(\n      startWith('header'),\n      share()\n    );\n\n    this._savedReport = (<Observable<AjfReport>>this._savedReportUpdate).pipe(\n      share()\n    );\n\n    this._onDragged = (<Observable<boolean>>this._onDraggedUpdate).pipe(\n      startWith(false),\n      share()\n    );\n\n    this._onOver = (<Observable<boolean>>this._onOverUpdate).pipe(\n      startWith(false),\n      share()\n    );\n\n    this._fixedZoom = (<Observable<boolean>>this._fixedZoomUpdate).pipe(\n      startWith(false),\n      share()\n    );\n\n    this._onDragEnter = this._onDragEnterUpdate.pipe(share());\n\n    this._reportStyles = (<Observable<AjfStylesOperation>>this._reportStylesUpdate)\n                             .pipe(scan((styles: AjfStyles, op: AjfStylesOperation) => {\n                                     return op(styles);\n                                   }, <AjfStyles>{}), share(), startWith(<AjfStyles>{}));\n\n    this._reportForms = (<Observable<AjfReportFormsOperation>>this._reportFormsUpdate)\n                            .pipe(scan((forms: AjfForm[], op: AjfReportFormsOperation) => {\n                                    return op(forms);\n                                  }, []), share(), startWith([]));\n\n    this._customWidgets =\n        (<Observable<AjfCustomWidgetsOperation>>this._customWidgetsUpdate)\n            .pipe(scan((widgets: AjfCustomWidget[], op: AjfCustomWidgetsOperation) => {\n                    return op(widgets);\n                  }, []), share(), startWith([]));\n\n    this._formsVariables =\n        (<Observable<AjfFormVariablesOperation>>this._formsVariablesUpdate)\n            .pipe(\n                filter(s => s != null),\n                scan((variables: AjfFormVariables[], op: AjfFormVariablesOperation) => {\n                  return op(variables);\n                }, []), publishReplay(1), refCount());\n\n    this._conditionNames =\n        (<Observable<AjfFormVariablesOperation>>this._conditionNamesUpdate)\n            .pipe(\n                filter(s => s != null),\n                scan((variables: AjfFormVariables[], op: AjfFormVariablesOperation) => {\n                  return op(variables);\n                }, []), share(), startWith([]));\n\n    this._headerWidgets = (<Observable<AjfWidgetsOperation>>this._headerWidgetsUpdate)\n                              .pipe(\n                                  scan(\n                                      (widgets: AjfWidgetsContainer, op: AjfWidgetsOperation) => {\n                                        return op(widgets);\n                                      },\n                                      <AjfWidgetsContainer>{widgets: [], styles: {}}),\n                                  startWith(<AjfWidgetsContainer>{widgets: [], styles: {}}),\n                                  publishReplay(1), refCount());\n\n    this._headerStyles = this._headerWidgets.pipe(map((widgets: AjfWidgetsContainer) => {\n      return widgets != null ? widgets.styles : {};\n    }));\n\n    this._contentWidgets = (<Observable<AjfWidgetsOperation>>this._contentWidgetsUpdate)\n                               .pipe(\n                                   scan(\n                                       (widgets: AjfWidgetsContainer, op: AjfWidgetsOperation) => {\n                                         return op(widgets);\n                                       },\n                                       <AjfWidgetsContainer>{widgets: [], styles: {}}),\n                                   startWith(<AjfWidgetsContainer>{widgets: [], styles: {}}),\n                                   publishReplay(1), refCount());\n\n    this._contentStyles = this._contentWidgets.pipe(map((widgets: AjfWidgetsContainer) => {\n      return widgets != null ? widgets.styles : {};\n    }));\n\n    this._footerWidgets = (<Observable<AjfWidgetsOperation>>this._footerWidgetsUpdate)\n                              .pipe(\n                                  scan(\n                                      (widgets: AjfWidgetsContainer, op: AjfWidgetsOperation) => {\n                                        return op(widgets);\n                                      },\n                                      <AjfWidgetsContainer>{widgets: [], styles: {}}),\n                                  startWith(<AjfWidgetsContainer>{widgets: [], styles: {}}),\n                                  publishReplay(1), refCount());\n\n    this._footerStyles = this._footerWidgets.pipe(map((widgets: AjfWidgetsContainer) => {\n      return widgets != null ? widgets.styles : {};\n    }));\n\n    this._color = (<Observable<AjfColorOperation>>this._colorUpdate)\n                      .pipe(scan((color: string[], op: AjfColorOperation) => {\n                              return op(color);\n                            }, this._defaultColor), share(), startWith(this._defaultColor));\n\n    this._currentWidget =\n        (<Observable<AjfWidgetOperation>>this._currentWidgetUpdate)\n            .pipe(filter(s => s != null), scan((widget: AjfWidget|null, op: AjfWidgetOperation) => {\n                    return op(widget);\n                  }, undefined), publishReplay(1), refCount());\n\n    this._reportForms.pipe(\n      filter(f => f.length != 0),\n      map((forms: AjfForm[]) => {\n        return (_c: AjfFormVariables[]): AjfFormVariables[] => {\n          return this.fillFormsVariables(forms);\n        };\n      })\n    ).subscribe(this._formsVariablesUpdate);\n\n    this._reportForms.pipe(\n      filter(f => f.length != 0),\n      map((forms: AjfForm[]) => {\n        return (_c: AjfFormVariables[]): AjfFormVariables[] => {\n          return this.fillFormsVariables(forms);\n        };\n      })\n    ).subscribe(this._conditionNamesUpdate);\n\n    const reportObs = this._report;\n\n    reportObs.pipe(\n      map((r: AjfReport | null) => {\n        return (_colors: string[]): string[] => {\n          let tempColors: string[] = this._defaultColor;\n          if (r == null) {\n            return [];\n          } else {\n            this.parseColor(r.styles, tempColors);\n            if (r.content) {\n              this.parseColor(r.content.styles, tempColors);\n            }\n            if (r.footer) {\n              this.parseColor(r.footer.styles, tempColors);\n            }\n            if (r.header) {\n              this.parseColor(r.header.styles, tempColors);\n              for (let i = 0; i < r.header.content.length; i++) {\n                let obj = r.header.content[i];\n                this.parseColor(obj.styles, tempColors);\n                if (obj.widgetType === AjfWidgetType.Layout) {\n                  let layoutObj = obj as AjfLayoutWidget;\n                  for (let j = 0; j < layoutObj.content.length; j++) {\n                    let columnObj = layoutObj.content[j] as AjfColumnWidget;\n                    this.parseColor(columnObj.styles, tempColors);\n                    for (let z = 0; z < columnObj.content.length; z++) {\n                      let widgetObj = columnObj.content[z];\n                      this.parseColor(widgetObj.styles, tempColors);\n                    }\n                  }\n                }\n              }\n            }\n          }\n          return <string[]>tempColors;\n        };\n      })\n    ).subscribe(this._colorUpdate);\n\n    reportObs\n        .pipe(map((r: AjfReport|null) => {\n          return (_styles: AjfStyles): AjfStyles => {\n            if (r == null || r.styles == null) {\n              return <AjfStyles>{};\n            } else {\n              return <AjfStyles>r.styles;\n            }\n          };\n        }))\n        .subscribe(this._reportStylesUpdate);\n\n    reportObs\n        .pipe(map((r: AjfReport|null) => {\n          return (_widgets: AjfWidgetsContainer): AjfWidgetsContainer => {\n            if (r == null || r.header == null) {\n              return <AjfWidgetsContainer>{widgets: [], styles: {}};\n            } else {\n              return <AjfWidgetsContainer>{\n                widgets: r.header.content || [],\n                styles: r.header.styles || {}\n              };\n            }\n          };\n        }))\n        .subscribe(this._headerWidgetsUpdate);\n\n    reportObs\n        .pipe(map((r: AjfReport|null) => {\n          return (_widgets: AjfWidgetsContainer): AjfWidgetsContainer => {\n            if (r == null || r.content == null) {\n              return <AjfWidgetsContainer>{widgets: [], styles: {}};\n            } else {\n              return <AjfWidgetsContainer>{\n                widgets: r.content.content || [],\n                styles: r.content.styles || {}\n              };\n            }\n          };\n        }))\n        .subscribe(this._contentWidgetsUpdate);\n\n    reportObs\n        .pipe(map((r: AjfReport|null) => {\n          return (_widgets: AjfWidgetsContainer): AjfWidgetsContainer => {\n            if (r == null || r.footer == null) {\n              return <AjfWidgetsContainer>{widgets: [], styles: {}};\n            } else {\n              return <AjfWidgetsContainer>{\n                widgets: r.footer.content || [],\n                styles: r.footer.styles || {}\n              };\n            }\n          };\n        }))\n        .subscribe(this._footerWidgetsUpdate);\n\n    this._saveReport.pipe(\n      map((json: any) => {\n        return (_r: any): any => {\n          if (json = null) {\n            return {};\n          }\n          return json;\n        };\n      })\n    );\n\n    this._saveReportEvent\n        .pipe(\n            combineLatest(this.report, this.reportForms),\n            combineLatest(\n                this._headerWidgets.pipe(filter(w => w != null)),\n                this._contentWidgets.pipe(filter(w => w != null)),\n                this._footerWidgets.pipe(filter(w => w != null)),\n                this._reportStyles.pipe(filter(w => w != null)),\n                ))\n        .subscribe((r: [\n                     [void, AjfReport | null, AjfForm[]], AjfWidgetsContainer, AjfWidgetsContainer,\n                     AjfWidgetsContainer, AjfStyles\n                   ]) => {\n          let obj: any = {};\n          // const curRo = r[0][1];\n          // const forms = r[0][2] != null ? r[0][2] || []\n          //     : (curRo != null ? curRo.forms || [] : []);\n\n          obj.header = {content: r[1].widgets.map(w => deepCopy(w)), styles: r[1].styles} as\n              AjfReportContainer;\n          obj.content = {content: r[2].widgets.map(w => deepCopy(w)), styles: r[2].styles} as\n              AjfReportContainer;\n          obj.footer = {content: r[3].widgets.map(w => deepCopy(w)), styles: r[3].styles} as\n              AjfReportContainer;\n          obj.styles = r[4];\n\n          const ro = {\n            header: {content: r[1].widgets, styles: r[1].styles},\n            content: {content: r[2].widgets, styles: r[2].styles},\n            footer: {content: r[3].widgets, styles: r[3].styles},\n            styles: r[4]\n          } as AjfReport;\n\n          this.setSaveReport(obj);\n          this._savedReportUpdate.next(ro);\n          this.pushJsonStack(JSON.stringify(obj));\n        });\n  }\n\n  /**\n   *\n   *  functions\n   *\n   */\n\n  /**\n   * utils:\n   * remove AjfNodeGroup, AjfSlide, AjfRepeatingSlide, AjfStringField from ajfnode array\n   *\n   * @param nodes\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  filterNodes(nodes: AjfNode[]): AjfNode[] {\n    for (let i = 0; i < nodes.length; i++) {\n      const node = nodes[i];\n      if (node.nodeType === AjfNodeType.AjfNodeGroup || node.nodeType === AjfNodeType.AjfSlide ||\n          node.nodeType === AjfNodeType.AjfRepeatingSlide ||\n          (node.nodeType === AjfNodeType.AjfField &&\n           (node as AjfField).fieldType === AjfFieldType.String)) {\n        nodes.splice(i, 1);\n        i--;\n      }\n    }\n    return nodes;\n  }\n\n  parseColor(cssStyles: any, colors: string[]): void {\n    const styleKeys = ['background-color', 'backgroundColor', 'color'];\n    styleKeys.forEach((k) => {\n      if (\n        cssStyles[k] &&\n        colors.indexOf(cssStyles[k]) == -1\n      ) {\n        colors.push(cssStyles[k]);\n      }\n    });\n  }\n\n  fillFormsVariables(forms: AjfForm[]) {\n    let variables: AjfFormVariables[] = [];\n    for (let i = 0; i < forms.length; i++) {\n      variables[i] = { nodes: [], labels: [], names: [], types: [] };\n\n      if (forms[i].nodes != null && forms[i].nodes.length > 0) {\n        variables[i].nodes = this.filterNodes(flattenNodes(forms[i].nodes));\n      }\n      variables[i].labels = this.extractLabelsNodes(variables[i].nodes);\n      variables[i].names = this.extractNamesNodes(variables[i].nodes);\n      variables[i].types = this.extractTypesNodes(variables[i].nodes);\n\n    }\n    return variables;\n  }\n  /**\n   * utils:\n   *  the obj returned contains the label field of ajfNode\n   * @param nodes\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  extractLabelsNodes(nodes: AjfNode[]): any {\n    let obj: string[] = [];\n    for (let i = 0; i < nodes.length; i++) {\n      obj.push(nodes[i].label);\n    }\n    return obj;\n  }\n\n  extractNamesNodes(nodes: AjfNode[]): any {\n    let obj: string[] = [];\n    for (let i = 0; i < nodes.length; i++) {\n      obj.push(nodes[i].name);\n    }\n    return obj;\n  }\n  extractTypesNodes(nodes: AjfNode[]): any {\n    let obj: AjfFieldType[] = [];\n    for (let i = 0; i < nodes.length; i++) {\n      let p: AjfField = <AjfField>nodes[i];\n      obj.push(p.fieldType);\n    }\n    return obj;\n  }\n\n  setOrigin(origin: string): void {\n    this._originUpdate.next(origin);\n  }\n\n  /**\n   * utils:\n   * This method round the value to the decimal position\n   *\n   * @param value\n   * @param decimalpositions\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  roundTo(value: number, decimalPositions: number) {\n    let i = value * Math.pow(10, decimalPositions);\n\n    i = Math.floor(i);\n\n    return i / Math.pow(10, decimalPositions);\n  }\n\n  /**\n   * utils:\n   * This validator check if the value is a number.\n   *\n   * @param value\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  isNumber(value: any): boolean {\n    return /^\\d+(\\.\\d+)?/.test(value);\n  }\n\n  isNumberArray(value: any[]): boolean {\n    value.forEach((v) => {\n      if (!this.isNumber(v)) {\n        return false;\n      }\n    });\n    return true;\n  }\n\n  /**\n   * get _onDragged Observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get onDragged(): Observable<any> {\n    return this._onDragged;\n  }\n\n  /**\n   * get _onOver Observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get onOver(): Observable<any> {\n    return this._onOver;\n  }\n\n  /**\n   * get _fixedZoom Observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get fixedZoom(): Observable<boolean> {\n    return this._fixedZoom;\n  }\n\n  /**\n   *  change status of _fixedZoom in true\n   *\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  fixedZoomIn(): void {\n    this._fixedZoomUpdate.next(true);\n  }\n\n  /**\n   *  change status of _fixedZoom in false\n   *\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  fixedZoomOut(): void {\n    this._fixedZoomUpdate.next(false);\n  }\n\n  /**\n   * get _onDragEnter observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get onDragEnter(): Observable<any> {\n    return this._onDragEnter;\n  }\n\n  /**\n   *  update _onDragEnter with  section(header,content,footer) and index\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  dragEnter(array: string, index: number): void {\n    this._onDragEnterUpdate.next({ array, index });\n  }\n\n  /**\n   *  update _ondragged with true\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  dragStarted(): void {\n    this._onDraggedUpdate.next(true);\n  }\n\n  /**\n   *  update _onDragged with false\n   *\n   * @memberOf AjfReportBuilderService\n   */\n\n  dragEnded(): void {\n    this._onDraggedUpdate.next(false);\n  }\n\n\n  /**\n   *  update _onOver with true\n   *\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  overStarted(): void {\n    this._onOverUpdate.next(true);\n  }\n\n\n  /**\n   * update _onOver with false\n   *\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  overEnded(): void {\n    this._onOverUpdate.next(false);\n  }\n\n  /**\n   *\n   *  update _onDragged with false\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  dragLeave(): void {\n    this._onDragEnterUpdate.next({});\n  }\n\n  /**\n   * Get the report\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get report(): Observable<AjfReport | null> {\n    return this._report.asObservable();\n  }\n\n  /**\n   * emit save report event\n   *\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  saveReport() {\n    if (this._saveReportEvent != null) {\n      this._saveReportEvent.emit();\n    }\n  }\n\n  saveImageFormula(formula: AjfFormula) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      if (widget == null) {\n        return widget;\n      }\n      const w = widget as AjfImageWidget;\n      w.flag = formula;\n      w.icon = formula;\n      return w;\n    });\n  }\n\n  saveFormulaToHtml(htmlFormula: string, reference: any) {\n    if (this._saveFormulaTOHtml != null) {\n      const obj = {\n        'formula': htmlFormula,\n        'reference': reference\n      };\n      this._saveFormulaTOHtml.emit(obj);\n    }\n  }\n\n  setEmptyContent(val: boolean): void {\n    this._emptyContent.next(val);\n  }\n\n\n  pushJsonStack(json: string): void {\n    let currentStack = this._jsonStack.getValue();\n\n    if (currentStack.indexOf(json) === -1 && json !== this._lastDeletedJson) {\n      currentStack.push(json);\n    }\n\n    this._jsonStack.next(currentStack);\n  }\n\n  popJsonStack(): string | undefined {\n    let emptyJson =\n      '{\"header\":{\"content\":[],\"styles\":{}},' +\n      '\"content\":{\"content\":[],\"styles\":{}},\"' +\n      'footer\":{\"content\":[],\"styles\":{}},\"styles\":{}}';\n    let currentStack = this._jsonStack.getValue();\n    currentStack.pop();\n    this._lastDeletedJson = currentStack.pop();\n\n    if (currentStack.length <= 0) {\n      this._lastDeletedJson = '';\n      this._jsonStack.next([]);\n      this.updateCurrentWidget(null);\n      this.setEmptyContent(true);\n      return emptyJson;\n    }\n    this._jsonStack.next(currentStack);\n\n    return this._lastDeletedJson;\n  }\n\n\n  /**\n   * get the emitter\n   *\n   * @readonly\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  get columnWidthChanged() {\n    return this.columnWidthChangedEmitter;\n  }\n\n  /**\n   * get _customWidgets Observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get customWidgets(): Observable<AjfCustomWidget[]> {\n    return this._customWidgets;\n  }\n\n  /**\n   * Get the header widget\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get headerWidgets(): Observable<AjfWidgetsContainer> {\n    return this._headerWidgets;\n  }\n\n  /**\n   * Get the header styles\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get headerStyles(): Observable<AjfStyles> {\n    return this._headerStyles;\n  }\n\n  /**\n   * Get the Content widget\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get contentWidgets(): Observable<AjfWidgetsContainer> {\n    return this._contentWidgets;\n  }\n\n  /**\n   * Get the content styles\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get contentStyles(): Observable<AjfStyles> {\n    return this._contentStyles;\n  }\n\n  /**\n   * Get the footer widget\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get footerWidgets(): Observable<AjfWidgetsContainer> {\n    return this._footerWidgets;\n  }\n\n  /**\n   * Get the footer styles\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get footerStyles(): Observable<AjfStyles> {\n    return this._footerStyles;\n  }\n\n  /**\n   * Get the colors of report\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get colors(): Observable<string[]> {\n    return this._color;\n  }\n\n  get emptyContent(): Observable<boolean> {\n    return <Observable<boolean>>this._emptyContent;\n  }\n\n  /**\n   *\n   * @param type\n   * @param newWidget\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  updateArrayWidgets(type: string, newWidget: AjfWidgetsContainer) {\n    if ((type !== 'header') && (type !== 'content') && (type !== 'footer')) {\n      throw new Error('Unknown type ' + type);\n    }\n    this._updates[type].next((_widgets: AjfWidgetsContainer): AjfWidgetsContainer => {\n      return newWidget;\n    });\n  }\n\n  /**\n   * get _formsVariables Observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get formsVariables(): Observable<AjfFormVariables[]> {\n    return this._formsVariables;\n  }\n\n  get conditionNames(): Observable<AjfFormVariables[]> {\n    return this._conditionNames;\n  }\n  /**\n   * Get the current widget\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get currentWidget(): Observable<AjfWidget|null> {\n    return this._currentWidget;\n  }\n\n  /**\n   * This method Update _currentWidgetUpdate with newWidget.\n   *\n   * @param newWidget\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  updateCurrentWidget(newWidget: AjfWidget|null) {\n    this._currentWidgetUpdate.next((_widget: AjfWidget|null): AjfWidget|null => {\n      this._saveReportEvent.emit();\n      return newWidget;\n    });\n  }\n\n  /**\n   * Get the report\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get getSaveReport(): Observable<any> {\n    return this._saveReport.asObservable();\n  }\n\n  /**\n   * get _jsonSavedReport obeservable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get reportSaved(): Observable<AjfReport> {\n    return this._savedReport;\n  }\n\n\n  /**\n   * get _reportStyles observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get reportStyles(): Observable<AjfStyles> {\n    return this._reportStyles;\n  }\n\n  /**\n   * get _reportForms observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get reportForms(): Observable<AjfForm[]> {\n    return this._reportForms;\n  }\n\n  /**\n   * get the _origin Observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get origin(): Observable<string> {\n    return this._origin;\n  }\n\n  /**\n   * This method assigns the new width to the idx column\n   * and recalculates the width of the remaining columns of the layout.\n   * The range value are from 0,1 to 1.\n   *\n   * RULES:\n   * The min value for column is 0,1.\n   * The sum of all columns width is always 1.\n   * The method round the values.\n   * If is present only one column the width is always 1.\n   *\n   * When the new value `>` old value:\n   * the width of the remaining columns decreases.\n   * When the new value `<` old value:\n   * the width of the remaining columns increases.\n   *\n   * When values ​​are periodic, rounding assigns the gap to the current value.\n   * For example: 3 columns with 0,33 believe 1 column 0,34 and 2 columns 0,33.\n   *\n   * @param newValue\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  instantColumnValue(newValue: number, idx: number) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      if (widget == null) {\n        return widget;\n      }\n      let myObj = <AjfLayoutWidget>widget;\n\n      let size = myObj.columns.length;\n\n      let spreadValue = 0;\n      let objNum = 0;\n      let sum = 0;\n      let idxFirstNoObj = -1;\n\n      let add = false;\n      let foundFirstNoObj = false;\n\n      let re1 = new RegExp('(^[0]\\.\\[1-9][0-9]$)');\n      let re2 = new RegExp('(^[0]\\.\\[1-9]$)');\n      let re3 = new RegExp('^[1]$');\n\n      let oldValue = myObj.columns[idx];\n\n      newValue = Number(this.roundTo(newValue, 2).toFixed(2));\n\n      if (myObj.columns[idx] == null) {\n        throw new Error('invalid value');\n      }\n\n      for (let j = 0; j < size; j++) {\n        if (myObj.columns[j] === -1) {\n          objNum++;\n        }\n      }\n\n      if (oldValue == -1) {\n        oldValue = 0.1;\n        objNum--;\n        newValue = Number(this.roundTo(1 / (size - objNum), 2).toFixed(2));\n        myObj.columns[idx] = 0.1;\n      } else if (oldValue < 0.1) {\n        oldValue = 0.1;\n      }\n\n\n      if (newValue !== -1) {\n\n        if (myObj.columns.length === 1) {\n          myObj.columns[0] = 1;\n          return myObj;\n        }\n\n        if (newValue < 0.1) {\n          newValue = 0.1;\n        } else if (newValue + 0.1 * (size - objNum - 1) > 1) {\n          newValue = 1 - (0.1 * (size - objNum - 1));\n        }\n\n        if ((oldValue === newValue) && (oldValue === 0.1)) {\n          myObj.columns[idx] = newValue;\n          return myObj;\n        }\n\n        if (oldValue > newValue) {\n          add = true;\n          spreadValue = (oldValue - newValue) / (size - objNum - 1);\n        } else {\n          add = false;\n          spreadValue = (newValue - oldValue) / (size - objNum - 1);\n        }\n\n        spreadValue = Number(this.roundTo(spreadValue, 2).toFixed(2));\n\n        if (spreadValue < 0.01) {\n          spreadValue = 0.1;\n        }\n\n      } else {\n        myObj.columns[idx] = -1;\n        objNum++;\n        add = true;\n        if (myObj.columns.length == 1) {\n          spreadValue = 1;\n        } else {\n          spreadValue = (oldValue) / (size - objNum);\n        }\n      }\n\n      for (let i = 0; i < size; i++) {\n        if (myObj.columns[i] !== -1) {\n\n          if ((i == idx)) {\n            myObj.columns[idx] = newValue;\n          } else {\n\n            if (add) {\n              myObj.columns[i] += spreadValue;\n              if ((myObj.columns[i] > 0.9) && (myObj.columns.length - objNum != 1)) {\n                myObj.columns[i] = 0.90;\n              }\n\n            } else {\n              myObj.columns[i] -= spreadValue;\n              if (myObj.columns[i] < 0.1) {\n                myObj.columns[i] = 0.10;\n              }\n            }\n\n            myObj.columns[i] = Number(this.roundTo(myObj.columns[i], 2).toFixed(2));\n            sum += myObj.columns[i];\n          }\n\n          sum = Number(this.roundTo(sum, 2).toFixed(2));\n\n          if (foundFirstNoObj == false) {\n            idxFirstNoObj = i;\n            foundFirstNoObj = true;\n          }\n        }\n      }\n\n      if (newValue === -1) {\n        myObj.columns[idx] = -1;\n        if (foundFirstNoObj) {\n          myObj.columns[idxFirstNoObj] += Number(this.roundTo(1 - sum, 2).toFixed(2));\n        }\n      } else {\n        myObj.columns[idx] = Number(this.roundTo(1 - sum, 2).toFixed(2));\n\n      }\n\n      for (let j = 0; j < myObj.columns.length; j++) {\n        if (\n          myObj.columns[j] !== -1 &&\n          !re1.test(String(myObj.columns[j])) &&\n          !re2.test(String(myObj.columns[j])) &&\n          !re3.test(String(myObj.columns[j]))\n        ) {\n          this.instantColumnValue(0.10, j);\n        }\n      }\n      this.columnWidthChangedEmitter.emit();\n      this._saveReportEvent.emit();\n      return myObj;\n    });\n  }\n\n  /**\n   * This method set the imageUrl on the current AjfImageWidget.\n   *\n   * @param imageUrl\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setImageUrl(imageUrl: string) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      if (widget == null) {\n        return null;\n      }\n      const myObj = widget as AjfImageWidget;\n      myObj.url = createFormula({formula: `\"${imageUrl}\"`});\n      return myObj;\n    });\n  }\n\n  setIcon(icon: { fontSet: string, fontIcon: string }) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      if (widget == null) {\n        return null;\n      }\n      const myObj = widget as AjfImageWidget;\n      myObj.icon = createFormula({formula: `\"${icon}\"`});\n      return myObj;\n    });\n  }\n\n  setFlag(value: string) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      if (widget == null) {\n        return null;\n      }\n      const myObj = widget as AjfImageWidget;\n      myObj.flag = createFormula({formula: `\"${value}\"`});\n      return myObj;\n    });\n  }\n\n  saveCondition(conditionText: string) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      if (widget == null) {\n        return null;\n      }\n      if (widget.visibility != null) {\n        widget.visibility.condition = conditionText;\n      }\n      return widget;\n    });\n  }\n\n  saveChartFormula(\n    _label: string,\n    _level: number,\n    _mainIndex: number,\n    _index: number,\n    formulaText: string,\n    aggregationType: number) {\n    this._currentWidgetUpdate.next((w: AjfWidget|null): AjfWidget|null => {\n      if (w == null) {\n        return null;\n      }\n      const widget = w as AjfChartWidget;\n      if (widget != null && widget.dataset != null) {\n        let formula: AjfFormula = createFormula({});\n        let aggregation: AjfAggregation = createAggregation({});\n        // let obj: any;\n\n        formula.formula = formulaText;\n        aggregation.aggregation = aggregationType;\n\n        // obj = {\n        //   'formula': formula.toJson(),\n        //   'aggregation': aggregation.toJson(),\n        //   'label': label\n        // };\n\n        // dataset = AjfDataset.fromJson(obj);\n        // check if the row that contains main data is defined\n        /* if (widget.dataset[0] == null) {\n          widget.dataset[0] = [];\n        }\n\n        if (level == 0 && mainIndex == -1 && index == -1) {\n\n          widget.dataset[0].push(dataset);\n        } else if (level == 1 && mainIndex == -1 && index == -1) {\n\n          widget.dataset[widget.dataset.length] = [];\n          widget.dataset[widget.dataset.length - 1].push(dataset);\n        } else if (index === - 1) {\n          widget.dataset[mainIndex + 1].push(dataset);\n        } else {\n          widget.dataset[mainIndex].splice(index, 1, dataset);\n        } */\n\n      }\n      return widget;\n    });\n  }\n\n  saveTableFormula(\n    _label: string,\n    aggregationType: number,\n    formulaText: string,\n    _mainIndex: number,\n    _index: number) {\n    this._currentWidgetUpdate.next((w: AjfWidget|null): AjfWidget|null => {\n      if (w == null) {\n        return null;\n      }\n      const widget = w as AjfTableWidget;\n      if (widget.dataset != null) {\n        let formula: AjfFormula = createFormula({});\n        let aggregation: AjfAggregation = createAggregation({});\n        // let dataset: AjfDataset = new AjfDataset();\n        // let rowDataset: AjfDataset[] = [];\n        // let obj: any;\n\n        formula.formula = formulaText;\n        aggregation.aggregation = aggregationType;\n\n        // obj = {\n        //   'formula': formula.toJson(),\n        //   'aggregation': aggregation.toJson(),\n        //   'label': label\n        // };\n\n        // dataset = AjfDataset.fromJson(obj);\n        /* if (mainIndex === - 1) {\n          widget.dataset[widget.dataset.length] = [];\n          widget.dataset[widget.dataset.length - 1].push(dataset);\n        } else {\n          if (index === -1) {\n            widget.dataset[mainIndex].push(dataset);\n          } else {\n            widget.dataset[mainIndex].splice(index, 1, dataset);\n          }\n        } */\n      }\n      return widget;\n    });\n  }\n\n  removeTableMainData(index: number) {\n    this._removeFromCurrentWidgetArrayProperty('dataset', index);\n  }\n\n  removeData(_mainIndex: number, _index: number) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      let myObj = <AjfDataWidget>widget;\n\n      /* if (index === -1) {\n        myObj.dataset.splice(mainIndex, 1);\n      } else {\n        myObj.dataset[mainIndex].splice(index, 1);\n      } */\n\n      return myObj;\n    });\n  }\n\n  /**\n   * update type field of AjfChartWidget current widget\n   *\n   * @param type\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setChartType(type: number) {\n    this._setCurrentWidgetProperty('type', type);\n  }\n\n  /**\n   * remove  idx element of xLabels field of AjfChartWidget current widget\n   *\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  removeMainData(_idx: number) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      let myObj = <AjfChartWidget>widget;\n      // myObj.dataset[0].splice(idx, 1);\n\n      return myObj;\n    });\n  }\n\n  removeRelatedData(_mainIdx: number, _idx: number) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      let myObj = <AjfChartWidget>widget;\n      /* if (idx == -1) {\n        myObj.dataset.splice(mainIdx + 1, 1);\n      } else {\n        myObj.dataset[mainIdx + 1].splice(idx, 1);\n      } */\n\n      return myObj;\n    });\n  }\n\n\n  /**\n   * update backgroundColor field of AjfChartWidget current widget\n   *\n   * @param colors\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setChartBackgroundColor(colors: string[]) {\n    this._setCurrentWidgetProperty('backgroundColor', colors);\n  }\n\n  addChartBackgroundColor(color: string) {\n    this._addToCurrentWidgetArrayProperty('backgroundColor', color);\n  }\n\n  removeChartBackgroundColor(idx: number) {\n    this._removeFromCurrentWidgetArrayProperty('backgroundColor', idx);\n  }\n\n  /**\n   * update borderColor field of AjfChartWidget current widget\n   *\n   * @param colors\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setChartBorderColor(colors: string[]) {\n    this._setCurrentWidgetProperty('borderColor', colors);\n  }\n\n  setChartBorderWidth(value: number) {\n    this._setCurrentWidgetProperty('borderWidth', value);\n  }\n\n  addChartBorderColor(color: string) {\n    this._addToCurrentWidgetArrayProperty('borderColor', color);\n  }\n\n  removeChartBorderColor(idx: number) {\n    this._removeFromCurrentWidgetArrayProperty('borderColor', idx);\n  }\n\n  /**\n   * This method set the AjfReport.\n   *\n   * @param report\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setReport(report: AjfReport): void {\n    this._report.next(report);\n  }\n\n  /**\n   * This method set the export report.\n   *\n   * @param report\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setSaveReport(json: any): void {\n    this._saveReport.next(json);\n  }\n\n  /**\n   * This method set the font attribute on the current AjfWidget.\n   *\n   * There is a check on font-size attribute,\n   * if is no specificate the type of size font set 'pt' as default.\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setWidgetStyles(label: string, value: string | string[]) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      let myObj = <AjfTextWidget>widget;\n\n      const pxStyles = [\n        'font-size', 'height', 'width', 'border-width', 'border-radius', 'padding', 'margin'\n      ];\n      const isPxStyle = pxStyles.indexOf(label) > -1;\n      if (isPxStyle && !(value instanceof Array) && this.isNumber(value)) {\n        value += 'px';\n      } else if (isPxStyle && value instanceof Array && this.isNumberArray(value)) {\n        value = `${value.join('px ')}px`;\n      }\n\n      myObj.styles[label] = value;\n\n      return myObj;\n    });\n  }\n\n  /**\n   * this method update the styles of origin widget array\n   *\n   * @param origin can be header content or footer\n   * @param label for example background-color\n   * @param value for example rgb(255,255,255,1)\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setSectionStyles(origin: string, label: string, value: string) {\n    if ((origin !== 'header') && (origin !== 'content') && (origin !== 'footer')) {\n      throw new Error('uncknow origin ' + origin);\n    }\n\n    this._updates[origin].next((widget: AjfWidgetsContainer): AjfWidgetsContainer => {\n      widget.styles[label] = value;\n\n      widget.styles = <AjfStyles>{...widget.styles};\n\n      return widget;\n    });\n  }\n\n  /**\n   * this method set the style of the whole report.\n   *\n   * @param label for example background-color\n   * @param value for example rgb(255,255,255,1)\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setReportStyles(label: string, value: string) {\n    this._reportStylesUpdate.next((styles: AjfStyles): AjfStyles => {\n      if (styles == null) {\n        styles = {};\n      } else {\n        styles[label] = value;\n        styles = <AjfStyles>{...styles};\n      }\n      return styles;\n    });\n  }\n\n  /**\n   *  update forms\n   *\n   * @param forms\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setReportForms(forms: AjfForm[]) {\n    this._reportFormsUpdate.next((_form: AjfForm[]): AjfForm[] => {\n      return forms || [];\n    });\n  }\n\n  /**\n   * update customWidgets\n   *\n   * @param widget\n   * @param [position]\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  addCustomWidgets(widget: AjfCustomWidget, position?: number) {\n    this._customWidgetsUpdate.next((customWidgets: AjfCustomWidget[]): AjfCustomWidget[] => {\n      customWidgets = customWidgets || [];\n      if (position != null && position >= 0) {\n        customWidgets.splice(position, 0, widget);\n      } else {\n        customWidgets.push(widget);\n      }\n      return customWidgets;\n    });\n  }\n\n  /**\n   * reset customWidgets\n   *\n   * @param widget\n   * @param [position]\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  resetCustomWidgets() {\n    this._customWidgetsUpdate.next((customWidgets: AjfCustomWidget[]): AjfCustomWidget[] => {\n      customWidgets.length = 0;\n      return customWidgets;\n    });\n  }\n\n  /**\n   * update label of widget\n   *\n   * @param label\n   * @param position\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  changeLabelCustomWidget(label: string, position: number) {\n    this._customWidgetsUpdate.next((customWidgets: AjfCustomWidget[]): AjfCustomWidget[] => {\n      customWidgets[position].type = label;\n      return customWidgets;\n    });\n  }\n\n  /**\n   * Add an AjfWidget on _headerWidgetsUpdate\n   *\n   * @param widget\n   * @param [position]\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  addHeaderWidget(widget: AjfWidget, position?: number) {\n    this._addWidgetToContainer(this._headerWidgetsUpdate, widget, position);\n  }\n\n  /**\n   * Add an AjfWidget on _contentWidgetsUpdate\n   *\n   * @param widget\n   * @param [position]\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  addContentWidget(widget: AjfWidget, position?: number) {\n    this._addWidgetToContainer(this._contentWidgetsUpdate, widget, position);\n  }\n\n  /**\n   * Add an AjfWidget on _footerWidgetsUpdate\n   *\n   * @param widget\n   * @param [position]\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  addfooterWidget(widget: AjfWidget, position?: number) {\n    this._addWidgetToContainer(this._footerWidgetsUpdate, widget, position);\n  }\n\n  unfixedColumn(idx: number) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      if (widget == null) {\n        return widget;\n      }\n      let myObj = <AjfLayoutWidget>widget;\n      let num = myObj.columns.length;\n      let checkSum = 0;\n      let objNum = 0;\n      let value = 1;\n      let spreadValue: any;\n      myObj.columns[idx] = 0;\n\n      for (let j = 0; j < num; j++) {\n        if (myObj.columns[j] === -1) {\n          objNum++;\n        }\n      }\n\n      value = Number(this.roundTo(1 / (num - objNum), 2).toFixed(2));\n\n      for (let i = 0; i < num; i++) {\n        if (myObj.columns[i] !== - 1) {\n          myObj.columns[i] = value;\n          checkSum = Number(this.roundTo(checkSum + value, 2).toFixed(2));\n        }\n      }\n\n      checkSum = Number(this.roundTo(checkSum, 2).toFixed(2));\n\n      if (checkSum > 1) {\n        spreadValue = parseFloat(this.roundTo(((checkSum - 1) % 1), 2).toFixed(2));\n        myObj.columns[idx] -= spreadValue;\n        myObj.columns[idx] = this.roundTo(myObj.columns[idx], 2);\n      } else if (checkSum < 1) {\n        myObj.columns[idx] += (1 - (checkSum % 1));\n        myObj.columns[idx] = Number(this.roundTo(myObj.columns[idx], 2).toFixed(2));\n      }\n\n      return myObj;\n    });\n  }\n\n  /**\n   * Add column on the current AjfLayoutWidget.\n   *\n   * When adding a column the width of the other columns is recalculated\n   * by dividing it by the number of column\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  addColumn() {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      if (widget == null) {\n        return null;\n      }\n      let myObj = <AjfLayoutWidget>widget;\n      let tempObj: number[] = [];\n      let num = myObj.columns.length + 1;\n      let checkSum = 0;\n      let objNum = 0;\n      let value = 1;\n      let tmpValue: any;\n\n      if (num > 10) {\n        throw new Error('exceed max columns');\n      }\n\n      for (let j = 0; j < num; j++) {\n        if (myObj.columns[j] === -1) {\n          objNum++;\n        }\n      }\n      value = Number(this.roundTo(1 / (num - objNum), 2).toFixed(2));\n\n      for (let i = 0; i < num; i++) {\n        if (myObj.columns[i] === -1) {\n          tempObj.push(-1);\n        } else {\n          tempObj.push(value);\n          checkSum = Number(this.roundTo(checkSum + value, 2).toFixed(2));\n        }\n      }\n      checkSum = Number(this.roundTo(checkSum, 2).toFixed(2));\n\n      if (checkSum > 1) {\n        tmpValue =\n          parseFloat(\n            this.roundTo(\n              ((checkSum - 1) % 1), 2\n            ).toFixed(2));\n        tempObj[0] -= tmpValue;\n        tempObj[0] = this.roundTo(tempObj[0], 2);\n      } else if (checkSum < 1) {\n        tempObj[0] += (1 - (checkSum % 1));\n        tempObj[0] = Number(this.roundTo(tempObj[0], 2).toFixed(2));\n      }\n\n      myObj.columns = tempObj;\n\n      // TODO: @trik what's value?!?\n      const columnObj = createWidget({\n        widgetType: 7,\n        // value: myObj.columns[myObj.columns.length - 1],\n      });\n\n      myObj.content.push(columnObj);\n      this._saveReportEvent.emit();\n      return myObj;\n    });\n  }\n\n  removeWidgetToColumn(column: AjfColumnWidget, index: number) {\n    column.content.splice(index, 1);\n  }\n\n  /**\n   * This method remove a widget on the current AjfReport.\n   *\n   * @param node\n   * the position array:\n   *\n   * header -`>` headerWidgets\n   * content -`>` contentWidgets\n   * footer -`>` footerWidgets\n   * column -`>` column of layout\n   * layoutContent -`>` content of layout\n   * obj -`>` obj of layout\n   * customWidget -`>` custom widget\n   *\n   * @param idx the position array\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  remove(node: string, idx: number) {\n\n    switch (node) {\n      case 'header':\n      case 'content':\n      case 'footer':\n        this._updates[node].next((widgets: AjfWidgetsContainer): AjfWidgetsContainer => {\n          if (widgets.widgets.length === 0) {\n            throw new Error('you can not remove from empty array');\n          }\n          if (widgets.widgets[idx] == null) {\n            throw new Error('invalid index');\n          }\n          widgets.widgets.splice(idx, 1);\n          this.updateCurrentWidget(null);\n          return widgets;\n        });\n        break;\n      case 'layout':\n        this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n          if (widget == null) {\n            return null;\n          }\n          const myObj = widget as AjfLayoutWidget;\n\n          if (myObj.columns.length === 1) {\n            (myObj.content[0] as AjfColumnWidget).content.length = 0;\n            return myObj;\n          }\n\n          if (myObj.columns[idx] == null) {\n            throw new Error('this content is undefined');\n          } else {\n            let spread = myObj.columns[idx] / (myObj.columns.length - 1);\n\n            if (myObj.columns.length > 1) {\n              myObj.columns.splice(idx, 1);\n              myObj.content.splice(idx, 1);\n            }\n\n            for (let i = 0; i < myObj.columns.length; i++) {\n              myObj.columns[i] += spread;\n            }\n            this.instantColumnValue(myObj.columns[0], 0);\n          }\n          return myObj;\n        });\n        break;\n      case 'column':\n      case 'layoutContent':\n      case 'unfixedColumn':\n        this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n          if (widget == null) {\n            return null;\n          }\n          let myObj = <AjfLayoutWidget>widget;\n\n          if (node === 'column') {\n            let clm = <AjfColumnWidget>widget;\n            clm.content.splice(idx, 1);\n          } else if (node === 'layoutContent') {\n            if (myObj.columns.length === 0) {\n              throw new Error('the column length is 0');\n            }\n            if (myObj.content.length === 0) {\n              throw new Error('can not remove any widget from empty content');\n            }\n            if (myObj.columns[idx] != null && myObj.content[idx] == null) {\n              throw new Error('this content is undefined');\n            }\n          } else if (node === 'unfixedColumn') {\n            if (myObj.columns[idx] !== -1) {\n              throw new Error('the column position value  isnt -1');\n            }\n            this.unfixedColumn(idx);\n          }\n          // if (node !== 'obj') {\n          //   let spread = myObj.columns[idx] / (myObj.columns.length - 1);\n          //   myObj.content.splice(idx, 1);\n          //   if (myObj.columns.length > 1) {\n          //     myObj.columns.splice(idx, 1);\n          //   }\n          //   for (let i = 0; i < myObj.columns.length; i++) {\n          //     myObj.columns[i] += spread;\n          //   }\n          //   this.instantColumnValue(myObj.columns[0], 0);\n          // }\n          return myObj;\n        });\n        break;\n      case 'customWidgets':\n        {\n        this._updates[node].next((widgets: AjfCustomWidget[]): AjfCustomWidget[] => {\n          if (widgets.length === 0) {\n            throw new Error('you can not remove from empty array');\n          }\n          if (widgets[idx] == null) {\n            throw new Error('invalid index');\n          }\n          widgets.splice(idx, 1);\n          return widgets;\n        });\n        }\n        break;\n      default: throw new Error('unknown node ' + node);\n    }\n  }\n\n  /**\n   * This method add a AjfWidget on the current AjfLayoutWidget.\n   *\n   * @param newWidget\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  addToContent(newWidget: AjfWidget, idx: number) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      if (widget == null) {\n        return null;\n      }\n      let myObj = <AjfLayoutWidget>widget;\n\n      if (myObj.content[idx] != null) {\n        myObj.content.splice(idx, 1);\n      }\n      myObj.content.splice(idx, 0, newWidget);\n      return myObj;\n    });\n  }\n\n  addToColumn(event: any, toColumn: AjfColumnWidget, position?: number) {\n    if (event.dragData && event.dragData.fromColumn != null) {\n      let fromColumn: AjfColumnWidget = event.dragData.fromColumn;\n      let widget: AjfWidget = event.dragData.widget;\n      let fromIndex: number = event.dragData.fromIndex;\n\n      fromColumn.content.splice(fromIndex, 1);\n      toColumn.content.push(widget);\n\n    } else if (event.dragData && event.dragData.arrayFrom) {\n      this.remove(event.dragData.arrayFrom, event.dragData.fromIndex);\n      toColumn.content.push(event.dragData.widget);\n    } else if (event.dragData && event.dragData.json) {\n      let obj = JSON.parse(event.dragData.json);\n      let newWidget = deepCopy(obj);\n\n      if (position != null) {\n        toColumn.content.splice(position, 0, newWidget);\n      } else {\n        toColumn.content.push(newWidget);\n      }\n    } else {\n      let obj = {'widgetType': AjfWidgetType[event.dragData]};\n      let newWidget = deepCopy(obj);\n\n      if (position != null) {\n        toColumn.content.splice(position, 0, newWidget);\n      } else {\n        toColumn.content.push(newWidget);\n      }\n    }\n  }\n  changePositionOnColumn(event: any, toColumn: AjfColumnWidget, toIndex: number) {\n    let fromColumn: AjfColumnWidget = event.dragData.fromColumn;\n    let fromIndex: number = event.dragData.fromIndex;\n    let fromWidget: AjfWidget = fromColumn.content[fromIndex];\n    let toWidget: AjfWidget = fromColumn.content[toIndex];\n\n    if (fromColumn == toColumn) {\n      fromColumn.content[fromIndex] = toWidget;\n      fromColumn.content[toIndex] = fromWidget;\n    } else {\n      fromColumn.content.splice(fromIndex, 1);\n      toColumn.content.splice(toIndex, 0, fromWidget);\n    }\n  }\n\n  /**\n   * This method add the obj on the idx position.\n   * Obj have a no specificate width and is not calculate as columns\n   *\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  fixedColumn(idx: number) {\n    this.instantColumnValue(-1, idx);\n  }\n\n  changeColumn(from: number, to: number, layoutWidget: AjfLayoutWidget) {\n    if (to < 0 || to >= layoutWidget.content.length) {\n      return;\n    }\n    if (from > layoutWidget.content.length - 1 && to > from) {\n      return;\n    }\n\n    let fromColumn: AjfColumnWidget = <AjfColumnWidget>layoutWidget.content[from];\n    let fromColumnValue: number = layoutWidget.columns[from];\n    let toColumn: AjfColumnWidget = <AjfColumnWidget>layoutWidget.content[to];\n    let toColumnValue: number = layoutWidget.columns[to];\n\n    layoutWidget.content[from] = toColumn;\n    layoutWidget.columns[from] = toColumnValue;\n    layoutWidget.content[to] = fromColumn;\n    layoutWidget.columns[to] = fromColumnValue;\n\n    this.updateCurrentWidget(layoutWidget);\n  }\n\n  addCustomColor(color: string) {\n\n    this._updates['color'].next((colors: string[]): string[] => {\n\n      if (colors.indexOf(color) < 0) {\n        colors.push(color);\n      }\n      return colors;\n    });\n  }\n\n  private _addWidgetToContainer(\n      subj: Subject<AjfWidgetsOperation>, widget: AjfWidget, position?: number) {\n    subj.next((widgets: AjfWidgetsContainer): AjfWidgetsContainer => {\n      if (position != null && position >= 0) {\n        widgets.widgets.splice(position, 0, widget);\n      } else {\n        widgets.widgets.push(widget);\n      }\n      return widgets;\n    });\n    this.updateCurrentWidget(widget);\n    this.setEmptyContent(false);\n  }\n\n  private _setCurrentWidgetProperty(propName: string, value: any) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      if (widget == null) {\n        return null;\n      }\n      (widget as any)[propName] = value;\n      return widget;\n    });\n  }\n\n  private _addToCurrentWidgetArrayProperty(propName: string, value: any) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      if (widget == null) {\n        return null;\n      }\n      const arr = (<Array<any>>(widget as any)[propName]);\n      arr.push(value);\n      (widget as any)[propName] = arr;\n      return widget;\n    });\n  }\n\n  private _removeFromCurrentWidgetArrayProperty(propName: string, idx: number) {\n    this._currentWidgetUpdate.next((widget: AjfWidget|null): AjfWidget|null => {\n      (<Array<any>>(widget as any)[propName]).splice(idx, 1);\n      return widget;\n    });\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfColumnWidget} from '@ajf/core/reports';\nimport {\n  ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit, ViewEncapsulation\n} from '@angular/core';\nimport {Subscription, timer} from 'rxjs';\n\nimport {AjfReportBuilderService} from './report-builder-service';\n\n/**\n * this component manages the report text\n *\n * @export\n */\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-column',\n  templateUrl: 'column.html',\n  styleUrls: ['column.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderColumn implements OnDestroy, OnInit {\n\n  /**\n   * if true mouse event is on dragged status\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  showActions = false;\n\n  layoutShow = false;\n\n  // this boolean sign if is dragged a widget\n  onDragged = false;\n\n\n  /**\n   * is the array of values\n   *\n   * @memberOf TableComponent\n   */\n  @Input() column: AjfColumnWidget;\n\n  private _onDraggedSub: Subscription = Subscription.EMPTY;\n\n  addToList(event: any, idx: number, toColumn: AjfColumnWidget) {\n    this.onDragEndHandler();\n    if (event.dragData.fromColumn) {\n      this._service.changePositionOnColumn(event, toColumn, idx);\n    } else {\n      this._service.addToColumn(event, toColumn, idx);\n    }\n  }\n\n  /**\n   *  sign the start of mouse drag with 200 ms of delay\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragStartHandler(): void {\n    let s = timer(200)\n      .subscribe(() => {\n        s.unsubscribe();\n        this._service.dragStarted();\n      });\n  }\n\n  /**\n   * sign the end of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEndHandler(): void {\n    this._service.dragEnded();\n  }\n  constructor(\n    private _service: AjfReportBuilderService\n  ) {\n  }\n\n  ngOnInit() {\n    // this.widget = changes.widget.currentValue;\n\n    this._onDraggedSub = this._service.onDragged\n      .subscribe(x => {\n        this.onDragged = x;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this._onDraggedSub.unsubscribe();\n  }\n}\n\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWidgetType} from '@ajf/core/reports';\n\nexport function ajfReportBuilderWidgetToString(widgetType: string): string {\n  return `reportbuilder-${widgetType.toLowerCase()}`;\n}\n\nexport function ajfWidgetTypeStringToIcon(widgetType: string): string {\n  return `widget-${widgetType.toLowerCase()}`;\n}\n\nexport function ajfWidgetTypeToIcon(widgetType: AjfWidgetType): string {\n  return ajfWidgetTypeStringToIcon(AjfWidgetType[widgetType]);\n}\n\nexport function ajfWidgetTypeStringToLabel(widgetType: string): string {\n  return `widgetType.${widgetType}`;\n}\n\nexport function ajfWidgetTypeToLabel(type: AjfWidgetType): string {\n  return ajfWidgetTypeStringToLabel(AjfWidgetType[type]);\n}\n\nexport function widgetReportBuilderIconName(type: AjfWidgetType): string {\n  return `reportbuilder-${AjfWidgetType[type].toLowerCase()}`;\n}\n\nexport function sanitizeConditionString(str: string): string {\n  str = str.trim();\n  while (str.indexOf('  ') > 0) {\n    str = str.replace('  ', ' ');\n  }\n  return str;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCondition, validateExpression} from '@ajf/core/models';\nimport {\n  ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport {Subscription, timer} from 'rxjs';\n\nimport {AjfFormVariables} from './models';\nimport {AjfReportBuilderService} from './report-builder-service';\nimport {sanitizeConditionString} from './utils';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-condition-editor',\n  templateUrl: 'condition-editor.html',\n  styleUrls: ['condition-editor.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an ajf builder builder condition editor\n * @implements : OnDestroy\n * @implements : AfterViewInit\n */\nexport class AjfReportBuilderConditionEditor implements OnInit, OnDestroy {\n\n  @Input()\n  visibility: AjfCondition;\n\n  formsVariables: AjfFormVariables[];\n  isValid = false;\n  names: string[] = [];\n  currentId: number;\n\n  // conditionText is a string\n  conditionText = 'true';\n\n  a: any;\n  b: any;\n\n\n  @ViewChild('conditionTextArea', {static: false}) conditionTextArea: any;\n  @ViewChild('errorMessage', {static: false}) errorMessage: any;\n\n  //  operators is an array of any type that contains all allow operators\n  operators: string[] = [\n    '( )', '\\' \\'',\n    '<', '<=', '==', '>=', '>', '!=', '!',\n    '&&', '||',\n    '+', '-', '*', '/', '%',\n    'true', 'false'\n  ];\n\n  private _conditionNamesSub: Subscription = Subscription.EMPTY;\n\n  /**\n   * this constructor will init current condition by ajfBuilderservice\n   * and init condition and availableFieldNames subscriptions\n   */\n  constructor(\n    private _service: AjfReportBuilderService\n  ) {\n\n  }\n  extractNames(formsVariables: AjfFormVariables[]) {\n    this.names.length = 0;\n    for (let i = 0; i < formsVariables.length; i++) {\n      this.names = this.names.concat(formsVariables[i].names);\n    }\n  }\n\n  setCurrent(id: number, index: number) {\n    this.currentId = id;\n    this.appendText(this.formsVariables[id].names[index]);\n    this.checkValidation();\n  }\n\n  /**\n   * this method will return success if the current condtion is valid\n   * @return boolean\n   */\n  validateCondition(): boolean {\n    return validateExpression(this.conditionText, this.names);\n  }\n\n  // TODO complete the comment\n  /**\n   * this method will append text to json\n   * @param text      : string -\n   * @param goBackNum : number -\n   */\n  appendText(text: string, _goBackNum?: number): void {\n    if (text == null || this.conditionTextArea == null) {\n      return;\n    }\n\n    let el = this.conditionTextArea.nativeElement;\n    let sStart: number = Math.min(el.selectionStart, el.selectionEnd);\n    let sEnd: number = Math.max(el.selectionStart, el.selectionEnd);\n    let startingString: string = this.conditionText.substr(0, sStart);\n    let endingString: string = this.conditionText.substr(sEnd);\n    let initialLenght: number = startingString.length;\n    let newStr = '';\n\n    startingString = sanitizeConditionString(startingString);\n    endingString = sanitizeConditionString(endingString);\n    sStart += startingString.length - initialLenght +\n      text.length + (startingString.length > 0 ? 2 : 1);\n    newStr = startingString.length > 0 ? `${startingString} ` : '';\n    this.conditionText = `${newStr}${text} ${endingString}`;\n\n    const s = timer(0).subscribe(() => {\n      if (s && !s.closed) { s.unsubscribe(); }\n      if (el.createTextRange) {\n        let range = el.createTextRange();\n        range.move('character', sStart);\n        range.select();\n      } else {\n        if (el.selectionStart) {\n          el.focus();\n          el.setSelectionRange(sStart, sStart);\n        } else {\n          el.focus();\n        }\n      }\n    });\n  }\n\n  checkValidation() {\n    this.isValid = this.validateCondition();\n    if (this.isValid) {\n      this.saveCondition();\n    }\n  }\n\n  /**\n   * this method will save current condition\n   */\n  saveCondition(): void {\n    this._service.saveCondition(this.conditionText);\n  }\n\n  /**\n   * this method will hide the error message\n   */\n  hideErrorMessage(): void {\n    if (this.errorMessage == null) {\n      return;\n    }\n  }\n\n  ngOnInit(): void {\n    this.conditionText = this.visibility.condition;\n    this.isValid = true;\n\n    if (this.conditionText == 'true') {\n      this.conditionText = '';\n    }\n\n    this._conditionNamesSub = this._service.conditionNames\n      .subscribe((x) => {\n        this.formsVariables = x;\n        if (x != null) {\n          this.extractNames(this.formsVariables);\n        }\n      });\n\n  }\n  /**\n   * this method will destroy a conditionSubscriptions\n   */\n  ngOnDestroy(): void {\n    this._conditionNamesSub.unsubscribe();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfStyles, AjfWidget, AjfWidgetType} from '@ajf/core/reports';\nimport {deepCopy} from '@ajf/core/utils';\nimport {CdkDrag, CdkDragDrop} from '@angular/cdk/drag-drop';\nimport {\n  AfterViewChecked, ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit,\n  ViewEncapsulation\n} from '@angular/core';\nimport {Observable, Subscription, timer} from 'rxjs';\n\nimport {AjfReportBuilderDragData} from './report-builder-drag-data';\nimport {AjfReportBuilderService} from './report-builder-service';\n\n/**\n *  manage the content page\n *\n * @export\n */\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-content',\n  templateUrl: 'content.html',\n  styleUrls: ['content.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '(mouseover)': 'onMouseOver()',\n    '(mouseleave)': 'onMouseLeave()'\n  }\n})\nexport class AjfReportBuilderContent implements OnInit, AfterViewChecked, OnDestroy {\n  onMouseOver(): void {\n    this.showActions = true;\n    this._service.overStarted();\n  }\n\n  onMouseLeave(): void {\n    this.showActions = false;\n    this._service.overEnded();\n  }\n\n  canDropPredicate(\n    dropZones: string[]\n  ): (item: CdkDrag<AjfReportBuilderDragData>) => boolean {\n    return item => {\n      item.data.dropZones.forEach(d => {\n        if (dropZones.indexOf(d) > -1) { return true; }\n      });\n      return false;\n    };\n  }\n\n  reportStyles: Observable<AjfStyles>;\n\n  // this boolean sign if is dragged a widget\n  onDragged = false;\n\n\n  /**\n   *  observe the status of the fixed zoom\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  fixedZoom = false;\n\n  // this boolean sign if widget is in drag enter status\n  onDragEnter: any = {};\n\n\n  show = false;\n\n\n  // this array contains all widget locate in header zone\n  headerWidgets: AjfWidget[] = [];\n  /**\n   * observe the css style of header\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  headerStyles: Observable<AjfStyles>;\n\n  // this array contains all widget locate in content zone\n  contentWidgets: AjfWidget[] = [];\n\n  /**\n   * observe the css style of content\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  contentStyles: Observable<AjfStyles>;\n\n  // this array contains all widget locate in footer zone\n  footerWidgets: AjfWidget[] = [];\n\n\n  onOver: boolean = false;\n  /**\n   * observe the css style of footer\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  footerStyles: Observable<AjfStyles>;\n\n\n  // this is the current widget\n  currentWidget: AjfWidget|null = null;\n\n\n  /**\n   * if true mouse event is on dragged status\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  showActions = false;\n\n  private _onDraggedSub: Subscription = Subscription.EMPTY;\n  private _fixedZoomSub: Subscription = Subscription.EMPTY;\n  private _onDragEnterSub: Subscription = Subscription.EMPTY;\n  private _headerWidgetsSub: Subscription = Subscription.EMPTY;\n  private _contentWidgetsSub: Subscription = Subscription.EMPTY;\n  private _footerWidgetsSub: Subscription = Subscription.EMPTY;\n  private _onOverSub: Subscription = Subscription.EMPTY;\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n    private _service: AjfReportBuilderService,\n    private _cdRef: ChangeDetectorRef) {\n    this.headerStyles = this._service.headerStyles;\n    this.contentStyles = this._service.contentStyles;\n    this.footerStyles = this._service.footerStyles;\n  }\n\n  isLayout(widget: AjfWidget): boolean {\n    return widget.widgetType === AjfWidgetType.Layout;\n  }\n\n  /**\n   *  sign the start of mouse drag with 200 ms of delay\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragStartHandler(): void {\n    let s = timer(200)\n      .subscribe(() => {\n        if (s != null) { s.unsubscribe(); }\n        this._service.dragStarted();\n      });\n  }\n\n  /**\n   * sign the end of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEndHandler(): void {\n    this._service.dragEnded();\n  }\n\n  /**\n   *  sign the enter of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEnterHandler(array: string, index: number): void {\n    this._service.dragEnter(array, index);\n  }\n\n  /**\n   * sign the leave of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragLeaveHandler(): void {\n    this._service.dragLeave();\n  }\n\n\n  /**\n   *  return true if array and index is === with array and index of onDragEnter\n   *\n   * @param array\n   * @param index\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEnterCheck(array: string, index: number): boolean {\n    if (\n      (array === this.onDragEnter.array) &&\n      ((index === this.onDragEnter.index) || (index === -1))\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * remove widget element from type array in idx position\n   *\n   * @param type can be header content or footer\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  remove(type: string, idx: number) {\n    this._service.remove(type, idx);\n  }\n\n  /**\n   * add widget element into type array in idx position\n   *\n   * @param type\n   * @param event\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  addToList(arrayTo: string, event: CdkDragDrop<AjfReportBuilderDragData>, to?: number) {\n    this.onDragEndHandler();\n    this._service.setOrigin(arrayTo);\n    const itemData = event.item.data as AjfReportBuilderDragData;\n    if (itemData.fromColumn != null) {\n        this._service.removeWidgetToColumn(itemData.fromColumn, itemData.fromIndex!);\n        this.currentWidget = itemData.widget!;\n    } else if (itemData.widget != null) {\n      this.remove(itemData.arrayFrom!, itemData.from!);\n      this.currentWidget = itemData.widget;\n    } else if (itemData.json != null && itemData.json !== '') {\n      this.currentWidget = deepCopy(itemData.json);\n    } else {\n      let obj = {'widgetType': (AjfWidgetType as any)[itemData.widgetType!]};\n      this.currentWidget = deepCopy(obj);\n    }\n    this.onDragEndHandler();\n    if (this.currentWidget != null) {\n      switch (arrayTo) {\n        case 'header':\n          this._service.addHeaderWidget(this.currentWidget, to);\n          break;\n        case 'content':\n          this._service.addContentWidget(this.currentWidget, to);\n          break;\n        case 'footer':\n          this._service.addfooterWidget(this.currentWidget, to);\n          break;\n      }\n    }\n    this.onDragLeaveHandler();\n  }\n\n  ngOnInit(): void {\n    this._headerWidgetsSub = this._service.headerWidgets\n      .subscribe(x => {\n        this.headerWidgets = x.widgets;\n      });\n    this._contentWidgetsSub = this._service.contentWidgets\n      .subscribe(x => {\n        this.contentWidgets = x.widgets;\n      });\n    this._footerWidgetsSub = this._service.footerWidgets\n      .subscribe(x => {\n        this.footerWidgets = x.widgets;\n      });\n    this._onDraggedSub = this._service.onDragged\n      .subscribe(x => {\n        this.onDragged = x;\n      });\n    this._fixedZoomSub = this._service.fixedZoom\n      .subscribe(bool => {\n        this.fixedZoom = bool;\n      });\n    this._onDragEnterSub = this._service.onDragEnter\n      .subscribe(x => {\n        this.onDragEnter = x;\n      });\n    this._onOverSub = this._service.onOver\n      .subscribe(x => {\n        this.onOver = x;\n      });\n  }\n\n  ngAfterViewChecked() {\n    this._cdRef.detectChanges();\n  }\n\n  ngOnDestroy(): void {\n    [\n      this._headerWidgetsSub, this._contentWidgetsSub, this._footerWidgetsSub,\n      this._currentWidgetSub, this._onDraggedSub, this._fixedZoomSub,\n      this._onOverSub, this._onDragEnterSub\n    ].forEach(s => { s.unsubscribe(); });\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {AjfReportBuilderService} from './report-builder-service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'custom-widget-dialog',\n  templateUrl: 'custom-widget-dialog.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderCustomWidgetDialog {\n  @Input()\n  label: string;\n  @Input()\n  position: number;\n\n  constructor(\n    private _service: AjfReportBuilderService,\n    private _dialogRef: MatDialogRef<AjfReportBuilderCustomWidgetDialog>\n  ) { }\n\n  changeLabel() {\n    this._service.changeLabelCustomWidget(this.label, this.position);\n    this._dialogRef.close();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation} from '@angular/core';\n\nimport {AjfReportBuilderService} from './report-builder-service';\nimport {ajfWidgetTypeStringToIcon, ajfWidgetTypeStringToLabel} from './utils';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-custom-widget-toolbar-button',\n  inputs: ['widgetType', 'position'],\n  templateUrl: 'custom-widget-toolbar-button.html',\n  styleUrls: ['custom-widget-toolbar-button.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an ajf builder field toolbar button\n * @implements : OnInit\n */\nexport class AjfReportBuilderCustomWidgetToolbarButton implements OnInit {\n  widgetType: string;\n  widgetIcon: string;\n  widgetLabel: string;\n  position: number;\n  customWidgets: any[] = [];\n\n  // {...t, dropZones: ['header','content','footer','column','widget']}\n\n  /**\n   * this constructor will init icon registry\n   */\n  constructor(\n    private _service: AjfReportBuilderService\n  ) {\n  }\n\n  /**\n   * this method call a service method for remove custom widget\n   *\n   * @memberOf AjfReportBuilderCustomWidgetToolbarButton\n   */\n  remove() {\n    this._service.remove('customWidgets', this.position);\n  }\n  /**\n   * this method will init  fieldIcon and fieldLabel\n   */\n  ngOnInit(): void {\n    this.widgetIcon = ajfWidgetTypeStringToIcon(this.widgetType);\n    this.widgetLabel = ajfWidgetTypeStringToLabel(this.widgetType);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewEncapsulation\n} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\n\nimport {Subscription, timer} from 'rxjs';\n\nimport {AjfReportBuilderCustomWidgetDialog} from './custom-widget-dialog';\nimport {AjfReportBuilderService} from './report-builder-service';\n\nexport interface AjfStyles {\n  [style: string]: any;\n}\n\nexport interface CustomWidget {\n  json: string;\n  type: string;\n}\n\nexport interface CustomWidgets {\n  widgets: CustomWidget[];\n}\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-custom-widgets-toolbar',\n  styleUrls: ['custom-widgets-toolbar.css'],\n  templateUrl: 'custom-widgets-toolbar.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an ajf builder toolbar\n * @implements : OnDestroy\n */\nexport class AjfReportBuilderCustomWidgetsToolbar implements OnDestroy, OnInit {\n  customWidgets: CustomWidget[] = [];\n\n  private _customWidgetsSub: Subscription = Subscription.EMPTY;\n\n  private _dialogRef: MatDialogRef<AjfReportBuilderCustomWidgetDialog>;\n\n  private _threeColumnsLayout: string =\n  '{\"widgetType\":0,' +\n  '\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"columns\":[0.34,0.33,0.33],' +\n  '\"content\":' +\n  '[{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]},' +\n  '{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]},' +\n  '{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]}]}';\n  private _fourColumnsLayout: string =\n  '{\"widgetType\":0,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},' +\n  '\"columns\":[0.25,0.25,0.25,0.25],\"content\":' +\n  '[{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]},' +\n  '{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]},' +\n  '{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]},' +\n  '{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]}]}';\n\n  constructor(\n    private _service: AjfReportBuilderService,\n    public dialog: MatDialog) {\n  }\n\n  openDialog(idx: number) {\n    this._dialogRef = this.dialog.open(AjfReportBuilderCustomWidgetDialog);\n    this._dialogRef.componentInstance.label = this.customWidgets[idx].type;\n    this._dialogRef.componentInstance.position = idx;\n  }\n\n\n  /**\n   *  sign the start of mouse drag with 200 ms of delay\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragStartHandler(): void {\n    let s = timer(200)\n      .subscribe(() => {\n        if (s != null) { s.unsubscribe(); }\n        this._service.dragStarted();\n      });\n  }\n\n  /**\n   * sign the end of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEndHandler(): void {\n    this._service.dragEnded();\n  }\n\n  /**\n   *  sign the enter of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEnterHandler(array: string, index: number): void {\n    this._service.dragEnter(array, index);\n  }\n\n  /**\n   * sign the leave of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragLeaveHandler(): void {\n    this._service.dragLeave();\n  }\n  ngOnInit(): void {\n    this._customWidgetsSub = this._service.customWidgets\n      .subscribe(x => {\n        this.customWidgets = x;\n        if (\n          this.customWidgets.length > 0 &&\n          this.customWidgets[this.customWidgets.length - 1].type == ''\n        ) {\n          this.openDialog(this.customWidgets.length - 1);\n        }\n      });\n    this._service.addCustomWidgets({\n      json: this._threeColumnsLayout,\n      type: 'LayoutWidgetWith3Columns',\n    });\n    this._service.addCustomWidgets({\n      json: this._fourColumnsLayout,\n      type: 'LayoutWidgetWith4Columns'\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._customWidgetsSub.unsubscribe();\n    this._service.resetCustomWidgets();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldType, AjfValidationService} from '@ajf/core/forms';\nimport {AjfImageType} from '@ajf/core/image';\nimport {AjfExpressionUtils, createFormula, validateExpression} from '@ajf/core/models';\nimport {\n  AjfAggregationType, AjfDataset, AjfDataWidget, AjfImageWidget, AjfWidget\n} from '@ajf/core/reports';\nimport {sizedEnumToStringArray} from '@ajf/core/utils';\nimport {AjfMonacoEditor} from '@ajf/material/monaco-editor';\nimport {\n  AfterViewChecked, ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit, ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {Subscription} from 'rxjs';\n\nimport {AjfFormVariables} from './models';\nimport {AjfReportBuilderService} from './report-builder-service';\n\nexport enum AjfDataType {\n  MainData,\n  Dataset,\n  RelatedData,\n  LENGTH\n}\ndeclare var monaco: any;\n\n@Component({\n  moduleId: module.id,\n  selector: 'forms-analyzer-dialog',\n  templateUrl: 'forms-analyzer-dialog.html',\n  styleUrls: ['forms-analyzer-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderFormsAnalyzerDialog implements OnInit, AfterViewChecked, OnDestroy {\n\n  aggregationTypes: string[] = sizedEnumToStringArray(AjfAggregationType);\n\n  //  operators is an array of any type that contains all allow operators\n  operators: string[] = [\n    'true', 'false', '( )', '\\' \\'',\n    '<', '<=', '>=', '>', '!=', '!',\n    '&&', '||',\n    '+', '-', '*', '/', '%', '=='\n  ];\n\n  formulaText: string = '';\n  formulaDate: string = '';\n  safeFormulaText: string = '';\n  label: string = '';\n  condition: string = '';\n  aggregationType: AjfAggregationType = AjfAggregationType.Sum;\n  dataset: AjfDataset;\n  currentId: number = 0;\n  currentIndex: number = 0;\n  labels: string[] = [];\n  currentWidget: AjfWidget|null = null;\n  formsVariables: AjfFormVariables[];\n  formsVariablesName: string[] = [];\n  formsVariablesType: string[] = [];\n  isValid: boolean;\n\n  @Input()\n  formula: string;\n\n  @Input()\n  isFormula: boolean;\n\n  @Input()\n  labelText: string;\n\n  @Input()\n  aggregation: number;\n\n  @Input()\n  init: boolean;\n\n  @Input()\n  level: number;\n\n  @Input()\n  index: number;\n\n  @Input()\n  mainIndex: number;\n\n  @Input()\n  reference: any;\n\n  @ViewChild('formulaTextArea', {static: true}) formulaTextArea: any;\n  @ViewChild('errorMessage', {static: true}) errorMessage: any;\n  @ViewChild(AjfMonacoEditor, {static: false}) monacoEditor: AjfMonacoEditor;\n\n  private _formAnalyzerSub: Subscription = Subscription.EMPTY;\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n  private _first: boolean = true;\n\n  constructor(\n    private _service: AjfReportBuilderService,\n    private _dialogRef: MatDialogRef<AjfReportBuilderFormsAnalyzerDialog>,\n    _: AjfValidationService\n  ) {\n    if (this.init == false) {\n      this.formulaText = '';\n      this.aggregationType = AjfAggregationType.Sum;\n    }\n    this._currentWidgetSub = this._service.currentWidget\n      .subscribe(x => {\n        if (x != null) {\n          this.currentWidget = <AjfDataWidget>x;\n\n          if (this.currentWidget.widgetType == 2) {\n            let myObj: AjfImageWidget = <AjfImageWidget>this.currentWidget;\n            if (myObj.imageType == AjfImageType.Flag) {\n              this.formula = (myObj.flag) ? myObj.flag.formula : '';\n            } else {\n              this.formula = (myObj.icon) ? myObj.icon.formula : '';\n            }\n          }\n\n        }\n      });\n\n    this._formAnalyzerSub = this._service.formsVariables\n      .subscribe((x) => {\n        if (x != null) {\n          this.formsVariables = x;\n        }\n      });\n  }\n\n  onEditorInit(): void {\n    monaco.languages.typescript.javascriptDefaults.setDiagnosticsOptions({\n      noSemanticValidation: false,\n      noSyntaxValidation: false\n    });\n\n    monaco.languages.typescript.javascriptDefaults.setCompilerOptions({\n      target: monaco.languages.typescript.ScriptTarget.ES2015,\n      allowNonTsExtensions: true,\n      allowJs: true,\n      module: monaco.languages.typescript.ModuleKind.None\n    });\n\n    try {\n      monaco.languages.typescript.javascriptDefaults.addExtraLib(\n        '', 'condition-editor-variables.d.ts'\n      );\n    } catch (e) {\n      monaco.languages.typescript.javascriptDefaults\n        ._extraLibs['condition-editor-variables.d.ts'] = '';\n    }\n    try {\n      monaco.languages.typescript.javascriptDefaults.addExtraLib(\n        '', 'condition-editor-functions.d.ts'\n      );\n    } catch (e) {\n      monaco.languages.typescript.javascriptDefaults\n        ._extraLibs['condition-editor-functions.d.ts'] = '';\n    }\n\n    this._initFormsVariablesNames();\n    this._updateVariables();\n    this._updateFunctions();\n  }\n\n\n  private _initFormsVariablesNames(): void {\n    this.formsVariables.forEach((formVar) => {\n      formVar.names.forEach((name) => {\n        this.formsVariablesName.push(name);\n      });\n      formVar.types.forEach((type) => {\n        this.formsVariablesType.push(this._fieldVarType(type) || '');\n      });\n    });\n  }\n\n\n  private _updateVariables(): void {\n    if (this.formsVariables == null) { return; }\n    try {\n      let value: string = '';\n\n      for (let i = 0; i < this.formsVariablesName.length; i++) {\n        value += `declare const ${this.formsVariablesName[i]}: ${this.formsVariablesType[i]};`;\n      }\n\n      value += `\\n`;\n      monaco.languages.typescript.javascriptDefaults\n        ._extraLibs['condition-editor-variables.d.ts'] = value;\n    } catch (e) { }\n  }\n\n  private _updateFunctions(): void {\n    try {\n      monaco.languages.typescript.javascriptDefaults._extraLibs['condition-editor-functions.d.ts'] =\n          AjfExpressionUtils.UTIL_FUNCTIONS;\n    } catch (e) { }\n  }\n\n  private _fieldVarType(fieldType: AjfFieldType): string | null {\n    switch (fieldType) {\n      case AjfFieldType.Boolean:\n        return 'boolean';\n      case AjfFieldType.Date:\n      case AjfFieldType.DateInput:\n      case AjfFieldType.Time:\n        return 'Date';\n      case AjfFieldType.Empty:\n        return 'void';\n      case AjfFieldType.Formula:\n        return 'number';\n      case AjfFieldType.MultipleChoice:\n      case AjfFieldType.SingleChoice:\n        return 'any';\n      case AjfFieldType.Number:\n        return 'number';\n      case AjfFieldType.Table:\n        return 'Array';\n      case AjfFieldType.String:\n      case AjfFieldType.Text:\n        return 'string';\n    }\n    return null;\n  }\n\n  setCurrent(id: number, label: string, index: number) {\n    if (!this.init) {\n      this.label = label;\n      this.init = true;\n    }\n    this.insertVariable(this.formsVariables[id].names[index] || '');\n  }\n\n  setCurrentId(id: number) {\n    this.currentId = id;\n    this.labels = this.formsVariables[id].labels;\n    this._updateVariables();\n  }\n\n  setAggregationType(type: AjfAggregationType) {\n    this.aggregationType = type;\n  }\n\n  checkValidation() {\n    if (this.validateFormula()) {\n      this.safeFormulaText = this.formulaText;\n      this.isValid = true;\n    } else {\n      this.isValid = false;\n    }\n    if (this.formulaText == '') {\n      this.isValid = false;\n    }\n  }\n\n  validateFormula(): boolean {\n    if (this.formulaText == '') {\n      this.init = false;\n    }\n    if (this.formsVariables == null) {\n      return false;\n    } else {\n      return validateExpression(this.formulaText, this.formsVariablesName);\n    }\n  }\n\n  saveDataset() {\n    if (this.currentWidget != null) {\n      switch (this.currentWidget.widgetType) {\n        case 2:\n          this.saveImageFormula();\n          break;\n        case 3:\n          this.saveFormulaHtml();\n          break;\n        case 4:\n          this.saveChartFormula();\n          break;\n        case 5:\n          this.saveTableFormula();\n          break;\n      }\n    }\n    this.close();\n  }\n\n  saveImageFormula() {\n    this._service.saveImageFormula(createFormula({formula: this.formulaText}));\n  }\n\n  saveFormulaHtml() {\n    this._service.saveFormulaToHtml(this.formulaText, this.reference);\n  }\n\n  saveChartFormula(): void {\n    this._service.saveChartFormula(\n      this.label,\n      this.level,\n      this.mainIndex,\n      this.index,\n      this.formulaText,\n      this.aggregationType);\n  }\n\n  saveTableFormula(): void {\n    this._service.saveTableFormula(\n      this.label,\n      this.aggregationType,\n      this.formulaText,\n      this.mainIndex,\n      this.index);\n  }\n\n  hideErrorMessage(): void {\n    if (this.errorMessage == null) {\n      return;\n    }\n  }\n\n  insertVariable(variable: string): void {\n    if (this.monacoEditor != null && this.monacoEditor.editor != null) {\n      const editor = this.monacoEditor.editor;\n      let value: string[] = editor.getValue().split('\\n');\n      let position: { column: number, lineNumber: number } = editor.getPosition();\n      const ln = position.lineNumber - 1;\n      let line = value[ln];\n      let col = position.column - 1;\n      line = line.substring(0, col) + variable + line.substring(col);\n      value[ln] = line;\n      position.column += variable.length;\n      this.monacoEditor.value = value.join('\\n');\n      editor.setPosition(position);\n      editor.focus();\n      this.formulaText = editor.getValue();\n      this.checkValidation();\n    }\n  }\n\n  setVariable(variable: string): void {\n    if (this.monacoEditor != null && this.monacoEditor.editor != null) {\n      const editor = this.monacoEditor.editor;\n      editor.setValue(variable);\n    }\n  }\n\n  reset() {\n    this.formulaText = '';\n    this.aggregationType = AjfAggregationType.None;\n  }\n\n  close() {\n    this.reset();\n    this._dialogRef.close();\n  }\n\n  ngOnInit() {\n    this.formulaText = this.formula;\n    this.aggregationType = this.aggregation;\n    this.label = this.labelText;\n\n    if (this.formulaText == '' || this.formulaText == null) {\n      this.isValid = false;\n    } else {\n      this.isValid = true;\n    }\n\n  }\n\n  ngAfterViewChecked() {\n    if (this._first && this.monacoEditor != null && this.monacoEditor.editor != null) {\n      this.insertVariable(this.formulaText || '');\n      this._first = false;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._formAnalyzerSub.unsubscribe();\n    this._currentWidgetSub.unsubscribe();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfForm} from '@ajf/core/forms';\nimport {\n  AjfAggregationType, AjfChartType, AjfChartWidget, AjfDataset, AjfDataWidget, AjfWidget,\n  AjfWidgetType\n} from '@ajf/core/reports';\nimport {ChangeDetectionStrategy, Component, OnDestroy, ViewEncapsulation} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {Subscription} from 'rxjs';\n\nimport {AjfReportBuilderFormsAnalyzerDialog} from './forms-analyzer-dialog';\nimport {AjfFormVariables} from './models';\nimport {AjfReportBuilderService} from './report-builder-service';\n\n/**\n * this component provides the support for connect the form fields with the report\n *\n * @export\n */\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-forms-analyzer',\n  templateUrl: 'forms-analyzer.html',\n  styleUrls: ['forms-analyzer.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderFormsAnalyzer implements OnDestroy {\n  currentWidget: AjfWidget|null = null;\n\n  forms: AjfForm[] = [];\n\n  formsVariables: AjfFormVariables[];\n  choicesOrigins: any = {};\n\n  dialogRef: MatDialogRef<AjfReportBuilderFormsAnalyzerDialog>;\n\n  currentMainDataIndex: number = -1;\n  private _dataset: AjfDataset[][] = [];\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n  private _formAnalyzerSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n    private _service: AjfReportBuilderService,\n    public dialog: MatDialog\n  ) {\n    this._currentWidgetSub = this._service.currentWidget\n      .subscribe(x => {\n        if (x != null) {\n          this.currentWidget = x;\n          // this._dataset = myObj.dataset;\n        } else {\n          this.currentWidget = null;\n        }\n      });\n\n\n    this._formAnalyzerSub = this._service.formsVariables\n      .subscribe((x) => {\n        if (x != null) {\n          this.formsVariables = x;\n        }\n      });\n\n\n  }\n\n  setCurrentIndex(index: number) {\n    this.currentMainDataIndex = index;\n  }\n\n  isSelected(index: number): string {\n    if (index === this.currentMainDataIndex) {\n      return 'primary';\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   *  get the X components label of the chart.\n   *  they are contained in the first row of dataset\n   *\n   *\n   * @memberof AjfReportBuilderFormsAnalyzer\n   */\n  getMainData(): string[] {\n    if (this._dataset[0] != null) {\n      let mainData: string[] = [];\n\n      for (let i = 0; i < this._dataset[0].length; i++) {\n        mainData.push(this._dataset[0][i].label || '');\n      }\n      return mainData;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   *  get the Y components label of the chart.\n   *  they are contained in the first column of dataset\n   *\n   *\n   * @memberof AjfReportBuilderFormsAnalyzer\n   */\n  getDataset(): string[] {\n    let dataset: string[] = [];\n    if (this._dataset[0] != null) {\n      for (let i = 1; i < this._dataset.length; i++) {\n        dataset.push(this._dataset[i][0].label || '');\n      }\n      return dataset;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * get the related data label of the chart.\n   * they are contained in the row of the Y component\n   *\n   *\n   * @memberof AjfReportBuilderFormsAnalyzer\n   */\n  getRelatedData(): string[] {\n    if (this._dataset[this.currentMainDataIndex + 1] != null) {\n      let relatedData: string[] = [];\n\n      for (let i = 1; i < this._dataset[this.currentMainDataIndex + 1].length; i++) {\n        relatedData.push(this._dataset[this.currentMainDataIndex + 1][i].label || '');\n      }\n      return relatedData;\n    } else {\n      return [];\n    }\n  }\n\n  getTableHeader(): string[] {\n    let mainData: string[] = [];\n    if (this._dataset != null) {\n      for (let i = 0; i < this._dataset.length; i++) {\n        if (this._dataset[i][0] != null) {\n          mainData.push(this._dataset[i][0].label || '');\n        }\n      }\n    }\n    return mainData;\n  }\n\n  getTableData(): string[] {\n    if (this._dataset[this.currentMainDataIndex] != null) {\n      let tableData: string[] = [];\n\n      for (let i = 1; i < this._dataset[this.currentMainDataIndex].length; i++) {\n        if (this._dataset[this.currentMainDataIndex][i] != null) {\n          tableData.push(this._dataset[this.currentMainDataIndex][i].label || '');\n        }\n      }\n      return tableData;\n    } else {\n      return [];\n    }\n  }\n\n  needMainData(): boolean {\n    let myObj = <AjfChartWidget>this.currentWidget;\n    if (\n      myObj.chartType === AjfChartType.Scatter ||\n      myObj.chartType === AjfChartType.Bubble\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  removeMainData(index: number) {\n    this._service.removeMainData(index);\n  }\n\n  removeDataset(index: number) {\n    this.currentMainDataIndex = index;\n    this._service.removeRelatedData(this.currentMainDataIndex, -1);\n  }\n  removeTableMainData(index: number) {\n    this._service.removeTableMainData(index);\n  }\n\n  removeRelatedData(index: number) {\n    this._service.removeRelatedData(this.currentMainDataIndex, index);\n  }\n\n  removeData(mainIndex: number, index: number) {\n    this._service.removeData(mainIndex, index);\n  }\n\n  /**\n   *\n   *\n   *\n   * @param index\n   * @param editMode\n   *\n   * @memberof AjfReportBuilderFormsAnalyzer\n   */\n  openDialog(level: number, mainIndex: number, index: number, editMode: boolean) {\n\n    this.dialogRef = this.dialog.open(AjfReportBuilderFormsAnalyzerDialog);\n\n    if (editMode) {\n      if (level === 1 && index === -1) {\n        index = 0;\n      }\n      if (level === 1) {\n        if (this.currentWidget != null && this.currentWidget.widgetType == AjfWidgetType.Chart) {\n          mainIndex++;\n        }\n        index++;\n      }\n\n      this.dialogRef.componentInstance.labelText =\n        this._dataset[mainIndex] &&\n        this._dataset[mainIndex][index].label || '';\n      /* this.dialogRef.componentInstance.formula =\n        this._dataset[mainIndex] &&\n        this._dataset[mainIndex][index].formula.formula || ''; */\n      this.dialogRef.componentInstance.aggregation =\n        this._dataset[mainIndex] &&\n        this._dataset[mainIndex][index].aggregation.aggregation || AjfAggregationType.None;\n    } else {\n      this.dialogRef.componentInstance.labelText = '';\n      this.dialogRef.componentInstance.formula = '';\n      this.dialogRef.componentInstance.aggregation = 0;\n    }\n\n    // this.dialogRef.componentInstance.formsVariables = this.formsVariables;\n    this.dialogRef.componentInstance.currentWidget = <AjfDataWidget>this.currentWidget;\n    this.dialogRef.componentInstance.level = level;\n    this.dialogRef.componentInstance.mainIndex = mainIndex;\n    this.dialogRef.componentInstance.index = index;\n    this.dialogRef.componentInstance.init = false;\n  }\n\n  openDialogAddMainData() {\n    this.openDialog(0, -1, -1, false);\n  }\n\n  openDialogChartEditMainData() {\n    this.openDialog(0, 0, this.currentMainDataIndex, true);\n  }\n\n  openDialogTableEditMainData() {\n    this.openDialog(0, this.currentMainDataIndex, 0, true);\n  }\n\n  openDialogChartAddDataset() {\n    this.openDialog(1, -1, -1, false);\n  }\n  openDialogTableAddDataset() {\n    this.openDialog(1, this.currentMainDataIndex, -1, false);\n  }\n  openDialogChartAddDataOfDataset() {\n    this.openDialog(1, this.currentMainDataIndex, -1, false);\n  }\n  openDialogChartEditDataset() {\n    this.openDialog(1, this.currentMainDataIndex, -1, true);\n  }\n  openDialogTableEditDataset(index: number) {\n    this.openDialog(1, this.currentMainDataIndex, index, true);\n  }\n  openDialogChartEditDataOfDataset(index: number) {\n    this.openDialog(1, this.currentMainDataIndex, index, true);\n  }\n\n  ngOnDestroy(): void {\n    this._currentWidgetSub.unsubscribe();\n    this._formAnalyzerSub.unsubscribe();\n  }\n\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Injectable, Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'ajfImageFilter'\n})\n@Injectable()\nexport class AjfImageFilterPipe implements PipeTransform {\n  transform(items: any[], args: any): any {\n    return items.filter(item =>\n      (args.length === 0) || item.info.toLowerCase().includes(args.toLowerCase()));\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy, Component, Input, Output, EventEmitter, ViewEncapsulation\n} from '@angular/core';\n\nimport {AjfReportBuilderService} from './report-builder-service';\n\n/**\n * this component handle a group of image object\n * there are 2 types of view\n *  ajf-icon and class\n *\n * take a json in input\n *  'icon': 'false', // if true ajf-icon activated\n *  'class': ['flag-icon'], // add class in object style\n *  'prefixClass': 'flag-icon-', // prefix of class contained on data set\n *  'title': 'flags', title of data set\n *  'data': [\n *    {\n *      'class': 'dz', strind added on prefix\n *      'info': 'Algeria' info related to object (exploit on toolTip)\n *    }\n *  ]\n * };\n *\n * @export\n */\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-image-group',\n  templateUrl: 'image-group.html',\n  styleUrls: ['image-group.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderImageGroup  {\n\n  private _icon: {fontSet: string, fontIcon: string} | null = null;\n  private _classes: string = '';\n\n  get icon(): {fontSet: string, fontIcon: string} | null { return this._icon; }\n  get classes(): string { return this._classes; }\n\n  open: boolean = false;\n  valueToSearch: string = '';\n\n  @Input()\n  data: any;\n\n  /**\n   * this event is fired when the user click on formula button on quill editor rool barƒ\n   *\n   * @memberof QuillEditorComponent\n   */\n  @Output() formulaClick: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private _service: AjfReportBuilderService) { }\n\n\n  setIcon(fontSet: string, fontIcon: string) {\n    this._icon = {fontSet, fontIcon};\n    this._service.setIcon(this._icon);\n  }\n\n  setFlag(value: string) {\n    this._classes = value;\n    this._service.setFlag(value);\n  }\n\n  setSearch(value: any) {\n    this.valueToSearch = value.currentTarget.value;\n  }\n\n  emitFormula() {\n    this.formulaClick.emit();\n  }\n\n  getFlag(value: string) {\n    let returnValue = '';\n\n    for (let i = 0; i < this.data.class.length; i++) {\n      returnValue += this.data.class[i] + ' ';\n    }\n\n    returnValue += this.data.prefixClass + value;\n    return returnValue;\n  }\n\n  toggle() {\n    this.open = !this.open;\n  }\n\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfForm} from '@ajf/core/forms';\nimport {AjfCondition} from '@ajf/core/models';\nimport {\n  AjfAggregationType, AjfChartWidget, AjfLayoutWidget, AjfTextWidget, AjfWidget, AjfWidgetType\n} from '@ajf/core/reports';\nimport {deepCopy} from '@ajf/core/utils';\nimport {\n  ChangeDetectionStrategy, Component, EventEmitter, OnChanges, OnDestroy, OnInit, ViewEncapsulation\n} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {Observable, Subscription} from 'rxjs';\nimport {distinctUntilChanged, filter, map, startWith, withLatestFrom} from 'rxjs/operators';\n\nimport {AjfReportBuilderFormsAnalyzerDialog} from './forms-analyzer-dialog';\nimport {AjfFormVariables} from './models';\nimport {AjfReportBuilderService} from './report-builder-service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-properties',\n  templateUrl: 'properties.html',\n  styleUrls: ['properties.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderProperties implements OnInit, OnChanges, OnDestroy {\n  /**\n   *  true when the first time chart type is setted\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  initChartType = false;\n\n  /**\n   * the current widget\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  currentWidget: AjfWidget|null = null;\n  get currentLayoutWidget(): AjfLayoutWidget {\n    return this.currentWidget as AjfLayoutWidget;\n  }\n  get currentTextWidget(): AjfTextWidget {\n    return this.currentWidget as AjfTextWidget;\n  }\n\n  /**\n   * this array contains the forms exploited for generate data labels\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  forms: AjfForm[] = [];\n\n\n  colors: string[] = [];\n\n  /**\n   * the name of the section that contains the currentWidget\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  origin: string;\n\n  /**\n   * FAKE DATA\n   */\n\n  formsJson: any = {forms: []};\n\n  /**\n   * WIDGET\n   */\n\n  widgetName = '';\n  getHTML: Observable<string | undefined>;\n  getHeightWidget: Observable<number | undefined>;\n  getFontSizeWidget: Observable<number | undefined>;\n  getFontAlignWidget: Observable<number | undefined>;\n  getBackgroundColorWidget: Observable<string>;\n  getColorWidget: Observable<string>;\n  getStyle: Observable<any>;\n  getChartBackgroundColor: Observable<string[]>;\n  getChartBorderColor: Observable<string[]>;\n  getVisibility: Observable<AjfCondition>;\n  getColor: Observable<String[]>;\n\n  marginExpanded: boolean = false;\n  getMarginWidget: Observable<number[] | undefined>;\n  getMarginWidgetTop: Observable<number>;\n  getMarginWidgetRight: Observable<number>;\n  getMarginWidgetBottom: Observable<number>;\n  getMarginWidgetLeft: Observable<number>;\n\n  paddingExpanded: boolean = false;\n  getPaddingWidget: Observable<number[] | undefined>;\n  getPaddingWidgetTop: Observable<number>;\n  getPaddingWidgetRight: Observable<number>;\n  getPaddingWidgetBottom: Observable<number>;\n  getPaddingWidgetLeft: Observable<number>;\n\n  borderWidthExpanded: boolean = false;\n  getBorderWidthWidget: Observable<number[] | undefined>;\n  getBorderWidthWidgetTop: Observable<number>;\n  getBorderWidthWidgetRight: Observable<number>;\n  getBorderWidthWidgetBottom: Observable<number>;\n  getBorderWidthWidgetLeft: Observable<number>;\n\n  borderRadiusExpanded: boolean = false;\n  getBorderRadiusWidget: Observable<number[] | undefined>;\n  getBorderRadiusWidgetTopLeft: Observable<number>;\n  getBorderRadiusWidgetTopRight: Observable<number>;\n  getBorderRadiusWidgetBottomRight: Observable<number>;\n  getBorderRadiusWidgetBottomLeft: Observable<number>;\n\n  backgroundColor = '#127bdc';\n  styleBackgroundColor = 'rgb(255,255,255,0)';\n  borderColor = '#127bdc';\n  styleColor = 'rgb(0,0,0,0)';\n  wbackgroundColor: string;\n  fontSize: string;\n  bubble: string;\n\n  dialogRef: MatDialogRef<AjfReportBuilderFormsAnalyzerDialog>;\n  container: AjfFormVariables;\n\n\n\n  align = [false, 'center', 'right', 'justify'];\n\n  fonts = [\n    false,\n    'blackr',\n    'black-italic',\n    'bold',\n    'bold-condensed',\n    'bold-condensed-italic',\n    'bold-italic',\n    'condensed',\n    'condensed-italic',\n    'italic',\n    'light',\n    'light-italic',\n    'medium',\n    'medium-italic',\n    'thinr',\n    'thin-italic'\n  ];\n  currentModule: any = {};\n  quillModules = {\n    toolbar: [\n      ['formula'],\n      ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n      // ['blockquote', 'code-block'],\n\n      [{ 'header': 1 }, { 'header': 2 }],               // custom button values\n      [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n      [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript\n      // [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\n      // [{ 'direction': 'rtl' }],                         // text direction\n\n      [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\n      [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n\n      [{ 'color': this.colors },\n      { 'background': this.colors }],          // dropdown with defaults from theme\n      [{ 'font': this.fonts }],\n      [{ 'align': this.align }],\n\n      ['clean'],                                         // remove formatting button\n\n      // ['link', 'class', 'video']                         // link and image, video\n    ]\n  };\n\n  /**\n   * CHART\n   */\n\n\n  getChartYLabels: Observable<string[]>;\n\n  chartBorderColor: string[] = [];\n  chartBorderWidth = 3;\n\n  /**\n   *\n   * IMAGE\n   */\n\n  imageUrl = 'https://angular.io/resources/images/logos/angular2/angular.png';\n\n  /**\n   *\n   * TEXT\n   */\n\n  htmlText = '';\n\n\n  /**\n   * these variables indicate that the user want to change section\n   */\n  reportStyles = false;\n  sectionStyles = false;\n  widgetStyles = true;\n  sectionColor = false;\n  widgetColor = false;\n  visibilitySection = false;\n  currentColor = '';\n\n  private _icon: { fontSet: string, fontIcon: string } | null = null;\n  get icon(): { fontSet: string, fontIcon: string } | null { return this._icon; }\n\n  iconSet: any = {\n    'icon': 'true',\n    'title': 'report',\n    'data': null\n  };\n\n  flagSet: any = {\n    'icon': 'false',\n    'class': ['flag-icon'],\n    'prefixClass': 'flag-icon-',\n    'title': 'flags',\n    'data': [\n      {\n        'class': 'dz',\n        'info': 'Algeria'\n      },\n      {\n        'class': 'ao',\n        'info': 'Angola'\n      },\n      {\n        'class': 'bj',\n        'info': 'Benin'\n      },\n      {\n        'class': 'bw',\n        'info': 'Botswana'\n      },\n      {\n        'class': 'bf',\n        'info': 'Burkina Faso'\n      },\n      {\n        'class': 'bi',\n        'info': 'Burundi'\n      },\n      {\n        'class': 'cm',\n        'info': 'Cameroon'\n      },\n      {\n        'class': 'cv',\n        'info': 'Cabo Verde'\n      },\n      {\n        'class': 'cf',\n        'info': 'The Central African Republic'\n      },\n      {\n        'class': 'td',\n        'info': 'Chad'\n      },\n      {\n        'class': 'km',\n        'info': 'The Comoros'\n      },\n      {\n        'class': 'ci',\n        'info': 'Cote D\\'avoire'\n      },\n      {\n        'class': 'cd',\n        'info': 'The Democratic Republic of Congo'\n      },\n      {\n        'class': 'dj',\n        'info': 'Dijibouti'\n      },\n      {\n        'class': 'eg',\n        'info': 'Egypt'\n      },\n      {\n        'class': 'gq',\n        'info': 'Equatorial Guinea'\n      },\n      {\n        'class': 'er',\n        'info': 'Eritrea'\n      },\n      {\n        'class': 'et',\n        'info': 'Ethiopia'\n      },\n      {\n        'class': 'tf',\n        'info': 'French Southern Territories'\n      },\n      {\n        'class': 'ga',\n        'info': 'Gabon'\n      },\n      {\n        'class': 'gm',\n        'info': 'The Gambia'\n      },\n      {\n        'class': 'gh',\n        'info': 'Ghana'\n      },\n      {\n        'class': 'gn',\n        'info': 'Guinea'\n      },\n      {\n        'class': 'gw',\n        'info': 'Guinea-Bissau'\n      },\n      {\n        'class': 'ke',\n        'info': 'Kenya'\n      },\n      {\n        'class': 'ls',\n        'info': 'Leshotho'\n      },\n      {\n        'class': 'lr',\n        'info': 'Liberia'\n      },\n      {\n        'class': 'ly',\n        'info': 'Libya'\n      },\n      {\n        'class': 'mg',\n        'info': 'Madagascar'\n      },\n      {\n        'class': 'mw',\n        'info': 'Malawy'\n      },\n      {\n        'class': 'ml',\n        'info': 'Mali'\n      },\n      {\n        'class': 'mr',\n        'info': 'Mauritania'\n      },\n      {\n        'class': 'mu',\n        'info': 'Mauritius'\n      },\n      {\n        'class': 'yt',\n        'info': 'Mayotte'\n      },\n      {\n        'class': 'ma',\n        'info': 'Marocco'\n      },\n      {\n        'class': 'mz',\n        'info': 'Mozambique'\n      },\n      {\n        'class': 'na',\n        'info': 'Namibia'\n      },\n      {\n        'class': 'ne',\n        'info': 'Niger'\n      },\n      {\n        'class': 'ng',\n        'info': 'Nigeria'\n      },\n      {\n        'class': 'cg',\n        'info': 'Republic of the Congo'\n      },\n      {\n        'class': 'rw',\n        'info': 'Rwnda'\n      },\n      {\n        'class': 're',\n        'info': 'rèunion'\n      },\n      {\n        'class': 'sh',\n        'info': 'Saint Helena, Ascension and Tristan da Cunha'\n      },\n      {\n        'class': 'st',\n        'info': 'Sao Tome and Principe'\n      },\n      {\n        'class': 'sn',\n        'info': 'Senegal'\n      },\n      {\n        'class': 'sc',\n        'info': 'Seychelles'\n      },\n      {\n        'class': 'sl',\n        'info': 'Sierra Leone'\n      },\n      {\n        'class': 'so',\n        'info': 'Somalia'\n      },\n      {\n        'class': 'za',\n        'info': 'South Africa'\n      },\n      {\n        'class': 'ss',\n        'info': 'South Sudan'\n      },\n      {\n        'class': 'sd',\n        'info': 'Sudan'\n      },\n      {\n        'class': 'sz',\n        'info': 'Swaziland'\n      },\n      {\n        'class': 'tz',\n        'info': 'Tanzania'\n      },\n      {\n        'class': 'tg',\n        'info': 'Togo'\n      },\n      {\n        'class': 'tn',\n        'info': 'Tunisia'\n      },\n      {\n        'class': 'ug',\n        'info': 'Uganda'\n      },\n      {\n        'class': 'eh',\n        'info': 'Western Sahara'\n      },\n      {\n        'class': 'zm',\n        'info': 'Zambia'\n      },\n      {\n        'class': 'zw',\n        'info': 'Zimbawe'\n      },\n      {\n        'class': 'iq',\n        'info': 'Iraq'\n      },\n      {\n        'class': 'lb',\n        'info': 'Lebanon'\n      },\n      {\n        'class': 'bd',\n        'info': 'Bangladesh'\n      },\n      {\n        'class': 'ir',\n        'info': 'Iran (Islamic Republic of)'\n      },\n      {\n        'class': 'my',\n        'info': 'Malaysia'\n      },\n      {\n        'class': 'np',\n        'info': 'Nepal'\n      },\n      {\n        'class': 'pk',\n        'info': 'Pakistan'\n      },\n      {\n        'class': 'th',\n        'info': 'Thailand'\n      },\n      {\n        'class': 'jo',\n        'info': 'Jordan'\n      },\n      {\n        'class': 'ye',\n        'info': 'Yemen'\n      }\n    ]\n  };\n\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n  private _formsSub: Subscription = Subscription.EMPTY;\n  private _colorSub: Subscription = Subscription.EMPTY;\n  private _headerStyleSub: Subscription = Subscription.EMPTY;\n  private _contentStylesSub: Subscription = Subscription.EMPTY;\n  private _footerStylesSub: Subscription = Subscription.EMPTY;\n  private _originSub: Subscription = Subscription.EMPTY;\n  private _stylesUpdatesSubs: Subscription = Subscription.EMPTY;\n\n  private _updateWidgetMarginEvt: EventEmitter<{ idx: number, value: any }> =\n  new EventEmitter<{ idx: number, value: any }>();\n  private _updateWidgetPaddingEvt: EventEmitter<{ idx: number, value: any }> =\n  new EventEmitter<{ idx: number, value: any }>();\n  private _updateWidgetBorderWidthEvt: EventEmitter<{ idx: number, value: any }> =\n  new EventEmitter<{ idx: number, value: any }>();\n  private _updateWidgetBorderRadiusEvt: EventEmitter<{ idx: number, value: any }> =\n  new EventEmitter<{ idx: number, value: any }>();\n\n  constructor(\n    private _dialog: MatDialog,\n    private _service: AjfReportBuilderService\n  ) {\n    this.setForms();\n\n    this.iconSet.data = Object.keys(_service.iconSets).filter(x => x != 'ajf-icon').map(i => {\n      return { name: i, icons: _service.iconSets[i] };\n    });\n\n    this._headerStyleSub = this._service.headerStyles.subscribe(s => {\n      if (s['background-color'] != null) {\n        this.styleBackgroundColor = s['background-color'];\n      }\n    });\n    this._contentStylesSub = this._service.contentStyles.subscribe(s => {\n      if (s['background-color'] != null) {\n        this.styleBackgroundColor = s['background-color'];\n      }\n    });\n    this._footerStylesSub = this._service.footerStyles.subscribe(s => {\n      if (s['background-color'] != null) {\n        this.styleBackgroundColor = s['background-color'];\n      }\n    });\n    this._originSub = this._service.origin.subscribe(s => {\n      this.origin = s;\n    });\n  }\n\n\n  /**\n   *\n   * UTILS\n   */\n\n\n  /**\n   * return a number value\n   *\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  toNumber(value: string): number {\n    let numberPattern = /^(-)?\\d+/g;\n\n    if (value == null) {\n      return 0;\n    } else {\n      const matches = value.match(numberPattern);\n      if (matches == null || matches.length == 0) { return 0; }\n      return Number(matches[0]);\n    }\n  }\n\n  toNumberArray(value: string): number[] {\n    if (value == null) {\n      return [];\n    } else {\n      return (value || '').replace('px', '').split(' ')\n        .filter(v => v !== '' && v != null)\n        .map(v => this.toNumber(v));\n    }\n  }\n\n  fillPxNumberArray(value: number[]) {\n    const vl = value.length;\n    switch (vl) {\n      case 0:\n        return [0, 0, 0, 0];\n      case 1:\n        const v = value[0];\n        return [v, v, v, v];\n      case 2:\n        const v21 = value[0];\n        const v22 = value[1];\n        return [v21, v22, v21, v22];\n      case 3:\n        const v31 = value[0];\n        const v32 = value[1];\n        const v33 = value[2];\n        return [v31, v32, v33, v32];\n      default:\n        return value;\n    }\n  }\n\n  percent(value: number) {\n    let temp = this.roundTo(value * 100, 3);\n    return temp;\n  }\n\n  roundTo(value: number, decimalPositions: number) {\n    let i = value * Math.pow(10, decimalPositions);\n\n    i = Math.floor(i);\n\n    return i / Math.pow(10, decimalPositions);\n  }\n  /**\n   * call to service to set the forms\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n\n  setForms(): void {\n    let forms: AjfForm[] = [];\n    try {\n      for (let i = 0; i < this.formsJson.forms.length; i++) {\n        forms.push(deepCopy(this.formsJson.forms[i]));\n      }\n      this._service.setReportForms(forms);\n    } catch (e) { }\n  }\n\n  /**\n   * call to service to set the width of the idx column of layout widget\n   *\n   * @param col\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  instantColumnValue(col: number, idx: number) {\n    this._service.instantColumnValue(col, idx);\n  }\n\n  /**\n   *  force copy of style\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  // TODO delete this\n  setStyle() {\n    if (this.currentWidget == null) { return; }\n    this.currentWidget.styles = deepCopy(this.currentWidget.styles);\n    this._service.updateCurrentWidget(this.currentWidget);\n  }\n\n  /**\n   * call to service to add new style to widget\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setWidgetStyles(label: string, value: any) {\n    this._service.setWidgetStyles(label, value);\n    this.currentColor = value;\n    this.setStyle();\n  }\n\n  setWidgetMargin(idx: number, value: any): void {\n    this._updateWidgetMarginEvt.emit({ idx, value });\n  }\n\n  setWidgetPadding(idx: number, value: any): void {\n    this._updateWidgetPaddingEvt.emit({ idx, value });\n  }\n\n  setWidgetBorderWidth(idx: number, value: any): void {\n    this._updateWidgetBorderWidthEvt.emit({ idx, value });\n  }\n\n  setWidgetBorderRadius(idx: number, value: any): void {\n    this._updateWidgetBorderRadiusEvt.emit({ idx, value });\n  }\n\n  /**\n   * call to service to add new style to section\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setSectionStyles(label: string, value: any) {\n    this._service.setSectionStyles(this.origin, label, value);\n    this.styleColor = value;\n  }\n\n\n  /**\n   * call to service to add new style to report\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setReportStyles(label: string, value: any) {\n    this._service.setReportStyles(label, value);\n    this.styleBackgroundColor = value;\n  }\n\n  /**\n   * add custom color\n   *\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  addCustomColor() {\n    this._service.addCustomColor(this.currentColor);\n    this._service.updateCurrentWidget(this.currentWidget);\n  }\n\n  /**\n   * get the module exploit to quill text editor\n   *\n   * @returns\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  getModule() {\n    return this.quillModules;\n  }\n\n  /**\n   * true is the input type value is equal to current widget type\n   *\n   * @param value\n   * @returns\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  isChartTypeSelected(value: number) {\n    if (this.initChartType == false) {\n      return false;\n    }\n    const myObj = <AjfChartWidget>this.currentWidget;\n    if (value === myObj.chartType) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n\n  /* layout functions */\n\n  /**\n   * call to service to add a column to current layout widget\n   *\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  addColumn() {\n    this._service.addColumn();\n  }\n\n  /**\n   * call to service to add a obj to current layout widget\n   *\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  fixedColumn(idx: number) {\n    this._service.fixedColumn(idx);\n  }\n\n  /**\n   * call to service to remove obj of current layout widget\n   *\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  unfixedColumn(idx: number) {\n    this._service.remove('unfixedColumn', idx);\n  }\n\n  /* image functions */\n\n  /**\n   * call to service to set image url\n   *\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setImageUrl() {\n    this._service.setImageUrl(this.imageUrl);\n  }\n\n  setIcon(icon: { fontSet: string, fontIcon: string }) {\n    this._icon = icon;\n    this._service.setIcon(icon);\n  }\n\n  /* chart functions */\n\n  /**\n   * call to service to set the type of chart\n   *\n   * @param type\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setChartType(type: number) {\n    this.initChartType = true;\n    this._service.setChartType(type);\n  }\n\n  setChartBorderColor(value: number) {\n    this._service.setChartBorderWidth(value);\n  }\n\n  tabValue: string = 'backgroundColor';\n  setTab(event: any) {\n    if (event.index === 0) {\n      this.tabValue = 'backgroundColor';\n    } else {\n      this.tabValue = 'borderColor';\n    }\n  }\n\n  /**\n   * call to service to remove background color to current chart\n   *\n   * @param index\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  removeChartBackgroundColor(index: number) {\n    this._service.removeChartBackgroundColor(index);\n  }\n\n  /**\n   * call to service to remove border color to current chart\n   *\n   * @param index\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  removeChartBorderColor(index: number) {\n    this._service.removeChartBorderColor(index);\n  }\n\n  hideMenu() {\n    this._service.updateCurrentWidget(null);\n  }\n\n  openFormulaDialog(event: any) {\n    this.dialogRef = this._dialog.open(AjfReportBuilderFormsAnalyzerDialog);\n    this.dialogRef.componentInstance.aggregation = AjfAggregationType.None;\n    this.dialogRef.componentInstance.isFormula = true;\n    if (event != null && event.reference != null) {\n      this.dialogRef.componentInstance.formula = event.formula;\n      this.dialogRef.componentInstance.reference = event.reference;\n    }\n\n  }\n\n  ngOnInit(): void {\n    this._formsSub = this._service.reportForms\n      .subscribe(x => {\n        this.forms = x || [];\n      });\n\n    this._currentWidgetSub = this._service.currentWidget\n      .subscribe(x => {\n        if (x != null) {\n          if (this.currentWidget !== x) {\n            this.currentWidget = x;\n            this.widgetName = AjfWidgetType[x.widgetType];\n            this.reportStyles = false;\n            this.sectionStyles = false;\n            this.widgetStyles = false;\n            this.sectionColor = false;\n            this.widgetColor = false;\n            this.visibilitySection = false;\n          }\n        } else {\n          this.currentWidget = null;\n          this.widgetName = '';\n        }\n      });\n    this._colorSub = this._service.colors\n      .subscribe(x => {\n        if (x && x.length > 0) {\n          this.colors = x;\n\n          this.quillModules = {\n            toolbar: [\n              ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n              // ['blockquote', 'code-block'],\n              [{ 'header': 1 }, { 'header': 2 }],               // custom button values\n              [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n              [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript\n              // [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\n              // [{ 'direction': 'rtl' }],                         // text direction\n\n              [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\n              [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n\n              [{ 'color': this.colors },\n              { 'background': this.colors }],          // dropdown with defaults from theme\n              [{ 'font': this.fonts }],\n              [{ 'align': this.align }],\n              ['formula'],\n              ['clean'],                                         // remove formatting button\n\n              // ['link', 'class', 'video']                         // link and image, video\n            ]\n          };\n        }\n      });\n\n\n    this.getHTML = this._service.currentWidget.pipe(\n        map((widget: AjfWidget|null) => {\n          if (widget != null) {\n            const myObj = <AjfTextWidget>this.currentWidget;\n            return myObj.htmlText;\n          }\n          return '';\n        }),\n        distinctUntilChanged(), startWith('<p><br></p>'));\n\n\n    this.getHeightWidget = this._service.currentWidget.pipe(\n        filter(x => x != null), map((myObj: AjfWidget|null) => {\n          if (myObj != null) {\n            let value = this.toNumber(myObj.styles['height']);\n            if (value != null || value != null) {\n              return value;\n            }\n          }\n        }),\n        distinctUntilChanged());\n\n    this.getFontSizeWidget = this._service.currentWidget.pipe(\n        map((myObj: AjfWidget|null) => {\n          if (myObj != null) {\n            return (this.toNumber(myObj.styles['font-size']) || 12);\n          }\n        }),\n        distinctUntilChanged());\n\n    this.getFontAlignWidget = this._service.currentWidget.pipe(\n        map((myObj: AjfWidget|null) => {\n          if (myObj != null) {\n            return ((myObj.styles['text-align']) || 'center');\n          }\n        }),\n        distinctUntilChanged());\n\n    this.getBorderWidthWidget = this._service.currentWidget.pipe(\n        map((myObj: AjfWidget|null) => {\n          if (myObj != null) {\n            return this.fillPxNumberArray(this.toNumberArray(myObj.styles['border-width']));\n          }\n        }),\n        distinctUntilChanged(), startWith([0, 0, 0, 0]));\n    this.getBorderWidthWidgetTop = this.getBorderWidthWidget.pipe(\n      filter(m => m != null),\n      map(m => m![0])\n    );\n    this.getBorderWidthWidgetRight = this.getBorderWidthWidget.pipe(\n      filter(m => m != null),\n      map(m => m![1])\n    );\n    this.getBorderWidthWidgetBottom = this.getBorderWidthWidget.pipe(\n      filter(m => m != null),\n      map(m => m![2])\n    );\n    this.getBorderWidthWidgetLeft = this.getBorderWidthWidget.pipe(\n      filter(m => m != null),\n      map(m => m![3])\n    );\n\n    this.getBorderRadiusWidget = this._service.currentWidget.pipe(\n        map((myObj: AjfWidget|null) => {\n          if (myObj != null) {\n            return this.fillPxNumberArray(this.toNumberArray(myObj.styles['border-radius']));\n          }\n        }),\n        distinctUntilChanged(), startWith([0, 0, 0, 0]));\n    this.getBorderRadiusWidgetTopLeft = this.getBorderRadiusWidget.pipe(\n      filter(m => m != null),\n      map(m => m![0])\n    );\n    this.getBorderRadiusWidgetTopRight = this.getBorderRadiusWidget.pipe(\n      filter(m => m != null),\n      map(m => m![1])\n    );\n    this.getBorderRadiusWidgetBottomRight = this.getBorderRadiusWidget.pipe(\n      filter(m => m != null),\n      map(m => m![2])\n    );\n    this.getBorderRadiusWidgetBottomLeft = this.getBorderRadiusWidget.pipe(\n      filter(m => m != null),\n      map(m => m![3])\n    );\n\n    this.getMarginWidget = this._service.currentWidget.pipe(\n        map((myObj: AjfWidget|null) => {\n          if (myObj != null && myObj.styles != null && myObj.styles['margin'] != null) {\n            return this.fillPxNumberArray(this.toNumberArray(myObj.styles['margin']));\n          }\n        }),\n        distinctUntilChanged(), startWith([0, 0, 0, 0]));\n    this.getMarginWidgetTop = this.getMarginWidget.pipe(\n      filter(m => m != null),\n      map(m => m![0])\n    );\n    this.getMarginWidgetRight = this.getMarginWidget.pipe(\n      filter(m => m != null),\n      map(m => m![1])\n    );\n    this.getMarginWidgetBottom = this.getMarginWidget.pipe(\n      filter(m => m != null),\n      map(m => m![2])\n    );\n    this.getMarginWidgetLeft = this.getMarginWidget.pipe(\n      filter(m => m != null),\n      map(m => m![3])\n    );\n\n    this.getPaddingWidget = this._service.currentWidget.pipe(\n        map((myObj: AjfWidget|null) => {\n          if (myObj != null && myObj.styles != null && myObj.styles['padding'] != null) {\n            return this.fillPxNumberArray(this.toNumberArray(myObj.styles['padding']));\n          }\n        }),\n        distinctUntilChanged());\n    this.getPaddingWidgetTop = this.getPaddingWidget.pipe(\n      filter(m => m != null),\n      map(m => m![0])\n    );\n    this.getPaddingWidgetRight = this.getPaddingWidget.pipe(\n      filter(m => m != null),\n      map(m => m![1])\n    );\n    this.getPaddingWidgetBottom = this.getPaddingWidget.pipe(\n      filter(m => m != null),\n      map(m => m![2])\n    );\n    this.getPaddingWidgetLeft = this.getPaddingWidget.pipe(\n      filter(m => m != null),\n      map(m => m![3])\n    );\n\n    this.getBackgroundColorWidget = this._service.currentWidget.pipe(\n        map((myObj: AjfWidget|null) => {\n          if (myObj != null && myObj.styles != null) {\n            return myObj.styles['backgroundColor'] || '';\n          }\n        }),\n        distinctUntilChanged());\n\n    this.getColorWidget = this._service.currentWidget.pipe(\n        map((myObj: AjfWidget|null) => {\n          if (myObj != null && myObj.styles != null) {\n            return myObj.styles['color'] || '';\n          }\n        }),\n        distinctUntilChanged());\n\n    this._stylesUpdatesSubs = (<Observable<{idx: any; value: any}>>this._updateWidgetMarginEvt)\n      .pipe(withLatestFrom(this.getMarginWidget))\n      .subscribe((r: [{ idx: number, value: any }, number[] | undefined]) => {\n        if (r == null) { return; }\n        const idx = r[0].idx;\n        const value = r[0].value;\n        const v = r[1] || [0, 0, 0, 0];\n        if (v == null || v.length < idx) { return; }\n        v[idx] = value;\n        this.setWidgetStyles('margin', v);\n      });\n\n    this._stylesUpdatesSubs.add((<Observable<{idx: any; value: any}>>this._updateWidgetPaddingEvt)\n      .pipe(withLatestFrom(this.getPaddingWidget))\n      .subscribe((r: [{ idx: number, value: any }, number[] | undefined]) => {\n        if (r == null) { return; }\n        const idx = r[0].idx;\n        const value = r[0].value;\n        const v = r[1] || [0, 0, 0, 0];\n        if (v == null || v.length < idx) { return; }\n        v[idx] = value;\n        this.setWidgetStyles('padding', v);\n      }));\n\n    this._stylesUpdatesSubs\n      .add((<Observable<{idx: any; value: any}>>this._updateWidgetBorderWidthEvt)\n        .pipe(withLatestFrom(this.getBorderWidthWidget))\n        .subscribe((r: [{ idx: number, value: any }, number[] | undefined]) => {\n          if (r == null) { return; }\n          const idx = r[0].idx;\n          const value = r[0].value;\n          const v = r[1] || [0, 0, 0, 0];\n          if (v == null || v.length < idx) { return; }\n          v[idx] = value;\n          this.setWidgetStyles('border-width', v);\n        })\n      );\n\n    this._stylesUpdatesSubs.add(\n      (<Observable<{idx: any; value: any}>>this._updateWidgetBorderRadiusEvt)\n        .pipe(withLatestFrom(this.getBorderRadiusWidget))\n        .subscribe((r: [{ idx: number, value: any }, number[] | undefined]) => {\n          if (r == null) { return; }\n          const idx = r[0].idx;\n          const value = r[0].value;\n          const v = r[1] || [0, 0, 0, 0];\n          if (v == null || v.length < idx) { return; }\n          v[idx] = value;\n          this.setWidgetStyles('border-radius', v);\n        })\n      );\n  }\n\n  ngOnChanges(changes: any) {\n    this.currentWidget = changes.widget.currentValue;\n    if (this.currentWidget == null) { return; }\n    this.widgetName = AjfWidgetType[this.currentWidget.widgetType];\n  }\n\n  ngOnDestroy(): void {\n    this._currentWidgetSub.unsubscribe();\n    this._formsSub.unsubscribe();\n    this._colorSub.unsubscribe();\n    this._headerStyleSub.unsubscribe();\n    this._contentStylesSub.unsubscribe();\n    this._footerStylesSub.unsubscribe();\n    this._originSub.unsubscribe();\n    this._stylesUpdatesSubs.unsubscribe();\n  }\n\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Renderer2,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {\n  NG_VALUE_ACCESSOR,\n  NG_VALIDATORS,\n  ControlValueAccessor,\n  FormControl,\n  Validator\n} from '@angular/forms';\n\nimport {Subscription} from 'rxjs';\n\nimport {AjfReportBuilderService} from './report-builder-service';\n\nimport {default as Quill} from 'quill';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-quill-editor',\n  template: `\n    <ng-content select=\"[ajf-quill-editor-toolbar]\"></ng-content>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AjfQuillEditor),\n    multi: true\n  }, {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => AjfQuillEditor),\n    multi: true\n  }],\n  styleUrls: ['quill-editor.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfQuillEditor\n  implements AfterViewInit, ControlValueAccessor, OnChanges, OnDestroy, Validator {\n\n  quillEditor: any;\n  editorElem: HTMLElement;\n  emptyArray: any[] = [];\n  content: any;\n\n  listenFunc: Function;\n\n  previewElemFormula: any;\n  private _init: boolean = false;\n\n  dateFormats = [\n    {\n      'label': 'June 23rd 2017, 12:39:12 pm',\n      'value': 'MMMM Do YYYY, h:mm:ss a',\n      'validator': 'MMMMDoYYYYhmmssa'\n    }, {\n      'label': 'Friday',\n      'value': 'dddd',\n      'validator': 'dddd'\n    }, {\n      'label': 'Jun 23rd 17',\n      'value': 'MMM Do YY',\n      'validator': 'MMMDoYY'\n    }];\n\n\n  fonts = [\n    false,\n    'blackr',\n    'black-italic',\n    'bold',\n    'bold-condensed',\n    'bold-condensed-italic',\n    'bold-italic',\n    'condensed',\n    'condensed-italic',\n    'italic',\n    'light',\n    'light-italic',\n    'medium',\n    'medium-italic',\n    'thinr',\n    'thin-italic'\n  ];\n\n  defaultModules = {\n    formula: true,\n    toolbar: [\n      ['formula'],\n      ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n      // ['blockquote', 'code-block'],\n\n      [{ 'header': 1 }, { 'header': 2 }],               // custom button values\n      [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n      [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript\n      // [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\n      // [{ 'direction': 'rtl' }],                         // text direction\n\n      [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\n      [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n\n      [{ 'color': this.emptyArray.slice() },\n      { 'background': this.emptyArray.slice() }],          // dropdown with defaults from theme\n      [{ 'font': this.fonts }],\n      [{ 'align': this.emptyArray.slice() }],\n\n      ['clean'],                                         // remove formatting button\n\n      // ['link', 'image', 'video']                         // link and image, video\n    ]\n  };\n\n  font = Quill.import('formats/font');\n\n\n  @Input() theme: string;\n  @Input() modules: Object;\n  @Input() readOnly: boolean;\n  @Input() placeholder: string;\n  @Input() maxLength: number;\n  @Input() minLength: number;\n  @Input() formats: string[];\n  @Input() initHTML: string;\n\n  @Output() editorCreated: EventEmitter<any> = new EventEmitter();\n  @Output() contentChanged: EventEmitter<any> = new EventEmitter();\n  @Output() selectionChanged: EventEmitter<any> = new EventEmitter();\n\n\n  /**\n   * this event is fired when the user click on formula button on quill editor rool barƒ\n   *\n   * @memberof QuillEditorComponent\n   */\n  @Output() formulaClick: EventEmitter<any> = new EventEmitter<any>();\n\n\n  onModelChange: Function = () => { };\n  onModelTouched: Function = () => { };\n\n  private _formulas: { formula: any, unlisten: Function | null }[] = [];\n  private _formulaTextSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2,\n    private _service: AjfReportBuilderService) {\n    this.font.whitelist = this.fonts;\n    this.font.whitelist.push('regular');\n\n    this._formulaTextSub =\n      this._service.getFormulaToHtmlEvent()\n        .subscribe((event: any) => {\n\n          // reference is defined only when the user want to edit the formula\n          if (event.reference !== undefined) {\n            event.reference.innerHTML = event.formula;\n            this._renderer.setAttribute(event.reference, 'formula', event.formula);\n            const efs = this._formulas.filter(f => f.formula === event.reference);\n            let formulaEntry;\n            let unlisten;\n            if (efs.length > 0) {\n              formulaEntry = efs[0];\n              unlisten = formulaEntry.unlisten;\n              if (unlisten != null) {\n                unlisten();\n              }\n            } else {\n              formulaEntry = { formula: event.reference, unlisten: null };\n              this._formulas.push(formulaEntry);\n            }\n            formulaEntry.unlisten = this._renderer.listen(\n              event.reference, 'click', () => {\n                let obj = {\n                  'formula': event.formula,\n                  'reference': event.reference\n                };\n                this.formulaClick.emit(obj);\n              }\n            );\n          } else {\n            const quillEditor = this._elementRef.nativeElement.querySelector('.ajf-ql-editor');\n            const link = this._renderer.createElement('a');\n            this._renderer.setAttribute(link, 'href', 'javascript:void(0)');\n            this._renderer.setStyle(link, 'cursor', 'pointer');\n            this._renderer.setAttribute(link, 'formula', this.check(event.formula));\n            const linkLabel = this._renderer.createText(event.formula);\n            this._renderer.appendChild(link, linkLabel);\n            // add listener related on the click event of the new formula\n            const unlisten = this._renderer.listen(\n              link, 'click', (_) => {\n                let obj = {\n                  'formula': this.check(event.formula),\n                  'reference': link\n                };\n                this.formulaClick.emit(obj);\n              }\n            );\n            this._renderer.appendChild(quillEditor, link);\n            this._formulas.push({ unlisten, formula: link });\n          }\n        });\n  }\n\n  check(value: string): string {\n    this.dateFormats.forEach((elem: any) => {\n      if (elem.value == value) {\n        return <string>elem.validator;\n      }\n    });\n    return <string>value;\n  }\n  /**\n   * this function search fomulas inside the init text\n   * and allocate the related listener on click event\n   *\n   * @memberof QuillEditorComponent\n   */\n  setHTML() {\n    this.writeValue(this.initHTML);\n  }\n\n  ngAfterViewInit() {\n    const toolbarElem = this._elementRef.nativeElement.querySelector('[ajf-quill-editor-toolbar]');\n    let modules: any = this.modules || this.defaultModules;\n\n    Quill.register(this.font, true);\n\n    if (toolbarElem) {\n      modules['toolbar'] = toolbarElem;\n      modules['formula'] = true;\n    }\n    this._elementRef.nativeElement.insertAdjacentHTML(\n      'beforeend', '<div quill-editor-element></div>'\n    );\n\n    this.editorElem = this._elementRef.nativeElement.querySelector('[quill-editor-element]');\n\n    this.quillEditor = new Quill(this.editorElem, {\n      modules: modules,\n      placeholder: this.placeholder || 'Insert text here ...',\n      readOnly: this.readOnly || false,\n      theme: this.theme || 'snow',\n      formats: this.formats\n    });\n\n\n    this.editorCreated.emit(this.quillEditor);\n    this.setHTML();\n\n    // mark model as touched if editor lost focus\n    this.quillEditor.on('selection-change', (range: any, oldRange: any, source: string) => {\n      this.selectionChanged.emit({\n        editor: this.quillEditor,\n        range: range,\n        oldRange: oldRange,\n        source: source\n      });\n\n      if (!range) {\n        this.onModelTouched();\n      }\n    });\n\n    // update model if text changes\n    this.quillEditor.on('text-change', (delta: any, oldDelta: any, source: string) => {\n      let html: any = this.editorElem.children[0].innerHTML;\n      const text = this.quillEditor.getText();\n\n      if (html === '<p><br></p>') {\n        html = null;\n      }\n\n      this.onModelChange(html);\n\n      this.contentChanged.emit({\n        editor: this.quillEditor,\n        html: html,\n        text: text,\n        delta: delta,\n        oldDelta: oldDelta,\n        source: source\n      });\n    });\n\n    let elem = this._elementRef.nativeElement.querySelector('.ajf-ql-formula');\n    this.listenFunc = this._renderer.listen(elem, 'click', (_) => {\n      this.formulaClick.emit();\n\n    });\n\n  }\n\n  writeValue(currentValue: any) {\n    this.content = currentValue;\n\n    if (this.quillEditor) {\n      if (currentValue) {\n        if (currentValue == this.initHTML && !this._init) {\n          let editor = this._elementRef.nativeElement.querySelector('.ajf-ql-editor');\n          editor.innerHTML = this.initHTML;\n          let allFormulas = this._elementRef.nativeElement.querySelectorAll('[formula]');\n          allFormulas.forEach((elem: any) => {\n            const unlisten = this._renderer.listen(\n              elem, 'click', (_) => {\n                let obj = {\n                  'formula': this.check(elem.innerText),\n                  'reference': elem\n                };\n                this.formulaClick.emit(obj);\n              }\n            );\n            this._renderer.setStyle(elem, 'cursor', 'pointer');\n            this._formulas.push({ unlisten, formula: elem });\n            this._init = true;\n          });\n        } else if (currentValue != this.initHTML) {\n          this.quillEditor.pasteHTML(currentValue);\n        }\n        return;\n      }\n      this.quillEditor.setText('');\n    }\n  }\n\n  registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n\n  validate(_c: FormControl) {\n    if (!this.quillEditor) {\n      return null;\n    }\n\n    let err: {\n      minLengthError?: { given: number, minLength: number };\n      maxLengthError?: { given: number, maxLength: number };\n    } = {},\n      valid = true;\n\n    const textLength = this.quillEditor.getText().trim().length;\n\n    if (this.minLength) {\n      err.minLengthError = {\n        given: textLength,\n        minLength: this.minLength\n      };\n\n      valid = textLength >= this.minLength || !textLength;\n    }\n\n    if (this.maxLength) {\n      err.maxLengthError = {\n        given: textLength,\n        maxLength: this.maxLength\n      };\n\n      valid = textLength <= this.maxLength && valid;\n    }\n\n    return valid ? null : err;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    if (changes['readOnly'] && this.quillEditor) {\n      this.quillEditor.enable(!changes['readOnly'].currentValue);\n    }\n    if (changes['modules'] && this.quillEditor) {\n\n      Quill.register(this.font, true);\n      this.quillEditor = new Quill(this.editorElem, {\n        modules: changes['modules']['currentValue'],\n        placeholder: this.placeholder || 'Insert text here ...',\n        readOnly: this.readOnly || false,\n        theme: this.theme || 'snow',\n        formats: this.formats\n      });\n      this._elementRef.nativeElement.children[0].remove();\n    }\n  }\n  ngOnDestroy() {\n    for (let i = 0; i < this._formulas.length; i++) {\n      let unlisten = this._formulas[i].unlisten;\n      if (unlisten != null) {\n        unlisten();\n      }\n    }\n    this._formulaTextSub.unsubscribe();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfImageType} from '@ajf/core/image';\nimport {evaluateExpression} from '@ajf/core/models';\nimport {\n  AjfChartWidget, AjfColumnWidget, AjfDataset, AjfImageWidget, AjfLayoutWidget, AjfMapWidget,\n  AjfTableWidget, AjfTextWidget, AjfWidget, AjfWidgetType\n} from '@ajf/core/reports';\nimport {CdkDrag, CdkDragDrop} from '@angular/cdk/drag-drop';\nimport {\n  ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, ViewEncapsulation\n} from '@angular/core';\nimport {Observable, Subscription, timer} from 'rxjs';\nimport {distinctUntilChanged, map, startWith} from 'rxjs/operators';\n\nimport {AjfReportBuilderDragData} from './report-builder-drag-data';\nimport {AjfReportBuilderService} from './report-builder-service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-renderer-widget',\n  templateUrl: 'renderer-widget.html',\n  styleUrls: ['renderer-widget.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderRendererWidget implements OnInit, OnDestroy, OnChanges {\n  get widgetTypes() {\n    return AjfWidgetType;\n  }\n\n  @Input() widget: AjfWidget;\n\n  get layoutWidget(): AjfLayoutWidget {\n    return this.widget as AjfLayoutWidget;\n  }\n\n  @Input()\n  position: number;\n\n  @Input()\n  section: string;\n\n  // this boolean sign if is dragged a widget\n  onDragged = false;\n\n  currentContentWidget: AjfWidget|null = null;\n  obj: any;\n  fixedZoom: any;\n\n  getTableTitles: Observable<string[]>;\n  getTableContent: Observable<string[][] | undefined>;\n\n  getChartType: Observable<number>;\n  getDataset: Observable<AjfDataset[][]>;\n  getChartBackgroundColor: Observable<string[]>;\n  getChartBorderColor: Observable<string[]>;\n  getChartBorderWidth: Observable<number>;\n\n  layoutShow: boolean;\n\n  private _onDraggedSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n    private _service: AjfReportBuilderService\n  ) { }\n\n  canDropPredicate(item: CdkDrag<AjfReportBuilderDragData>): boolean {\n    item.data.dropZones.forEach(d => {\n      if (['header', 'widget'].indexOf(d) > -1) {\n        return true;\n      }\n    });\n    return false;\n  }\n\n  /**\n   *  sign the start of mouse drag with 200 ms of delay\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragStartHandler(): void {\n    let s = timer(200)\n      .subscribe(() => {\n        s.unsubscribe();\n        this._service.dragStarted();\n      });\n  }\n\n  /**\n   * sign the end of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEndHandler(): void {\n    this._service.dragEnded();\n  }\n\n  getColumnContent(): AjfColumnWidget[] {\n    const myObj: AjfLayoutWidget = <AjfLayoutWidget>this.widget;\n\n    return <AjfColumnWidget[]>myObj.content;\n  }\n\n  getIcon(): {fontSet: string, fontIcon: string} | null {\n    const defVal = {fontSet: '', fontIcon: ''};\n    const myObj: AjfImageWidget = <AjfImageWidget>this.widget;\n    if (myObj.icon == null) { return null; }\n    return evaluateExpression(myObj.icon.formula) || defVal;\n  }\n\n  getFlag(): string | null {\n    const defVal = 'ch';\n    const myObj: AjfImageWidget = <AjfImageWidget>this.widget;\n    if (myObj.flag == null) { return null; }\n    return evaluateExpression(myObj.flag.formula) || defVal;\n  }\n\n  getPercent(index: number): string {\n    const myObj: AjfLayoutWidget = <AjfLayoutWidget>this.widget;\n    const percent = myObj.columns[index] * 100;\n\n    return `${percent.toString()}%`;\n  }\n\n  getImageUrl(): string | null {\n    const defVal = '';\n    const myObj: AjfImageWidget = <AjfImageWidget>this.widget;\n    if (myObj.url == null) { return null; }\n    return evaluateExpression(myObj.url.formula) || defVal;\n  }\n\n  getImageType() {\n    return this.widget != null ? (<AjfImageWidget>this.widget).imageType : AjfImageType.Image;\n  }\n\n  getHtmlText(): string {\n    const myObj: AjfTextWidget = this.widget as AjfTextWidget;\n    if (myObj.htmlText === '') {\n      return '...';\n    } else {\n      return myObj.htmlText;\n    }\n  }\n\n  getCoordinate(): number[] {\n    const myObj: AjfMapWidget = this.widget as AjfMapWidget;\n    if (myObj.coordinate == null) {\n      return [51.505, -0.09, 13];\n    } else {\n      return myObj.coordinate as any;\n    }\n  }\n\n  getTileLayer(): string {\n    const myObj: AjfMapWidget = this.widget as AjfMapWidget;\n    if (myObj.tileLayer === '') {\n      return 'http://{s}.tile.osm.org/{z}/{x}/{y}.png';\n    } else {\n      return myObj.tileLayer;\n    }\n  }\n\n  getAttribution(): string {\n    let myObj: AjfMapWidget;\n    myObj = <AjfMapWidget>this.widget;\n    if (myObj.attribution === '') {\n      return \"&copy; <a href='http://osm.org/copyright'>O</a> contributors\";\n    } else {\n      return myObj.attribution;\n    }\n  }\n\n  addToList(event: CdkDragDrop<AjfReportBuilderDragData>, toColumn: AjfColumnWidget): void {\n    this.onDragEndHandler();\n    this._service.addToColumn(event, toColumn);\n  }\n\n  ngOnInit(): void {\n    this._onDraggedSub = this._service.onDragged\n      .subscribe(x => {\n        this.onDragged = x;\n      });\n\n    this.getChartType = this._service.currentWidget.pipe(\n        map((widget: AjfWidget|null) => {\n          if (widget == null) {\n            return 0;\n          }\n          const myObj = <AjfChartWidget>this.widget;\n          return <number>(myObj.chartType);\n        }),\n        distinctUntilChanged(), startWith(0));\n\n    this.getDataset = this._service.currentWidget.pipe(\n        map((widget: AjfWidget|null) => {\n          if (widget != null && (widget as AjfChartWidget).dataset != null) {\n            const myObj = <AjfChartWidget>this.widget;\n            return <any>myObj.dataset;\n          } else {\n            return [];\n          }\n        }),\n        distinctUntilChanged());\n\n    this.getTableTitles = this._service.currentWidget.pipe(map((widget: AjfWidget|null) => {\n      if (widget == null) {\n        return [];\n      }\n\n      const myObj = this.widget as AjfTableWidget;\n\n      if (myObj.dataset != null) {\n        let tableTitle: string[] = [];\n\n        for (let i = 0; i < myObj.dataset.length; i++) {\n          if (myObj.dataset[i][0] != null) {\n            tableTitle.push(myObj.dataset[i][0].label || '');\n          }\n        }\n        return tableTitle;\n      } else {\n        return [];\n      }\n    }));\n\n    this.getTableContent = this._service.currentWidget.pipe(map((widget: AjfWidget|null) => {\n      if (widget == null) {\n        return [];\n      }\n\n      const myObj = <AjfTableWidget>this.widget;\n\n      if (myObj.dataset != null) {\n        let tableContent: string[][] = [];\n\n        for (let i = 0; i < myObj.dataset.length; i++) {\n          for (let j = 0; j < myObj.dataset[i].length; j++) {\n            if ((myObj.dataset[i] != null) && (myObj.dataset[i][j + 1] != null)) {\n              if (tableContent[j] == null) {\n                tableContent[j] = [];\n              }\n              if (tableContent[j][i] == null) {\n                tableContent[j][i] = ' ';\n              }\n              tableContent[j].splice(i, 1, myObj.dataset[i][j + 1].label || '');\n            }\n          }\n        }\n        return tableContent;\n      }\n    }));\n\n    this._service.updateCurrentWidget(this.widget);\n  }\n\n  ngOnChanges(changes: any) {\n    if (changes.widget && changes.widget.currentValue != null) {\n      this.widget = changes.widget.currentValue;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._onDraggedSub.unsubscribe();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWidget} from '@ajf/core/reports';\nimport {deepCopy} from '@ajf/core/utils';\nimport {\n  AfterViewInit, ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {Subscription} from 'rxjs';\n\nimport {AjfReportBuilderService} from './report-builder-service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'theme-color-dialog',\n  templateUrl: 'theme-color-dialog.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderThemeColorDialog implements OnInit , AfterViewInit, OnDestroy {\n  @ViewChild('colorpic', {static: true})\n  elem: any;\n\n  currentWidget: AjfWidget|null = null;\n\n  currentColor = 'rgb(255,255,255,0)';\n  section: string = 'color';\n\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n    private _service: AjfReportBuilderService,\n    private _dialogRef: MatDialogRef<AjfReportBuilderThemeColorDialog>\n  ) { }\n\n  setWidgetStyles(value: any) {\n    this._service.setWidgetStyles(this.section, value);\n    this.currentColor = value;\n    this.setStyle();\n  }\n\n  setStyle() {\n    if (this.currentWidget == null) { return; }\n    this.currentWidget.styles = deepCopy(this.currentWidget.styles);\n    this._service.updateCurrentWidget(this.currentWidget);\n  }\n\n  addCustomColor() {\n    this._service.addCustomColor(this.currentColor);\n    this._service.updateCurrentWidget(this.currentWidget);\n    this._dialogRef.close();\n  }\n\n  close() {\n    this._dialogRef.close();\n  }\n  ngOnInit() {\n    this._currentWidgetSub = this._service.currentWidget\n      .subscribe(x => {\n        if (x !== null) {\n          if (this.currentWidget !== x) {\n            this.currentWidget = x;\n          }\n        } else {\n          this.currentWidget = null;\n        }\n      });\n  }\n\n  ngAfterViewInit() {\n    this.elem.nativeElement.children[1].firstElementChild['style']['position'] = 'initial';\n  }\n\n  ngOnDestroy() {\n    this._currentWidgetSub.unsubscribe();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfWidget} from '@ajf/core/reports';\nimport {deepCopy} from '@ajf/core/utils';\nimport {\n  ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit, ViewEncapsulation\n} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {Observable, Subscription} from 'rxjs';\nimport {distinctUntilChanged, map} from 'rxjs/operators';\n\nimport {AjfReportBuilderService} from './report-builder-service';\nimport {AjfReportBuilderThemeColorDialog} from './theme-color-dialog';\n\n/**\n * this component manages the report text\n *\n * @export\n */\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-theme-color',\n  templateUrl: 'theme-color.html',\n  styleUrls: ['theme-color.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderThemeColor implements OnInit, OnDestroy {\n  currentWidget: AjfWidget|null = null;\n\n  alphaColor: number = 1;\n  colors: string[];\n  currentColor: string;\n\n  getColorWidget: Observable<string>;\n\n  dialogRef: MatDialogRef<AjfReportBuilderThemeColorDialog>;\n\n  styleBackgroundColor = 'rgb(255,255,255,0)';\n  styleColor = 'rgb(0,0,0,0)';\n\n  @Input()\n  section: string;\n\n  @Input()\n  label: string;\n\n  @Input()\n  init: string;\n\n  /**\n   * the name of the section that contains the currentWidget\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  origin: string;\n\n  private _colorsSub: Subscription = Subscription.EMPTY;\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n  private _originSub: Subscription = Subscription.EMPTY;\n  private _headerStyleSub: Subscription = Subscription.EMPTY;\n  private _contentStylesSub: Subscription = Subscription.EMPTY;\n  private _footerStylesSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n    private _service: AjfReportBuilderService,\n    public dialog: MatDialog\n  ) {\n  }\n\n  setStyles(value: any) {\n    switch (this.section) {\n      case 'widget':\n        this.setWidgetStyles(value);\n        break;\n      case 'report':\n        this.setReportStyles(value);\n        break;\n      case 'section':\n        this.setSectionStyles(value);\n        break;\n      case 'chart':\n        this.setChartStyle(value);\n        break;\n    }\n  }\n\n  setChartStyle(value: any) {\n    if (this.label === 'backgroundColor') {\n      this.addChartBackgroundColor(value);\n    } else {\n      this.addChartBorderColor(value);\n    }\n  }\n\n  setAlphaColor(value: any) {\n\n    value = value.toFixed(2);\n    for (let i = 0; i < this.colors.length; i++) {\n      let lastComma = this.colors[i].lastIndexOf(',');\n      this.colors[i] = this.colors[i].substring(0, lastComma) + ',' + value + ')';\n    }\n  }\n\n  /**\n   * call to service to add new style to widget\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setWidgetStyles(value: any) {\n    if (this.section === 'chart') {\n      this.setChartStyle(value);\n    } else {\n      this._service.setWidgetStyles(this.label, value);\n      this.currentColor = value;\n      this.setStyle();\n    }\n  }\n\n  /**\n   * call to service to add new style to section\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setSectionStyles(value: any) {\n    this._service.setSectionStyles(this.origin, this.label, value);\n    this.styleColor = value;\n  }\n\n  /**\n   * call to service to add new style to report\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setReportStyles(value: any) {\n    this._service.setReportStyles(this.label, value);\n    this.styleBackgroundColor = value;\n  }\n\n  /**\n   * call to service to add background color to current chart\n   *\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  addChartBackgroundColor(value: any) {\n    this._service.addChartBackgroundColor(value);\n  }\n\n  /**\n   * call to service to add border color to current chart\n   *\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  addChartBorderColor(value: any) {\n    this._service.addChartBorderColor(value);\n  }\n\n  setStyle() {\n    if (this.currentWidget == null) { return; }\n    this.currentWidget.styles = deepCopy(this.currentWidget.styles);\n    this._service.updateCurrentWidget(this.currentWidget);\n  }\n\n  openDialog() {\n    this.dialogRef = this.dialog.open(AjfReportBuilderThemeColorDialog);\n  }\n\n  ngOnInit() {\n\n    this._colorsSub = this._service.colors\n      .subscribe(x => {\n        this.colors = x;\n      }\n      );\n\n    this._currentWidgetSub = this._service.currentWidget\n      .subscribe(x => {\n        if (x != null) {\n          if (this.currentWidget !== x) {\n            this.currentWidget = x;\n          }\n        } else {\n          this.currentWidget = null;\n        }\n      });\n\n    this.getColorWidget = this._service.currentWidget.pipe(\n        map((myObj: AjfWidget|null) => {\n          if (myObj != null) {\n            return myObj.styles['color'] || '';\n          }\n        }),\n        distinctUntilChanged());\n\n    this._originSub = this._service.origin.subscribe(s => {\n      this.origin = s;\n    });\n\n    this._headerStyleSub = this._service.headerStyles.subscribe(s => {\n      if (s['background-color'] != null) {\n        this.styleBackgroundColor = s['background-color'];\n      }\n    });\n    this._contentStylesSub = this._service.contentStyles.subscribe(s => {\n      if (s['background-color'] != null) {\n        this.styleBackgroundColor = s['background-color'];\n      }\n    });\n    this._footerStylesSub = this._service.footerStyles.subscribe(s => {\n      if (s['background-color'] != null) {\n        this.styleBackgroundColor = s['background-color'];\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._colorsSub.unsubscribe();\n    this._currentWidgetSub.unsubscribe();\n    this._originSub.unsubscribe();\n    this._headerStyleSub.unsubscribe();\n    this._contentStylesSub.unsubscribe();\n    this._footerStylesSub.unsubscribe();\n  }\n}\n\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {AjfReportBuilderService} from './report-builder-service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'toolbar-dialog',\n  templateUrl: 'toolbar-dialog.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderToolbarDialog {\n  constructor(\n    private _service: AjfReportBuilderService,\n    private _dialogRef: MatDialogRef<AjfReportBuilderToolbarDialog>\n  ) { }\n\n  resetReport() {\n    let emptyReport: any = {\n      'header': { 'content': [], 'styles': {} },\n      'content': { 'content': [], 'styles': {} },\n      'footer': { 'content': [], 'styles': {} },\n      'styles': {}\n    };\n    this._service.setReport(emptyReport);\n    this._dialogRef.close();\n  }\n\n  close() {\n    this._dialogRef.close();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {deepCopy} from '@ajf/core/utils';\nimport {CdkDrag, CdkDragDrop} from '@angular/cdk/drag-drop';\nimport {ChangeDetectionStrategy, Component, EventEmitter, ViewEncapsulation} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {Observable} from 'rxjs';\n\nimport {AjfReportBuilderDragData} from './report-builder-drag-data';\nimport {AjfReportBuilderService} from './report-builder-service';\nimport {AjfReportBuilderToolbarDialog} from './toolbar-dialog';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-toolbar',\n  outputs: ['addClick'],\n  styleUrls: ['toolbar.css'],\n  templateUrl: 'toolbar.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an ajf builder toolbar\n * @implements : OnDestroy\n */\nexport class AjfReportBuilderToolbar {\n  // this is an any EventEmitter\n  addClick: EventEmitter<any> = new EventEmitter<any>();\n  dialogRef: MatDialogRef<AjfReportBuilderToolbarDialog>;\n  zoom = false;\n\n  lastJson: string;\n\n  emptyContent: Observable<boolean>;\n\n  constructor(\n    private _service: AjfReportBuilderService,\n    public dialog: MatDialog) {\n      this.emptyContent = this._service.emptyContent;\n  }\n\n  canDropPredicate(item: CdkDrag<AjfReportBuilderDragData>): boolean {\n    return item.data.dropZones.indexOf('widget') > -1;\n  }\n\n  JSONRequest() {\n  }\n  /**\n   * this method will pass event to event emitter\n   */\n  onAddClick(event: any): void {\n    this.addClick.emit(event);\n  }\n\n  addToList(event: CdkDragDrop<AjfReportBuilderDragData>) {\n    if (event.item.data.widget != null) {\n      this._service.addCustomWidgets({\n        json: JSON.stringify(event.item.data.widget.toJson()),\n        type: ''\n      });\n    }\n  }\n\n  undoLastOperation() {\n    try {\n      let myObj = JSON.parse(this._service.popJsonStack() || '');\n      this._service.setReport(deepCopy(myObj));\n    } catch (e) { }\n  }\n\n  isZoomed() {\n    this.zoom = !this.zoom;\n    if (this.zoom) {\n      this._service.fixedZoomIn();\n    } else {\n      this._service.fixedZoomOut();\n    }\n  }\n\n  openDialog() {\n    this.dialogRef = this.dialog.open(AjfReportBuilderToolbarDialog);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation} from '@angular/core';\n\nimport {ajfReportBuilderWidgetToString} from './utils';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-widget-toolbar-button',\n  inputs: ['widgetType'],\n  templateUrl: 'widget-toolbar-button.html',\n  styleUrls: ['widget-toolbar-button.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an ajf builder field toolbar button\n * @implements : OnInit\n */\nexport class AjfReportBuilderWidgetToolbarButton implements OnInit {\n  widgetType: string;\n  widgetIcon: string;\n\n  constructor() { }\n  ngOnInit(): void {\n    this.widgetIcon = ajfReportBuilderWidgetToString(this.widgetType);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfLayoutWidget, AjfWidget, AjfWidgetType} from '@ajf/core/reports';\nimport {\n  ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewEncapsulation\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\n\nimport {AjfReportBuilderService} from './report-builder-service';\nimport {ajfWidgetTypeToLabel, widgetReportBuilderIconName} from './utils';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-widgets-row-buttons',\n  inputs: ['from', 'fromWidget', 'position', 'widget', 'child', 'isOver'],\n  templateUrl: 'widgets-row-buttons.html',\n  styleUrls: ['widgets-row-buttons.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderWidgetsRowButtons implements OnDestroy, OnInit {\n  from: string;\n  fromWidget: AjfWidget;\n  position: number;\n  widget: AjfWidget;\n  child: boolean;\n  currentWidget: AjfWidget|null = null;\n  isClicked = false;\n  color: string[] = [];\n  isOver = false;\n\n  widgetIcon: string;\n  widgetLabel: string;\n  label: string;\n\n  // this boolean sign if is dragged a widget\n  onDragged = false;\n\n  // this boolean sign if is on over a widget\n  onOver = false;\n\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n  private _onDraggedSub: Subscription = Subscription.EMPTY;\n  private _onOverSub: Subscription = Subscription.EMPTY;\n\n\n  /**\n   *\n   * @param private _afjBuilderService: AjfBuilderService\n   */\n  constructor(private _service: AjfReportBuilderService) {\n\n  }\n\n  selectedWidget() {\n    this.isClicked = !this.isClicked;\n    this._service.setOrigin(this.from);\n    this._service.updateCurrentWidget(this.widget);\n  }\n\n  remove() {\n    if (this.fromWidget != null) {\n      this._service.updateCurrentWidget(this.fromWidget);\n    }\n    this._service.remove(this.from, this.position);\n  }\n\n  onFocus(): boolean {\n    if (this.widget === this.currentWidget) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  changeColumn(direction: string) {\n\n    if (direction == 'back') {\n      this._service.changeColumn(\n          this.position, this.position - 1, <AjfLayoutWidget>this.fromWidget);\n    } else {\n      this._service.changeColumn(\n          this.position, this.position + 1, <AjfLayoutWidget>this.fromWidget);\n    }\n  }\n  isColumn(): boolean {\n    if (this.label === 'Column') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isOneColumn(): boolean {\n    let rootObj = <AjfLayoutWidget>this.fromWidget;\n    if (rootObj.columns.length > 1) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  ngOnInit() {\n    this.label = AjfWidgetType[this.widget.widgetType];\n    this.widgetIcon = widgetReportBuilderIconName(this.widget.widgetType);\n    this.widgetLabel = ajfWidgetTypeToLabel(this.widget.widgetType);\n\n    this._onDraggedSub = this._service.onDragged\n      .subscribe(x => {\n        this.onDragged = x;\n      });\n\n    this._onOverSub = this._service.onOver\n      .subscribe(x => {\n        this.onOver = x;\n      });\n\n    this._currentWidgetSub = this._service.currentWidget\n      .subscribe(\n      x => {\n        this.currentWidget = x;\n        if (x !== this.widget) {\n          this.isClicked = false;\n        }\n      });\n\n  }\n  ngOnDestroy(): void {\n    this._onDraggedSub.unsubscribe();\n    this._onOverSub.unsubscribe();\n    this._currentWidgetSub.unsubscribe();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfChartType, AjfWidgetType} from '@ajf/core/reports';\nimport {sizedEnumToStringArray} from '@ajf/core/utils';\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\nimport {timer} from 'rxjs';\n\nimport {AjfReportBuilderService} from './report-builder-service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-widgets-toolbar',\n  templateUrl: 'widgets-toolbar.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an Ajf builder fields toolbar\n */\nexport class AjfReportBuilderWidgetsToolbar {\n  // fieldTypes is an array string that contains the field options\n  chartTypes: string[] = sizedEnumToStringArray(AjfChartType);\n  widgetTypes: string[] = sizedEnumToStringArray(AjfWidgetType);\n\n\n  /**\n   *\n   * @param private _afjBuilderService: AjfBuilderService\n   */\n  constructor(private _service: AjfReportBuilderService) {\n    // delete Column widget\n    let pos = this.widgetTypes.indexOf('Column');\n    if (pos !== -1) {\n      this.widgetTypes.splice(pos, 1);\n    }\n  }\n  /**\n   *  sign the start of mouse drag with 200 ms of delay\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragStartHandler(): void {\n    let s = timer(200)\n      .subscribe(() => {\n        if (s != null) { s.unsubscribe(); }\n        this._service.dragStarted();\n      });\n  }\n\n  /**\n   * sign the end of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEndHandler(): void {\n    this._service.dragEnded();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterContentInit, ChangeDetectionStrategy, Component, Input, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport {MatSidenav} from '@angular/material/sidenav';\n\nimport {AjfReport} from '@ajf/core/reports';\nimport {AjfReportBuilderService} from './report-builder-service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder',\n  templateUrl: 'report-builder.html',\n  styleUrls: ['report-builder.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an ajf form builderx\n */\nexport class AjfReportBuilder implements AfterContentInit {\n  @ViewChild(MatSidenav, {static: true}) startSidenav: MatSidenav;\n\n  private _init: boolean = false;\n\n  private _report: AjfReport;\n  get report(): AjfReport { return this._report; }\n  @Input() set report(report: AjfReport) {\n    if (report != null) {\n      this._report = report;\n      if (this._init) {\n        this._setCurrentReport();\n      }\n    }\n  }\n\n  constructor(private _service: AjfReportBuilderService) { }\n\n  ngAfterContentInit(): void {\n    this._setCurrentReport();\n    this._init = true;\n  }\n\n  private _setCurrentReport(): void {\n    this._service.setReportForms(this.report != null ? this.report.forms || [] : []);\n    this._service.setReport(this.report);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\nimport {TranslateModule} from '@ngx-translate/core';\n\nimport {ColorPickerModule} from 'ngx-color-picker';\n\nimport {AjfCommonModule} from '@ajf/core/common';\nimport {AjfMapModule} from '@ajf/core/map';\nimport {AjfTableModule} from '@ajf/core/table';\nimport {AjfTextModule} from '@ajf/core/text';\nimport {AjfImageModule} from '@ajf/material/image';\nimport {AjfMonacoEditorModule} from '@ajf/material/monaco-editor';\n\nimport {AjfReportBuilderColumn} from './column';\nimport {AjfReportBuilderConditionEditor} from './condition-editor';\nimport {AjfReportBuilderContent} from './content';\nimport {AjfReportBuilderCustomWidgetDialog} from './custom-widget-dialog';\nimport {AjfReportBuilderCustomWidgetToolbarButton} from './custom-widget-toolbar-button';\nimport {AjfReportBuilderCustomWidgetsToolbar} from './custom-widgets-toolbar';\nimport {AjfReportBuilderFormsAnalyzerDialog} from './forms-analyzer-dialog';\nimport {AjfReportBuilderFormsAnalyzer} from './forms-analyzer';\nimport {AjfImageFilterPipe} from './image-filter';\nimport {AjfReportBuilderImageGroup} from './image-group';\nimport {AjfReportBuilderProperties} from './properties';\nimport {AjfQuillEditor} from './quill-editor';\nimport {AjfReportBuilderRendererWidget} from './renderer-widget';\nimport {AjfReportBuilderThemeColorDialog} from './theme-color-dialog';\nimport {AjfReportBuilderThemeColor} from './theme-color';\nimport {AjfReportBuilderToolbarDialog} from './toolbar-dialog';\nimport {AjfReportBuilderToolbar} from './toolbar';\nimport {AjfReportBuilderWidgetToolbarButton} from './widget-toolbar-button';\nimport {AjfReportBuilderWidgetsRowButtons} from './widgets-row-buttons';\nimport {AjfReportBuilderWidgetsToolbar} from './widgets-toolbar';\nimport {AjfReportBuilderService} from './report-builder-service';\nimport {AjfReportBuilder} from './report-builder';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    DragDropModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatIconModule,\n    MatListModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n    MatSliderModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    TranslateModule,\n    ColorPickerModule,\n    AjfCommonModule,\n    AjfImageModule,\n    AjfMapModule,\n    AjfMonacoEditorModule,\n    AjfTableModule,\n    AjfTextModule,\n  ],\n  declarations: [\n    AjfQuillEditor,\n    AjfReportBuilderColumn,\n    AjfReportBuilderConditionEditor,\n    AjfReportBuilderContent,\n    AjfReportBuilderCustomWidgetDialog,\n    AjfReportBuilderCustomWidgetToolbarButton,\n    AjfReportBuilderCustomWidgetsToolbar,\n    AjfReportBuilderFormsAnalyzerDialog,\n    AjfReportBuilderFormsAnalyzer,\n    AjfReportBuilderImageGroup,\n    AjfReportBuilderProperties,\n    AjfReportBuilderRendererWidget,\n    AjfReportBuilderThemeColorDialog,\n    AjfReportBuilderThemeColor,\n    AjfReportBuilderToolbarDialog,\n    AjfReportBuilderToolbar,\n    AjfReportBuilderWidgetToolbarButton,\n    AjfReportBuilderWidgetsRowButtons,\n    AjfReportBuilderWidgetsToolbar,\n    AjfReportBuilder,\n    AjfImageFilterPipe,\n  ],\n  exports: [\n    AjfReportBuilder,\n  ],\n  entryComponents: [\n    AjfReportBuilderFormsAnalyzerDialog,\n    AjfReportBuilderThemeColorDialog,\n    AjfReportBuilderToolbarDialog,\n  ],\n  providers: [\n    AjfReportBuilderService,\n  ]\n})\nexport class AjfReportBuilderModule { }\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","AJF_REPORTS_CONFIG","InjectionToken","AjfReportBuilderService","getFormulaToHtmlEvent","_saveFormulaTOHtml","asObservable","defineProperty","_iconSets","filterNodes","nodes","node","nodeType","AjfNodeType","AjfNodeGroup","AjfSlide","AjfRepeatingSlide","AjfField","fieldType","AjfFieldType","String","splice","parseColor","cssStyles","colors","forEach","k","indexOf","push","fillFormsVariables","forms","variables","labels","names","types","flattenNodes","extractLabelsNodes","extractNamesNodes","extractTypesNodes","obj","label","name","setOrigin","origin","_originUpdate","next","roundTo","value","decimalPositions","Math","pow","floor","isNumber","test","isNumberArray","_this","v","_onDragged","_onOver","_fixedZoom","fixedZoomIn","_fixedZoomUpdate","fixedZoomOut","_onDragEnter","dragEnter","array","index","_onDragEnterUpdate","dragStarted","_onDraggedUpdate","dragEnded","overStarted","_onOverUpdate","overEnded","dragLeave","_report","saveReport","_saveReportEvent","emit","saveImageFormula","formula","_currentWidgetUpdate","widget","w","flag","icon","saveFormulaToHtml","htmlFormula","reference","setEmptyContent","val","_emptyContent","pushJsonStack","json","currentStack","_jsonStack","getValue","_lastDeletedJson","popJsonStack","pop","updateCurrentWidget","columnWidthChangedEmitter","_customWidgets","_headerWidgets","_headerStyles","_contentWidgets","_contentStyles","_footerWidgets","_footerStyles","_color","updateArrayWidgets","type","newWidget","Error","_updates","_widgets","_formsVariables","_conditionNames","_currentWidget","_widget","_saveReport","_savedReport","_reportStyles","_reportForms","_origin","instantColumnValue","newValue","idx","myObj","size","columns","spreadValue","objNum","sum","idxFirstNoObj","add","foundFirstNoObj","re1","RegExp","re2","re3","oldValue","Number","toFixed","j","setImageUrl","imageUrl","url","createFormula","setIcon","setFlag","saveCondition","conditionText","visibility","condition","saveChartFormula","_label","_level","_mainIndex","_index","formulaText","aggregationType","dataset","aggregation","createAggregation","saveTableFormula","removeTableMainData","_removeFromCurrentWidgetArrayProperty","removeData","setChartType","_setCurrentWidgetProperty","removeMainData","_idx","removeRelatedData","_mainIdx","setChartBackgroundColor","addChartBackgroundColor","color","_addToCurrentWidgetArrayProperty","removeChartBackgroundColor","setChartBorderColor","setChartBorderWidth","addChartBorderColor","removeChartBorderColor","setReport","report","setSaveReport","setWidgetStyles","isPxStyle","Array","join","styles","setSectionStyles","tslib_1.__assign","setReportStyles","_reportStylesUpdate","setReportForms","_reportFormsUpdate","_form","addCustomWidgets","position","_customWidgetsUpdate","customWidgets","resetCustomWidgets","changeLabelCustomWidget","addHeaderWidget","_addWidgetToContainer","_headerWidgetsUpdate","addContentWidget","_contentWidgetsUpdate","addfooterWidget","_footerWidgetsUpdate","unfixedColumn","num","checkSum","parseFloat","addColumn","tmpValue","tempObj","columnObj","createWidget","widgetType","content","removeWidgetToColumn","column","remove","widgets","spread","addToContent","addToColumn","event","toColumn","dragData","fromColumn","fromIndex","arrayFrom","JSON","parse","deepCopy","AjfWidgetType","changePositionOnColumn","toIndex","fromWidget","toWidget","fixedColumn","changeColumn","from","to","layoutWidget","fromColumnValue","toColumnValue","addCustomColor","subj","propName","arr","Injectable","undefined","decorators","Optional","Inject","args","reportsConfig","Subject","_savedReportUpdate","BehaviorSubject","_colorUpdate","_defaultColor","_formsVariablesUpdate","_conditionNamesUpdate","header","footer","EventEmitter","ajf-icon","icons","pipe","startWith","share","scan","op","filter","publishReplay","refCount","map","f","_c","subscribe","reportObs","r","_colors","tempColors","Layout","layoutObj","z","widgetObj","_styles","_r","combineLatest","reportForms","ro","stringify","AjfReportBuilderColumn","addToList","onDragEndHandler","_service","onDragStartHandler","timer","unsubscribe","ngOnInit","_onDraggedSub","onDragged","x","ngOnDestroy","Component","selector","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","propDecorators","showActions","layoutShow","Subscription","EMPTY","ajfWidgetTypeStringToLabel","sanitizeConditionString","str","trim","replace","AjfReportBuilderConditionEditor","extractNames","formsVariables","concat","setCurrent","id","currentId","appendText","checkValidation","validateCondition","validateExpression","text","_goBackNum","conditionTextArea","newStr","el","nativeElement","sStart","min","selectionStart","selectionEnd","sEnd","max","startingString","substr","endingString","initialLenght","closed","createTextRange","range","move","select","focus","setSelectionRange","isValid","hideErrorMessage","errorMessage","_conditionNamesSub","conditionNames","ViewChild","static","operators","AjfReportBuilderContent","onMouseOver","onMouseLeave","canDropPredicate","dropZones","item","data","d","isLayout","onDragEnterHandler","onDragLeaveHandler","onDragEnterCheck","onDragEnter","arrayTo","itemData","currentWidget","_headerWidgetsSub","headerWidgets","_contentWidgetsSub","contentWidgets","_footerWidgetsSub","footerWidgets","_fixedZoomSub","fixedZoom","bool","_onDragEnterSub","_onOverSub","onOver","ngAfterViewChecked","_cdRef","detectChanges","_currentWidgetSub","host","(mouseover)","(mouseleave)","show","headerStyles","contentStyles","footerStyles","AjfReportBuilderCustomWidgetDialog","changeLabel","_dialogRef","close","AjfReportBuilderCustomWidgetToolbarButton","widgetIcon","toLowerCase","ajfWidgetTypeStringToIcon","widgetLabel","inputs","AjfReportBuilderCustomWidgetsToolbar","openDialog","dialog","open","componentInstance","_customWidgetsSub","_threeColumnsLayout","_fourColumnsLayout","AjfReportBuilderFormsAnalyzerDialog","onEditorInit","monaco","languages","typescript","javascriptDefaults","setDiagnosticsOptions","noSemanticValidation","noSyntaxValidation","setCompilerOptions","target","ScriptTarget","ES2015","allowNonTsExtensions","allowJs","module","ModuleKind","addExtraLib","e","_extraLibs","_initFormsVariablesNames","_updateVariables","_updateFunctions","formVar","formsVariablesName","formsVariablesType","_fieldVarType","AjfExpressionUtils","UTIL_FUNCTIONS","Boolean","Date","DateInput","Time","Empty","Formula","MultipleChoice","SingleChoice","Table","Text","init","insertVariable","setCurrentId","setAggregationType","validateFormula","safeFormulaText","saveDataset","saveFormulaHtml","level","mainIndex","variable","monacoEditor","editor","split","getPosition","ln","lineNumber","line","col","substring","setPosition","setVariable","setValue","reset","AjfAggregationType","labelText","_first","_formAnalyzerSub","AjfValidationService","Input","formulaTextArea","AjfMonacoEditor","_","aggregationTypes","sizedEnumToStringArray","formulaDate","Sum","currentIndex","imageType","AjfImageType","Flag","AjfReportBuilderFormsAnalyzer","setCurrentIndex","currentMainDataIndex","isSelected","getMainData","_dataset","mainData","getDataset","getRelatedData","relatedData","getTableHeader","getTableData","tableData","needMainData","chartType","AjfChartType","Scatter","Bubble","removeDataset","editMode","dialogRef","Chart","openDialogAddMainData","openDialogChartEditMainData","openDialogTableEditMainData","openDialogChartAddDataset","openDialogTableAddDataset","openDialogChartAddDataOfDataset","openDialogChartEditDataset","openDialogTableEditDataset","openDialogChartEditDataOfDataset","choicesOrigins","AjfImageFilterPipe","transform","items","info","includes","Pipe","AjfReportBuilderImageGroup","_icon","_classes","fontSet","fontIcon","setSearch","valueToSearch","currentTarget","emitFormula","formulaClick","getFlag","returnValue","class","prefixClass","toggle","AjfReportBuilderProperties","toNumber","matches","match","toNumberArray","fillPxNumberArray","v21","v22","v31","v32","percent","setForms","formsJson","setStyle","currentColor","setWidgetMargin","_updateWidgetMarginEvt","setWidgetPadding","_updateWidgetPaddingEvt","setWidgetBorderWidth","_updateWidgetBorderWidthEvt","setWidgetBorderRadius","_updateWidgetBorderRadiusEvt","styleColor","styleBackgroundColor","getModule","quillModules","isChartTypeSelected","initChartType","setTab","tabValue","hideMenu","openFormulaDialog","_dialog","isFormula","_formsSub","widgetName","reportStyles","sectionStyles","widgetStyles","sectionColor","widgetColor","visibilitySection","_colorSub","toolbar","list","script","background","font","fonts","align","getHTML","htmlText","distinctUntilChanged","getHeightWidget","getFontSizeWidget","getFontAlignWidget","getBorderWidthWidget","getBorderWidthWidgetTop","m","getBorderWidthWidgetRight","getBorderWidthWidgetBottom","getBorderWidthWidgetLeft","getBorderRadiusWidget","getBorderRadiusWidgetTopLeft","getBorderRadiusWidgetTopRight","getBorderRadiusWidgetBottomRight","getBorderRadiusWidgetBottomLeft","getMarginWidget","getMarginWidgetTop","getMarginWidgetRight","getMarginWidgetBottom","getMarginWidgetLeft","getPaddingWidget","getPaddingWidgetTop","getPaddingWidgetRight","getPaddingWidgetBottom","getPaddingWidgetLeft","getBackgroundColorWidget","getColorWidget","_stylesUpdatesSubs","withLatestFrom","ngOnChanges","changes","currentValue","_headerStyleSub","_contentStylesSub","_footerStylesSub","_originSub","marginExpanded","paddingExpanded","borderWidthExpanded","borderRadiusExpanded","backgroundColor","borderColor","currentModule","chartBorderColor","chartBorderWidth","iconSet","title","flagSet","keys","iconSets","AjfQuillEditor","check","dateFormats","elem","setHTML","writeValue","initHTML","ngAfterViewInit","toolbarElem","_elementRef","querySelector","modules","defaultModules","Quill","register","insertAdjacentHTML","editorElem","quillEditor","placeholder","readOnly","theme","formats","editorCreated","on","oldRange","source","selectionChanged","onModelTouched","delta","oldDelta","html","children","innerHTML","getText","onModelChange","contentChanged","listenFunc","_renderer","listen","_init","pasteHTML","querySelectorAll","unlisten","innerText","_formulas","setText","registerOnChange","fn","registerOnTouched","validate","err","valid","textLength","minLength","minLengthError","given","maxLength","maxLengthError","enable","_formulaTextSub","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","NG_VALIDATORS","Output","emptyArray","validator","slice","import","whitelist","setAttribute","efs","formulaEntry","link_1","createElement","linkLabel","createText","appendChild","AjfReportBuilderRendererWidget","getColumnContent","getIcon","evaluateExpression","getPercent","toString","getImageUrl","getImageType","Image","getHtmlText","getCoordinate","coordinate","getTileLayer","tileLayer","getAttribution","attribution","getChartType","getTableTitles","tableTitle","getTableContent","tableContent","section","currentContentWidget","AjfReportBuilderThemeColorDialog","firstElementChild","AjfReportBuilderThemeColor","setStyles","setChartStyle","setAlphaColor","lastComma","lastIndexOf","_colorsSub","alphaColor","AjfReportBuilderToolbarDialog","resetReport","AjfReportBuilderToolbar","JSONRequest","onAddClick","addClick","toJson","undoLastOperation","isZoomed","zoom","outputs","emptyContent","AjfReportBuilderWidgetToolbarButton","ajfReportBuilderWidgetToString","AjfReportBuilderWidgetsRowButtons","selectedWidget","isClicked","onFocus","direction","isColumn","isOneColumn","widgetReportBuilderIconName","ajfWidgetTypeToLabel","isOver","AjfReportBuilderWidgetsToolbar","chartTypes","widgetTypes","pos","AjfReportBuilder","_setCurrentReport","ngAfterContentInit","AjfReportBuilderModule","NgModule","imports","CommonModule","FormsModule","DragDropModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatDialogModule","MatGridListModule","MatIconModule","MatListModule","MatSelectModule","MatSidenavModule","MatSlideToggleModule","MatSliderModule","MatTabsModule","MatToolbarModule","MatTooltipModule","TranslateModule","ColorPickerModule","AjfCommonModule","AjfImageModule","AjfMapModule","AjfMonacoEditorModule","AjfTableModule","AjfTextModule","declarations","exports","entryComponents"],"mappings":";;;;;;;;;;;;;;;;;;;;;wxFA6BO,IAAIA,EAAW,WAQlB,OAPAA,EAAWC,OAAOC,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,IAE9E,OAAON,IAEKU,MAAMC,KAAMP,YCXnBQ,EAAqB,IAAIC,EAAtCA,eAAuE,sBCsBvEC,GAsNEA,EAAFP,UAAAQ,sBAAE,WACE,OAAOJ,KAAKK,mBAAmBC,gBAajCnB,OAAFoB,eAAMJ,EAANP,UAAA,WAAA,KAAE,WAAiC,OAAOI,KAAKQ,2CAqT7CL,EAAFP,UAAAa,YAAE,SAAYC,GACV,IAAK,IAAInB,EAAI,EAAGA,EAAImB,EAAMhB,OAAQH,IAAK,CAC3C,IAAYoB,EAAOD,EAAMnB,IACfoB,EAAKC,WAAaC,EAA5BA,YAAwCC,cAAgBH,EAAKC,WAAaC,EAA1EA,YAAsFE,UAC5EJ,EAAKC,WAAaC,EAA5BA,YAAwCG,mBAC7BL,EAAKC,WAAaC,EAA7BA,YAAyCI,UAC9B,EAAmBC,YAAcC,EAA5CA,aAAyDC,UACjDV,EAAMW,OAAO9B,EAAG,GAChBA,KAGJ,OAAOmB,GAGTP,EAAFP,UAAA0B,WAAE,SAAWC,EAAgBC,GACP,CAAC,mBAAoB,kBAAmB,SAChDC,QAAd,SAAuBC,GAEfH,EAAUG,KACuB,GAAjCF,EAAOG,QAAQJ,EAAUG,KAEzBF,EAAOI,KAAKL,EAAUG,OAK5BvB,EAAFP,UAAAiC,mBAAE,SAAmBC,GAEjB,IADJ,IAAQC,EAAgC,GAC3BxC,EAAI,EAAGA,EAAIuC,EAAMpC,OAAQH,IAChCwC,EAAUxC,GAAK,CAAEmB,MAAO,GAAIsB,OAAQ,GAAIC,MAAO,GAAIC,MAAO,IAEpC,MAAlBJ,EAAMvC,GAAGmB,OAAyC,EAAxBoB,EAAMvC,GAAGmB,MAAMhB,SAC3CqC,EAAUxC,GAAGmB,MAAQV,KAAKS,YAAY0B,EAA9CA,aAA2DL,EAAMvC,GAAGmB,SAE9DqB,EAAUxC,GAAGyC,OAAShC,KAAKoC,mBAAmBL,EAAUxC,GAAGmB,OAC3DqB,EAAUxC,GAAG0C,MAAQjC,KAAKqC,kBAAkBN,EAAUxC,GAAGmB,OACzDqB,EAAUxC,GAAG2C,MAAQlC,KAAKsC,kBAAkBP,EAAUxC,GAAGmB,OAG3D,OAAOqB,GAST5B,EAAFP,UAAAwC,mBAAE,SAAmB1B,GAEjB,IADJ,IAAQ6B,EAAgB,GACXhD,EAAI,EAAGA,EAAImB,EAAMhB,OAAQH,IAChCgD,EAAIX,KAAKlB,EAAMnB,GAAGiD,OAEpB,OAAOD,GAGTpC,EAAFP,UAAAyC,kBAAE,SAAkB3B,GAEhB,IADJ,IAAQ6B,EAAgB,GACXhD,EAAI,EAAGA,EAAImB,EAAMhB,OAAQH,IAChCgD,EAAIX,KAAKlB,EAAMnB,GAAGkD,MAEpB,OAAOF,GAETpC,EAAFP,UAAA0C,kBAAE,SAAkB5B,GAEhB,IADJ,IAAQ6B,EAAsB,GACjBhD,EAAI,EAAGA,EAAImB,EAAMhB,OAAQH,IAAK,CAC3C,IAAUI,EAAwBe,EAAMnB,GAClCgD,EAAIX,KAAKjC,EAAEuB,WAEb,OAAOqB,GAGTpC,EAAFP,UAAA8C,UAAE,SAAUC,GACR3C,KAAK4C,cAAcC,KAAKF,IAY1BxC,EAAFP,UAAAkD,QAAE,SAAQC,EAAeC,GACzB,IAAQzD,EAAIwD,EAAQE,KAAKC,IAAI,GAAIF,GAI7B,OAFAzD,EAAI0D,KAAKE,MAAM5D,IAEJ0D,KAAKC,IAAI,GAAIF,IAW1B7C,EAAFP,UAAAwD,SAAE,SAASL,GACP,MAAO,eAAeM,KAAKN,IAG7B5C,EAAFP,UAAA0D,cAAE,SAAcP,GAAd,IAAFQ,EAAAvD,KAMI,OALA+C,EAAMtB,QAAV,SAAmB+B,GACb,IAAKD,EAAKH,SAASI,GACjB,OAAO,KAGJ,GASTrE,OAAFoB,eAAMJ,EAANP,UAAA,YAAA,KAAE,WACE,OAAOI,KAAKyD,4CASdtE,OAAFoB,eAAMJ,EAANP,UAAA,SAAA,KAAE,WACE,OAAOI,KAAK0D,yCASdvE,OAAFoB,eAAMJ,EAANP,UAAA,YAAA,KAAE,WACE,OAAOI,KAAK2D,4CASdxD,EAAFP,UAAAgE,YAAE,WACE5D,KAAK6D,iBAAiBhB,MAAK,IAS7B1C,EAAFP,UAAAkE,aAAE,WACE9D,KAAK6D,iBAAiBhB,MAAK,IAS7B1D,OAAFoB,eAAMJ,EAANP,UAAA,cAAA,KAAE,WACE,OAAOI,KAAK+D,8CAQd5D,EAAFP,UAAAoE,UAAE,SAAUC,EAAeC,GACvBlE,KAAKmE,mBAAmBtB,KAAK,CAAEoB,MAAnCA,EAA0CC,MAA1CA,KAQE/D,EAAFP,UAAAwE,YAAE,WACEpE,KAAKqE,iBAAiBxB,MAAK,IAS7B1C,EAAFP,UAAA0E,UAAE,WACEtE,KAAKqE,iBAAiBxB,MAAK,IAU7B1C,EAAFP,UAAA2E,YAAE,WACEvE,KAAKwE,cAAc3B,MAAK,IAU1B1C,EAAFP,UAAA6E,UAAE,WACEzE,KAAKwE,cAAc3B,MAAK,IAS1B1C,EAAFP,UAAA8E,UAAE,WACE1E,KAAKmE,mBAAmBtB,KAAK,KAS/B1D,OAAFoB,eAAMJ,EAANP,UAAA,SAAA,KAAE,WACE,OAAOI,KAAK2E,QAAQrE,gDAStBH,EAAFP,UAAAgF,WAAE,WAC+B,MAAzB5E,KAAK6E,kBACP7E,KAAK6E,iBAAiBC,QAI1B3E,EAAFP,UAAAmF,iBAAE,SAAiBC,GACfhF,KAAKiF,qBAAqBpC,KAA9B,SAAoCqC,GAC9B,GAAc,MAAVA,EACF,OAAOA,EAEf,IAAYC,EAAZ,EAGM,OAFAA,EAAEC,KAAOJ,EACTG,EAAEE,KAAOL,EACFG,KAIXhF,EAAFP,UAAA0F,kBAAE,SAAkBC,EAAqBC,GACrC,GAA+B,MAA3BxF,KAAKK,mBAA4B,CACzC,IAAYkC,EAAM,CACVyC,QAAWO,EACXC,UAAaA,GAEfxF,KAAKK,mBAAmByE,KAAKvC,KAIjCpC,EAAFP,UAAA6F,gBAAE,SAAgBC,GACd1F,KAAK2F,cAAc9C,KAAK6C,IAI1BvF,EAAFP,UAAAgG,cAAE,SAAcC,GAChB,IAAQC,EAAe9F,KAAK+F,WAAWC,YAEC,IAAhCF,EAAanE,QAAQkE,IAAgBA,IAAS7F,KAAKiG,kBACrDH,EAAalE,KAAKiE,GAGpB7F,KAAK+F,WAAWlD,KAAKiD,IAGvB3F,EAAFP,UAAAsG,aAAE,WACF,IAIQJ,EAAe9F,KAAK+F,WAAWC,WAInC,OAHAF,EAAaK,MACbnG,KAAKiG,iBAAmBH,EAAaK,MAEjCL,EAAapG,QAAU,GACzBM,KAAKiG,iBAAmB,GACxBjG,KAAK+F,WAAWlD,KAAK,IACrB7C,KAAKoG,oBAAoB,MACzBpG,KAAKyF,iBAAgB,GAXrB,+HAcFzF,KAAK+F,WAAWlD,KAAKiD,GAEd9F,KAAKiG,mBAWd9G,OAAFoB,eAAMJ,EAANP,UAAA,qBAAA,KAAE,WACE,OAAOI,KAAKqG,2DASdlH,OAAFoB,eAAMJ,EAANP,UAAA,gBAAA,KAAE,WACE,OAAOI,KAAKsG,gDASdnH,OAAFoB,eAAMJ,EAANP,UAAA,gBAAA,KAAE,WACE,OAAOI,KAAKuG,gDASdpH,OAAFoB,eAAMJ,EAANP,UAAA,eAAA,KAAE,WACE,OAAOI,KAAKwG,+CASdrH,OAAFoB,eAAMJ,EAANP,UAAA,iBAAA,KAAE,WACE,OAAOI,KAAKyG,iDASdtH,OAAFoB,eAAMJ,EAANP,UAAA,gBAAA,KAAE,WACE,OAAOI,KAAK0G,gDASdvH,OAAFoB,eAAMJ,EAANP,UAAA,gBAAA,KAAE,WACE,OAAOI,KAAK2G,gDASdxH,OAAFoB,eAAMJ,EAANP,UAAA,eAAA,KAAE,WACE,OAAOI,KAAK4G,+CASdzH,OAAFoB,eAAMJ,EAANP,UAAA,SAAA,KAAE,WACE,OAAOI,KAAK6G,wCAGd1H,OAAFoB,eAAMJ,EAANP,UAAA,eAAA,KAAE,WACE,OAA4BI,KAAhC,+CAUEG,EAAFP,UAAAkH,mBAAE,SAAmBC,EAAcC,GAC/B,GAAc,WAATD,GAAgC,YAATA,GAAiC,WAATA,EAClD,MAAM,IAAIE,MAAM,gBAAkBF,GAEpC/G,KAAKkH,SAASH,GAAMlE,KAAxB,SAA8BsE,GACxB,OAAOH,KAUX7H,OAAFoB,eAAMJ,EAANP,UAAA,iBAAA,KAAE,WACE,OAAOI,KAAKoH,iDAGdjI,OAAFoB,eAAMJ,EAANP,UAAA,iBAAA,KAAE,WACE,OAAOI,KAAKqH,iDAQdlI,OAAFoB,eAAMJ,EAANP,UAAA,gBAAA,KAAE,WACE,OAAOI,KAAKsH,gDAUdnH,EAAFP,UAAAwG,oBAAE,SAAoBY,GAApB,IAAFzD,EAAAvD,KACIA,KAAKiF,qBAAqBpC,KAA9B,SAAoC0E,GAE9B,OADAhE,EAAKsB,iBAAiBC,OACfkC,KAUX7H,OAAFoB,eAAMJ,EAANP,UAAA,gBAAA,KAAE,WACE,OAAOI,KAAKwH,YAAYlH,gDAS1BnB,OAAFoB,eAAMJ,EAANP,UAAA,cAAA,KAAE,WACE,OAAOI,KAAKyH,8CAUdtI,OAAFoB,eAAMJ,EAANP,UAAA,eAAA,KAAE,WACE,OAAOI,KAAK0H,+CASdvI,OAAFoB,eAAMJ,EAANP,UAAA,cAAA,KAAE,WACE,OAAOI,KAAK2H,8CASdxI,OAAFoB,eAAMJ,EAANP,UAAA,SAAA,KAAE,WACE,OAAOI,KAAK4H,yCA2BdzH,EAAFP,UAAAiI,mBAAE,SAAmBC,EAAkBC,GAArC,IAAFxE,EAAAvD,KACIA,KAAKiF,qBAAqBpC,KAA9B,SAAoCqC,GAC9B,GAAc,MAAVA,EACF,OAAOA,EAEf,IAAU8C,EAAV,EAEUC,EAAOD,EAAME,QAAQxI,OAErByI,EAAc,EACdC,EAAS,EACTC,EAAM,EACNC,GAAiB,EAEjBC,GAAM,EACNC,GAAkB,EAElBC,EAAM,IAAIC,OAAO,sBACjBC,EAAM,IAAID,OAAO,iBACjBE,EAAM,IAAIF,OAAO,SAEjBG,EAAWb,EAAME,QAAQH,GAI7B,GAFAD,EAAWgB,OAAOvF,EAAKT,QAAQgF,EAAU,GAAGiB,QAAQ,IAE1B,MAAtBf,EAAME,QAAQH,GAChB,MAAM,IAAId,MAAM,iBAGlB,IAAK,IAAI+B,EAAI,EAAGA,EAAIf,EAAMe,KACE,IAAtBhB,EAAME,QAAQc,IAChBZ,IAcJ,IAViB,GAAbS,GACFA,EAAW,GACXT,IACAN,EAAWgB,OAAOvF,EAAKT,QAAQ,GAAKmF,EAAOG,GAAS,GAAGW,QAAQ,IAC/Df,EAAME,QAAQH,GAAO,IACZc,EAAW,KACpBA,EAAW,KAIK,IAAdf,EAAiB,CAEnB,GAA6B,IAAzBE,EAAME,QAAQxI,OAEhB,OADAsI,EAAME,QAAQ,GAAK,EACZF,EAST,GANIF,EAAW,GACbA,EAAW,GACqC,EAAvCA,EAAW,IAAOG,EAAOG,EAAS,KAC3CN,EAAW,EAAK,IAAOG,EAAOG,EAAS,IAGpCS,IAAaf,GAA2B,KAAbe,EAE9B,OADAb,EAAME,QAAQH,GAAOD,EACdE,EAKPG,EAFaL,EAAXe,GACFN,GAAM,GACSM,EAAWf,IAAaG,EAAOG,EAAS,KAEvDG,GAAM,GACST,EAAWe,IAAaZ,EAAOG,EAAS,KAGzDD,EAAcW,OAAOvF,EAAKT,QAAQqF,EAAa,GAAGY,QAAQ,KAExC,MAChBZ,EAAc,SAIhBH,EAAME,QAAQH,IAAQ,EACtBK,IACAG,GAAM,EAEJJ,EAD0B,GAAxBH,EAAME,QAAQxI,OACF,EAEA,GAAcuI,EAAOG,GAIvC,IAAK,IAAI7I,EAAI,EAAGA,EAAI0I,EAAM1I,KACE,IAAtByI,EAAME,QAAQ3I,KAEXA,GAAKwI,EACRC,EAAME,QAAQH,GAAOD,GAGjBS,GACFP,EAAME,QAAQ3I,IAAM4I,EACI,GAAnBH,EAAME,QAAQ3I,IAAcyI,EAAME,QAAQxI,OAAS0I,GAAU,IAChEJ,EAAME,QAAQ3I,GAAK,MAIrByI,EAAME,QAAQ3I,IAAM4I,EAChBH,EAAME,QAAQ3I,GAAK,KACrByI,EAAME,QAAQ3I,GAAK,KAIvByI,EAAME,QAAQ3I,GAAKuJ,OAAOvF,EAAKT,QAAQkF,EAAME,QAAQ3I,GAAI,GAAGwJ,QAAQ,IACpEV,GAAOL,EAAME,QAAQ3I,IAGvB8I,EAAMS,OAAOvF,EAAKT,QAAQuF,EAAK,GAAGU,QAAQ,IAEnB,GAAnBP,IACFF,EAAgB/I,EAChBiJ,GAAkB,IAexB,KAVkB,IAAdV,GACFE,EAAME,QAAQH,IAAQ,EAClBS,IACFR,EAAME,QAAQI,IAAkBQ,OAAOvF,EAAKT,QAAQ,EAAIuF,EAAK,GAAGU,QAAQ,MAG1Ef,EAAME,QAAQH,GAAOe,OAAOvF,EAAKT,QAAQ,EAAIuF,EAAK,GAAGU,QAAQ,IAItDC,EAAI,EAAGA,EAAIhB,EAAME,QAAQxI,OAAQsJ,KAEhB,IAAtBhB,EAAME,QAAQc,IACbP,EAAIpF,KAAKjC,OAAO4G,EAAME,QAAQc,MAC9BL,EAAItF,KAAKjC,OAAO4G,EAAME,QAAQc,MAC9BJ,EAAIvF,KAAKjC,OAAO4G,EAAME,QAAQc,MAE/BzF,EAAKsE,mBAAmB,GAAMmB,GAKlC,OAFAzF,EAAK8C,0BAA0BvB,OAC/BvB,EAAKsB,iBAAiBC,OACfkD,KAWX7H,EAAFP,UAAAqJ,YAAE,SAAYC,GACVlJ,KAAKiF,qBAAqBpC,KAA9B,SAAoCqC,GAC9B,GAAc,MAAVA,EACF,OAAO,KAEf,IAAY8C,EAAZ,EAEM,OADAA,EAAMmB,IAAMC,EAAlBA,cAAgC,CAACpE,QAAS,IAAIkE,EAA9C,MACalB,KAIX7H,EAAFP,UAAAyJ,QAAE,SAAQhE,GACNrF,KAAKiF,qBAAqBpC,KAA9B,SAAoCqC,GAC9B,GAAc,MAAVA,EACF,OAAO,KAEf,IAAY8C,EAAZ,EAEM,OADAA,EAAM3C,KAAO+D,EAAnBA,cAAiC,CAACpE,QAAS,IAAIK,EAA/C,MACa2C,KAIX7H,EAAFP,UAAA0J,QAAE,SAAQvG,GACN/C,KAAKiF,qBAAqBpC,KAA9B,SAAoCqC,GAC9B,GAAc,MAAVA,EACF,OAAO,KAEf,IAAY8C,EAAZ,EAEM,OADAA,EAAM5C,KAAOgE,EAAnBA,cAAiC,CAACpE,QAAS,IAAIjC,EAA/C,MACaiF,KAIX7H,EAAFP,UAAA2J,cAAE,SAAcC,GACZxJ,KAAKiF,qBAAqBpC,KAA9B,SAAoCqC,GAC9B,OAAc,MAAVA,EACK,MAEgB,MAArBA,EAAOuE,aACTvE,EAAOuE,WAAWC,UAAYF,GAEzBtE,MAIX/E,EAAFP,UAAA+J,iBAAE,SACEC,EACAC,EACAC,EACAC,EACAC,EACAC,GACAjK,KAAKiF,qBAAqBpC,KAA9B,SAAoCsC,GAC9B,GAAS,MAALA,EACF,OAAO,KAEf,IAAYD,EAAZ,EACM,GAAc,MAAVA,GAAoC,MAAlBA,EAAOgF,QAAiB,CACpD,IAAYlF,EAAsBoE,EAAlCA,cAAgD,IACpCe,EAA8BC,EAA1CA,kBAA4D,IAGpDpF,EAAQA,QAAUgF,EAClBG,EAAYA,YAAcF,EA4B5B,OAAO/E,KAIX/E,EAAFP,UAAAyK,iBAAE,SACET,EACAK,EACAD,EACAF,EACAC,GACA/J,KAAKiF,qBAAqBpC,KAA9B,SAAoCsC,GAC9B,GAAS,MAALA,EACF,OAAO,KAEf,IAAYD,EAAZ,EACM,GAAsB,MAAlBA,EAAOgF,QAAiB,CAClC,IAAYlF,EAAsBoE,EAAlCA,cAAgD,IACpCe,EAA8BC,EAA1CA,kBAA4D,IAKpDpF,EAAQA,QAAUgF,EAClBG,EAAYA,YAAcF,EAoB5B,OAAO/E,KAIX/E,EAAFP,UAAA0K,oBAAE,SAAoBpG,GAClBlE,KAAKuK,sCAAsC,UAAWrG,IAGxD/D,EAAFP,UAAA4K,WAAE,SAAWV,EAAoBC,GAC7B/J,KAAKiF,qBAAqBpC,KAA9B,SAAoCqC,GAS9B,OARN,KAmBE/E,EAAFP,UAAA6K,aAAE,SAAa1D,GACX/G,KAAK0K,0BAA0B,OAAQ3D,IAUzC5G,EAAFP,UAAA+K,eAAE,SAAeC,GACb5K,KAAKiF,qBAAqBpC,KAA9B,SAAoCqC,GAI9B,OAHN,KAOE/E,EAAFP,UAAAiL,kBAAE,SAAkBC,EAAkBF,GAClC5K,KAAKiF,qBAAqBpC,KAA9B,SAAoCqC,GAQ9B,OAPN,KAmBE/E,EAAFP,UAAAmL,wBAAE,SAAwBvJ,GACtBxB,KAAK0K,0BAA0B,kBAAmBlJ,IAGpDrB,EAAFP,UAAAoL,wBAAE,SAAwBC,GACtBjL,KAAKkL,iCAAiC,kBAAmBD,IAG3D9K,EAAFP,UAAAuL,2BAAE,SAA2BpD,GACzB/H,KAAKuK,sCAAsC,kBAAmBxC,IAUhE5H,EAAFP,UAAAwL,oBAAE,SAAoB5J,GAClBxB,KAAK0K,0BAA0B,cAAelJ,IAGhDrB,EAAFP,UAAAyL,oBAAE,SAAoBtI,GAClB/C,KAAK0K,0BAA0B,cAAe3H,IAGhD5C,EAAFP,UAAA0L,oBAAE,SAAoBL,GAClBjL,KAAKkL,iCAAiC,cAAeD,IAGvD9K,EAAFP,UAAA2L,uBAAE,SAAuBxD,GACrB/H,KAAKuK,sCAAsC,cAAexC,IAU5D5H,EAAFP,UAAA4L,UAAE,SAAUC,GACRzL,KAAK2E,QAAQ9B,KAAK4I,IAUpBtL,EAAFP,UAAA8L,cAAE,SAAc7F,GACZ7F,KAAKwH,YAAY3E,KAAKgD,IAcxB1F,EAAFP,UAAA+L,gBAAE,SAAgBnJ,EAAeO,GAA/B,IAAFQ,EAAAvD,KACIA,KAAKiF,qBAAqBpC,KAA9B,SAAoCqC,GACpC,IAAU8C,EAAV,EAKY4D,GAAuC,EAH5B,CACf,YAAa,SAAU,QAAS,eAAgB,gBAAiB,UAAW,UAEnDjK,QAAQa,GASnC,OARIoJ,GAAe7I,aAAiB8I,QAAUtI,EAAKH,SAASL,GAEjD6I,GAAa7I,aAAiB8I,OAAStI,EAAKD,cAAcP,KACnEA,EAAWA,EAAM+I,KAAK,OAA9B,MAFQ/I,GAAS,KAKXiF,EAAM+D,OAAOvJ,GAASO,EAEfiF,KAaX7H,EAAFP,UAAAoM,iBAAE,SAAiBrJ,EAAgBH,EAAeO,GAC9C,GAAgB,WAAXJ,GAAoC,YAAXA,GAAqC,WAAXA,EACtD,MAAM,IAAIsE,MAAM,kBAAoBtE,GAGtC3C,KAAKkH,SAASvE,GAAQE,KAA1B,SAAgCqC,GAK1B,OAJAA,EAAO6G,OAAOvJ,GAASO,EAEvBmC,EAAO6G,OAAbE,EAAA,GAAqC/G,EAAO6G,QAE/B7G,KAYX/E,EAAFP,UAAAsM,gBAAE,SAAgB1J,EAAeO,GAC7B/C,KAAKmM,oBAAoBtJ,KAA7B,SAAmCkJ,GAO7B,OALEA,EADY,MAAVA,EACO,IAETA,EAAOvJ,GAASO,EACxBkJ,EAAA,GAAgCF,OAa9B5L,EAAFP,UAAAwM,eAAE,SAAetK,GACb9B,KAAKqM,mBAAmBxJ,KAA5B,SAAkCyJ,GAC5B,OAAOxK,GAAS,MAYpB3B,EAAFP,UAAA2M,iBAAE,SAAiBrH,EAAyBsH,GACxCxM,KAAKyM,qBAAqB5J,KAA9B,SAAoC6J,GAO9B,OANAA,EAAgBA,GAAiB,GACjB,MAAZF,GAAgC,GAAZA,EACtBE,EAAcrL,OAAOmL,EAAU,EAAGtH,GAElCwH,EAAc9K,KAAKsD,GAEdwH,KAYXvM,EAAFP,UAAA+M,mBAAE,WACE3M,KAAKyM,qBAAqB5J,KAA9B,SAAoC6J,GAE9B,OADAA,EAAchN,OAAS,EAChBgN,KAYXvM,EAAFP,UAAAgN,wBAAE,SAAwBpK,EAAegK,GACrCxM,KAAKyM,qBAAqB5J,KAA9B,SAAoC6J,GAE9B,OADAA,EAAcF,GAAUzF,KAAOvE,EACxBkK,KAYXvM,EAAFP,UAAAiN,gBAAE,SAAgB3H,EAAmBsH,GACjCxM,KAAK8M,sBAAsB9M,KAAK+M,qBAAsB7H,EAAQsH,IAWhErM,EAAFP,UAAAoN,iBAAE,SAAiB9H,EAAmBsH,GAClCxM,KAAK8M,sBAAsB9M,KAAKiN,sBAAuB/H,EAAQsH,IAWjErM,EAAFP,UAAAsN,gBAAE,SAAgBhI,EAAmBsH,GACjCxM,KAAK8M,sBAAsB9M,KAAKmN,qBAAsBjI,EAAQsH,IAGhErM,EAAFP,UAAAwN,cAAE,SAAcrF,GAAd,IAAFxE,EAAAvD,KACIA,KAAKiF,qBAAqBpC,KAA9B,SAAoCqC,GAC9B,GAAc,MAAVA,EACF,OAAOA,EAUT,IARN,IAIUnC,EACAoF,EALAH,EAAV,EACUqF,EAAMrF,EAAME,QAAQxI,OACpB4N,EAAW,EACXlF,EAAS,EAKJY,EAFThB,EAAME,QAAQH,GAAO,EAELiB,EAAIqE,EAAKrE,KACG,IAAtBhB,EAAME,QAAQc,IAChBZ,IAIJrF,EAAQ+F,OAAOvF,EAAKT,QAAQ,GAAKuK,EAAMjF,GAAS,GAAGW,QAAQ,IAE3D,IAAK,IAAIxJ,EAAI,EAAGA,EAAI8N,EAAK9N,KACI,IAAvByI,EAAME,QAAQ3I,KAChByI,EAAME,QAAQ3I,GAAKwD,EACnBuK,EAAWxE,OAAOvF,EAAKT,QAAQwK,EAAWvK,EAAO,GAAGgG,QAAQ,KAehE,OATe,GAFfuE,EAAWxE,OAAOvF,EAAKT,QAAQwK,EAAU,GAAGvE,QAAQ,MAGlDZ,EAAcoF,WAAWhK,EAAKT,SAAUwK,EAAW,GAAK,EAAI,GAAGvE,QAAQ,IACvEf,EAAME,QAAQH,IAAQI,EACtBH,EAAME,QAAQH,GAAOxE,EAAKT,QAAQkF,EAAME,QAAQH,GAAM,IAC7CuF,EAAW,IACpBtF,EAAME,QAAQH,IAAS,EAAKuF,EAAW,EACvCtF,EAAME,QAAQH,GAAOe,OAAOvF,EAAKT,QAAQkF,EAAME,QAAQH,GAAM,GAAGgB,QAAQ,KAGnEf,KAYX7H,EAAFP,UAAA4N,UAAE,WAAA,IAAFjK,EAAAvD,KACIA,KAAKiF,qBAAqBpC,KAA9B,SAAoCqC,GAC9B,GAAc,MAAVA,EACF,OAAO,KAEf,IAKUnC,EACA0K,EANAzF,EAAV,EACU0F,EAAoB,GACpBL,EAAMrF,EAAME,QAAQxI,OAAS,EAC7B4N,EAAW,EACXlF,EAAS,EAIb,GAAU,GAANiF,EACF,MAAM,IAAIpG,MAAM,sBAGlB,IAAK,IAAI+B,EAAI,EAAGA,EAAIqE,EAAKrE,KACG,IAAtBhB,EAAME,QAAQc,IAChBZ,IAGJrF,EAAQ+F,OAAOvF,EAAKT,QAAQ,GAAKuK,EAAMjF,GAAS,GAAGW,QAAQ,IAE3D,IAAK,IAAIxJ,EAAI,EAAGA,EAAI8N,EAAK9N,KACG,IAAtByI,EAAME,QAAQ3I,GAChBmO,EAAQ9L,MAAM,IAEd8L,EAAQ9L,KAAKmB,GACbuK,EAAWxE,OAAOvF,EAAKT,QAAQwK,EAAWvK,EAAO,GAAGgG,QAAQ,KAKjD,GAFfuE,EAAWxE,OAAOvF,EAAKT,QAAQwK,EAAU,GAAGvE,QAAQ,MAGlD0E,EACEF,WACEhK,EAAKT,SACDwK,EAAW,GAAK,EAAI,GACtBvE,QAAQ,IACd2E,EAAQ,IAAMD,EACdC,EAAQ,GAAKnK,EAAKT,QAAQ4K,EAAQ,GAAI,IAC7BJ,EAAW,IACpBI,EAAQ,IAAO,EAAKJ,EAAW,EAC/BI,EAAQ,GAAK5E,OAAOvF,EAAKT,QAAQ4K,EAAQ,GAAI,GAAG3E,QAAQ,KAG1Df,EAAME,QAAUwF,EAGtB,IAAYC,EAAYC,EAAxBA,aAAqC,CAC7BC,WAAY,IAMd,OAFA7F,EAAM8F,QAAQlM,KAAK+L,GACnBpK,EAAKsB,iBAAiBC,OACfkD,KAIX7H,EAAFP,UAAAmO,qBAAE,SAAqBC,EAAyB9J,GAC5C8J,EAAOF,QAAQzM,OAAO6C,EAAO,IAqB/B/D,EAAFP,UAAAqO,OAAE,SAAOtN,EAAcoH,GAArB,IAAFxE,EAAAvD,KAEI,OAAQW,GACN,IAAK,SACL,IAAK,UACL,IAAK,SACHX,KAAKkH,SAASvG,GAAMkC,KAA5B,SAAkCqL,GACxB,GAA+B,IAA3BA,EAAQA,QAAQxO,OAClB,MAAM,IAAIuH,MAAM,uCAElB,GAA4B,MAAxBiH,EAAQA,QAAQnG,GAClB,MAAM,IAAId,MAAM,iBAIlB,OAFAiH,EAAQA,QAAQ7M,OAAO0G,EAAK,GAC5BxE,EAAK6C,oBAAoB,MAClB8H,IAET,MACF,IAAK,SACHlO,KAAKiF,qBAAqBpC,KAAlC,SAAwCqC,GAC9B,GAAc,MAAVA,EACF,OAAO,KAEnB,IAAgB8C,EAAhB,EAEU,GAA6B,IAAzBA,EAAME,QAAQxI,OAEhB,OADCsI,EAAM8F,QAAQ,GAAuBA,QAAQpO,OAAS,EAChDsI,EAGT,GAA0B,MAAtBA,EAAME,QAAQH,GAChB,MAAM,IAAId,MAAM,6BAE5B,IAAgBkH,EAASnG,EAAME,QAAQH,IAAQC,EAAME,QAAQxI,OAAS,GAE/B,EAAvBsI,EAAME,QAAQxI,SAChBsI,EAAME,QAAQ7G,OAAO0G,EAAK,GAC1BC,EAAM8F,QAAQzM,OAAO0G,EAAK,IAG5B,IAAK,IAAIxI,EAAI,EAAGA,EAAIyI,EAAME,QAAQxI,OAAQH,IACxCyI,EAAME,QAAQ3I,IAAM4O,EAIxB,OAFE5K,EAAKsE,mBAAmBG,EAAME,QAAQ,GAAI,GAErCF,IAET,MACF,IAAK,SACL,IAAK,gBACL,IAAK,gBACHhI,KAAKiF,qBAAqBpC,KAAlC,SAAwCqC,GAC9B,GAAc,MAAVA,EACF,OAAO,KAEnB,IAAc8C,EAAd,EAEU,GAAa,WAATrH,EACd,EACgBmN,QAAQzM,OAAO0G,EAAK,QACnB,GAAa,kBAATpH,EAA0B,CACnC,GAA6B,IAAzBqH,EAAME,QAAQxI,OAChB,MAAM,IAAIuH,MAAM,0BAElB,GAA6B,IAAzBe,EAAM8F,QAAQpO,OAChB,MAAM,IAAIuH,MAAM,gDAElB,GAA0B,MAAtBe,EAAME,QAAQH,IAAsC,MAAtBC,EAAM8F,QAAQ/F,GAC9C,MAAM,IAAId,MAAM,kCAEb,GAAa,kBAATtG,EAA0B,CACnC,IAA4B,IAAxBqH,EAAME,QAAQH,GAChB,MAAM,IAAId,MAAM,sCAElB1D,EAAK6J,cAAcrF,GAarB,OAAOC,IAET,MACF,IAAK,gBAEHhI,KAAKkH,SAASvG,GAAMkC,KAA5B,SAAkCqL,GACxB,GAAuB,IAAnBA,EAAQxO,OACV,MAAM,IAAIuH,MAAM,uCAElB,GAAoB,MAAhBiH,EAAQnG,GACV,MAAM,IAAId,MAAM,iBAGlB,OADAiH,EAAQ7M,OAAO0G,EAAK,GACbmG,IAGT,MACF,QAAS,MAAM,IAAIjH,MAAM,gBAAkBtG,KAY/CR,EAAFP,UAAAwO,aAAE,SAAapH,EAAsBe,GACjC/H,KAAKiF,qBAAqBpC,KAA9B,SAAoCqC,GAC9B,GAAc,MAAVA,EACF,OAAO,KAEf,IAAU8C,EAAV,EAMM,OAJ0B,MAAtBA,EAAM8F,QAAQ/F,IAChBC,EAAM8F,QAAQzM,OAAO0G,EAAK,GAE5BC,EAAM8F,QAAQzM,OAAO0G,EAAK,EAAGf,GACtBgB,KAIX7H,EAAFP,UAAAyO,YAAE,SAAYC,EAAYC,EAA2B/B,GACjD,GAAI8B,EAAME,UAAyC,MAA7BF,EAAME,SAASC,WAAoB,CAC7D,IAAUA,EAA8BH,EAAME,SAASC,WAC7CvJ,EAAoBoJ,EAAME,SAAStJ,OACnCwJ,EAAoBJ,EAAME,SAASE,UAEvCD,EAAWX,QAAQzM,OAAOqN,EAAW,GACrCH,EAAST,QAAQlM,KAAKsD,QAEjB,GAAIoJ,EAAME,UAAYF,EAAME,SAASG,UAC1C3O,KAAKiO,OAAOK,EAAME,SAASG,UAAWL,EAAME,SAASE,WACrDH,EAAST,QAAQlM,KAAK0M,EAAME,SAAStJ,aAChC,GAAIoJ,EAAME,UAAYF,EAAME,SAAS3I,KAAM,CACtD,IAAUtD,EAAMqM,KAAKC,MAAMP,EAAME,SAAS3I,MAChCmB,EAAY8H,EAAtBA,SAA+BvM,GAET,MAAZiK,EACF+B,EAAST,QAAQzM,OAAOmL,EAAU,EAAGxF,GAErCuH,EAAST,QAAQlM,KAAKoF,QAGpBzE,EAAM,CAACsL,WAAckB,EAA/BA,cAA6CT,EAAME,WACzCxH,EAAY8H,EAAtBA,SAA+BvM,GAET,MAAZiK,EACF+B,EAAST,QAAQzM,OAAOmL,EAAU,EAAGxF,GAErCuH,EAAST,QAAQlM,KAAKoF,IAI5B7G,EAAFP,UAAAoP,uBAAE,SAAuBV,EAAYC,EAA2BU,GAChE,IAAQR,EAA8BH,EAAME,SAASC,WAC7CC,EAAoBJ,EAAME,SAASE,UACnCQ,EAAwBT,EAAWX,QAAQY,GAC3CS,EAAsBV,EAAWX,QAAQmB,GAEzCR,GAAcF,GAChBE,EAAWX,QAAQY,GAAaS,EAChCV,EAAWX,QAAQmB,GAAWC,IAE9BT,EAAWX,QAAQzM,OAAOqN,EAAW,GACrCH,EAAST,QAAQzM,OAAO4N,EAAS,EAAGC,KAYxC/O,EAAFP,UAAAwP,YAAE,SAAYrH,GACV/H,KAAK6H,oBAAoB,EAAGE,IAG9B5H,EAAFP,UAAAyP,aAAE,SAAaC,EAAcC,EAAYC,GACrC,KAAID,EAAK,GAAKA,GAAMC,EAAa1B,QAAQpO,QAGrC4P,EAAOE,EAAa1B,QAAQpO,OAAS,GAAU4P,EAALC,GAA9C,CAIJ,IAAQd,EAA+Ce,EAAa1B,QAAQwB,GACpEG,EAA0BD,EAAatH,QAAQoH,GAC/Cf,EAA6CiB,EAAa1B,QAAQyB,GAClEG,EAAwBF,EAAatH,QAAQqH,GAEjDC,EAAa1B,QAAQwB,GAAQf,EAC7BiB,EAAatH,QAAQoH,GAAQI,EAC7BF,EAAa1B,QAAQyB,GAAMd,EAC3Be,EAAatH,QAAQqH,GAAME,EAE3BzP,KAAKoG,oBAAoBoJ,KAG3BrP,EAAFP,UAAA+P,eAAE,SAAe1E,GAEbjL,KAAKkH,SAAgB,MAAErE,KAA3B,SAAiCrB,GAK3B,OAHIA,EAAOG,QAAQsJ,GAAS,GAC1BzJ,EAAOI,KAAKqJ,GAEPzJ,KAIHrB,EAAVP,UAAAkN,sBAAE,SACI8C,EAAoC1K,EAAmBsH,GACzDoD,EAAK/M,KAAT,SAAeqL,GAMT,OALgB,MAAZ1B,GAAgC,GAAZA,EACtB0B,EAAQA,QAAQ7M,OAAOmL,EAAU,EAAGtH,GAEpCgJ,EAAQA,QAAQtM,KAAKsD,GAEhBgJ,IAETlO,KAAKoG,oBAAoBlB,GACzBlF,KAAKyF,iBAAgB,IAGftF,EAAVP,UAAA8K,0BAAE,SAAkCmF,EAAkB9M,GAClD/C,KAAKiF,qBAAqBpC,KAA9B,SAAoCqC,GAC9B,OAAc,MAAVA,EACK,MAET,EAAgB2K,GAAY9M,EACrBmC,MAIH/E,EAAVP,UAAAsL,iCAAE,SAAyC2E,EAAkB9M,GACzD/C,KAAKiF,qBAAqBpC,KAA9B,SAAoCqC,GAC9B,GAAc,MAAVA,EACF,OAAO,KAEf,IAAY4K,EAAmB,EAAgBD,GAGzC,OAFAC,EAAIlO,KAAKmB,GACT,EAAgB8M,GAAYC,EACrB5K,KAIH/E,EAAVP,UAAA2K,sCAAE,SAA8CsF,EAAkB9H,GAC9D/H,KAAKiF,qBAAqBpC,KAA9B,SAAoCqC,GAE9B,OADa,EAAgB2K,GAAWxO,OAAO0G,EAAK,GAC7C7C,mBA1gEb,CAAA6B,KAACgJ,EAADA,gDA4OA,CAAAhJ,UAAAiJ,EAAAC,WAAA,CAAA,CAAAlJ,KAAKmJ,EAALA,UAAA,CAAAnJ,KAAiBoJ,EAAjBA,OAAAC,KAAA,CAAwBnQ,QAiyDxBE,GAlyDE,SAAFA,EAC4CkQ,GAD1C,IAAF9M,EAAAvD,KAlOUA,KAAVyM,qBACM,IAAI6D,EADVA,QASUtQ,KAAV4C,cAA2C,IAAI0N,EAA/CA,QAQUtQ,KAAVuQ,mBAAmD,IAAID,EAAvDA,QAEUtQ,KAAV+F,WACE,IAAIyK,EADNA,gBACgC,IAItBxQ,KAAV2F,cACE,IAAI6K,EADNA,iBAC+B,GAQrBxQ,KAAVqE,iBAA+C,IAAIiM,EAAnDA,QAIUtQ,KAAVwE,cAA4C,IAAI8L,EAAhDA,QASUtQ,KAAV6D,iBAA+C,IAAIyM,EAAnDA,QASUtQ,KAAVmE,mBAA6C,IAAImM,EAAjDA,QAQUtQ,KAAV+M,qBAA+D,IAAIuD,EAAnEA,QAeUtQ,KAAViN,sBAAgE,IAAIqD,EAApEA,QAeUtQ,KAAVmN,qBAA+D,IAAImD,EAAnEA,QAIUtQ,KAAVyQ,aAAqD,IAAIH,EAAzDA,QACUtQ,KAAV0Q,cACE,CACE,mBAAoB,wBAAyB,uBAAwB,uBACrE,uBAAwB,yBAA0B,uBAAwB,qBAC1E,uBAAwB,uBAAwB,qBAAsB,uBACtE,wBAAyB,yBAA0B,yBACnD,yBAA0B,yBAA0B,yBACpD,yBAA0B,yBAA0B,yBACpD,yBAA0B,yBAA0B,yBACpD,yBAA0B,yBAA0B,yBACpD,yBAA0B,qBAAsB,uBAChD,uBAAwB,oBAAqB,sBAC7C,wBAAyB,sBAAuB,oBAAqB,sBACrE,uBAAwB,oBAAqB,sBAAuB,wBAiB9D1Q,KAAViF,qBACM,IAAIuL,EADVA,gBACmD,MASzCxQ,KAAV2Q,sBACM,IAAIH,EADVA,gBAC0D,MAQhDxQ,KAAV4Q,sBACM,IAAIJ,EADVA,gBAC0D,MAOhDxQ,KAAVwH,YACE,IAAIgJ,EADNA,gBAC2B,MAOjBxQ,KAAV2E,QACI,IAAI6L,EADRA,gBAC0C,MAQhCxQ,KAAVmM,oBAA6D,IAAImE,EAAjEA,QAQUtQ,KAAVqM,mBACM,IAAIiE,EADVA,QAQUtQ,KAAVkH,SAA0B,CACtB2J,OAAQ7Q,KAAK+M,qBACbe,QAAS9N,KAAKiN,sBACd6D,OAAQ9Q,KAAKmN,qBACblC,MAAOjL,KAAKyQ,aACZ/D,cAAe1M,KAAKyM,sBAQdzM,KAAV6E,iBAAiD,IAAIkM,EAArDA,aAEU/Q,KAAVK,mBAAkD,IAAI0Q,EAAtDA,aAWE/Q,KAAFqG,0BAAkD,IAAI0K,EAAtDA,aAEU/Q,KAAVQ,UAAsC,CAClCwQ,WAAY,IAaZhR,KAAKiG,iBAAmB,GAEH,MAAjBoK,GACyB,MAAvBA,EAAcY,QAChBjR,KAAKQ,UAAbyL,EAAA,GAA6BjM,KAAKQ,UAAc6P,EAAcY,QAI1DjR,KAAK4H,QAA+B5H,KAAxC,cAA4DkR,KACtDC,EADNA,UACgB,UACVC,EAFNA,SAKIpR,KAAKyH,aAAuCzH,KAAhD,mBAAyEkR,KACnEE,EADNA,SAIIpR,KAAKyD,WAAmCzD,KAA5C,iBAAmEkR,KAC7DC,EADNA,WACgB,GACVC,EAFNA,SAKIpR,KAAK0D,QAAgC1D,KAAzC,cAA6DkR,KACvDC,EADNA,WACgB,GACVC,EAFNA,SAKIpR,KAAK2D,WAAmC3D,KAA5C,iBAAmEkR,KAC7DC,EADNA,WACgB,GACVC,EAFNA,SAKIpR,KAAK+D,aAAe/D,KAAKmE,mBAAmB+M,KAAKE,EAArDA,SAEIpR,KAAK0H,cAAiD1H,KAA1D,oBAC8BkR,KAAKG,EAAnCA,KAAA,SAAyCtF,EAAmBuF,GACvB,OAAOA,EAAGvF,IAC/C,IAAsDqF,EAAtDA,QAA+DD,EAA/DA,UAAA,KAEInR,KAAK2H,aAAqD3H,KAA9D,mBAC6BkR,KAAKG,EAAlCA,KAAA,SAAwCvP,EAAkBwP,GACtB,OAAOA,EAAGxP,IACT,IAAKsP,EAA1CA,QAAmDD,EAAnDA,UAA6D,KAEzDnR,KAAKsG,eACuCtG,KAAhD,qBACakR,KAAKG,EAAlBA,KAAA,SAAwBnD,EAA4BoD,GAChC,OAAOA,EAAGpD,IACT,IAAKkD,EAA1BA,QAAmCD,EAAnCA,UAA6C,KAEzCnR,KAAKoH,gBACuCpH,KAAhD,sBACakR,KACGK,EADhBA,OAAA,SACuBjS,GAAK,OAAK,MAALA,IACZ+R,EADhBA,KAAA,SACsBtP,EAA+BuP,GACnC,OAAOA,EAAGvP,IACT,IAAKyP,EAAxBA,cAAsC,GAAIC,EAA1CA,YAEIzR,KAAKqH,gBACuCrH,KAAhD,sBACakR,KACGK,EADhBA,OAAA,SACuBjS,GAAK,OAAK,MAALA,IACZ+R,EADhBA,KAAA,SACsBtP,EAA+BuP,GACnC,OAAOA,EAAGvP,IACT,IAAKqP,EAAxBA,QAAiCD,EAAjCA,UAA2C,KAEvCnR,KAAKuG,eAAmDvG,KAA5D,qBAC+BkR,KACGG,EADlCA,KAAA,SAEuCnD,EAA8BoD,GAC7B,OAAOA,EAAGpD,IAClD,CAC4DA,QAAS,GAAInC,OAAQ,KAC/CoF,EAFlCA,UAAA,CAEkEjD,QAAS,GAAInC,OAAQ,KACrDyF,EAHlCA,cAGgD,GAAIC,EAHpDA,YAKIzR,KAAKwG,cAAgBxG,KAAKuG,eAAe2K,KAAKQ,EAAlDA,IAAA,SAAuDxD,GACjD,OAAkB,MAAXA,EAAkBA,EAAQnC,OAAS,MAG5C/L,KAAKyG,gBAAoDzG,KAA7D,sBACgCkR,KACGG,EADnCA,KAAA,SAEwCnD,EAA8BoD,GAC7B,OAAOA,EAAGpD,IACnD,CAC6DA,QAAS,GAAInC,OAAQ,KAC/CoF,EAFnCA,UAAA,CAEmEjD,QAAS,GAAInC,OAAQ,KACrDyF,EAHnCA,cAGiD,GAAIC,EAHrDA,YAKIzR,KAAK0G,eAAiB1G,KAAKyG,gBAAgByK,KAAKQ,EAApDA,IAAA,SAAyDxD,GACnD,OAAkB,MAAXA,EAAkBA,EAAQnC,OAAS,MAG5C/L,KAAK2G,eAAmD3G,KAA5D,qBAC+BkR,KACGG,EADlCA,KAAA,SAEuCnD,EAA8BoD,GAC7B,OAAOA,EAAGpD,IAClD,CAC4DA,QAAS,GAAInC,OAAQ,KAC/CoF,EAFlCA,UAAA,CAEkEjD,QAAS,GAAInC,OAAQ,KACrDyF,EAHlCA,cAGgD,GAAIC,EAHpDA,YAKIzR,KAAK4G,cAAgB5G,KAAK2G,eAAeuK,KAAKQ,EAAlDA,IAAA,SAAuDxD,GACjD,OAAkB,MAAXA,EAAkBA,EAAQnC,OAAS,MAG5C/L,KAAK6G,OAAyC7G,KAAlD,aACuBkR,KAAKG,EAA5BA,KAAA,SAAkCpG,EAAiBqG,GACrB,OAAOA,EAAGrG,IACTjL,KAAK0Q,eAAgBU,EAApDA,QAA6DD,EAA7DA,UAAuEnR,KAAK0Q,gBAExE1Q,KAAKsH,eACgCtH,KAAzC,qBACakR,KAAKK,EAAlBA,OAAA,SAAyBjS,GAAK,OAAK,MAALA,IAAY+R,EAA1CA,KAAA,SAAgDnM,EAAwBoM,GACpD,OAAOA,EAAGpM,SACT8K,GAAYwB,EAAjCA,cAA+C,GAAIC,EAAnDA,YAEIzR,KAAK2H,aAAauJ,KAChBK,EADNA,OAAA,SACaI,GAAK,OAAY,GAAZA,EAAEjS,SACdgS,EADNA,IAAA,SACW5P,GACH,OAAR,SAAgB8P,GACN,OAAOrO,EAAK1B,mBAAmBC,OAGnC+P,UAAU7R,KAAK2Q,uBAEjB3Q,KAAK2H,aAAauJ,KAChBK,EADNA,OAAA,SACaI,GAAK,OAAY,GAAZA,EAAEjS,SACdgS,EADNA,IAAA,SACW5P,GACH,OAAR,SAAgB8P,GACN,OAAOrO,EAAK1B,mBAAmBC,OAGnC+P,UAAU7R,KAAK4Q,uBAErB,IAAUkB,EAAY9R,KAAK2E,QAEvBmN,EAAUZ,KACRQ,EADNA,IAAA,SACWK,GACH,OAAR,SAAgBC,GAChB,IAAcC,EAAuB1O,EAAKmN,cAChC,GAAS,MAALqB,EACF,MAAO,GASP,GAPAxO,EAAKjC,WAAWyQ,EAAEhG,OAAQkG,GACtBF,EAAEjE,SACJvK,EAAKjC,WAAWyQ,EAAEjE,QAAQ/B,OAAQkG,GAEhCF,EAAEjB,QACJvN,EAAKjC,WAAWyQ,EAAEjB,OAAO/E,OAAQkG,GAE/BF,EAAElB,OAAQ,CACZtN,EAAKjC,WAAWyQ,EAAElB,OAAO9E,OAAQkG,GACjC,IAAK,IAAI1S,EAAI,EAAGA,EAAIwS,EAAElB,OAAO/C,QAAQpO,OAAQH,IAAK,CAChE,IAAoBgD,EAAMwP,EAAElB,OAAO/C,QAAQvO,GAE3B,GADAgE,EAAKjC,WAAWiB,EAAIwJ,OAAQkG,GACxB1P,EAAIsL,aAAekB,EAAvCA,cAAqDmD,OAEnC,IADlB,IAAsBC,EAAtB,EAC2BnJ,EAAI,EAAGA,EAAImJ,EAAUrE,QAAQpO,OAAQsJ,IAAK,CACrE,IAAwB2E,EAAYwE,EAAUrE,QAAQ9E,GAClCzF,EAAKjC,WAAWqM,EAAU5B,OAAQkG,GAClC,IAAK,IAAIG,EAAI,EAAGA,EAAIzE,EAAUG,QAAQpO,OAAQ0S,IAAK,CACvE,IAA0BC,EAAY1E,EAAUG,QAAQsE,GAClC7O,EAAKjC,WAAW+Q,EAAUtG,OAAQkG,MAO9C,OAAV,MAGMJ,UAAU7R,KAAKyQ,cAEjBqB,EACKZ,KAAKQ,EAAdA,IAAA,SAAmBK,GACT,OAAV,SAAkBO,GACN,OAAS,MAALP,GAAyB,MAAZA,EAAEhG,OAC/B,GAEgCgG,EAAhC,WAISF,UAAU7R,KAAKmM,qBAEpB2F,EACKZ,KAAKQ,EAAdA,IAAA,SAAmBK,GACT,OAAV,SAAkB5K,GACN,OAAS,MAAL4K,GAAyB,MAAZA,EAAElB,OAC/B,CAA2C3C,QAAS,GAAInC,OAAQ,IAEhE,CACgBmC,QAAS6D,EAAElB,OAAO/C,SAAW,GAC7B/B,OAAQgG,EAAElB,OAAO9E,QAAU,QAKlC8F,UAAU7R,KAAK+M,sBAEpB+E,EACKZ,KAAKQ,EAAdA,IAAA,SAAmBK,GACT,OAAV,SAAkB5K,GACN,OAAS,MAAL4K,GAA0B,MAAbA,EAAEjE,QAC/B,CAA2CI,QAAS,GAAInC,OAAQ,IAEhE,CACgBmC,QAAS6D,EAAEjE,QAAQA,SAAW,GAC9B/B,OAAQgG,EAAEjE,QAAQ/B,QAAU,QAKnC8F,UAAU7R,KAAKiN,uBAEpB6E,EACKZ,KAAKQ,EAAdA,IAAA,SAAmBK,GACT,OAAV,SAAkB5K,GACN,OAAS,MAAL4K,GAAyB,MAAZA,EAAEjB,OAC/B,CAA2C5C,QAAS,GAAInC,OAAQ,IAEhE,CACgBmC,QAAS6D,EAAEjB,OAAOhD,SAAW,GAC7B/B,OAAQgG,EAAEjB,OAAO/E,QAAU,QAKlC8F,UAAU7R,KAAKmN,sBAEpBnN,KAAKwH,YAAY0J,KACfQ,EADNA,IAAA,SACW7L,GACH,OAAR,SAAgB0M,GACN,OAAW,KACF,GADE,SAQjBvS,KAAK6E,iBACAqM,KACGsB,EADZA,cAC0BxS,KAAKyL,OAAQzL,KAAKyS,aAChCD,EAFZA,cAGgBxS,KAAKuG,eAAe2K,KAAKK,EAHzCA,OAAA,SAGgDpM,GAAK,OAAK,MAALA,KACrCnF,KAAKyG,gBAAgByK,KAAKK,EAD1CA,OAAA,SACiDpM,GAAK,OAAK,MAALA,KACtCnF,KAAK2G,eAAeuK,KAAKK,EADzCA,OAAA,SACgDpM,GAAK,OAAK,MAALA,KACrCnF,KAAK0H,cAAcwJ,KAAKK,EADxCA,OAAA,SAC+CpM,GAAK,OAAK,MAALA,OAE3C0M,UAAT,SAAoBE,GAIpB,IAAcxP,EAAW,GAKfA,EAAIsO,OAAd,CAAwB/C,QAASiE,EAAE,GAAG7D,QAAQwD,IAA9C,SAAkDvM,GAAK,OAAA2J,EAAvDA,SAAgE3J,KAAK4G,OAAQgG,EAAE,GAAGhG,QAExExJ,EAAIuL,QAAd,CAAyBA,QAASiE,EAAE,GAAG7D,QAAQwD,IAA/C,SAAmDvM,GAAK,OAAA2J,EAAxDA,SAAiE3J,KAAK4G,OAAQgG,EAAE,GAAGhG,QAEzExJ,EAAIuO,OAAd,CAAwBhD,QAASiE,EAAE,GAAG7D,QAAQwD,IAA9C,SAAkDvM,GAAK,OAAA2J,EAAvDA,SAAgE3J,KAAK4G,OAAQgG,EAAE,GAAGhG,QAExExJ,EAAIwJ,OAASgG,EAAE,GAEzB,IAAgBW,EAAhB,CACY7B,OAAQ,CAAC/C,QAASiE,EAAE,GAAG7D,QAASnC,OAAQgG,EAAE,GAAGhG,QAC7C+B,QAAS,CAACA,QAASiE,EAAE,GAAG7D,QAASnC,OAAQgG,EAAE,GAAGhG,QAC9C+E,OAAQ,CAAChD,QAASiE,EAAE,GAAG7D,QAASnC,OAAQgG,EAAE,GAAGhG,QAC7CA,OAAQgG,EAAE,IAGZxO,EAAKmI,cAAcnJ,GACnBgB,EAAKgN,mBAAmB1N,KAAK6P,GAC7BnP,EAAKqC,cAAcgJ,KAAK+D,UAAUpQ,MCphB5C,IAAAqQ,GAgCEA,EAAFhT,UAAAiT,UAAE,SAAUvE,EAAYvG,EAAawG,GACjCvO,KAAK8S,mBACDxE,EAAME,SAASC,WACjBzO,KAAK+S,SAAS/D,uBAAuBV,EAAOC,EAAUxG,GAEtD/H,KAAK+S,SAAS1E,YAAYC,EAAOC,EAAUxG,IAS/C6K,EAAFhT,UAAAoT,mBAAE,WAAA,IAAFzP,EAAAvD,KACQV,EAAI2T,EAAZA,MAAkB,KACXpB,UAAP,WACQvS,EAAE4T,cACF3P,EAAKwP,SAAS3O,iBASpBwO,EAAFhT,UAAAkT,iBAAE,WACE9S,KAAK+S,SAASzO,aAOhBsO,EAAFhT,UAAAuT,SAAE,WAAA,IAAF5P,EAAAvD,KAGIA,KAAKoT,cAAgBpT,KAAK+S,SAASM,UAChCxB,UAAP,SAAiByB,GACT/P,EAAK8P,UAAYC,KAIvBV,EAAFhT,UAAA2T,YAAE,WACEvT,KAAKoT,cAAcF,6BA7EvB,CAAAnM,KAACyM,EAADA,UAAApD,KAAA,CAAW,CAAXqD,SAAA,aACEC,SAAU,oyBACV3H,OAAQ,CAAV,8ZACE4H,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,yDAXApB,EAAAqB,eAAA,0BAmCArB,GAkCE,SAAFA,EACYG,GAAA/S,KAAZ+S,SAAYA,EAhDV/S,KAAFkU,aAAgB,EAEdlU,KAAFmU,YAAe,EAGbnU,KAAFqT,WAAc,EAUJrT,KAAVoT,cAAwCgB,EAAxCA,aAAqDC,MC7BrD,SAAgBC,EAA2BzG,GACzC,MAAO,cAAcA,EAWvB,SAAgB0G,EAAwBC,GAEtC,IADAA,EAAMA,EAAIC,OACiB,EAApBD,EAAI7S,QAAQ,OACjB6S,EAAMA,EAAIE,QAAQ,KAAM,KAE1B,OAAOF,ECpBT,IAAAG,GAqDEA,EAAF/U,UAAAgV,aAAE,SAAaC,GAEX,IAAK,IAAItV,EADTS,KAAKiC,MAAMvC,OAAS,EACJH,EAAIsV,EAAenV,OAAQH,IACzCS,KAAKiC,MAAQjC,KAAKiC,MAAM6S,OAAOD,EAAetV,GAAG0C,QAIrD0S,EAAF/U,UAAAmV,WAAE,SAAWC,EAAY9Q,GACrBlE,KAAKiV,UAAYD,EACjBhV,KAAKkV,WAAWlV,KAAK6U,eAAeG,GAAI/S,MAAMiC,IAC9ClE,KAAKmV,mBAOPR,EAAF/U,UAAAwV,kBAAE,WACE,OAAOC,EAAXA,mBAA8BrV,KAAKwJ,cAAexJ,KAAKiC,QASrD0S,EAAF/U,UAAAsV,WAAE,SAAWI,EAAcC,GACvB,GAAY,MAARD,GAA0C,MAA1BtV,KAAKwV,kBAAzB,CAIJ,IAMQC,EANAC,EAAK1V,KAAKwV,kBAAkBG,cAC5BC,EAAiB3S,KAAK4S,IAAIH,EAAGI,eAAgBJ,EAAGK,cAChDC,EAAe/S,KAAKgT,IAAIP,EAAGI,eAAgBJ,EAAGK,cAC9CG,EAAyBlW,KAAKwJ,cAAc2M,OAAO,EAAGP,GACtDQ,EAAuBpW,KAAKwJ,cAAc2M,OAAOH,GACjDK,EAAwBH,EAAexW,OAG3CwW,EAAiB3B,EAAwB2B,GACzCE,EAAe7B,EAAwB6B,GACvCR,GAAUM,EAAexW,OAAS2W,EAChCf,EAAK5V,QAAkC,EAAxBwW,EAAexW,OAAa,EAAI,GACjD+V,EAAiC,EAAxBS,EAAexW,OAAgBwW,EAA5C,IAAgE,GAC5DlW,KAAKwJ,cAAmBiM,EAASH,EAArC,IAA6Cc,EAE7C,IAAU9W,EAAI2T,EAAdA,MAAoB,GAAGpB,UAAvB,WAEM,GADIvS,IAAMA,EAAEgX,QAAUhX,EAAE4T,cACpBwC,EAAGa,gBAAiB,CAC9B,IAAYC,EAAQd,EAAGa,kBACfC,EAAMC,KAAK,YAAab,GACxBY,EAAME,cAEFhB,EAAGI,gBACLJ,EAAGiB,QACHjB,EAAGkB,kBAAkBhB,EAAQA,IAE7BF,EAAGiB,YAMXhC,EAAF/U,UAAAuV,gBAAE,WACEnV,KAAK6W,QAAU7W,KAAKoV,oBAChBpV,KAAK6W,SACP7W,KAAKuJ,iBAOToL,EAAF/U,UAAA2J,cAAE,WACEvJ,KAAK+S,SAASxJ,cAAcvJ,KAAKwJ,gBAMnCmL,EAAF/U,UAAAkX,iBAAE,WACM9W,KAAK+W,cAKXpC,EAAF/U,UAAAuT,SAAE,WAAA,IAAF5P,EAAAvD,KACIA,KAAKwJ,cAAgBxJ,KAAKyJ,WAAWC,UACrC1J,KAAK6W,SAAU,EAEW,QAAtB7W,KAAKwJ,gBACPxJ,KAAKwJ,cAAgB,IAGvBxJ,KAAKgX,mBAAqBhX,KAAK+S,SAASkE,eACrCpF,UAAP,SAAkByB,GAED,OADT/P,EAAKsR,eAAiBvB,IAEpB/P,EAAKqR,aAAarR,EAAKsR,mBAQ/BF,EAAF/U,UAAA2T,YAAE,WACEvT,KAAKgX,mBAAmB9D,6BAjK5B,CAAAnM,KAACyM,EAADA,UAAApD,KAAA,CAAW,CAAXqD,SAAA,sCACEC,SAAU,yqCACV3H,OAAQ,CAAV,4DACE4H,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,yDARAW,EAAAV,eAAA,2GAmBA8C,aAAA,CAAA,CAAAhQ,KAAAmQ,EAAAA,UAAA9G,KAAA,CAAA,eAAA,CAAA+G,QAAA,OAgBAxC,GAiBE,SAAFA,EACY5B,GAAA/S,KAAZ+S,SAAYA,EA9BV/S,KAAF6W,SAAY,EACV7W,KAAFiC,MAAoB,GAIlBjC,KAAFwJ,cAAkB,OAUhBxJ,KAAFoX,UAAwB,CACpB,MAAO,MACP,IAAK,KAAM,KAAM,KAAM,IAAK,KAAM,IAClC,KAAM,KACN,IAAK,IAAK,IAAK,IAAK,IACpB,OAAQ,SAGFpX,KAAVgX,mBAA6C5C,EAA7CA,aAA0DC,MCpC1D,IAAAgD,GAaEA,EAAFzX,UAAA0X,YAAE,WACEtX,KAAKkU,aAAc,EACnBlU,KAAK+S,SAASxO,eAGhB8S,EAAFzX,UAAA2X,aAAE,WACEvX,KAAKkU,aAAc,EACnBlU,KAAK+S,SAAStO,aAGhB4S,EAAFzX,UAAA4X,iBAAE,SACEC,GAEA,OAAJ,SAAWC,GAIL,OAHAA,EAAKC,KAAKF,UAAUhW,QAA1B,SAAkCmW,GAC1B,IAA4B,EAAxBH,EAAU9V,QAAQiW,GAAW,OAAO,KAEnC,IAoFXP,EAAFzX,UAAAiY,SAAE,SAAS3S,GACP,OAAOA,EAAO2I,aAAekB,EAAjCA,cAA+CmD,QAQ7CmF,EAAFzX,UAAAoT,mBAAE,WAAA,IAAFzP,EAAAvD,KACQV,EAAI2T,EAAZA,MAAkB,KACXpB,UAAP,WACiB,MAALvS,GAAaA,EAAE4T,cACnB3P,EAAKwP,SAAS3O,iBASpBiT,EAAFzX,UAAAkT,iBAAE,WACE9S,KAAK+S,SAASzO,aAQhB+S,EAAFzX,UAAAkY,mBAAE,SAAmB7T,EAAeC,GAChClE,KAAK+S,SAAS/O,UAAUC,EAAOC,IAQjCmT,EAAFzX,UAAAmY,mBAAE,WACE/X,KAAK+S,SAASrO,aAYhB2S,EAAFzX,UAAAoY,iBAAE,SAAiB/T,EAAeC,GAC9B,OACGD,IAAUjE,KAAKiY,YAAYhU,QAC1BC,IAAUlE,KAAKiY,YAAY/T,QAAsB,IAAXA,IAgB5CmT,EAAFzX,UAAAqO,OAAE,SAAOlH,EAAcgB,GACnB/H,KAAK+S,SAAS9E,OAAOlH,EAAMgB,IAW7BsP,EAAFzX,UAAAiT,UAAE,SAAUqF,EAAiB5J,EAA8CiB,GACvEvP,KAAK8S,mBACL9S,KAAK+S,SAASrQ,UAAUwV,GAC5B,IAAUC,EAAW7J,EAAMoJ,KAA3B,KACI,GAA2B,MAAvBS,EAAS1J,WACTzO,KAAK+S,SAAShF,qBAAqBoK,EAAS1J,WAAY0J,EAAhE,WACQnY,KAAKoY,cAAgBD,EAA7B,YACW,GAAuB,MAAnBA,EAASjT,OAClBlF,KAAKiO,OAAOkK,EAAlB,UAAuCA,EAAvC,MACMnY,KAAKoY,cAAgBD,EAASjT,YACzB,GAAqB,MAAjBiT,EAAStS,MAAkC,KAAlBsS,EAAStS,KAC3C7F,KAAKoY,cAAgBtJ,EAA3BA,SAAoCqJ,EAAStS,UAClC,CACX,IAAUtD,EAAM,CAACsL,WAAekB,EAAhC,cAAsDoJ,EAAtD,aACMnY,KAAKoY,cAAgBtJ,EAA3BA,SAAoCvM,GAGhC,GADAvC,KAAK8S,mBACqB,MAAtB9S,KAAKoY,cACP,OAAQF,GACN,IAAK,SACHlY,KAAK+S,SAASlG,gBAAgB7M,KAAKoY,cAAe7I,GAClD,MACF,IAAK,UACHvP,KAAK+S,SAAS/F,iBAAiBhN,KAAKoY,cAAe7I,GACnD,MACF,IAAK,SACHvP,KAAK+S,SAAS7F,gBAAgBlN,KAAKoY,cAAe7I,GAIxDvP,KAAK+X,sBAGPV,EAAFzX,UAAAuT,SAAE,WAAA,IAAF5P,EAAAvD,KACIA,KAAKqY,kBAAoBrY,KAAK+S,SAASuF,cACpCzG,UAAP,SAAiByB,GACT/P,EAAK+U,cAAgBhF,EAAEpF,UAE3BlO,KAAKuY,mBAAqBvY,KAAK+S,SAASyF,eACrC3G,UAAP,SAAiByB,GACT/P,EAAKiV,eAAiBlF,EAAEpF,UAE5BlO,KAAKyY,kBAAoBzY,KAAK+S,SAAS2F,cACpC7G,UAAP,SAAiByB,GACT/P,EAAKmV,cAAgBpF,EAAEpF,UAE3BlO,KAAKoT,cAAgBpT,KAAK+S,SAASM,UAChCxB,UAAP,SAAiByB,GACT/P,EAAK8P,UAAYC,IAErBtT,KAAK2Y,cAAgB3Y,KAAK+S,SAAS6F,UAChC/G,UAAP,SAAiBgH,GACTtV,EAAKqV,UAAYC,IAErB7Y,KAAK8Y,gBAAkB9Y,KAAK+S,SAASkF,YAClCpG,UAAP,SAAiByB,GACT/P,EAAK0U,YAAc3E,IAEvBtT,KAAK+Y,WAAa/Y,KAAK+S,SAASiG,OAC7BnH,UAAP,SAAiByB,GACT/P,EAAKyV,OAAS1F,KAIpB+D,EAAFzX,UAAAqZ,mBAAE,WACEjZ,KAAKkZ,OAAOC,iBAGd9B,EAAFzX,UAAA2T,YAAE,WACE,CACEvT,KAAKqY,kBAAmBrY,KAAKuY,mBAAoBvY,KAAKyY,kBACtDzY,KAAKoZ,kBAAmBpZ,KAAKoT,cAAepT,KAAK2Y,cACjD3Y,KAAK+Y,WAAY/Y,KAAK8Y,iBACtBrX,QAAN,SAAcnC,GAAOA,EAAE4T,+BA/QvB,CAAAnM,KAACyM,EAADA,UAAApD,KAAA,CAAW,CAAXqD,SAAA,6BACEC,SAAU,orIACV3H,OAAQ,CAAV,u7HACE4H,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,OACEqF,KAAF,CACAC,cAAA,gBACMC,eAAN,+FApBAlC,GAuHE,SAAFA,EACYtE,EACAmG,GADAlZ,KAAZ+S,SAAYA,EACA/S,KAAZkZ,OAAYA,EAvEVlZ,KAAFqT,WAAc,EAQZrT,KAAF4Y,WAAc,EAGZ5Y,KAAFiY,YAAqB,GAGnBjY,KAAFwZ,MAAS,EAIPxZ,KAAFsY,cAA+B,GAS7BtY,KAAFwY,eAAgC,GAU9BxY,KAAF0Y,cAA+B,GAG7B1Y,KAAFgZ,QAAoB,EAUlBhZ,KAAFoY,cAAkC,KAQhCpY,KAAFkU,aAAgB,EAENlU,KAAVoT,cAAwCgB,EAAxCA,aAAqDC,MAC3CrU,KAAV2Y,cAAwCvE,EAAxCA,aAAqDC,MAC3CrU,KAAV8Y,gBAA0C1E,EAA1CA,aAAuDC,MAC7CrU,KAAVqY,kBAA4CjE,EAA5CA,aAAyDC,MAC/CrU,KAAVuY,mBAA6CnE,EAA7CA,aAA0DC,MAChDrU,KAAVyY,kBAA4CrE,EAA5CA,aAAyDC,MAC/CrU,KAAV+Y,WAAqC3E,EAArCA,aAAkDC,MACxCrU,KAAVoZ,kBAA4ChF,EAA5CA,aAAyDC,MAKrDrU,KAAKyZ,aAAezZ,KAAK+S,SAAS0G,aAClCzZ,KAAK0Z,cAAgB1Z,KAAK+S,SAAS2G,cACnC1Z,KAAK2Z,aAAe3Z,KAAK+S,SAAS4G,aC3HtC,IAAAC,GAkBEA,EAAFha,UAAAia,YAAE,WACE7Z,KAAK+S,SAASnG,wBAAwB5M,KAAKwC,MAAOxC,KAAKwM,UACvDxM,KAAK8Z,WAAWC,uBApBpB,CAAAhT,KAACyM,EAADA,UAAApD,KAAA,CAAW,CAAXqD,SAAA,uBACEC,SAAU,gOACVC,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,+EAPA4F,EAAA3F,eAAA,mDAcA2F,GAGE,SAAFA,EACY7G,EACA+G,GADA9Z,KAAZ+S,SAAYA,EACA/S,KAAZ8Z,WAAYA,ECdZ,IAAAE,GAmCEA,EAAFpa,UAAAqO,OAAE,WACEjO,KAAK+S,SAAS9E,OAAO,gBAAiBjO,KAAKwM,WAK7CwN,EAAFpa,UAAAuT,SAAE,WACEnT,KAAKia,WJ1CT,SAA0CpM,GACxC,MAAO,UAAUA,EAAWqM,cIyCRC,CAA0Bna,KAAK6N,YACjD7N,KAAKoa,YAAc9F,EAA2BtU,KAAK6N,2BA3CvD,CAAA9G,KAACyM,EAADA,UAAApD,KAAA,CAAW,CAAXqD,SAAA,kDACE4G,OAAQ,CAAV,aAAA,YACE3G,SAAU,2GACV3H,OAAQ,CAAC,kWACT4H,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,yDATAgG,GA6BE,SAAFA,EACYjH,GAAA/S,KAAZ+S,SAAYA,EARV/S,KAAF0M,cAAyB,GCAzB,IAAA4N,GAuCEA,EAAF1a,UAAA2a,WAAE,SAAWxS,GACT/H,KAAK8Z,WAAa9Z,KAAKwa,OAAOC,KAAKb,GACnC5Z,KAAK8Z,WAAWY,kBAAkBlY,MAAQxC,KAAK0M,cAAc3E,GAAKhB,KAClE/G,KAAK8Z,WAAWY,kBAAkBlO,SAAWzE,GAS/CuS,EAAF1a,UAAAoT,mBAAE,WAAA,IAAFzP,EAAAvD,KACQV,EAAI2T,EAAZA,MAAkB,KACXpB,UAAP,WACiB,MAALvS,GAAaA,EAAE4T,cACnB3P,EAAKwP,SAAS3O,iBASpBkW,EAAF1a,UAAAkT,iBAAE,WACE9S,KAAK+S,SAASzO,aAQhBgW,EAAF1a,UAAAkY,mBAAE,SAAmB7T,EAAeC,GAChClE,KAAK+S,SAAS/O,UAAUC,EAAOC,IAQjCoW,EAAF1a,UAAAmY,mBAAE,WACE/X,KAAK+S,SAASrO,aAEhB4V,EAAF1a,UAAAuT,SAAE,WAAA,IAAF5P,EAAAvD,KACIA,KAAK2a,kBAAoB3a,KAAK+S,SAASrG,cACpCmF,UAAP,SAAiByB,GACT/P,EAAKmJ,cAAgB4G,EAES,EAA5B/P,EAAKmJ,cAAchN,QACuC,IAA1D6D,EAAKmJ,cAAcnJ,EAAKmJ,cAAchN,OAAS,GAAGqH,MAElDxD,EAAKgX,WAAWhX,EAAKmJ,cAAchN,OAAS,KAGlDM,KAAK+S,SAASxG,iBAAiB,CAC7B1G,KAAM7F,KAAK4a,oBACX7T,KAAM,6BAER/G,KAAK+S,SAASxG,iBAAiB,CAC7B1G,KAAM7F,KAAK6a,mBACX9T,KAAM,8BAIVuT,EAAF1a,UAAA2T,YAAE,WACEvT,KAAK2a,kBAAkBzH,cACvBlT,KAAK+S,SAASpG,oCA5GlB,CAAA5F,KAACyM,EAADA,UAAApD,KAAA,CAAW,CAAXqD,SAAA,4CACE1H,OAAQ,CAAV,qTACE2H,SAAU,oXACVC,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,4EAzBAsG,GAuDE,SAAFA,EACYvH,EACDyH,GADCxa,KAAZ+S,SAAYA,EACD/S,KAAXwa,OAAWA,EAvBTxa,KAAF0M,cAAkC,GAExB1M,KAAV2a,kBAA4CvG,EAA5CA,aAAyDC,MAI/CrU,KAAV4a,oBACE,gYAMQ5a,KAAV6a,mBACE,8dCzBF,IAAAC,GAyGEA,GAAFlb,UAAAmb,aAAE,WACEC,OAAOC,UAAUC,WAAWC,mBAAmBC,sBAAsB,CACnEC,sBAAsB,EACtBC,oBAAoB,IAGtBN,OAAOC,UAAUC,WAAWC,mBAAmBI,mBAAmB,CAChEC,OAAQR,OAAOC,UAAUC,WAAWO,aAAaC,OACjDC,sBAAsB,EACtBC,SAAS,EACTC,OAAQb,OAAOC,UAAUC,WAAWY,WAAWjI,OAGjD,IACEmH,OAAOC,UAAUC,WAAWC,mBAAmBY,YAC7C,GAAI,mCAEN,MAAOC,GACPhB,OAAOC,UAAUC,WAAWC,mBACzBc,WAAW,mCAAqC,GAErD,IACEjB,OAAOC,UAAUC,WAAWC,mBAAmBY,YAC7C,GAAI,mCAEN,MAAOC,GACPhB,OAAOC,UAAUC,WAAWC,mBACzBc,WAAW,mCAAqC,GAGrDjc,KAAKkc,2BACLlc,KAAKmc,mBACLnc,KAAKoc,oBAICtB,GAAVlb,UAAAsc,yBAAE,WAAA,IAAF3Y,EAAAvD,KACIA,KAAK6U,eAAepT,QAAxB,SAAiC4a,GAC3BA,EAAQpa,MAAMR,QAApB,SAA6BgB,GACrBc,EAAK+Y,mBAAmB1a,KAAKa,KAE/B4Z,EAAQna,MAAMT,QAApB,SAA6BsF,GACrBxD,EAAKgZ,mBAAmB3a,KAAK2B,EAAKiZ,cAAczV,IAAS,SAMvD+T,GAAVlb,UAAAuc,iBAAE,WACE,GAA2B,MAAvBnc,KAAK6U,eACT,IAGE,IAFN,IAAU9R,EAAgB,GAEXxD,EAAI,EAAGA,EAAIS,KAAKsc,mBAAmB5c,OAAQH,IAClDwD,GAAS,iBAAiB/C,KAAKsc,mBAAmB/c,GAA1D,KAAiES,KAAKuc,mBAAmBhd,GAAzF,IAGMwD,GAAS,KACTiY,OAAOC,UAAUC,WAAWC,mBACzBc,WAAW,mCAAqClZ,EACnD,MAAOiZ,MAGHlB,GAAVlb,UAAAwc,iBAAE,WACE,IACEpB,OAAOC,UAAUC,WAAWC,mBAAmBc,WAAW,mCACtDQ,EAAVA,mBAA6BC,eACvB,MAAOV,MAGHlB,GAAVlb,UAAA4c,cAAE,SAAsBtb,GACpB,OAAQA,GACN,KAAKC,EAAXA,aAAwBwb,QAChB,MAAO,UACT,KAAKxb,EAAXA,aAAwByb,KAClB,KAAKzb,EAAXA,aAAwB0b,UAClB,KAAK1b,EAAXA,aAAwB2b,KAChB,MAAO,OACT,KAAK3b,EAAXA,aAAwB4b,MAChB,MAAO,OACT,KAAK5b,EAAXA,aAAwB6b,QAChB,MAAO,SACT,KAAK7b,EAAXA,aAAwB8b,eAClB,KAAK9b,EAAXA,aAAwB+b,aAChB,MAAO,MACT,KAAK/b,EAAXA,aAAwB2H,OAChB,MAAO,SACT,KAAK3H,EAAXA,aAAwBgc,MAChB,MAAO,QACT,KAAKhc,EAAXA,aAAwBC,OAClB,KAAKD,EAAXA,aAAwBic,KAChB,MAAO,SAEX,OAAO,MAGTtC,GAAFlb,UAAAmV,WAAE,SAAWC,EAAYxS,EAAe0B,GAC/BlE,KAAKqd,OACRrd,KAAKwC,MAAQA,EACbxC,KAAKqd,MAAO,GAEdrd,KAAKsd,eAAetd,KAAK6U,eAAeG,GAAI/S,MAAMiC,IAAU,KAG9D4W,GAAFlb,UAAA2d,aAAE,SAAavI,GACXhV,KAAKiV,UAAYD,EACjBhV,KAAKgC,OAAShC,KAAK6U,eAAeG,GAAIhT,OACtChC,KAAKmc,oBAGPrB,GAAFlb,UAAA4d,mBAAE,SAAmBzW,GACjB/G,KAAKiK,gBAAkBlD,GAGzB+T,GAAFlb,UAAAuV,gBAAE,WACMnV,KAAKyd,mBACPzd,KAAK0d,gBAAkB1d,KAAKgK,YAC5BhK,KAAK6W,SAAU,GAEf7W,KAAK6W,SAAU,EAEO,IAApB7W,KAAKgK,cACPhK,KAAK6W,SAAU,IAInBiE,GAAFlb,UAAA6d,gBAAE,WAIE,MAHwB,IAApBzd,KAAKgK,cACPhK,KAAKqd,MAAO,GAEa,MAAvBrd,KAAK6U,gBAGAQ,EAAbA,mBAAgCrV,KAAKgK,YAAahK,KAAKsc,qBAIrDxB,GAAFlb,UAAA+d,YAAE,WACE,GAA0B,MAAtB3d,KAAKoY,cACP,OAAQpY,KAAKoY,cAAcvK,YACzB,KAAK,EACH7N,KAAK+E,mBACL,MACF,KAAK,EACH/E,KAAK4d,kBACL,MACF,KAAK,EACH5d,KAAK2J,mBACL,MACF,KAAK,EACH3J,KAAKqK,mBAIXrK,KAAK+Z,SAGPe,GAAFlb,UAAAmF,iBAAE,WACE/E,KAAK+S,SAAShO,iBAAiBqE,EAAnCA,cAAiD,CAACpE,QAAShF,KAAKgK,gBAG9D8Q,GAAFlb,UAAAge,gBAAE,WACE5d,KAAK+S,SAASzN,kBAAkBtF,KAAKgK,YAAahK,KAAKwF,YAGzDsV,GAAFlb,UAAA+J,iBAAE,WACE3J,KAAK+S,SAASpJ,iBACZ3J,KAAKwC,MACLxC,KAAK6d,MACL7d,KAAK8d,UACL9d,KAAKkE,MACLlE,KAAKgK,YACLhK,KAAKiK,kBAGT6Q,GAAFlb,UAAAyK,iBAAE,WACErK,KAAK+S,SAAS1I,iBACZrK,KAAKwC,MACLxC,KAAKiK,gBACLjK,KAAKgK,YACLhK,KAAK8d,UACL9d,KAAKkE,QAGT4W,GAAFlb,UAAAkX,iBAAE,WACM9W,KAAK+W,cAKX+D,GAAFlb,UAAA0d,eAAE,SAAeS,GACb,GAAyB,MAArB/d,KAAKge,cAAoD,MAA5Bhe,KAAKge,aAAaC,OAAgB,CACvE,IAAYA,EAASje,KAAKge,aAAaC,OAC7Blb,EAAkBkb,EAAOjY,WAAWkY,MAAM,MAC1C1R,EAAmDyR,EAAOE,cACxDC,EAAK5R,EAAS6R,WAAa,EAC7BC,EAAOvb,EAAMqb,GACbG,EAAM/R,EAASwB,OAAS,EAC5BsQ,EAAOA,EAAKE,UAAU,EAAGD,GAAOR,EAAWO,EAAKE,UAAUD,GAC1Dxb,EAAMqb,GAAME,EACZ9R,EAASwB,QAAU+P,EAASre,OAC5BM,KAAKge,aAAajb,MAAQA,EAAM+I,KAAK,MACrCmS,EAAOQ,YAAYjS,GACnByR,EAAOtH,QACP3W,KAAKgK,YAAciU,EAAOjY,WAC1BhG,KAAKmV,oBAIT2F,GAAFlb,UAAA8e,YAAE,SAAYX,GACe,MAArB/d,KAAKge,cAAoD,MAA5Bhe,KAAKge,aAAaC,QAClCje,KAAKge,aAAaC,OAC1BU,SAASZ,IAIpBjD,GAAFlb,UAAAgf,MAAE,WACE5e,KAAKgK,YAAc,GACnBhK,KAAKiK,gBAAkB4U,EAA3BA,mBAA8ChL,MAG5CiH,GAAFlb,UAAAma,MAAE,WACE/Z,KAAK4e,QACL5e,KAAK8Z,WAAWC,SAGlBe,GAAFlb,UAAAuT,SAAE,WACEnT,KAAKgK,YAAchK,KAAKgF,QACxBhF,KAAKiK,gBAAkBjK,KAAKmK,YAC5BnK,KAAKwC,MAAQxC,KAAK8e,UAEM,IAApB9e,KAAKgK,aAAyC,MAApBhK,KAAKgK,YACjChK,KAAK6W,SAAU,EAEf7W,KAAK6W,SAAU,GAKnBiE,GAAFlb,UAAAqZ,mBAAE,WACMjZ,KAAK+e,QAA+B,MAArB/e,KAAKge,cAAoD,MAA5Bhe,KAAKge,aAAaC,SAChEje,KAAKsd,eAAetd,KAAKgK,aAAe,IACxChK,KAAK+e,QAAS,IAIlBjE,GAAFlb,UAAA2T,YAAE,WACEvT,KAAKgf,iBAAiB9L,cACtBlT,KAAKoZ,kBAAkBlG,8BAjW3B,CAAAnM,KAACyM,EAADA,UAAApD,KAAA,CAAW,CAAXqD,SAAA,wBACEC,SAAU,i9CACV3H,OAAQ,CAAV,gnCACE4H,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,8EAdA,CAAAjN,KAAQkY,EAARA,wBAhBAnE,GAAA7G,eAAA,qDA8DA6K,UAAA,CAAA,CAAA/X,KAAAmY,EAAAA,QAGA/U,YAAA,CAAA,CAAApD,KAAAmY,EAAAA,QAGA7B,KAAA,CAAA,CAAAtW,KAAAmY,EAAAA,QAGArB,MAAA,CAAA,CAAA9W,KAAAmY,EAAAA,QAGAhb,MAAA,CAAA,CAAA6C,KAAAmY,EAAAA,QAGApB,UAAA,CAAA,CAAA/W,KAAAmY,EAAAA,QAGA1Z,UAAA,CAAA,CAAAuB,KAAAmY,EAAAA,QAGAC,gBAAA,CAAA,CAAGpY,KAAHmQ,EAAAA,UAAA9G,KAAA,CAAA,kBAAA,CAAA+G,QAAA,MAGAJ,aAAA,CAAA,CAAAhQ,KAAAmQ,EAAAA,UAAA9G,KAAA,CAAA,eAAA,CAAA+G,QAAA,MAGA6G,aAAA,CAAA,CAAAjX,KAAAmQ,EAAAA,UAAA9G,KAAA,CAAAgP,EAAAA,gBAAA,CAAAjI,QAAA,OAEA2D,IAME,SAAFA,GACY/H,EACA+G,EACRuF,GAHF,IAAF9b,EAAAvD,KACYA,KAAZ+S,SAAYA,EACA/S,KAAZ8Z,WAAYA,EA/DV9Z,KAAFsf,iBAA+BC,EAA/BA,uBAAsDV,EAAtDA,oBAGE7e,KAAFoX,UAAwB,CACpB,OAAQ,QAAS,MAAO,MACxB,IAAK,KAAM,KAAM,IAAK,KAAM,IAC5B,KAAM,KACN,IAAK,IAAK,IAAK,IAAK,IAAK,MAG3BpX,KAAFgK,YAAwB,GACtBhK,KAAFwf,YAAwB,GACtBxf,KAAF0d,gBAA4B,GAC1B1d,KAAFwC,MAAkB,GAChBxC,KAAF0J,UAAsB,GACpB1J,KAAFiK,gBAAwC4U,EAAxCA,mBAA2DY,IAEzDzf,KAAFiV,UAAsB,EACpBjV,KAAF0f,aAAyB,EACvB1f,KAAFgC,OAAqB,GACnBhC,KAAFoY,cAAkC,KAEhCpY,KAAFsc,mBAAiC,GAC/Btc,KAAFuc,mBAAiC,GAkCvBvc,KAAVgf,iBAA2C5K,EAA3CA,aAAwDC,MAC9CrU,KAAVoZ,kBAA4ChF,EAA5CA,aAAyDC,MAC/CrU,KAAV+e,QAA4B,EAOP,GAAb/e,KAAKqd,OACPrd,KAAKgK,YAAc,GACnBhK,KAAKiK,gBAAkB4U,EAA7BA,mBAAgDY,KAE5Czf,KAAKoZ,kBAAoBpZ,KAAK+S,SAASqF,cACpCvG,UAAP,SAAiByB,GACT,GAAS,MAALA,IACF/P,EAAK6U,cAAf,EAE+C,GAAjC7U,EAAK6U,cAAcvK,YAAiB,CAClD,IAAgB7F,EAAwCzE,EAAxD,cACgByE,EAAM2X,WAAaC,EAAnCA,aAAgDC,KAClCtc,EAAKyB,QAAWgD,EAAU,KAAIA,EAAM5C,KAAKJ,QAAU,GAEnDzB,EAAKyB,QAAWgD,EAAU,KAAIA,EAAM3C,KAAKL,QAAU,MAO7DhF,KAAKgf,iBAAmBhf,KAAK+S,SAAS8B,eACnChD,UAAP,SAAkByB,GACD,MAALA,IACF/P,EAAKsR,eAAiBvB,KC5GhC,IAAAwM,IAgDEA,GAAFlgB,UAAAmgB,gBAAE,SAAgB7b,GACdlE,KAAKggB,qBAAuB9b,GAG9B4b,GAAFlgB,UAAAqgB,WAAE,SAAW/b,GACT,OAAIA,IAAUlE,KAAKggB,qBACV,UAEA,IAWXF,GAAFlgB,UAAAsgB,YAAE,WACE,GAAwB,MAApBlgB,KAAKmgB,SAAS,GAQhB,MAAO,GALP,IAFN,IAAUC,EAAqB,GAEhB7gB,EAAI,EAAGA,EAAIS,KAAKmgB,SAAS,GAAGzgB,OAAQH,IAC3C6gB,EAASxe,KAAK5B,KAAKmgB,SAAS,GAAG5gB,GAAGiD,OAAS,IAE7C,OAAO4d,GAaXN,GAAFlgB,UAAAygB,WAAE,WACF,IAAQnW,EAAoB,GACxB,GAAwB,MAApBlK,KAAKmgB,SAAS,GAMhB,MAAO,GALP,IAAK,IAAI5gB,EAAI,EAAGA,EAAIS,KAAKmgB,SAASzgB,OAAQH,IACxC2K,EAAQtI,KAAK5B,KAAKmgB,SAAS5gB,GAAG,GAAGiD,OAAS,IAE5C,OAAO0H,GAaX4V,GAAFlgB,UAAA0gB,eAAE,WACE,GAAoD,MAAhDtgB,KAAKmgB,SAASngB,KAAKggB,qBAAuB,GAQ5C,MAAO,GALP,IAFN,IAAUO,EAAwB,GAEnBhhB,EAAI,EAAGA,EAAIS,KAAKmgB,SAASngB,KAAKggB,qBAAuB,GAAGtgB,OAAQH,IACvEghB,EAAY3e,KAAK5B,KAAKmgB,SAASngB,KAAKggB,qBAAuB,GAAGzgB,GAAGiD,OAAS,IAE5E,OAAO+d,GAMXT,GAAFlgB,UAAA4gB,eAAE,WACF,IAAQJ,EAAqB,GACzB,GAAqB,MAAjBpgB,KAAKmgB,SACP,IAAK,IAAI5gB,EAAI,EAAGA,EAAIS,KAAKmgB,SAASzgB,OAAQH,IACb,MAAvBS,KAAKmgB,SAAS5gB,GAAG,IACnB6gB,EAASxe,KAAK5B,KAAKmgB,SAAS5gB,GAAG,GAAGiD,OAAS,IAIjD,OAAO4d,GAGTN,GAAFlgB,UAAA6gB,aAAE,WACE,GAAgD,MAA5CzgB,KAAKmgB,SAASngB,KAAKggB,sBAUrB,MAAO,GAPP,IAFN,IAAUU,EAAsB,GAEjBnhB,EAAI,EAAGA,EAAIS,KAAKmgB,SAASngB,KAAKggB,sBAAsBtgB,OAAQH,IAChB,MAA/CS,KAAKmgB,SAASngB,KAAKggB,sBAAsBzgB,IAC3CmhB,EAAU9e,KAAK5B,KAAKmgB,SAASngB,KAAKggB,sBAAsBzgB,GAAGiD,OAAS,IAGxE,OAAOke,GAMXZ,GAAFlgB,UAAA+gB,aAAE,WACF,IAAQ3Y,EAAwBhI,KAAhC,cACI,OACEgI,EAAM4Y,YAAcC,EAD1BA,aACuCC,SACjC9Y,EAAM4Y,YAAcC,EAA1BA,aAAuCE,QAQrCjB,GAAFlgB,UAAA+K,eAAE,SAAezG,GACblE,KAAK+S,SAASpI,eAAezG,IAG/B4b,GAAFlgB,UAAAohB,cAAE,SAAc9c,GACZlE,KAAKggB,qBAAuB9b,EAC5BlE,KAAK+S,SAASlI,kBAAkB7K,KAAKggB,sBAAuB,IAE9DF,GAAFlgB,UAAA0K,oBAAE,SAAoBpG,GAClBlE,KAAK+S,SAASzI,oBAAoBpG,IAGpC4b,GAAFlgB,UAAAiL,kBAAE,SAAkB3G,GAChBlE,KAAK+S,SAASlI,kBAAkB7K,KAAKggB,qBAAsB9b,IAG7D4b,GAAFlgB,UAAA4K,WAAE,SAAWsT,EAAmB5Z,GAC5BlE,KAAK+S,SAASvI,WAAWsT,EAAW5Z,IAYtC4b,GAAFlgB,UAAA2a,WAAE,SAAWsD,EAAeC,EAAmB5Z,EAAe+c,GAE1DjhB,KAAKkhB,UAAYlhB,KAAKwa,OAAOC,KAAKK,GAE9BmG,GACY,IAAVpD,IAA0B,IAAX3Z,IACjBA,EAAQ,GAEI,IAAV2Z,IACwB,MAAtB7d,KAAKoY,eAAyBpY,KAAKoY,cAAcvK,YAAckB,EAA3EA,cAAyFoS,OAC/ErD,IAEF5Z,KAGFlE,KAAKkhB,UAAUxG,kBAAkBoE,UAC/B9e,KAAKmgB,SAASrC,IACd9d,KAAKmgB,SAASrC,GAAW5Z,GAAO1B,OAAS,GAI3CxC,KAAKkhB,UAAUxG,kBAAkBvQ,YAC/BnK,KAAKmgB,SAASrC,IACd9d,KAAKmgB,SAASrC,GAAW5Z,GAAOiG,YAAYA,aAAe0U,EAAnEA,mBAAsFhL,OAEhF7T,KAAKkhB,UAAUxG,kBAAkBoE,UAAY,GAC7C9e,KAAKkhB,UAAUxG,kBAAkB1V,QAAU,GAC3ChF,KAAKkhB,UAAUxG,kBAAkBvQ,YAAc,GAIjDnK,KAAKkhB,UAAUxG,kBAAkBtC,cAA+BpY,KAApE,cACIA,KAAKkhB,UAAUxG,kBAAkBmD,MAAQA,EACzC7d,KAAKkhB,UAAUxG,kBAAkBoD,UAAYA,EAC7C9d,KAAKkhB,UAAUxG,kBAAkBxW,MAAQA,EACzClE,KAAKkhB,UAAUxG,kBAAkB2C,MAAO,GAG1CyC,GAAFlgB,UAAAwhB,sBAAE,WACEphB,KAAKua,WAAW,GAAI,GAAI,GAAG,IAG7BuF,GAAFlgB,UAAAyhB,4BAAE,WACErhB,KAAKua,WAAW,EAAG,EAAGva,KAAKggB,sBAAsB,IAGnDF,GAAFlgB,UAAA0hB,4BAAE,WACEthB,KAAKua,WAAW,EAAGva,KAAKggB,qBAAsB,GAAG,IAGnDF,GAAFlgB,UAAA2hB,0BAAE,WACEvhB,KAAKua,WAAW,GAAI,GAAI,GAAG,IAE7BuF,GAAFlgB,UAAA4hB,0BAAE,WACExhB,KAAKua,WAAW,EAAGva,KAAKggB,sBAAuB,GAAG,IAEpDF,GAAFlgB,UAAA6hB,gCAAE,WACEzhB,KAAKua,WAAW,EAAGva,KAAKggB,sBAAuB,GAAG,IAEpDF,GAAFlgB,UAAA8hB,2BAAE,WACE1hB,KAAKua,WAAW,EAAGva,KAAKggB,sBAAuB,GAAG,IAEpDF,GAAFlgB,UAAA+hB,2BAAE,SAA2Bzd,GACzBlE,KAAKua,WAAW,EAAGva,KAAKggB,qBAAsB9b,GAAO,IAEvD4b,GAAFlgB,UAAAgiB,iCAAE,SAAiC1d,GAC/BlE,KAAKua,WAAW,EAAGva,KAAKggB,qBAAsB9b,GAAO,IAGvD4b,GAAFlgB,UAAA2T,YAAE,WACEvT,KAAKoZ,kBAAkBlG,cACvBlT,KAAKgf,iBAAiB9L,8BAlQ1B,CAAAnM,KAACyM,EAADA,UAAApD,KAAA,CAAW,CAAXqD,SAAA,oCACEC,SAAU,smHACV3H,OAAQ,CAAV,syBACE4H,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,6EAhBA8L,IAmCE,SAAFA,GACY/M,EACDyH,GAFT,IAAFjX,EAAAvD,KACYA,KAAZ+S,SAAYA,EACD/S,KAAXwa,OAAWA,EAhBTxa,KAAFoY,cAAkC,KAEhCpY,KAAF8B,MAAqB,GAGnB9B,KAAF6hB,eAAwB,GAItB7hB,KAAFggB,sBAAkC,EACxBhgB,KAAVmgB,SAAqC,GAC3BngB,KAAVoZ,kBAA4ChF,EAA5CA,aAAyDC,MAC/CrU,KAAVgf,iBAA2C5K,EAA3CA,aAAwDC,MAMpDrU,KAAKoZ,kBAAoBpZ,KAAK+S,SAASqF,cACpCvG,UAAP,SAAiByB,GAEP/P,EAAK6U,cADE,MAAL9E,EACmBA,EAGA,OAK3BtT,KAAKgf,iBAAmBhf,KAAK+S,SAAS8B,eACnChD,UAAP,SAAkByB,GACD,MAALA,IACF/P,EAAKsR,eAAiBvB,KCzDhC,IAAAwO,IAKEA,GAAFliB,UAAAmiB,UAAE,SAAUC,EAAc5R,GACtB,OAAO4R,EAAMzQ,OAAjB,SAAwBmG,GAClB,OAAiB,IAAhBtH,EAAK1Q,QAAiBgY,EAAKuK,KAAK/H,cAAcgI,SAAS9R,EAAK8J,iCAPnE,CAAAnT,KAACob,EAADA,KAAA/R,KAAA,CAAM,CACJ3N,KAAM,oBAER,CAAAsE,KAACgJ,EAADA,aAMA+R,IATA,SAAAA,MCwBA,IAAAM,IAaEjjB,OAAFoB,eAAM6hB,GAANxiB,UAAA,OAAA,KAAE,WAAyD,OAAOI,KAAKqiB,uCACrEljB,OAAFoB,eAAM6hB,GAANxiB,UAAA,UAAA,KAAE,WAAwB,OAAOI,KAAKsiB,0CAkBpCF,GAAFxiB,UAAAyJ,QAAE,SAAQkZ,EAAiBC,GACvBxiB,KAAKqiB,MAAQ,CAACE,QAAlBA,EAA2BC,SAA3BA,GACIxiB,KAAK+S,SAAS1J,QAAQrJ,KAAKqiB,QAG7BD,GAAFxiB,UAAA0J,QAAE,SAAQvG,GACN/C,KAAKsiB,SAAWvf,EAChB/C,KAAK+S,SAASzJ,QAAQvG,IAGxBqf,GAAFxiB,UAAA6iB,UAAE,SAAU1f,GACR/C,KAAK0iB,cAAgB3f,EAAM4f,cAAc5f,OAG3Cqf,GAAFxiB,UAAAgjB,YAAE,WACE5iB,KAAK6iB,aAAa/d,QAGpBsd,GAAFxiB,UAAAkjB,QAAE,SAAQ/f,GAGN,IAFJ,IAAQggB,EAAc,GAETxjB,EAAI,EAAGA,EAAIS,KAAK2X,KAAKqL,MAAMtjB,OAAQH,IAC1CwjB,GAAe/iB,KAAK2X,KAAKqL,MAAMzjB,GAAK,IAItC,OADAwjB,GAAe/iB,KAAK2X,KAAKsL,YAAclgB,GAIzCqf,GAAFxiB,UAAAsjB,OAAE,WACEljB,KAAKya,MAAQza,KAAKya,qBA9DtB,CAAA1T,KAACyM,EAADA,UAAApD,KAAA,CAAW,CAAXqD,SAAA,kBACEC,SAAU,6lDACV3H,OAAQ,CAAV,2QACE4H,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,0DA1BAoO,GAAAnO,eAAA,uDAiDAmO,IAEE,SAAFA,GAAsBrP,GAAA/S,KAAtB+S,SAAsBA,EAnBZ/S,KAAVqiB,MAA8D,KACpDriB,KAAVsiB,SAA6B,GAK3BtiB,KAAFya,MAAkB,EAChBza,KAAF0iB,cAA0B,GAUd1iB,KAAZ6iB,aAA8C,IAAI9R,EAAlDA,aCpCA,IAAAoS,IAsBEhkB,OAAFoB,eAAM4iB,GAANvjB,UAAA,sBAAA,KAAE,WACE,OAAOI,KAAX,+CAEEb,OAAFoB,eAAM4iB,GAANvjB,UAAA,oBAAA,KAAE,WACE,OAAOI,KAAX,+CAwKEb,OAAFoB,eAAM4iB,GAANvjB,UAAA,OAAA,KAAE,WAA2D,OAAOI,KAAKqiB,uCAmWvEc,GAAFvjB,UAAAwjB,SAAE,SAASrgB,GAGP,GAAa,MAATA,EACF,OAAO,EAEb,IAAYsgB,EAAUtgB,EAAMugB,MALJ,aAMlB,OAAe,MAAXD,GAAqC,GAAlBA,EAAQ3jB,OAAsB,EAC9CoJ,OAAOua,EAAQ,KAI1BF,GAAFvjB,UAAA2jB,cAAE,SAAcxgB,GAAd,IAAFQ,EAAAvD,KACI,OAAa,MAAT+C,EACK,IAECA,GAAS,IAAI2R,QAAQ,KAAM,IAAIwJ,MAAM,KAC1C3M,OAAT,SAAgB/N,GAAK,MAAM,KAANA,GAAiB,MAALA,IACxBkO,IAAT,SAAalO,GAAK,OAAAD,EAAK6f,SAAS5f,MAI9B2f,GAAFvjB,UAAA4jB,kBAAE,SAAkBzgB,GAEhB,OADWA,EAAMrD,QAEf,KAAK,EACH,MAAO,CAAC,EAAG,EAAG,EAAG,GACnB,KAAK,EACX,IAAc8D,EAAIT,EAAM,GAChB,MAAO,CAACS,EAAGA,EAAGA,EAAGA,GACnB,KAAK,EACX,IAAcigB,EAAM1gB,EAAM,GACZ2gB,EAAM3gB,EAAM,GAClB,MAAO,CAAC0gB,EAAKC,EAAKD,EAAKC,GACzB,KAAK,EACX,IAAcC,EAAM5gB,EAAM,GACZ6gB,EAAM7gB,EAAM,GAElB,MAAO,CAAC4gB,EAAKC,EADD7gB,EAAM,GACK6gB,GACzB,QACE,OAAO7gB,IAIbogB,GAAFvjB,UAAAikB,QAAE,SAAQ9gB,GAEN,OADW/C,KAAK8C,QAAgB,IAARC,EAAa,IAIvCogB,GAAFvjB,UAAAkD,QAAE,SAAQC,EAAeC,GACzB,IAAQzD,EAAIwD,EAAQE,KAAKC,IAAI,GAAIF,GAI7B,OAFAzD,EAAI0D,KAAKE,MAAM5D,IAEJ0D,KAAKC,IAAI,GAAIF,IAQ1BmgB,GAAFvjB,UAAAkkB,SAAE,WACF,IAAQhiB,EAAmB,GACvB,IACE,IAAK,IAAIvC,EAAI,EAAGA,EAAIS,KAAK+jB,UAAUjiB,MAAMpC,OAAQH,IAC/CuC,EAAMF,KAAKkN,EAAnBA,SAA4B9O,KAAK+jB,UAAUjiB,MAAMvC,KAE3CS,KAAK+S,SAAS3G,eAAetK,GAC7B,MAAOka,MAWXmH,GAAFvjB,UAAAiI,mBAAE,SAAmB0W,EAAaxW,GAC9B/H,KAAK+S,SAASlL,mBAAmB0W,EAAKxW,IASxCob,GAAFvjB,UAAAokB,SAAE,WAC4B,MAAtBhkB,KAAKoY,gBACTpY,KAAKoY,cAAcrM,OAAS+C,EAAhCA,SAAyC9O,KAAKoY,cAAcrM,QACxD/L,KAAK+S,SAAS3M,oBAAoBpG,KAAKoY,iBAWzC+K,GAAFvjB,UAAA+L,gBAAE,SAAgBnJ,EAAeO,GAC7B/C,KAAK+S,SAASpH,gBAAgBnJ,EAAOO,GACrC/C,KAAKikB,aAAelhB,EACpB/C,KAAKgkB,YAGPb,GAAFvjB,UAAAskB,gBAAE,SAAgBnc,EAAahF,GAC3B/C,KAAKmkB,uBAAuBrf,KAAK,CAAEiD,IAAvCA,EAA4ChF,MAA5CA,KAGEogB,GAAFvjB,UAAAwkB,iBAAE,SAAiBrc,EAAahF,GAC5B/C,KAAKqkB,wBAAwBvf,KAAK,CAAEiD,IAAxCA,EAA6ChF,MAA7CA,KAGEogB,GAAFvjB,UAAA0kB,qBAAE,SAAqBvc,EAAahF,GAChC/C,KAAKukB,4BAA4Bzf,KAAK,CAAEiD,IAA5CA,EAAiDhF,MAAjDA,KAGEogB,GAAFvjB,UAAA4kB,sBAAE,SAAsBzc,EAAahF,GACjC/C,KAAKykB,6BAA6B3f,KAAK,CAAEiD,IAA7CA,EAAkDhF,MAAlDA,KAWEogB,GAAFvjB,UAAAoM,iBAAE,SAAiBxJ,EAAeO,GAC9B/C,KAAK+S,SAAS/G,iBAAiBhM,KAAK2C,OAAQH,EAAOO,GACnD/C,KAAK0kB,WAAa3hB,GAYpBogB,GAAFvjB,UAAAsM,gBAAE,SAAgB1J,EAAeO,GAC7B/C,KAAK+S,SAAS7G,gBAAgB1J,EAAOO,GACrC/C,KAAK2kB,qBAAuB5hB,GAS9BogB,GAAFvjB,UAAA+P,eAAE,WACE3P,KAAK+S,SAASpD,eAAe3P,KAAKikB,cAClCjkB,KAAK+S,SAAS3M,oBAAoBpG,KAAKoY,gBAUzC+K,GAAFvjB,UAAAglB,UAAE,WACE,OAAO5kB,KAAK6kB,cAWd1B,GAAFvjB,UAAAklB,oBAAE,SAAoB/hB,GAClB,OAA0B,GAAtB/C,KAAK+kB,eAILhiB,IAD0B/C,KAAlC,cACwB4gB,WAgBtBuC,GAAFvjB,UAAA4N,UAAE,WACExN,KAAK+S,SAASvF,aAUhB2V,GAAFvjB,UAAAwP,YAAE,SAAYrH,GACV/H,KAAK+S,SAAS3D,YAAYrH,IAU5Bob,GAAFvjB,UAAAwN,cAAE,SAAcrF,GACZ/H,KAAK+S,SAAS9E,OAAO,gBAAiBlG,IAWxCob,GAAFvjB,UAAAqJ,YAAE,WACEjJ,KAAK+S,SAAS9J,YAAYjJ,KAAKkJ,WAGjCia,GAAFvjB,UAAAyJ,QAAE,SAAQhE,GACNrF,KAAKqiB,MAAQhd,EACbrF,KAAK+S,SAAS1J,QAAQhE,IAYxB8d,GAAFvjB,UAAA6K,aAAE,SAAa1D,GACX/G,KAAK+kB,eAAgB,EACrB/kB,KAAK+S,SAAStI,aAAa1D,IAG7Boc,GAAFvjB,UAAAwL,oBAAE,SAAoBrI,GAClB/C,KAAK+S,SAAS1H,oBAAoBtI,IAIpCogB,GAAFvjB,UAAAolB,OAAE,SAAO1W,GACe,IAAhBA,EAAMpK,MACRlE,KAAKilB,SAAW,kBAEhBjlB,KAAKilB,SAAW,eAWpB9B,GAAFvjB,UAAAuL,2BAAE,SAA2BjH,GACzBlE,KAAK+S,SAAS5H,2BAA2BjH,IAU3Cif,GAAFvjB,UAAA2L,uBAAE,SAAuBrH,GACrBlE,KAAK+S,SAASxH,uBAAuBrH,IAGvCif,GAAFvjB,UAAAslB,SAAE,WACEllB,KAAK+S,SAAS3M,oBAAoB,OAGpC+c,GAAFvjB,UAAAulB,kBAAE,SAAkB7W,GAChBtO,KAAKkhB,UAAYlhB,KAAKolB,QAAQ3K,KAAKK,GACnC9a,KAAKkhB,UAAUxG,kBAAkBvQ,YAAc0U,EAAnDA,mBAAsEhL,KAClE7T,KAAKkhB,UAAUxG,kBAAkB2K,WAAY,EAChC,MAAT/W,GAAoC,MAAnBA,EAAM9I,YACzBxF,KAAKkhB,UAAUxG,kBAAkB1V,QAAUsJ,EAAMtJ,QACjDhF,KAAKkhB,UAAUxG,kBAAkBlV,UAAY8I,EAAM9I,YAKvD2d,GAAFvjB,UAAAuT,SAAE,WAAA,IAAF5P,EAAAvD,KACIA,KAAKslB,UAAYtlB,KAAK+S,SAASN,YAC5BZ,UAAP,SAAiByB,GACT/P,EAAKzB,MAAQwR,GAAK,KAGtBtT,KAAKoZ,kBAAoBpZ,KAAK+S,SAASqF,cACpCvG,UAAP,SAAiByB,GACA,MAALA,EACE/P,EAAK6U,gBAAkB9E,IACzB/P,EAAK6U,cAAgB9E,EACrB/P,EAAKgiB,WAAaxW,EAA9BA,cAA4CuE,EAAEzF,YAClCtK,EAAKiiB,cAAe,EACpBjiB,EAAKkiB,eAAgB,EACrBliB,EAAKmiB,cAAe,EACpBniB,EAAKoiB,cAAe,EACpBpiB,EAAKqiB,aAAc,EACnBriB,EAAKsiB,mBAAoB,IAG3BtiB,EAAK6U,cAAgB,KACrB7U,EAAKgiB,WAAa,MAGxBvlB,KAAK8lB,UAAY9lB,KAAK+S,SAASvR,OAC5BqQ,UAAP,SAAiByB,GACLA,GAAgB,EAAXA,EAAE5T,SACT6D,EAAK/B,OAAS8R,EAEd/P,EAAKshB,aAAe,CAClBkB,QAAS,CACP,CAAC,OAAQ,SAAU,YAAa,UAEhC,CAAC,CAAElV,OAAU,GAAK,CAAEA,OAAU,IAC9B,CAAC,CAAEmV,KAAQ,WAAa,CAAEA,KAAQ,WAClC,CAAC,CAAEC,OAAU,OAAS,CAAEA,OAAU,UAIlC,CAAC,CAAEhe,KAAQ,CAAC,SAAS,EAAO,QAAS,UACrC,CAAC,CAAE4I,OAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,KAEhC,CAAC,CAAE5F,MAAS1H,EAAK/B,QACjB,CAAE0kB,WAAc3iB,EAAK/B,SACrB,CAAC,CAAE2kB,KAAQ5iB,EAAK6iB,QAChB,CAAC,CAAEC,MAAS9iB,EAAK8iB,QACjB,CAAC,WACD,CAAC,cASXrmB,KAAKsmB,QAAUtmB,KAAK+S,SAASqF,cAAclH,KACvCQ,EADRA,IAAA,SACaxM,GACH,OAAc,MAAVA,EAIG,GAHwB3B,EAAzC,cACyBgjB,WAIjBC,EADRA,uBACgCrV,EADhCA,UAC0C,gBAGtCnR,KAAKymB,gBAAkBzmB,KAAK+S,SAASqF,cAAclH,KAC/CK,EADRA,OAAA,SACe+B,GAAK,OAAK,MAALA,IAAY5B,EAAhCA,IAAA,SAAqC1J,GAC3B,GAAa,MAATA,EAAe,CAC7B,IAAgBjF,EAAQQ,EAAK6f,SAASpb,EAAM+D,OAAe,QAC/C,GAAa,MAAThJ,GAA0B,MAATA,EACnB,OAAOA,KAIbyjB,EADRA,wBAGIxmB,KAAK0mB,kBAAoB1mB,KAAK+S,SAASqF,cAAclH,KACjDQ,EADRA,IAAA,SACa1J,GACH,GAAa,MAATA,EACF,OAAQzE,EAAK6f,SAASpb,EAAM+D,OAAO,eAAiB,KAGxDya,EADRA,wBAGIxmB,KAAK2mB,mBAAqB3mB,KAAK+S,SAASqF,cAAclH,KAClDQ,EADRA,IAAA,SACa1J,GACH,GAAa,MAATA,EACF,OAASA,EAAM+D,OAAO,eAAkB,WAG5Cya,EADRA,wBAGIxmB,KAAK4mB,qBAAuB5mB,KAAK+S,SAASqF,cAAclH,KACpDQ,EADRA,IAAA,SACa1J,GACH,GAAa,MAATA,EACF,OAAOzE,EAAKigB,kBAAkBjgB,EAAKggB,cAAcvb,EAAM+D,OAAO,oBAGlEya,EADRA,uBACgCrV,EADhCA,UAC0C,CAAC,EAAG,EAAG,EAAG,KAChDnR,KAAK6mB,wBAA0B7mB,KAAK4mB,qBAAqB1V,KACvDK,EADNA,OAAA,SACauV,GAAK,OAAK,MAALA,IACZpV,EADNA,IAAA,SACUoV,GAAK,OAAA,EAAG,MAEd9mB,KAAK+mB,0BAA4B/mB,KAAK4mB,qBAAqB1V,KACzDK,EADNA,OAAA,SACauV,GAAK,OAAK,MAALA,IACZpV,EADNA,IAAA,SACUoV,GAAK,OAAA,EAAG,MAEd9mB,KAAKgnB,2BAA6BhnB,KAAK4mB,qBAAqB1V,KAC1DK,EADNA,OAAA,SACauV,GAAK,OAAK,MAALA,IACZpV,EADNA,IAAA,SACUoV,GAAK,OAAA,EAAG,MAEd9mB,KAAKinB,yBAA2BjnB,KAAK4mB,qBAAqB1V,KACxDK,EADNA,OAAA,SACauV,GAAK,OAAK,MAALA,IACZpV,EADNA,IAAA,SACUoV,GAAK,OAAA,EAAG,MAGd9mB,KAAKknB,sBAAwBlnB,KAAK+S,SAASqF,cAAclH,KACrDQ,EADRA,IAAA,SACa1J,GACH,GAAa,MAATA,EACF,OAAOzE,EAAKigB,kBAAkBjgB,EAAKggB,cAAcvb,EAAM+D,OAAO,qBAGlEya,EADRA,uBACgCrV,EADhCA,UAC0C,CAAC,EAAG,EAAG,EAAG,KAChDnR,KAAKmnB,6BAA+BnnB,KAAKknB,sBAAsBhW,KAC7DK,EADNA,OAAA,SACauV,GAAK,OAAK,MAALA,IACZpV,EADNA,IAAA,SACUoV,GAAK,OAAA,EAAG,MAEd9mB,KAAKonB,8BAAgCpnB,KAAKknB,sBAAsBhW,KAC9DK,EADNA,OAAA,SACauV,GAAK,OAAK,MAALA,IACZpV,EADNA,IAAA,SACUoV,GAAK,OAAA,EAAG,MAEd9mB,KAAKqnB,iCAAmCrnB,KAAKknB,sBAAsBhW,KACjEK,EADNA,OAAA,SACauV,GAAK,OAAK,MAALA,IACZpV,EADNA,IAAA,SACUoV,GAAK,OAAA,EAAG,MAEd9mB,KAAKsnB,gCAAkCtnB,KAAKknB,sBAAsBhW,KAChEK,EADNA,OAAA,SACauV,GAAK,OAAK,MAALA,IACZpV,EADNA,IAAA,SACUoV,GAAK,OAAA,EAAG,MAGd9mB,KAAKunB,gBAAkBvnB,KAAK+S,SAASqF,cAAclH,KAC/CQ,EADRA,IAAA,SACa1J,GACH,GAAa,MAATA,GAAiC,MAAhBA,EAAM+D,QAA4C,MAA1B/D,EAAM+D,OAAe,OAChE,OAAOxI,EAAKigB,kBAAkBjgB,EAAKggB,cAAcvb,EAAM+D,OAAe,WAG1Eya,EADRA,uBACgCrV,EADhCA,UAC0C,CAAC,EAAG,EAAG,EAAG,KAChDnR,KAAKwnB,mBAAqBxnB,KAAKunB,gBAAgBrW,KAC7CK,EADNA,OAAA,SACauV,GAAK,OAAK,MAALA,IACZpV,EADNA,IAAA,SACUoV,GAAK,OAAA,EAAG,MAEd9mB,KAAKynB,qBAAuBznB,KAAKunB,gBAAgBrW,KAC/CK,EADNA,OAAA,SACauV,GAAK,OAAK,MAALA,IACZpV,EADNA,IAAA,SACUoV,GAAK,OAAA,EAAG,MAEd9mB,KAAK0nB,sBAAwB1nB,KAAKunB,gBAAgBrW,KAChDK,EADNA,OAAA,SACauV,GAAK,OAAK,MAALA,IACZpV,EADNA,IAAA,SACUoV,GAAK,OAAA,EAAG,MAEd9mB,KAAK2nB,oBAAsB3nB,KAAKunB,gBAAgBrW,KAC9CK,EADNA,OAAA,SACauV,GAAK,OAAK,MAALA,IACZpV,EADNA,IAAA,SACUoV,GAAK,OAAA,EAAG,MAGd9mB,KAAK4nB,iBAAmB5nB,KAAK+S,SAASqF,cAAclH,KAChDQ,EADRA,IAAA,SACa1J,GACH,GAAa,MAATA,GAAiC,MAAhBA,EAAM+D,QAA6C,MAA3B/D,EAAM+D,OAAgB,QACjE,OAAOxI,EAAKigB,kBAAkBjgB,EAAKggB,cAAcvb,EAAM+D,OAAgB,YAG3Eya,EADRA,wBAEIxmB,KAAK6nB,oBAAsB7nB,KAAK4nB,iBAAiB1W,KAC/CK,EADNA,OAAA,SACauV,GAAK,OAAK,MAALA,IACZpV,EADNA,IAAA,SACUoV,GAAK,OAAA,EAAG,MAEd9mB,KAAK8nB,sBAAwB9nB,KAAK4nB,iBAAiB1W,KACjDK,EADNA,OAAA,SACauV,GAAK,OAAK,MAALA,IACZpV,EADNA,IAAA,SACUoV,GAAK,OAAA,EAAG,MAEd9mB,KAAK+nB,uBAAyB/nB,KAAK4nB,iBAAiB1W,KAClDK,EADNA,OAAA,SACauV,GAAK,OAAK,MAALA,IACZpV,EADNA,IAAA,SACUoV,GAAK,OAAA,EAAG,MAEd9mB,KAAKgoB,qBAAuBhoB,KAAK4nB,iBAAiB1W,KAChDK,EADNA,OAAA,SACauV,GAAK,OAAK,MAALA,IACZpV,EADNA,IAAA,SACUoV,GAAK,OAAA,EAAG,MAGd9mB,KAAKioB,yBAA2BjoB,KAAK+S,SAASqF,cAAclH,KACxDQ,EADRA,IAAA,SACa1J,GACH,GAAa,MAATA,GAAiC,MAAhBA,EAAM+D,OACzB,OAAO/D,EAAM+D,OAAwB,iBAAK,KAG9Cya,EADRA,wBAGIxmB,KAAKkoB,eAAiBloB,KAAK+S,SAASqF,cAAclH,KAC9CQ,EADRA,IAAA,SACa1J,GACH,GAAa,MAATA,GAAiC,MAAhBA,EAAM+D,OACzB,OAAO/D,EAAM+D,OAAc,OAAK,KAGpCya,EADRA,wBAGIxmB,KAAKmoB,mBAA0DnoB,KAAnE,uBACOkR,KAAKkX,EAAZA,eAA2BpoB,KAAKunB,kBACzB1V,UAAP,SAAkBE,GACV,GAAS,MAALA,EAAJ,CACR,IAAchK,EAAMgK,EAAE,GAAGhK,IACXhF,EAAQgP,EAAE,GAAGhP,MACbS,EAAIuO,EAAE,IAAM,CAAC,EAAG,EAAG,EAAG,GACnB,MAALvO,GAAaA,EAAE9D,OAASqI,IAC5BvE,EAAEuE,GAAOhF,EACTQ,EAAKoI,gBAAgB,SAAUnI,OAGnCxD,KAAKmoB,mBAAmB5f,IAAyCvI,KAArE,wBACOkR,KAAKkX,EAAZA,eAA2BpoB,KAAK4nB,mBACzB/V,UAAP,SAAkBE,GACV,GAAS,MAALA,EAAJ,CACR,IAAchK,EAAMgK,EAAE,GAAGhK,IACXhF,EAAQgP,EAAE,GAAGhP,MACbS,EAAIuO,EAAE,IAAM,CAAC,EAAG,EAAG,EAAG,GACnB,MAALvO,GAAaA,EAAE9D,OAASqI,IAC5BvE,EAAEuE,GAAOhF,EACTQ,EAAKoI,gBAAgB,UAAWnI,QAGpCxD,KAAKmoB,mBACF5f,IAAyCvI,KAAhD,4BACSkR,KAAKkX,EAAdA,eAA6BpoB,KAAK4mB,uBACzB/U,UAAT,SAAoBE,GACV,GAAS,MAALA,EAAJ,CACV,IAAgBhK,EAAMgK,EAAE,GAAGhK,IACXhF,EAAQgP,EAAE,GAAGhP,MACbS,EAAIuO,EAAE,IAAM,CAAC,EAAG,EAAG,EAAG,GACnB,MAALvO,GAAaA,EAAE9D,OAASqI,IAC5BvE,EAAEuE,GAAOhF,EACTQ,EAAKoI,gBAAgB,eAAgBnI,QAI3CxD,KAAKmoB,mBAAmB5f,IACevI,KAD3C,6BAESkR,KAAKkX,EAAdA,eAA6BpoB,KAAKknB,wBACzBrV,UAAT,SAAoBE,GACV,GAAS,MAALA,EAAJ,CACV,IAAgBhK,EAAMgK,EAAE,GAAGhK,IACXhF,EAAQgP,EAAE,GAAGhP,MACbS,EAAIuO,EAAE,IAAM,CAAC,EAAG,EAAG,EAAG,GACnB,MAALvO,GAAaA,EAAE9D,OAASqI,IAC5BvE,EAAEuE,GAAOhF,EACTQ,EAAKoI,gBAAgB,gBAAiBnI,SAK9C2f,GAAFvjB,UAAAyoB,YAAE,SAAYC,GACVtoB,KAAKoY,cAAgBkQ,EAAQpjB,OAAOqjB,aACV,MAAtBvoB,KAAKoY,gBACTpY,KAAKulB,WAAaxW,EAAtBA,cAAoC/O,KAAKoY,cAAcvK,cAGrDsV,GAAFvjB,UAAA2T,YAAE,WACEvT,KAAKoZ,kBAAkBlG,cACvBlT,KAAKslB,UAAUpS,cACflT,KAAK8lB,UAAU5S,cACflT,KAAKwoB,gBAAgBtV,cACrBlT,KAAKyoB,kBAAkBvV,cACvBlT,KAAK0oB,iBAAiBxV,cACtBlT,KAAK2oB,WAAWzV,cAChBlT,KAAKmoB,mBAAmBjV,8BA7mC5B,CAAAnM,KAACyM,EAADA,UAAApD,KAAA,CAAW,CAAXqD,SAAA,gCACEC,SAAU,4rnBACV3H,OAAQ,CAAV,27HACE4H,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,6EANAmP,IA2fE,SAAFA,GACYiC,EACArS,GAFV,IAAFxP,EAAAvD,KACYA,KAAZolB,QAAYA,EACAplB,KAAZ+S,SAAYA,EA7eV/S,KAAF+kB,eAAkB,EAOhB/kB,KAAFoY,cAAkC,KAahCpY,KAAF8B,MAAqB,GAGnB9B,KAAFwB,OAAqB,GAanBxB,KAAF+jB,UAAmB,CAACjiB,MAAO,IAMzB9B,KAAFulB,WAAe,GAabvlB,KAAF4oB,gBAA4B,EAO1B5oB,KAAF6oB,iBAA6B,EAO3B7oB,KAAF8oB,qBAAiC,EAO/B9oB,KAAF+oB,sBAAkC,EAOhC/oB,KAAFgpB,gBAAoB,UAClBhpB,KAAF2kB,qBAAyB,qBACvB3kB,KAAFipB,YAAgB,UACdjpB,KAAF0kB,WAAe,eAUb1kB,KAAFqmB,MAAU,EAAC,EAAO,SAAU,QAAS,WAEnCrmB,KAAFomB,MAAU,EACN,EACA,SACA,eACA,OACA,iBACA,wBACA,cACA,YACA,mBACA,SACA,QACA,eACA,SACA,gBACA,QACA,eAEFpmB,KAAFkpB,cAAuB,GACrBlpB,KAAF6kB,aAAiB,CACbkB,QAAS,CACP,CAAC,WACD,CAAC,OAAQ,SAAU,YAAa,UAGhC,CAAC,CAAElV,OAAU,GAAK,CAAEA,OAAU,IAC9B,CAAC,CAAEmV,KAAQ,WAAa,CAAEA,KAAQ,WAClC,CAAC,CAAEC,OAAU,OAAS,CAAEA,OAAU,UAIlC,CAAC,CAAEhe,KAAQ,CAAC,SAAS,EAAO,QAAS,UACrC,CAAC,CAAE4I,OAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,KAEhC,CAAC,CAAE5F,MAASjL,KAAKwB,QACjB,CAAE0kB,WAAclmB,KAAKwB,SACrB,CAAC,CAAE2kB,KAAQnmB,KAAKomB,QAChB,CAAC,CAAEC,MAASrmB,KAAKqmB,QAEjB,CAAC,WAaLrmB,KAAFmpB,iBAA+B,GAC7BnpB,KAAFopB,iBAAqB,EAOnBppB,KAAFkJ,SAAa,iEAOXlJ,KAAFumB,SAAa,GAMXvmB,KAAFwlB,cAAiB,EACfxlB,KAAFylB,eAAkB,EAChBzlB,KAAF0lB,cAAiB,EACf1lB,KAAF2lB,cAAiB,EACf3lB,KAAF4lB,aAAgB,EACd5lB,KAAF6lB,mBAAsB,EACpB7lB,KAAFikB,aAAiB,GAEPjkB,KAAVqiB,MAAgE,KAG9DriB,KAAFqpB,QAAiB,CACbhkB,KAAQ,OACRikB,MAAS,SACT3R,KAAQ,MAGV3X,KAAFupB,QAAiB,CACblkB,KAAQ,QACR2d,MAAS,CAAC,aACVC,YAAe,aACfqG,MAAS,QACT3R,KAAQ,CACN,CACEqL,MAAS,KACTf,KAAQ,WAEV,CACEe,MAAS,KACTf,KAAQ,UAEV,CACEe,MAAS,KACTf,KAAQ,SAEV,CACEe,MAAS,KACTf,KAAQ,YAEV,CACEe,MAAS,KACTf,KAAQ,gBAEV,CACEe,MAAS,KACTf,KAAQ,WAEV,CACEe,MAAS,KACTf,KAAQ,YAEV,CACEe,MAAS,KACTf,KAAQ,cAEV,CACEe,MAAS,KACTf,KAAQ,gCAEV,CACEe,MAAS,KACTf,KAAQ,QAEV,CACEe,MAAS,KACTf,KAAQ,eAEV,CACEe,MAAS,KACTf,KAAQ,iBAEV,CACEe,MAAS,KACTf,KAAQ,oCAEV,CACEe,MAAS,KACTf,KAAQ,aAEV,CACEe,MAAS,KACTf,KAAQ,SAEV,CACEe,MAAS,KACTf,KAAQ,qBAEV,CACEe,MAAS,KACTf,KAAQ,WAEV,CACEe,MAAS,KACTf,KAAQ,YAEV,CACEe,MAAS,KACTf,KAAQ,+BAEV,CACEe,MAAS,KACTf,KAAQ,SAEV,CACEe,MAAS,KACTf,KAAQ,cAEV,CACEe,MAAS,KACTf,KAAQ,SAEV,CACEe,MAAS,KACTf,KAAQ,UAEV,CACEe,MAAS,KACTf,KAAQ,iBAEV,CACEe,MAAS,KACTf,KAAQ,SAEV,CACEe,MAAS,KACTf,KAAQ,YAEV,CACEe,MAAS,KACTf,KAAQ,WAEV,CACEe,MAAS,KACTf,KAAQ,SAEV,CACEe,MAAS,KACTf,KAAQ,cAEV,CACEe,MAAS,KACTf,KAAQ,UAEV,CACEe,MAAS,KACTf,KAAQ,QAEV,CACEe,MAAS,KACTf,KAAQ,cAEV,CACEe,MAAS,KACTf,KAAQ,aAEV,CACEe,MAAS,KACTf,KAAQ,WAEV,CACEe,MAAS,KACTf,KAAQ,WAEV,CACEe,MAAS,KACTf,KAAQ,cAEV,CACEe,MAAS,KACTf,KAAQ,WAEV,CACEe,MAAS,KACTf,KAAQ,SAEV,CACEe,MAAS,KACTf,KAAQ,WAEV,CACEe,MAAS,KACTf,KAAQ,yBAEV,CACEe,MAAS,KACTf,KAAQ,SAEV,CACEe,MAAS,KACTf,KAAQ,WAEV,CACEe,MAAS,KACTf,KAAQ,gDAEV,CACEe,MAAS,KACTf,KAAQ,yBAEV,CACEe,MAAS,KACTf,KAAQ,WAEV,CACEe,MAAS,KACTf,KAAQ,cAEV,CACEe,MAAS,KACTf,KAAQ,gBAEV,CACEe,MAAS,KACTf,KAAQ,WAEV,CACEe,MAAS,KACTf,KAAQ,gBAEV,CACEe,MAAS,KACTf,KAAQ,eAEV,CACEe,MAAS,KACTf,KAAQ,SAEV,CACEe,MAAS,KACTf,KAAQ,aAEV,CACEe,MAAS,KACTf,KAAQ,YAEV,CACEe,MAAS,KACTf,KAAQ,QAEV,CACEe,MAAS,KACTf,KAAQ,WAEV,CACEe,MAAS,KACTf,KAAQ,UAEV,CACEe,MAAS,KACTf,KAAQ,kBAEV,CACEe,MAAS,KACTf,KAAQ,UAEV,CACEe,MAAS,KACTf,KAAQ,WAEV,CACEe,MAAS,KACTf,KAAQ,QAEV,CACEe,MAAS,KACTf,KAAQ,WAEV,CACEe,MAAS,KACTf,KAAQ,cAEV,CACEe,MAAS,KACTf,KAAQ,8BAEV,CACEe,MAAS,KACTf,KAAQ,YAEV,CACEe,MAAS,KACTf,KAAQ,SAEV,CACEe,MAAS,KACTf,KAAQ,YAEV,CACEe,MAAS,KACTf,KAAQ,YAEV,CACEe,MAAS,KACTf,KAAQ,UAEV,CACEe,MAAS,KACTf,KAAQ,WAKNjiB,KAAVoZ,kBAA4ChF,EAA5CA,aAAyDC,MAC/CrU,KAAVslB,UAAoClR,EAApCA,aAAiDC,MACvCrU,KAAV8lB,UAAoC1R,EAApCA,aAAiDC,MACvCrU,KAAVwoB,gBAA0CpU,EAA1CA,aAAuDC,MAC7CrU,KAAVyoB,kBAA4CrU,EAA5CA,aAAyDC,MAC/CrU,KAAV0oB,iBAA2CtU,EAA3CA,aAAwDC,MAC9CrU,KAAV2oB,WAAqCvU,EAArCA,aAAkDC,MACxCrU,KAAVmoB,mBAA6C/T,EAA7CA,aAA0DC,MAEhDrU,KAAVmkB,uBACE,IAAIpT,EADNA,aAEU/Q,KAAVqkB,wBACE,IAAItT,EADNA,aAEU/Q,KAAVukB,4BACE,IAAIxT,EADNA,aAEU/Q,KAAVykB,6BACE,IAAI1T,EADNA,aAwTE/Q,KAAFilB,SAAqB,kBAjTjBjlB,KAAK8jB,WAEL9jB,KAAKqpB,QAAQ1R,KAAOxY,OAAOqqB,KAAKzW,EAAS0W,UAAUlY,OAAvD,SAA8D+B,GAAK,MAAK,YAALA,IAAiB5B,IAApF,SAAwFnS,GAClF,MAAO,CAAEkD,KAAMlD,EAAG0R,MAAO8B,EAAS0W,SAASlqB,MAG7CS,KAAKwoB,gBAAkBxoB,KAAK+S,SAAS0G,aAAa5H,UAAtD,SAAgEvS,GAC7B,MAAzBA,EAAE,sBACJiE,EAAKohB,qBAAuBrlB,EAAE,uBAGlCU,KAAKyoB,kBAAoBzoB,KAAK+S,SAAS2G,cAAc7H,UAAzD,SAAmEvS,GAChC,MAAzBA,EAAE,sBACJiE,EAAKohB,qBAAuBrlB,EAAE,uBAGlCU,KAAK0oB,iBAAmB1oB,KAAK+S,SAAS4G,aAAa9H,UAAvD,SAAiEvS,GAC9B,MAAzBA,EAAE,sBACJiE,EAAKohB,qBAAuBrlB,EAAE,uBAGlCU,KAAK2oB,WAAa3oB,KAAK+S,SAASpQ,OAAOkP,UAA3C,SAAqDvS,GAC/CiE,EAAKZ,OAASrD,ICrgBpB,IAAAoqB,IA0LEA,GAAF9pB,UAAA+pB,MAAE,SAAM5mB,GAMJ,OALA/C,KAAK4pB,YAAYnoB,QAArB,SAA8BooB,GACxB,GAAIA,EAAK9mB,OAASA,EAChB,OAAe8mB,EAAvB,YAGA,GAQEH,GAAF9pB,UAAAkqB,QAAE,WACE9pB,KAAK+pB,WAAW/pB,KAAKgqB,WAGvBN,GAAF9pB,UAAAqqB,gBAAE,WAAA,IAAF1mB,EAAAvD,KACUkqB,EAAclqB,KAAKmqB,YAAYxU,cAAcyU,cAAc,8BAC7DC,EAAerqB,KAAKqqB,SAAWrqB,KAAKsqB,eAExCC,EAAMC,SAASxqB,KAAKmmB,MAAM,GAEtB+D,IACFG,EAAiB,QAAIH,EACrBG,EAAiB,SAAI,GAEvBrqB,KAAKmqB,YAAYxU,cAAc8U,mBAC7B,YAAa,oCAGfzqB,KAAK0qB,WAAa1qB,KAAKmqB,YAAYxU,cAAcyU,cAAc,0BAE/DpqB,KAAK2qB,YAAc,IAAIJ,EAAMvqB,KAAK0qB,WAAY,CAC5CL,QAASA,EACTO,YAAa5qB,KAAK4qB,aAAe,uBACjCC,SAAU7qB,KAAK6qB,WAAY,EAC3BC,MAAO9qB,KAAK8qB,OAAS,OACrBC,QAAS/qB,KAAK+qB,UAIhB/qB,KAAKgrB,cAAclmB,KAAK9E,KAAK2qB,aAC7B3qB,KAAK8pB,UAGL9pB,KAAK2qB,YAAYM,GAAG,mBAAxB,SAA6CzU,EAAY0U,EAAeC,GAClE5nB,EAAK6nB,iBAAiBtmB,KAAK,CACzBmZ,OAAQ1a,EAAKonB,YACbnU,MAAOA,EACP0U,SAAUA,EACVC,OAAQA,IAGL3U,GACHjT,EAAK8nB,mBAKTrrB,KAAK2qB,YAAYM,GAAG,cAAxB,SAAwCK,EAAYC,EAAeJ,GACnE,IAAUK,EAAYjoB,EAAKmnB,WAAWe,SAAS,GAAGC,UACtCpW,EAAO/R,EAAKonB,YAAYgB,UAEjB,gBAATH,IACFA,EAAO,MAGTjoB,EAAKqoB,cAAcJ,GAEnBjoB,EAAKsoB,eAAe/mB,KAAK,CACvBmZ,OAAQ1a,EAAKonB,YACba,KAAMA,EACNlW,KAAMA,EACNgW,MAAOA,EACPC,SAAUA,EACVJ,OAAQA,MAIhB,IAAQtB,EAAO7pB,KAAKmqB,YAAYxU,cAAcyU,cAAc,mBACxDpqB,KAAK8rB,WAAa9rB,KAAK+rB,UAAUC,OAAOnC,EAAM,QAAlD,SAA4DxK,GACtD9b,EAAKsf,aAAa/d,UAMtB4kB,GAAF9pB,UAAAmqB,WAAE,SAAWxB,GAAX,IAAFhlB,EAAAvD,KAGI,GAFAA,KAAK8N,QAAUya,EAEXvoB,KAAK2qB,YAAa,CACpB,GAAIpC,EAsBF,YArBIA,GAAgBvoB,KAAKgqB,UAAahqB,KAAKisB,MAkBhC1D,GAAgBvoB,KAAKgqB,UAC9BhqB,KAAK2qB,YAAYuB,UAAU3D,IAlBdvoB,KAAKmqB,YAAYxU,cAAcyU,cAAc,kBACnDsB,UAAY1rB,KAAKgqB,SACNhqB,KAAKmqB,YAAYxU,cAAcwW,iBAAiB,aACtD1qB,QAAtB,SAA+BooB,GAC/B,IAAkBuC,EAAW7oB,EAAKwoB,UAAUC,OAC9BnC,EAAM,QADpB,SAC8BxK,GAC9B,IAAoB9c,EAAM,CACRyC,QAAWzB,EAAKomB,MAAME,EAAKwC,WAC3B7mB,UAAaqkB,GAEftmB,EAAKsf,aAAa/d,KAAKvC,KAG3BgB,EAAKwoB,UAAU/H,SAAS6F,EAAM,SAAU,WACxCtmB,EAAK+oB,UAAU1qB,KAAK,CAAEwqB,SAAlCA,EAA4CpnB,QAAS6kB,IACzCtmB,EAAK0oB,OAAQ,MAOnBjsB,KAAK2qB,YAAY4B,QAAQ,MAI7B7C,GAAF9pB,UAAA4sB,iBAAE,SAAiBC,GACfzsB,KAAK4rB,cAAgBa,GAGvB/C,GAAF9pB,UAAA8sB,kBAAE,SAAkBD,GAChBzsB,KAAKqrB,eAAiBoB,GAGxB/C,GAAF9pB,UAAA+sB,SAAE,SAAS/a,GACP,IAAK5R,KAAK2qB,YACR,OAAO,KAGb,IAAQiC,EAGA,GACFC,GAAQ,EAEJC,EAAa9sB,KAAK2qB,YAAYgB,UAAUlX,OAAO/U,OAoBrD,OAlBIM,KAAK+sB,YACPH,EAAII,eAAiB,CACnBC,MAAOH,EACPC,UAAW/sB,KAAK+sB,WAGlBF,EAAQC,GAAc9sB,KAAK+sB,YAAcD,GAGvC9sB,KAAKktB,YACPN,EAAIO,eAAiB,CACnBF,MAAOH,EACPI,UAAWltB,KAAKktB,WAGlBL,EAAQC,GAAc9sB,KAAKktB,WAAaL,GAGnCA,EAAQ,KAAOD,GAGxBlD,GAAF9pB,UAAAyoB,YAAE,SAAYC,GAENA,EAAkB,UAAKtoB,KAAK2qB,aAC9B3qB,KAAK2qB,YAAYyC,QAAQ9E,EAAkB,SAAEC,cAE3CD,EAAiB,SAAKtoB,KAAK2qB,cAE7BJ,EAAMC,SAASxqB,KAAKmmB,MAAM,GAC1BnmB,KAAK2qB,YAAc,IAAIJ,EAAMvqB,KAAK0qB,WAAY,CAC5CL,QAAS/B,EAAiB,QAAgB,aAC1CsC,YAAa5qB,KAAK4qB,aAAe,uBACjCC,SAAU7qB,KAAK6qB,WAAY,EAC3BC,MAAO9qB,KAAK8qB,OAAS,OACrBC,QAAS/qB,KAAK+qB,UAEhB/qB,KAAKmqB,YAAYxU,cAAc8V,SAAS,GAAGxd,WAG/Cyb,GAAF9pB,UAAA2T,YAAE,WACE,IAAK,IAAIhU,EAAI,EAAGA,EAAIS,KAAKssB,UAAU5sB,OAAQH,IAAK,CACpD,IAAU6sB,EAAWpsB,KAAKssB,UAAU/sB,GAAG6sB,SACjB,MAAZA,GACFA,IAGJpsB,KAAKqtB,gBAAgBna,8BAtXzB,CAAAnM,KAACyM,EAADA,UAAApD,KAAA,CAAW,CAAXqD,SAAA,mBACEC,SAAU,0EACV4Z,UAAF,CAAA,CACUC,QAAVC,EAAAA,kBAGAC,YAAAC,EAAAA,WAAA,iCAEA,CACIH,QAAJI,EAAAA,cACAF,YAAAC,EAAAA,WAAA,kCAGA3hB,OAAI,CAAJ,iHACA4H,cAAAC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,sFA1CA,CAAAjN,KAAE5G,KAsBFupB,GAAAzV,eAAA,iDAsGA4W,SAAA,CAAA,CAAA9jB,KAAAmY,EAAAA,QACA0L,YAAA,CAAA,CAAA7jB,KAAAmY,EAAAA,QACAgO,UAAA,CAAA,CAAAnmB,KAAAmY,EAAAA,QACA6N,UAAA,CAAA,CAAAhmB,KAAAmY,EAAAA,QACA6L,QAAA,CAAA,CAAAhkB,KAAAmY,EAAAA,QACA8K,SAAA,CAAA,CAAAjjB,KAAAmY,EAAAA,QACA8L,cAAA,CAAA,CAAGjkB,KAAH6mB,EAAAA,SACA/B,eAAA,CAAA,CAAG9kB,KAAH6mB,EAAAA,SAEAxC,iBAAA,CAAA,CAAArkB,KAAA6mB,EAAAA,SACA/K,aAAA,CAAA,CAAA9b,KAAA6mB,EAAAA,UASAlE,IASE,SAAFA,GACYS,EACA4B,EACAhZ,GAHV,IAAFxP,EAAAvD,KACYA,KAAZmqB,YAAYA,EACAnqB,KAAZ+rB,UAAYA,EACA/rB,KAAZ+S,SAAYA,EAxGV/S,KAAF6tB,WAAsB,GAMZ7tB,KAAVisB,OAA2B,EAEzBjsB,KAAF4pB,YAAgB,CACZ,CACEpnB,MAAS,8BACTO,MAAS,0BACT+qB,UAAa,oBACZ,CACDtrB,MAAS,SACTO,MAAS,OACT+qB,UAAa,QACZ,CACDtrB,MAAS,cACTO,MAAS,YACT+qB,UAAa,YAIjB9tB,KAAFomB,MAAU,EACN,EACA,SACA,eACA,OACA,iBACA,wBACA,cACA,YACA,mBACA,SACA,QACA,eACA,SACA,gBACA,QACA,eAGFpmB,KAAFsqB,eAAmB,CACftlB,SAAS,EACT+gB,QAAS,CACP,CAAC,WACD,CAAC,OAAQ,SAAU,YAAa,UAGhC,CAAC,CAAElV,OAAU,GAAK,CAAEA,OAAU,IAC9B,CAAC,CAAEmV,KAAQ,WAAa,CAAEA,KAAQ,WAClC,CAAC,CAAEC,OAAU,OAAS,CAAEA,OAAU,UAIlC,CAAC,CAAEhe,KAAQ,CAAC,SAAS,EAAO,QAAS,UACrC,CAAC,CAAE4I,OAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,KAEhC,CAAC,CAAE5F,MAASjL,KAAK6tB,WAAWE,SAC5B,CAAE7H,WAAclmB,KAAK6tB,WAAWE,UAChC,CAAC,CAAE5H,KAAQnmB,KAAKomB,QAChB,CAAC,CAAEC,MAASrmB,KAAK6tB,WAAWE,UAE5B,CAAC,WAML/tB,KAAFmmB,KAASoE,EAAMyD,OAAO,gBAYVhuB,KAAZgrB,cAA+C,IAAIja,EAAnDA,aACY/Q,KAAZ6rB,eAAgD,IAAI9a,EAApDA,aACY/Q,KAAZorB,iBAAkD,IAAIra,EAAtDA,aAQY/Q,KAAZ6iB,aAA8C,IAAI9R,EAAlDA,aAGE/Q,KAAF4rB,cAAA,aACE5rB,KAAFqrB,eAAA,aAEUrrB,KAAVssB,UAAqE,GAC3DtsB,KAAVqtB,gBAA0CjZ,EAA1CA,aAAuDC,MAMnDrU,KAAKmmB,KAAK8H,UAAYjuB,KAAKomB,MAC3BpmB,KAAKmmB,KAAK8H,UAAUrsB,KAAK,WAEzB5B,KAAKqtB,gBACHrtB,KAAK+S,SAAS3S,wBACXyR,UAAT,SAAoBvD,GAGV,QAAwB0B,IAApB1B,EAAM9I,UAAyB,CACjC8I,EAAM9I,UAAUkmB,UAAYpd,EAAMtJ,QAClCzB,EAAKwoB,UAAUmC,aAAa5f,EAAM9I,UAAW,UAAW8I,EAAMtJ,SAC1E,IAAkBmpB,EAAM5qB,EAAK+oB,UAAU/a,OAAvC,SAA8CI,GAAK,OAAAA,EAAE3M,UAAYsJ,EAAM9I,YACvD4oB,OAAhB,EACgBhC,OAAhB,EAC6B,EAAb+B,EAAIzuB,OAGU,OADhB0sB,GADAgC,EAAeD,EAAI,IACK/B,WAEtBA,KAGFgC,EAAe,CAAEppB,QAASsJ,EAAM9I,UAAW4mB,SAAU,MACrD7oB,EAAK+oB,UAAU1qB,KAAKwsB,IAEtBA,EAAahC,SAAW7oB,EAAKwoB,UAAUC,OACrC1d,EAAM9I,UAAW,QAD/B,WAEA,IAAoBjD,EAAM,CACRyC,QAAWsJ,EAAMtJ,QACjBQ,UAAa8I,EAAM9I,WAErBjC,EAAKsf,aAAa/d,KAAKvC,SAGtB,CACjB,IAAkBooB,EAAcpnB,EAAK4mB,YAAYxU,cAAcyU,cAAc,kBAC3DiE,EAAO9qB,EAAKwoB,UAAUuC,cAAc,KAC1C/qB,EAAKwoB,UAAUmC,aAAaG,EAAM,OAAQ,sBAC1C9qB,EAAKwoB,UAAU/H,SAASqK,EAAM,SAAU,WACxC9qB,EAAKwoB,UAAUmC,aAAaG,EAAM,UAAW9qB,EAAKomB,MAAMrb,EAAMtJ,UAC1E,IAAkBupB,EAAYhrB,EAAKwoB,UAAUyC,WAAWlgB,EAAMtJ,SAClDzB,EAAKwoB,UAAU0C,YAAYJ,EAAME,GAE3BnC,EAAW7oB,EAAKwoB,UAAUC,OAC9BqC,EAAM,QADpB,SAC8BhP,GAC9B,IAAoB9c,EAAM,CACRyC,QAAWzB,EAAKomB,MAAMrb,EAAMtJ,SAC5BQ,UAAa6oB,GAEf9qB,EAAKsf,aAAa/d,KAAKvC,KAG3BgB,EAAKwoB,UAAU0C,YAAY9D,EAAa0D,GACxC9qB,EAAK+oB,UAAU1qB,KAAK,CAAEwqB,SAAlCA,EAA4CpnB,QAASqpB,OCpMrD,IAAAK,IASEvvB,OAAFoB,eAAMmuB,GAAN9uB,UAAA,cAAA,KAAE,WACE,OAAOmP,EAAXA,+CAKE5P,OAAFoB,eAAMmuB,GAAN9uB,UAAA,eAAA,KAAE,WACE,OAAOI,KAAX,wCAiCE0uB,GAAF9uB,UAAA4X,iBAAE,SAAiBE,GAMf,OALAA,EAAKC,KAAKF,UAAUhW,QAAxB,SAAgCmW,GAC1B,IAAuC,EAAnC,CAAC,SAAU,UAAUjW,QAAQiW,GAC/B,OAAO,KAGJ,GAQT8W,GAAF9uB,UAAAoT,mBAAE,WAAA,IAAFzP,EAAAvD,KACQV,EAAI2T,EAAZA,MAAkB,KACXpB,UAAP,WACQvS,EAAE4T,cACF3P,EAAKwP,SAAS3O,iBASpBsqB,GAAF9uB,UAAAkT,iBAAE,WACE9S,KAAK+S,SAASzO,aAGhBoqB,GAAF9uB,UAAA+uB,iBAAE,WAGE,OAFgD3uB,KAApD,OAEA,SAGE0uB,GAAF9uB,UAAAgvB,QAAE,WACF,IACU5mB,EAAwChI,KAAlD,OACI,OAAkB,MAAdgI,EAAM3C,KAAuB,KAC1BwpB,EAAXA,mBAA8B7mB,EAAM3C,KAAKL,UAHtB,CAACud,QAAS,GAAIC,SAAU,KAMzCkM,GAAF9uB,UAAAkjB,QAAE,WACF,IACU9a,EAAwChI,KAAlD,OACI,OAAkB,MAAdgI,EAAM5C,KAAuB,KAC1BypB,EAAXA,mBAA8B7mB,EAAM5C,KAAKJ,UAHtB,MAMjB0pB,GAAF9uB,UAAAkvB,WAAE,SAAW5qB,GAIT,OAFuC,IADSlE,KAApD,OAC0BkI,QAAQhE,IAEZ6qB,WAAtB,KAGEL,GAAF9uB,UAAAovB,YAAE,WACF,IACUhnB,EAAwChI,KAAlD,OACI,OAAiB,MAAbgI,EAAMmB,IAAsB,KACzB0lB,EAAXA,mBAA8B7mB,EAAMmB,IAAInE,UAHrB,IAMjB0pB,GAAF9uB,UAAAqvB,aAAE,WACE,OAAsB,MAAfjvB,KAAKkF,OAAkClF,KAAlD,OAA+D2f,UAAYC,EAA3EA,aAAwFsP,OAGtFR,GAAF9uB,UAAAuvB,YAAE,WACF,IAAUnnB,EAAuBhI,KAAjC,OACI,MAAuB,KAAnBgI,EAAMue,SACD,MAEAve,EAAMue,UAIjBmI,GAAF9uB,UAAAwvB,cAAE,WACF,IAAUpnB,EAAsBhI,KAAhC,OACI,OAAwB,MAApBgI,EAAMqnB,WACD,CAAC,QAAS,IAAM,IAEhBrnB,EAAb,YAIE0mB,GAAF9uB,UAAA0vB,aAAE,WACF,IAAUtnB,EAAsBhI,KAAhC,OACI,MAAwB,KAApBgI,EAAMunB,UACD,0CAEAvnB,EAAMunB,WAIjBb,GAAF9uB,UAAA4vB,eAAE,WACF,IAAQxnB,EAEJ,MAA0B,MAD1BA,EAAsBhI,KAA1B,QACcyvB,YACD,+DAEAznB,EAAMynB,aAIjBf,GAAF9uB,UAAAiT,UAAE,SAAUvE,EAA8CC,GACtDvO,KAAK8S,mBACL9S,KAAK+S,SAAS1E,YAAYC,EAAOC,IAGnCmgB,GAAF9uB,UAAAuT,SAAE,WAAA,IAAF5P,EAAAvD,KACIA,KAAKoT,cAAgBpT,KAAK+S,SAASM,UAChCxB,UAAP,SAAiByB,GACT/P,EAAK8P,UAAYC,IAGrBtT,KAAK0vB,aAAe1vB,KAAK+S,SAASqF,cAAclH,KAC5CQ,EADRA,IAAA,SACaxM,GACH,OAAc,MAAVA,EACK,EAEqB3B,EAAxC,OACA,YAEQijB,EADRA,uBACgCrV,EADhCA,UAC0C,IAEtCnR,KAAKqgB,WAAargB,KAAK+S,SAASqF,cAAclH,KAC1CQ,EADRA,IAAA,SACaxM,GACH,OAAc,MAAVA,GAAwD,MAAtC,EAA2BgF,QAIxC,GAHuB3G,EAA1C,OACA,UAKQijB,EADRA,wBAGIxmB,KAAK2vB,eAAiB3vB,KAAK+S,SAASqF,cAAclH,KAAKQ,EAA3DA,IAAA,SAAgExM,GAC1D,GAAc,MAAVA,EACF,MAAO,GAGf,IAAY8C,EAAQzE,EAApB,OAEM,GAAqB,MAAjByE,EAAMkC,QAUR,MAAO,GAPP,IAFR,IAAY0lB,EAAuB,GAElBrwB,EAAI,EAAGA,EAAIyI,EAAMkC,QAAQxK,OAAQH,IACb,MAAvByI,EAAMkC,QAAQ3K,GAAG,IACnBqwB,EAAWhuB,KAAKoG,EAAMkC,QAAQ3K,GAAG,GAAGiD,OAAS,IAGjD,OAAOotB,KAMX5vB,KAAK6vB,gBAAkB7vB,KAAK+S,SAASqF,cAAclH,KAAKQ,EAA5DA,IAAA,SAAiExM,GAC3D,GAAc,MAAVA,EACF,MAAO,GAGf,IAAY8C,EAAwBzE,EAApC,OAEM,GAAqB,MAAjByE,EAAMkC,QAAiB,CAGzB,IAFR,IAAY4lB,EAA2B,GAEtBvwB,EAAI,EAAGA,EAAIyI,EAAMkC,QAAQxK,OAAQH,IACxC,IAAK,IAAIyJ,EAAI,EAAGA,EAAIhB,EAAMkC,QAAQ3K,GAAGG,OAAQsJ,IAClB,MAApBhB,EAAMkC,QAAQ3K,IAA2C,MAA3ByI,EAAMkC,QAAQ3K,GAAGyJ,EAAI,KAC/B,MAAnB8mB,EAAa9mB,KACf8mB,EAAa9mB,GAAK,IAEM,MAAtB8mB,EAAa9mB,GAAGzJ,KAClBuwB,EAAa9mB,GAAGzJ,GAAK,KAEvBuwB,EAAa9mB,GAAG3H,OAAO9B,EAAG,EAAGyI,EAAMkC,QAAQ3K,GAAGyJ,EAAI,GAAGxG,OAAS,KAIpE,OAAOstB,MAIX9vB,KAAK+S,SAAS3M,oBAAoBpG,KAAKkF,SAGzCwpB,GAAF9uB,UAAAyoB,YAAE,SAAYC,GACNA,EAAQpjB,QAAyC,MAA/BojB,EAAQpjB,OAAOqjB,eACnCvoB,KAAKkF,OAASojB,EAAQpjB,OAAOqjB,eAIjCmG,GAAF9uB,UAAA2T,YAAE,WACEvT,KAAKoT,cAAcF,8BArPvB,CAAAnM,KAACyM,EAADA,UAAApD,KAAA,CAAW,CAAXqD,SAAA,qCACEC,SAAU,85DACV3H,OAAQ,CAAV,ypGACE4H,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,0DANA0a,GAAAza,eAAA,mDAeA8b,QAAA,CAAA,CAAAhpB,KAAAmY,EAAAA,SASAwP,IAuBE,SAAFA,GACY3b,GAAA/S,KAAZ+S,SAAYA,EApBV/S,KAAFqT,WAAc,EAEZrT,KAAFgwB,qBAAyC,KAe/BhwB,KAAVoT,cAAwCgB,EAAxCA,aAAqDC,MCjDrD,IAAA4b,IAuBEA,GAAFrwB,UAAA+L,gBAAE,SAAgB5I,GACd/C,KAAK+S,SAASpH,gBAAgB3L,KAAK+vB,QAAShtB,GAC5C/C,KAAKikB,aAAelhB,EACpB/C,KAAKgkB,YAGPiM,GAAFrwB,UAAAokB,SAAE,WAC4B,MAAtBhkB,KAAKoY,gBACTpY,KAAKoY,cAAcrM,OAAS+C,EAAhCA,SAAyC9O,KAAKoY,cAAcrM,QACxD/L,KAAK+S,SAAS3M,oBAAoBpG,KAAKoY,iBAGzC6X,GAAFrwB,UAAA+P,eAAE,WACE3P,KAAK+S,SAASpD,eAAe3P,KAAKikB,cAClCjkB,KAAK+S,SAAS3M,oBAAoBpG,KAAKoY,eACvCpY,KAAK8Z,WAAWC,SAGlBkW,GAAFrwB,UAAAma,MAAE,WACE/Z,KAAK8Z,WAAWC,SAElBkW,GAAFrwB,UAAAuT,SAAE,WAAA,IAAF5P,EAAAvD,KACIA,KAAKoZ,kBAAoBpZ,KAAK+S,SAASqF,cACpCvG,UAAP,SAAiByB,GACC,OAANA,EACE/P,EAAK6U,gBAAkB9E,IACzB/P,EAAK6U,cAAgB9E,GAGvB/P,EAAK6U,cAAgB,QAK7B6X,GAAFrwB,UAAAqqB,gBAAE,WACEjqB,KAAK6pB,KAAKlU,cAAc8V,SAAS,GAAGyE,kBAAyB,MAAY,SAAI,WAG/ED,GAAFrwB,UAAA2T,YAAE,WACEvT,KAAKoZ,kBAAkBlG,8BA9D3B,CAAAnM,KAACyM,EAADA,UAAApD,KAAA,CAAW,CAAXqD,SAAA,qBACEC,SAAU,gaACVC,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,gFARAic,GAAAhc,eAAA,0DAaAgc,IAUE,SAAFA,GACYld,EACA+G,GADA9Z,KAAZ+S,SAAYA,EACA/S,KAAZ8Z,WAAYA,EATV9Z,KAAFoY,cAAkC,KAEhCpY,KAAFikB,aAAiB,qBACfjkB,KAAF+vB,QAAoB,QAEV/vB,KAAVoZ,kBAA4ChF,EAA5CA,aAAyDC,MCTzD,IAAA8b,IAmDEA,GAAFvwB,UAAAwwB,UAAE,SAAUrtB,GACR,OAAQ/C,KAAK+vB,SACX,IAAK,SACH/vB,KAAK2L,gBAAgB5I,GACrB,MACF,IAAK,SACH/C,KAAKkM,gBAAgBnJ,GACrB,MACF,IAAK,UACH/C,KAAKgM,iBAAiBjJ,GACtB,MACF,IAAK,QACH/C,KAAKqwB,cAActtB,KAKzBotB,GAAFvwB,UAAAywB,cAAE,SAActtB,GACO,oBAAf/C,KAAKwC,MACPxC,KAAKgL,wBAAwBjI,GAE7B/C,KAAKsL,oBAAoBvI,IAI7BotB,GAAFvwB,UAAA0wB,cAAE,SAAcvtB,GAEZA,EAAQA,EAAMgG,QAAQ,GACtB,IAAK,IAAIxJ,EAAI,EAAGA,EAAIS,KAAKwB,OAAO9B,OAAQH,IAAK,CACjD,IAAUgxB,EAAYvwB,KAAKwB,OAAOjC,GAAGixB,YAAY,KAC3CxwB,KAAKwB,OAAOjC,GAAKS,KAAKwB,OAAOjC,GAAGif,UAAU,EAAG+R,GAAa,IAAMxtB,EAAQ,MAY5EotB,GAAFvwB,UAAA+L,gBAAE,SAAgB5I,GACO,UAAjB/C,KAAK+vB,QACP/vB,KAAKqwB,cAActtB,IAEnB/C,KAAK+S,SAASpH,gBAAgB3L,KAAKwC,MAAOO,GAC1C/C,KAAKikB,aAAelhB,EACpB/C,KAAKgkB,aAYTmM,GAAFvwB,UAAAoM,iBAAE,SAAiBjJ,GACf/C,KAAK+S,SAAS/G,iBAAiBhM,KAAK2C,OAAQ3C,KAAKwC,MAAOO,GACxD/C,KAAK0kB,WAAa3hB,GAWpBotB,GAAFvwB,UAAAsM,gBAAE,SAAgBnJ,GACd/C,KAAK+S,SAAS7G,gBAAgBlM,KAAKwC,MAAOO,GAC1C/C,KAAK2kB,qBAAuB5hB,GAS9BotB,GAAFvwB,UAAAoL,wBAAE,SAAwBjI,GACtB/C,KAAK+S,SAAS/H,wBAAwBjI,IASxCotB,GAAFvwB,UAAA0L,oBAAE,SAAoBvI,GAClB/C,KAAK+S,SAASzH,oBAAoBvI,IAGpCotB,GAAFvwB,UAAAokB,SAAE,WAC4B,MAAtBhkB,KAAKoY,gBACTpY,KAAKoY,cAAcrM,OAAS+C,EAAhCA,SAAyC9O,KAAKoY,cAAcrM,QACxD/L,KAAK+S,SAAS3M,oBAAoBpG,KAAKoY,iBAGzC+X,GAAFvwB,UAAA2a,WAAE,WACEva,KAAKkhB,UAAYlhB,KAAKwa,OAAOC,KAAKwV,KAGpCE,GAAFvwB,UAAAuT,SAAE,WAAA,IAAF5P,EAAAvD,KAEIA,KAAKywB,WAAazwB,KAAK+S,SAASvR,OAC7BqQ,UAAP,SAAiByB,GACT/P,EAAK/B,OAAS8R,IAIlBtT,KAAKoZ,kBAAoBpZ,KAAK+S,SAASqF,cACpCvG,UAAP,SAAiByB,GACA,MAALA,EACE/P,EAAK6U,gBAAkB9E,IACzB/P,EAAK6U,cAAgB9E,GAGvB/P,EAAK6U,cAAgB,OAI3BpY,KAAKkoB,eAAiBloB,KAAK+S,SAASqF,cAAclH,KAC9CQ,EADRA,IAAA,SACa1J,GACH,GAAa,MAATA,EACF,OAAOA,EAAM+D,OAAc,OAAK,KAGpCya,EADRA,wBAGIxmB,KAAK2oB,WAAa3oB,KAAK+S,SAASpQ,OAAOkP,UAA3C,SAAqDvS,GAC/CiE,EAAKZ,OAASrD,IAGhBU,KAAKwoB,gBAAkBxoB,KAAK+S,SAAS0G,aAAa5H,UAAtD,SAAgEvS,GAC7B,MAAzBA,EAAE,sBACJiE,EAAKohB,qBAAuBrlB,EAAE,uBAGlCU,KAAKyoB,kBAAoBzoB,KAAK+S,SAAS2G,cAAc7H,UAAzD,SAAmEvS,GAChC,MAAzBA,EAAE,sBACJiE,EAAKohB,qBAAuBrlB,EAAE,uBAGlCU,KAAK0oB,iBAAmB1oB,KAAK+S,SAAS4G,aAAa9H,UAAvD,SAAiEvS,GAC9B,MAAzBA,EAAE,sBACJiE,EAAKohB,qBAAuBrlB,EAAE,wBAKpC6wB,GAAFvwB,UAAA2T,YAAE,WACEvT,KAAKywB,WAAWvd,cAChBlT,KAAKoZ,kBAAkBlG,cACvBlT,KAAK2oB,WAAWzV,cAChBlT,KAAKwoB,gBAAgBtV,cACrBlT,KAAKyoB,kBAAkBvV,cACvBlT,KAAK0oB,iBAAiBxV,8BArN1B,CAAAnM,KAACyM,EAADA,UAAApD,KAAA,CAAW,CAAXqD,SAAA,kBACEC,SAAU,24BACV3H,OAAQ,CAAV,IACE4H,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,6EAhBAmc,GAAAlc,eAAA,iDAkCAoJ,KAAA,CAAA,CAAAtW,KAAAmY,EAAAA,SAMAiR,IAiBE,SAAFA,GACYpd,EACDyH,GADCxa,KAAZ+S,SAAYA,EACD/S,KAAXwa,OAAWA,EAtCTxa,KAAFoY,cAAkC,KAEhCpY,KAAF0wB,WAAuB,EAQrB1wB,KAAF2kB,qBAAyB,qBACvB3kB,KAAF0kB,WAAe,eAkBL1kB,KAAVywB,WAAqCrc,EAArCA,aAAkDC,MACxCrU,KAAVoZ,kBAA4ChF,EAA5CA,aAAyDC,MAC/CrU,KAAV2oB,WAAqCvU,EAArCA,aAAkDC,MACxCrU,KAAVwoB,gBAA0CpU,EAA1CA,aAAuDC,MAC7CrU,KAAVyoB,kBAA4CrU,EAA5CA,aAAyDC,MAC/CrU,KAAV0oB,iBAA2CtU,EAA3CA,aAAwDC,MCvDxD,IAAAsc,IAaEA,GAAF/wB,UAAAgxB,YAAE,WAOE5wB,KAAK+S,SAASvH,UANS,CACrBqF,OAAU,CAAE/C,QAAW,GAAI/B,OAAU,IACrC+B,QAAW,CAAEA,QAAW,GAAI/B,OAAU,IACtC+E,OAAU,CAAEhD,QAAW,GAAI/B,OAAU,IACrCA,OAAU,KAGZ/L,KAAK8Z,WAAWC,SAGlB4W,GAAF/wB,UAAAma,MAAE,WACE/Z,KAAK8Z,WAAWC,wBAzBpB,CAAAhT,KAACyM,EAADA,UAAApD,KAAA,CAAW,CAAXqD,SAAA,iBACEC,SAAU,+OACVC,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,gFAPA2c,IAYE,SAAFA,GACY5d,EACA+G,GADA9Z,KAAZ+S,SAAYA,EACA/S,KAAZ8Z,WAAYA,ECLZ,IAAA+W,IA6BEA,GAAFjxB,UAAA4X,iBAAE,SAAiBE,GACf,OAAgD,EAAzCA,EAAKC,KAAKF,UAAU9V,QAAQ,WAGrCkvB,GAAFjxB,UAAAkxB,YAAE,aAKAD,GAAFjxB,UAAAmxB,WAAE,SAAWziB,GACTtO,KAAKgxB,SAASlsB,KAAKwJ,IAGrBuiB,GAAFjxB,UAAAiT,UAAE,SAAUvE,GACsB,MAA1BA,EAAMoJ,KAAKC,KAAKzS,QAClBlF,KAAK+S,SAASxG,iBAAiB,CAC7B1G,KAAM+I,KAAK+D,UAAUrE,EAAMoJ,KAAKC,KAAKzS,OAAO+rB,UAC5ClqB,KAAM,MAKZ8pB,GAAFjxB,UAAAsxB,kBAAE,WACE,IACJ,IAAUlpB,EAAQ4G,KAAKC,MAAM7O,KAAK+S,SAAS7M,gBAAkB,IACvDlG,KAAK+S,SAASvH,UAAUsD,EAA9BA,SAAuC9G,IACjC,MAAOgU,MAGX6U,GAAFjxB,UAAAuxB,SAAE,WACEnxB,KAAKoxB,MAAQpxB,KAAKoxB,KACdpxB,KAAKoxB,KACPpxB,KAAK+S,SAASnP,cAEd5D,KAAK+S,SAASjP,gBAIlB+sB,GAAFjxB,UAAA2a,WAAE,WACEva,KAAKkhB,UAAYlhB,KAAKwa,OAAOC,KAAKkW,oBApEtC,CAAA5pB,KAACyM,EAADA,UAAApD,KAAA,CAAW,CAAXqD,SAAA,6BACE4d,QAAF,CAAY,YACVtlB,OAAQ,CAAV,8JACE2H,SAAU,s7BACVC,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,6EAZA6c,IA8BE,SAAFA,GACY9d,EACDyH,GADCxa,KAAZ+S,SAAYA,EACD/S,KAAXwa,OAAWA,EAVTxa,KAAFgxB,SAAgC,IAAIjgB,EAApCA,aAEE/Q,KAAFoxB,MAAS,EASHpxB,KAAKsxB,aAAetxB,KAAK+S,SAASue,aChCxC,IAAAC,IAkBEA,GAAF3xB,UAAAuT,SAAE,WACEnT,KAAKia,WjBrBT,SAA+CpM,GAC7C,MAAO,iBAAiBA,EAAWqM,ciBoBfsX,CAA+BxxB,KAAK6N,4BAnB1D,CAAA9G,KAACyM,EAADA,UAAApD,KAAA,CAAW,CAAXqD,SAAA,2CACE4G,OAAQ,CAAV,cACE3G,SAAU,iKACV3H,OAAQ,CAAC,kJACT4H,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,sDAYE,SAAFud,MCZA,IAAAE,IA2CEA,GAAF7xB,UAAA8xB,eAAE,WACE1xB,KAAK2xB,WAAa3xB,KAAK2xB,UACvB3xB,KAAK+S,SAASrQ,UAAU1C,KAAKsP,MAC7BtP,KAAK+S,SAAS3M,oBAAoBpG,KAAKkF,SAGzCusB,GAAF7xB,UAAAqO,OAAE,WACyB,MAAnBjO,KAAKkP,YACPlP,KAAK+S,SAAS3M,oBAAoBpG,KAAKkP,YAEzClP,KAAK+S,SAAS9E,OAAOjO,KAAKsP,KAAMtP,KAAKwM,WAGvCilB,GAAF7xB,UAAAgyB,QAAE,WACE,OAAI5xB,KAAKkF,SAAWlF,KAAKoY,eAO3BqZ,GAAF7xB,UAAAyP,aAAE,SAAawiB,GAEM,QAAbA,EACF7xB,KAAK+S,SAAS1D,aACVrP,KAAKwM,SAAUxM,KAAKwM,SAAW,EAAoBxM,KAD7D,YAGMA,KAAK+S,SAAS1D,aACVrP,KAAKwM,SAAUxM,KAAKwM,SAAW,EAAoBxM,KAD7D,aAIEyxB,GAAF7xB,UAAAkyB,SAAE,WACE,MAAmB,WAAf9xB,KAAKwC,OAOXivB,GAAF7xB,UAAAmyB,YAAE,WAEE,QAA6B,EADE/xB,KAAnC,WACgBkI,QAAQxI,SAOtB+xB,GAAF7xB,UAAAuT,SAAE,WAAA,IAAF5P,EAAAvD,KACIA,KAAKwC,MAAQuM,EAAjBA,cAA+B/O,KAAKkF,OAAO2I,YACvC7N,KAAKia,WlBhFT,SAA4ClT,GAC1C,MAAO,iBAAiBgI,EAA1BA,cAAwChI,GAAMmT,ckB+ExB8X,CAA4BhyB,KAAKkF,OAAO2I,YAC1D7N,KAAKoa,YlBrFT,SAAqCrT,GACnC,OAAOuN,EAA2BvF,EAApCA,cAAkDhI,IkBoF3BkrB,CAAqBjyB,KAAKkF,OAAO2I,YAEpD7N,KAAKoT,cAAgBpT,KAAK+S,SAASM,UAChCxB,UAAP,SAAiByB,GACT/P,EAAK8P,UAAYC,IAGrBtT,KAAK+Y,WAAa/Y,KAAK+S,SAASiG,OAC7BnH,UAAP,SAAiByB,GACT/P,EAAKyV,OAAS1F,IAGlBtT,KAAKoZ,kBAAoBpZ,KAAK+S,SAASqF,cACpCvG,UAAP,SACMyB,IACE/P,EAAK6U,cAAgB9E,KACX/P,EAAK2B,SACb3B,EAAKouB,WAAY,MAKzBF,GAAF7xB,UAAA2T,YAAE,WACEvT,KAAKoT,cAAcF,cACnBlT,KAAK+Y,WAAW7F,cAChBlT,KAAKoZ,kBAAkBlG,8BAvH3B,CAAAnM,KAACyM,EAADA,UAAApD,KAAA,CAAW,CAAXqD,SAAA,yCACE4G,OAAQ,CAAV,OAAmB,aAAnB,WAAA,SAAA,QAAA,UACE3G,SAAU,6lCACV3H,OAAQ,CAAC,q6BACT4H,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,0DARAyd,IA0CE,SAAFA,GAAsB1e,GAAA/S,KAAtB+S,SAAsBA,EAxBpB/S,KAAFoY,cAAkC,KAChCpY,KAAF2xB,WAAc,EACZ3xB,KAAFiL,MAAoB,GAClBjL,KAAFkyB,QAAW,EAOTlyB,KAAFqT,WAAc,EAGZrT,KAAFgZ,QAAW,EAEDhZ,KAAVoZ,kBAA4ChF,EAA5CA,aAAyDC,MAC/CrU,KAAVoT,cAAwCgB,EAAxCA,aAAqDC,MAC3CrU,KAAV+Y,WAAqC3E,EAArCA,aAAkDC,MCjClD,IAAA8d,IAgCEA,GAAFvyB,UAAAoT,mBAAE,WAAA,IAAFzP,EAAAvD,KACQV,EAAI2T,EAAZA,MAAkB,KACXpB,UAAP,WACiB,MAALvS,GAAaA,EAAE4T,cACnB3P,EAAKwP,SAAS3O,iBASpB+tB,GAAFvyB,UAAAkT,iBAAE,WACE9S,KAAK+S,SAASzO,4BA9ClB,CAAAyC,KAACyM,EAADA,UAAApD,KAAA,CAAW,CAAXqD,SAAA,qCACEC,SAAU,yYACVC,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,0DANAme,IAuBE,SAAFA,GAAsBpf,GAAA/S,KAAtB+S,SAAsBA,EARpB/S,KAAFoyB,WAAyB7S,EAAzBA,uBAAgDsB,EAAhDA,cACE7gB,KAAFqyB,YAA0B9S,EAA1BA,uBAAiDxQ,EAAjDA,eASA,IAAQujB,EAAMtyB,KAAKqyB,YAAY1wB,QAAQ,WACtB,IAAT2wB,GACFtyB,KAAKqyB,YAAYhxB,OAAOixB,EAAK,GCxBnC,IAAAC,IAiBEpzB,OAAFoB,eAAMgyB,GAAN3yB,UAAA,SAAA,KAAE,WAA0B,OAAOI,KAAK2E,aACtC,SAAoB8G,GACJ,MAAVA,IACFzL,KAAK2E,QAAU8G,EACXzL,KAAKisB,OACPjsB,KAAKwyB,sDAOXD,GAAF3yB,UAAA6yB,mBAAE,WACEzyB,KAAKwyB,oBACLxyB,KAAKisB,OAAQ,GAGPsG,GAAV3yB,UAAA4yB,kBAAE,WACExyB,KAAK+S,SAAS3G,eAA8B,MAAfpM,KAAKyL,QAAiBzL,KAAKyL,OAAO3J,OAAc,IAC7E9B,KAAK+S,SAASvH,UAAUxL,KAAKyL,wBApCjC,CAAA1E,KAACyM,EAADA,UAAApD,KAAA,CAAW,CAAXqD,SAAA,qBACEC,SAAU,onBACV3H,OAAQ,CAAV,uSACE4H,cAAFC,EAAAA,kBAAAC,KACEC,gBAAFC,EAAAA,wBAAAC,0DANAue,GAAAte,eAAA,4FAoBAse,IASE,SAAFA,GAAsBxf,GAAA/S,KAAtB+S,SAAsBA,EAbZ/S,KAAVisB,OAA2B,EC+B3B,IAAAyG,mBAAA,CAAA3rB,KAAC4rB,EAADA,SAAAviB,KAAA,CAAU,CACRwiB,QAAS,CACPC,EAAJA,aACIC,EAAJA,YACIC,EAAJA,eACIC,EAAJA,gBACIC,EAAJA,sBACIC,EAAJA,cACIC,EAAJA,gBACIC,EAAJA,kBACIC,EAAJA,cACIC,EAAJA,cACIC,EAAJA,gBACIC,EAAJA,iBACIC,EAAJA,qBACIC,EAAJA,gBACIC,EAAJA,cACIC,EAAJA,iBACIC,EAAJA,iBACIC,EAAJA,gBACIC,EAAJA,kBACIC,EAAJA,gBACIC,EAAJA,eACIC,EAAJA,aACIC,EAAJA,sBACIC,EAAJA,eACIC,EAAJA,eAEEC,aAAc,CACZ5K,GACA9W,EACA+B,EACA0C,EACAuC,EACAI,EACAM,EACAQ,EACAgF,GACAsC,GACAe,GACAuL,GACAuB,GACAE,GACAQ,GACAE,GACAU,GACAE,GACAU,GACAI,GACAzQ,IAEFyS,QAAS,CACPhC,IAEFiC,gBAAiB,CACf1Z,EACAmV,GACAU,IAEFrD,UAAW,CACTntB,OAGJuyB,IA/DA,SAAAA"}