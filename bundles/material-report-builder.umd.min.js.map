{"version":3,"sources":["src/material/material-report-builder.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ajf","material","reportBuilder","ng","common","core","forms","cdk","dragDrop","button","buttonToggle","card","dialog","gridList","icon","list","select","sidenav","slideToggle","slider","tabs","toolbar","tooltip","ngxTranslate","ngxColorPicker","map","table","text","image","monacoEditor","rxjs","models","reports","utils","operators","quill","this","core$1","common$1","forms$1","image$1","Quill","hasOwnProperty","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","call","apply","AJF_REPORTS_CONFIG","InjectionToken","AjfReportBuilderService","reportsConfig","_this","_customWidgetsUpdate","Subject","_originUpdate","_savedReportUpdate","_jsonStack","BehaviorSubject","_emptyContent","_onDraggedUpdate","_onOverUpdate","_fixedZoomUpdate","_onDragEnterUpdate","_headerWidgetsUpdate","_contentWidgetsUpdate","_footerWidgetsUpdate","_colorUpdate","_defaultColor","_currentWidgetUpdate","_formsVariablesUpdate","_conditionNamesUpdate","_saveReport","_report","_reportStylesUpdate","_reportFormsUpdate","_updates","header","content","footer","color","customWidgets","_saveReportEvent","EventEmitter","_saveFormulaTOHtml","columnWidthChangedEmitter","_iconSets","ajf-icon","_lastDeletedJson","icons","_origin","pipe","startWith","share","_savedReport","_onDragged","_onOver","_fixedZoom","_onDragEnter","_reportStyles","scan","styles","op","_reportForms","_customWidgets","widgets","_formsVariables","filter","variables","publishReplay","refCount","_conditionNames","_headerWidgets","_headerStyles","_contentWidgets","_contentStyles","_footerWidgets","_footerStyles","_color","_currentWidget","widget","f","_c","fillFormsVariables","subscribe","reportObs","r","_colors","tempColors","parseColor","obj","widgetType","AjfWidgetType","Layout","layoutObj","j","columnObj","z","_styles","_widgets","json","_r","combineLatest","report","reportForms","w","deepCopy","ro","setSaveReport","next","pushJsonStack","JSON","stringify","getFormulaToHtmlEvent","asObservable","defineProperty","get","enumerable","configurable","filterNodes","nodes","node","nodeType","AjfNodeType","AjfNodeGroup","AjfSlide","AjfRepeatingSlide","AjfField","fieldType","AjfFieldType","String","splice","cssStyles","colors","forEach","k","indexOf","push","labels","names","types","flattenNodes","extractLabelsNodes","extractNamesNodes","extractTypesNodes","label","name","setOrigin","origin","roundTo","value","decimalPositions","Math","pow","floor","isNumber","test","isNumberArray","fixedZoomIn","fixedZoomOut","dragEnter","array","index","dragStarted","dragEnded","overStarted","overEnded","dragLeave","saveReport","emit","saveImageFormula","formula","flag","saveFormulaToHtml","htmlFormula","reference","setEmptyContent","val","currentStack","getValue","popJsonStack","pop","updateCurrentWidget","updateArrayWidgets","type","newWidget","Error","_widget","instantColumnValue","newValue","idx","myObj","size","columns","spreadValue","objNum","sum","idxFirstNoObj","add","foundFirstNoObj","re1","RegExp","re2","re3","oldValue","Number","toFixed","setImageUrl","imageUrl","url","createFormula","setIcon","setFlag","saveCondition","conditionText","visibility","condition","saveChartFormula","_label","_level","_mainIndex","_index","formulaText","aggregationType","dataset","aggregation","createAggregation","saveTableFormula","removeTableMainData","_removeFromCurrentWidgetArrayProperty","removeData","setChartType","_setCurrentWidgetProperty","removeMainData","_idx","removeRelatedData","_mainIdx","setChartBackgroundColor","addChartBackgroundColor","_addToCurrentWidgetArrayProperty","removeChartBackgroundColor","setChartBorderColor","setChartBorderWidth","addChartBorderColor","removeChartBorderColor","setReport","setWidgetStyles","isPxStyle","Array","join","setSectionStyles","setReportStyles","setReportForms","_form","addCustomWidgets","position","resetCustomWidgets","changeLabelCustomWidget","addHeaderWidget","_addWidgetToContainer","addContentWidget","addfooterWidget","unfixedColumn","num","checkSum","parseFloat","addColumn","tmpValue","tempObj","createWidget","removeWidgetToColumn","column","remove","spread","addToContent","addToColumn","event","toColumn","dragData","fromColumn","fromIndex","arrayFrom","parse","changePositionOnColumn","toIndex","fromWidget","fixedColumn","changeColumn","from","to","layoutWidget","fromColumnValue","toColumnValue","addCustomColor","subj","propName","arr","decorators","Injectable","ctorParameters","undefined","Optional","Inject","args","AjfReportBuilderColumn","_service","showActions","layoutShow","onDragged","_onDraggedSub","Subscription","EMPTY","addToList","onDragEndHandler","onDragStartHandler","timer","unsubscribe","ngOnInit","x","ngOnDestroy","Component","selector","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","propDecorators","Input","ajfWidgetTypeStringToLabel","sanitizeConditionString","str","trim","replace","AjfDataType","AjfReportBuilderConditionEditor","isValid","_conditionNamesSub","extractNames","formsVariables","concat","setCurrent","id","currentId","appendText","checkValidation","validateCondition","validateExpression","_goBackNum","conditionTextArea","el","nativeElement","sStart","min","selectionStart","selectionEnd","sEnd","max","startingString","substr","endingString","initialLenght","closed","createTextRange","range","move","focus","setSelectionRange","conditionNames","ViewChild","static","AjfReportBuilderContent","_cdRef","fixedZoom","onDragEnter","show","headerWidgets","contentWidgets","footerWidgets","onOver","currentWidget","_fixedZoomSub","_onDragEnterSub","_headerWidgetsSub","_contentWidgetsSub","_footerWidgetsSub","_onOverSub","_currentWidgetSub","headerStyles","contentStyles","footerStyles","onMouseOver","onMouseLeave","canDropPredicate","dropZones","item","data","isLayout","onDragEnterHandler","onDragLeaveHandler","onDragEnterCheck","arrayTo","itemData","bool","ngAfterViewChecked","detectChanges","host","(mouseover)","(mouseleave)","ChangeDetectorRef","AjfReportBuilderCustomWidgetDialog","_dialogRef","changeLabel","close","MatDialogRef","AjfReportBuilderCustomWidgetToolbarButton","widgetIcon","ajfWidgetTypeStringToIcon","toLowerCase","widgetLabel","AjfReportBuilderCustomWidgetsToolbar","_customWidgetsSub","_threeColumnsLayout","_fourColumnsLayout","openDialog","open","componentInstance","MatDialog","AjfReportBuilderFormsAnalyzerDialog","_","aggregationTypes","sizedEnumToStringArray","AjfAggregationType","formulaDate","safeFormulaText","Sum","currentIndex","formsVariablesName","formsVariablesType","_formAnalyzerSub","_first","init","imageType","AjfImageType","Flag","onEditorInit","monaco","languages","typescript","javascriptDefaults","setDiagnosticsOptions","noSemanticValidation","noSyntaxValidation","setCompilerOptions","target","ScriptTarget","ES2015","allowNonTsExtensions","allowJs","ModuleKind","addExtraLib","e","_extraLibs","_initFormsVariablesNames","_updateVariables","_updateFunctions","formVar","_fieldVarType","AjfExpressionUtils","UTIL_FUNCTIONS","Boolean","Date","DateInput","Time","Empty","Formula","MultipleChoice","SingleChoice","Table","Text","insertVariable","setCurrentId","setAggregationType","validateFormula","saveDataset","saveFormulaHtml","level","mainIndex","variable","editor","split","getPosition","ln","lineNumber","line","col","substring","setPosition","setVariable","setValue","reset","labelText","AjfValidationService","isFormula","AjfMonacoEditor","AjfReportBuilderFormsAnalyzer","choicesOrigins","currentMainDataIndex","_dataset","setCurrentIndex","isSelected","getMainData","mainData","getDataset","getRelatedData","relatedData","getTableHeader","getTableData","tableData","needMainData","chartType","AjfChartType","Scatter","Bubble","removeDataset","editMode","dialogRef","Chart","openDialogAddMainData","openDialogChartEditMainData","openDialogTableEditMainData","openDialogChartAddDataset","openDialogTableAddDataset","openDialogChartAddDataOfDataset","openDialogChartEditDataset","openDialogTableEditDataset","openDialogChartEditDataOfDataset","AjfImageFilterPipe","transform","items","info","includes","Pipe","AjfReportBuilderImageGroup","_icon","_classes","valueToSearch","formulaClick","fontSet","fontIcon","setSearch","currentTarget","emitFormula","getFlag","returnValue","class","prefixClass","toggle","Output","AjfReportBuilderProperties","_dialog","initChartType","formsJson","widgetName","marginExpanded","paddingExpanded","borderWidthExpanded","borderRadiusExpanded","backgroundColor","styleBackgroundColor","borderColor","styleColor","align","fonts","currentModule","quillModules","script","background","font","chartBorderColor","chartBorderWidth","htmlText","reportStyles","sectionStyles","widgetStyles","sectionColor","widgetColor","visibilitySection","currentColor","iconSet","title","flagSet","_formsSub","_colorSub","_headerStyleSub","_contentStylesSub","_footerStylesSub","_originSub","_stylesUpdatesSubs","_updateWidgetMarginEvt","_updateWidgetPaddingEvt","_updateWidgetBorderWidthEvt","_updateWidgetBorderRadiusEvt","tabValue","setForms","keys","iconSets","toNumber","matches","match","toNumberArray","v","fillPxNumberArray","v21","v22","v32","percent","setStyle","setWidgetMargin","setWidgetPadding","setWidgetBorderWidth","setWidgetBorderRadius","getModule","isChartTypeSelected","setTab","hideMenu","openFormulaDialog","getHTML","distinctUntilChanged","getHeightWidget","getFontSizeWidget","getFontAlignWidget","getBorderWidthWidget","getBorderWidthWidgetTop","m","getBorderWidthWidgetRight","getBorderWidthWidgetBottom","getBorderWidthWidgetLeft","getBorderRadiusWidget","getBorderRadiusWidgetTopLeft","getBorderRadiusWidgetTopRight","getBorderRadiusWidgetBottomRight","getBorderRadiusWidgetBottomLeft","getMarginWidget","getMarginWidgetTop","getMarginWidgetRight","getMarginWidgetBottom","getMarginWidgetLeft","getPaddingWidget","getPaddingWidgetTop","getPaddingWidgetRight","getPaddingWidgetBottom","getPaddingWidgetLeft","getBackgroundColorWidget","getColorWidget","withLatestFrom","ngOnChanges","changes","currentValue","AjfQuillEditor","_elementRef","_renderer","emptyArray","_init","dateFormats","validator","defaultModules","slice","import","editorCreated","contentChanged","selectionChanged","onModelChange","onModelTouched","_formulas","_formulaTextSub","whitelist","innerHTML","setAttribute","efs","formulaEntry","unlisten","listen","quillEditor","querySelector","link_1","createElement","check","linkLabel","createText","appendChild","setHTML","writeValue","initHTML","ngAfterViewInit","toolbarElem","modules","register","insertAdjacentHTML","editorElem","placeholder","readOnly","theme","formats","on","oldRange","source","delta","oldDelta","html","children","getText","elem","listenFunc","pasteHTML","querySelectorAll","innerText","setText","registerOnChange","fn","registerOnTouched","validate","err","valid","textLength","minLength","minLengthError","given","maxLength","maxLengthError","enable","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","NG_VALIDATORS","ElementRef","Renderer2","AjfReportBuilderRendererWidget","currentContentWidget","getColumnContent","getIcon","evaluateExpression","getPercent","toString","getImageUrl","getImageType","Image","getHtmlText","getCoordinate","coordinate","getTileLayer","tileLayer","getAttribution","attribution","getChartType","getTableTitles","tableTitle","getTableContent","tableContent","section","AjfReportBuilderThemeColorDialog","firstElementChild","AjfReportBuilderThemeColor","alphaColor","_colorsSub","setStyles","setChartStyle","setAlphaColor","lastComma","lastIndexOf","AjfReportBuilderToolbarDialog","resetReport","AjfReportBuilderToolbar","addClick","zoom","emptyContent","JSONRequest","onAddClick","toJson","undoLastOperation","isZoomed","outputs","AjfReportBuilderWidgetToolbarButton","ajfReportBuilderWidgetToString","AjfReportBuilderWidgetsRowButtons","isOver","isClicked","selectedWidget","onFocus","direction","isColumn","isOneColumn","widgetReportBuilderIconName","ajfWidgetTypeToLabel","child","AjfReportBuilderWidgetsToolbar","chartTypes","widgetTypes","pos","AjfReportBuilder","set","_setCurrentReport","ngAfterContentInit","startSidenav","MatSidenav","AjfReportBuilderModule","NgModule","imports","CommonModule","FormsModule","DragDropModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatDialogModule","MatGridListModule","MatIconModule","MatListModule","MatSelectModule","MatSidenavModule","MatSlideToggleModule","MatSliderModule","MatTabsModule","MatToolbarModule","MatTooltipModule","TranslateModule","ColorPickerModule","AjfCommonModule","AjfImageModule","AjfMapModule","AjfMonacoEditorModule","AjfTableModule","AjfTextModule","declarations","ɵgc_ajf_src_material_report_builder_report_builder_a","ɵgc_ajf_src_material_report_builder_report_builder_b","ɵgc_ajf_src_material_report_builder_report_builder_c","ɵgc_ajf_src_material_report_builder_report_builder_d","ɵgc_ajf_src_material_report_builder_report_builder_e","ɵgc_ajf_src_material_report_builder_report_builder_f","ɵgc_ajf_src_material_report_builder_report_builder_g","ɵgc_ajf_src_material_report_builder_report_builder_h","ɵgc_ajf_src_material_report_builder_report_builder_i","ɵgc_ajf_src_material_report_builder_report_builder_j","ɵgc_ajf_src_material_report_builder_report_builder_k","ɵgc_ajf_src_material_report_builder_report_builder_l","ɵgc_ajf_src_material_report_builder_report_builder_m","ɵgc_ajf_src_material_report_builder_report_builder_n","ɵgc_ajf_src_material_report_builder_report_builder_o","ɵgc_ajf_src_material_report_builder_report_builder_p","ɵgc_ajf_src_material_report_builder_report_builder_q","ɵgc_ajf_src_material_report_builder_report_builder_r","ɵgc_ajf_src_material_report_builder_report_builder_s","ɵgc_ajf_src_material_report_builder_report_builder_t"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@angular/forms'), require('@angular/cdk/drag-drop'), require('@angular/material/button'), require('@angular/material/button-toggle'), require('@angular/material/card'), require('@angular/material/dialog'), require('@angular/material/grid-list'), require('@angular/material/icon'), require('@angular/material/list'), require('@angular/material/select'), require('@angular/material/sidenav'), require('@angular/material/slide-toggle'), require('@angular/material/slider'), require('@angular/material/tabs'), require('@angular/material/toolbar'), require('@angular/material/tooltip'), require('@ngx-translate/core'), require('ngx-color-picker'), require('@ajf/core/common'), require('@ajf/core/map'), require('@ajf/core/table'), require('@ajf/core/text'), require('@ajf/material/image'), require('@ajf/material/monaco-editor'), require('rxjs'), require('@ajf/core/forms'), require('@ajf/core/models'), require('@ajf/core/reports'), require('@ajf/core/utils'), require('rxjs/operators'), require('@ajf/core/image'), require('quill')) :\n    typeof define === 'function' && define.amd ? define('@ajf/material/report-builder', ['exports', '@angular/common', '@angular/core', '@angular/forms', '@angular/cdk/drag-drop', '@angular/material/button', '@angular/material/button-toggle', '@angular/material/card', '@angular/material/dialog', '@angular/material/grid-list', '@angular/material/icon', '@angular/material/list', '@angular/material/select', '@angular/material/sidenav', '@angular/material/slide-toggle', '@angular/material/slider', '@angular/material/tabs', '@angular/material/toolbar', '@angular/material/tooltip', '@ngx-translate/core', 'ngx-color-picker', '@ajf/core/common', '@ajf/core/map', '@ajf/core/table', '@ajf/core/text', '@ajf/material/image', '@ajf/material/monaco-editor', 'rxjs', '@ajf/core/forms', '@ajf/core/models', '@ajf/core/reports', '@ajf/core/utils', 'rxjs/operators', '@ajf/core/image', 'quill'], factory) :\n    (global = global || self, factory((global.ajf = global.ajf || {}, global.ajf.material = global.ajf.material || {}, global.ajf.material.reportBuilder = {}), global.ng.common, global.ng.core, global.ng.forms, global.ng.cdk.dragDrop, global.ng.material.button, global.ng.material.buttonToggle, global.ng.material.card, global.ng.material.dialog, global.ng.material.gridList, global.ng.material.icon, global.ng.material.list, global.ng.material.select, global.ng.material.sidenav, global.ng.material.slideToggle, global.ng.material.slider, global.ng.material.tabs, global.ng.material.toolbar, global.ng.material.tooltip, global.ngxTranslate.core, global.ngxColorPicker, global.ng.core.common, global.ng.core.map, global.ng.core.table, global.ng.core.text, global.ng.material.image, global.ng.material.monacoEditor, global.rxjs, global.ng.core.forms, global.ng.core.models, global.ng.core.reports, global.ng.core.utils, global.rxjs.operators, global.ng.core.image, global.quill));\n}(this, (function (exports, common, core, forms, dragDrop, button, buttonToggle, card, dialog, gridList, icon, list, select, sidenav, slideToggle, slider, tabs, toolbar, tooltip, core$1, ngxColorPicker, common$1, map, table, text, image, monacoEditor, rxjs, forms$1, models, reports, utils, operators, image$1, Quill) { 'use strict';\n\n    Quill = Quill && Quill.hasOwnProperty('default') ? Quill['default'] : Quill;\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AJF_REPORTS_CONFIG = new core.InjectionToken('AJF_REPORTS_CONFIG');\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    /**\n     * This service contains all the logic to model the report widget.\n     *\n     * @export\n     */\n    var AjfReportBuilderService = /** @class */ (function () {\n        /**\n         * Creates an instance of AjfReportBuilderService.\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        function AjfReportBuilderService(reportsConfig) {\n            var _this = this;\n            this._customWidgetsUpdate = new rxjs.Subject();\n            this._originUpdate = new rxjs.Subject();\n            this._savedReportUpdate = new rxjs.Subject();\n            this._jsonStack = new rxjs.BehaviorSubject([]);\n            this._emptyContent = new rxjs.BehaviorSubject(true);\n            this._onDraggedUpdate = new rxjs.Subject();\n            this._onOverUpdate = new rxjs.Subject();\n            this._fixedZoomUpdate = new rxjs.Subject();\n            this._onDragEnterUpdate = new rxjs.Subject();\n            this._headerWidgetsUpdate = new rxjs.Subject();\n            this._contentWidgetsUpdate = new rxjs.Subject();\n            this._footerWidgetsUpdate = new rxjs.Subject();\n            this._colorUpdate = new rxjs.Subject();\n            this._defaultColor = [\n                'rgba(0, 0, 0, 1)', 'rgba(51, 153, 255, 1)', 'rgba(153, 204, 0, 1)', 'rgba(255, 102, 0, 1)',\n                'rgba(0, 204, 204, 1)', 'rgba(204, 204, 153, 1)', 'rgba(255, 153, 0, 1)', 'rgba(230, 0, 0, 1)',\n                'rgba(255, 153, 0, 1)', 'rgba(255, 255, 0, 1)', 'rgba(0, 138, 0, 1)', 'rgba(0, 102, 204, 1)',\n                'rgba(153, 51, 255, 1)', 'rgba(255, 255, 255, 1)', 'rgba(250, 204, 204, 1)',\n                'rgba(255, 235, 204, 1)', 'rgba(255, 255, 204, 1)', 'rgba(204, 232, 204, 1)',\n                'rgba(204, 224, 245, 1)', 'rgba(235, 214, 255, 1)', 'rgba(187, 187, 187, 1)',\n                'rgba(240, 102, 102, 1)', 'rgba(255, 194, 102, 1)', 'rgba(255, 255, 102, 1)',\n                'rgba(102, 185, 102, 1)', 'rgba(102, 163, 224, 1)', 'rgba(194, 133, 255, 1)',\n                'rgba(136, 136, 136, 1)', 'rgba(161, 0, 0, 1)', 'rgba(178, 107, 0, 1)',\n                'rgba(178, 178, 0, 1)', 'rgba(0, 97, 0, 1)', 'rgba(0, 71, 178, 1)',\n                'rgba(107, 36, 178, 1)', 'rgba(68, 68, 68, 1)', 'rgba(92, 0, 0, 1)', 'rgba(102, 61, 0, 1)',\n                'rgba(102, 102, 0, 1)', 'rgba(0, 55, 0, 1)', 'rgba(0, 41, 102, 1)', 'rgba(61, 20, 102, 1)'\n            ];\n            this._currentWidgetUpdate = new rxjs.BehaviorSubject(null);\n            this._formsVariablesUpdate = new rxjs.BehaviorSubject(null);\n            this._conditionNamesUpdate = new rxjs.BehaviorSubject(null);\n            /**\n             * this BehaviorSubject update export report.\n             *\n             * @memberOf AjfReportBuilderService\n             */\n            this._saveReport = new rxjs.BehaviorSubject(null);\n            /**\n             * this BehaviorSubject contains the AjfReport.\n             *\n             * @memberOf AjfReportBuilderService\n             */\n            this._report = new rxjs.BehaviorSubject(null);\n            this._reportStylesUpdate = new rxjs.Subject();\n            this._reportFormsUpdate = new rxjs.Subject();\n            /**\n             * dictionary for  widgetsUpdate\n             *\n             * @memberOf AjfReportBuilderService\n             */\n            this._updates = {\n                header: this._headerWidgetsUpdate,\n                content: this._contentWidgetsUpdate,\n                footer: this._footerWidgetsUpdate,\n                color: this._colorUpdate,\n                customWidgets: this._customWidgetsUpdate\n            };\n            /**\n             * event emitter that notify when wont to save report\n             *\n             * @memberOf AjfReportBuilderService\n             */\n            this._saveReportEvent = new core.EventEmitter();\n            this._saveFormulaTOHtml = new core.EventEmitter();\n            /**\n             * event emitter that notify when column width changed\n             *\n             * @memberOf AjfReportBuilderService\n             */\n            this.columnWidthChangedEmitter = new core.EventEmitter();\n            this._iconSets = {\n                'ajf-icon': []\n            };\n            this._lastDeletedJson = '';\n            if (reportsConfig != null) {\n                if (reportsConfig.icons != null) {\n                    this._iconSets = __assign(__assign({}, this._iconSets), reportsConfig.icons);\n                }\n            }\n            this._origin = this._originUpdate.pipe(operators.startWith('header'), operators.share());\n            this._savedReport = this._savedReportUpdate.pipe(operators.share());\n            this._onDragged = this._onDraggedUpdate.pipe(operators.startWith(false), operators.share());\n            this._onOver = this._onOverUpdate.pipe(operators.startWith(false), operators.share());\n            this._fixedZoom = this._fixedZoomUpdate.pipe(operators.startWith(false), operators.share());\n            this._onDragEnter = this._onDragEnterUpdate.pipe(operators.share());\n            this._reportStyles = this._reportStylesUpdate\n                .pipe(operators.scan(function (styles, op) {\n                return op(styles);\n            }, {}), operators.share(), operators.startWith({}));\n            this._reportForms = this._reportFormsUpdate\n                .pipe(operators.scan(function (forms, op) {\n                return op(forms);\n            }, []), operators.share(), operators.startWith([]));\n            this._customWidgets =\n                this._customWidgetsUpdate\n                    .pipe(operators.scan(function (widgets, op) {\n                    return op(widgets);\n                }, []), operators.share(), operators.startWith([]));\n            this._formsVariables =\n                this._formsVariablesUpdate\n                    .pipe(operators.filter(function (s) { return s != null; }), operators.scan(function (variables, op) {\n                    return op(variables);\n                }, []), operators.publishReplay(1), operators.refCount());\n            this._conditionNames =\n                this._conditionNamesUpdate\n                    .pipe(operators.filter(function (s) { return s != null; }), operators.scan(function (variables, op) {\n                    return op(variables);\n                }, []), operators.share(), operators.startWith([]));\n            this._headerWidgets = this._headerWidgetsUpdate\n                .pipe(operators.scan(function (widgets, op) {\n                return op(widgets);\n            }, { widgets: [], styles: {} }), operators.startWith({ widgets: [], styles: {} }), operators.publishReplay(1), operators.refCount());\n            this._headerStyles = this._headerWidgets.pipe(operators.map(function (widgets) {\n                return widgets != null ? widgets.styles : {};\n            }));\n            this._contentWidgets = this._contentWidgetsUpdate\n                .pipe(operators.scan(function (widgets, op) {\n                return op(widgets);\n            }, { widgets: [], styles: {} }), operators.startWith({ widgets: [], styles: {} }), operators.publishReplay(1), operators.refCount());\n            this._contentStyles = this._contentWidgets.pipe(operators.map(function (widgets) {\n                return widgets != null ? widgets.styles : {};\n            }));\n            this._footerWidgets = this._footerWidgetsUpdate\n                .pipe(operators.scan(function (widgets, op) {\n                return op(widgets);\n            }, { widgets: [], styles: {} }), operators.startWith({ widgets: [], styles: {} }), operators.publishReplay(1), operators.refCount());\n            this._footerStyles = this._footerWidgets.pipe(operators.map(function (widgets) {\n                return widgets != null ? widgets.styles : {};\n            }));\n            this._color = this._colorUpdate\n                .pipe(operators.scan(function (color, op) {\n                return op(color);\n            }, this._defaultColor), operators.share(), operators.startWith(this._defaultColor));\n            this._currentWidget = this._currentWidgetUpdate.pipe(operators.filter(function (s) { return s != null; }), operators.map(function (s) { return s; }), operators.scan(function (widget, op) {\n                return op(widget);\n            }, null), operators.publishReplay(1), operators.refCount());\n            this._reportForms.pipe(operators.filter(function (f) { return f.length != 0; }), operators.map(function (forms) {\n                return function (_c) {\n                    return _this.fillFormsVariables(forms);\n                };\n            })).subscribe(this._formsVariablesUpdate);\n            this._reportForms.pipe(operators.filter(function (f) { return f.length != 0; }), operators.map(function (forms) {\n                return function (_c) {\n                    return _this.fillFormsVariables(forms);\n                };\n            })).subscribe(this._conditionNamesUpdate);\n            var reportObs = this._report;\n            reportObs.pipe(operators.map(function (r) {\n                return function (_colors) {\n                    var tempColors = _this._defaultColor;\n                    if (r == null) {\n                        return [];\n                    }\n                    else {\n                        _this.parseColor(r.styles, tempColors);\n                        if (r.content) {\n                            _this.parseColor(r.content.styles, tempColors);\n                        }\n                        if (r.footer) {\n                            _this.parseColor(r.footer.styles, tempColors);\n                        }\n                        if (r.header) {\n                            _this.parseColor(r.header.styles, tempColors);\n                            for (var i = 0; i < r.header.content.length; i++) {\n                                var obj = r.header.content[i];\n                                _this.parseColor(obj.styles, tempColors);\n                                if (obj.widgetType === reports.AjfWidgetType.Layout) {\n                                    var layoutObj = obj;\n                                    for (var j = 0; j < layoutObj.content.length; j++) {\n                                        var columnObj = layoutObj.content[j];\n                                        _this.parseColor(columnObj.styles, tempColors);\n                                        for (var z = 0; z < columnObj.content.length; z++) {\n                                            var widgetObj = columnObj.content[z];\n                                            _this.parseColor(widgetObj.styles, tempColors);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    return tempColors;\n                };\n            })).subscribe(this._colorUpdate);\n            reportObs\n                .pipe(operators.map(function (r) {\n                return function (_styles) {\n                    if (r == null || r.styles == null) {\n                        return {};\n                    }\n                    else {\n                        return r.styles;\n                    }\n                };\n            }))\n                .subscribe(this._reportStylesUpdate);\n            reportObs\n                .pipe(operators.map(function (r) {\n                return function (_widgets) {\n                    if (r == null || r.header == null) {\n                        return { widgets: [], styles: {} };\n                    }\n                    else {\n                        return {\n                            widgets: r.header.content || [],\n                            styles: r.header.styles || {}\n                        };\n                    }\n                };\n            }))\n                .subscribe(this._headerWidgetsUpdate);\n            reportObs\n                .pipe(operators.map(function (r) {\n                return function (_widgets) {\n                    if (r == null || r.content == null) {\n                        return { widgets: [], styles: {} };\n                    }\n                    else {\n                        return {\n                            widgets: r.content.content || [],\n                            styles: r.content.styles || {}\n                        };\n                    }\n                };\n            }))\n                .subscribe(this._contentWidgetsUpdate);\n            reportObs\n                .pipe(operators.map(function (r) {\n                return function (_widgets) {\n                    if (r == null || r.footer == null) {\n                        return { widgets: [], styles: {} };\n                    }\n                    else {\n                        return {\n                            widgets: r.footer.content || [],\n                            styles: r.footer.styles || {}\n                        };\n                    }\n                };\n            }))\n                .subscribe(this._footerWidgetsUpdate);\n            this._saveReport.pipe(operators.map(function (json) {\n                return function (_r) {\n                    if (json = null) {\n                        return {};\n                    }\n                    return json;\n                };\n            }));\n            this._saveReportEvent\n                .pipe(operators.combineLatest(this.report, this.reportForms), operators.combineLatest(this._headerWidgets.pipe(operators.filter(function (w) { return w != null; })), this._contentWidgets.pipe(operators.filter(function (w) { return w != null; })), this._footerWidgets.pipe(operators.filter(function (w) { return w != null; })), this._reportStyles.pipe(operators.filter(function (w) { return w != null; }))))\n                .subscribe(function (r) {\n                var obj = {};\n                // const curRo = r[0][1];\n                // const forms = r[0][2] != null ? r[0][2] || []\n                //     : (curRo != null ? curRo.forms || [] : []);\n                obj.header = { content: r[1].widgets.map(function (w) { return utils.deepCopy(w); }), styles: r[1].styles };\n                obj.content = { content: r[2].widgets.map(function (w) { return utils.deepCopy(w); }), styles: r[2].styles };\n                obj.footer = { content: r[3].widgets.map(function (w) { return utils.deepCopy(w); }), styles: r[3].styles };\n                obj.styles = r[4];\n                var ro = {\n                    header: { content: r[1].widgets, styles: r[1].styles },\n                    content: { content: r[2].widgets, styles: r[2].styles },\n                    footer: { content: r[3].widgets, styles: r[3].styles },\n                    styles: r[4]\n                };\n                _this.setSaveReport(obj);\n                _this._savedReportUpdate.next(ro);\n                _this.pushJsonStack(JSON.stringify(obj));\n            });\n        }\n        AjfReportBuilderService.prototype.getFormulaToHtmlEvent = function () {\n            return this._saveFormulaTOHtml.asObservable();\n        };\n        Object.defineProperty(AjfReportBuilderService.prototype, \"iconSets\", {\n            get: function () { return this._iconSets; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         *\n         *  functions\n         *\n         */\n        /**\n         * utils:\n         * remove AjfNodeGroup, AjfSlide, AjfRepeatingSlide, AjfStringField from ajfnode array\n         *\n         * @param nodes\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.filterNodes = function (nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                var node = nodes[i];\n                if (node.nodeType === forms$1.AjfNodeType.AjfNodeGroup || node.nodeType === forms$1.AjfNodeType.AjfSlide ||\n                    node.nodeType === forms$1.AjfNodeType.AjfRepeatingSlide ||\n                    (node.nodeType === forms$1.AjfNodeType.AjfField &&\n                        node.fieldType === forms$1.AjfFieldType.String)) {\n                    nodes.splice(i, 1);\n                    i--;\n                }\n            }\n            return nodes;\n        };\n        AjfReportBuilderService.prototype.parseColor = function (cssStyles, colors) {\n            var styleKeys = ['background-color', 'backgroundColor', 'color'];\n            styleKeys.forEach(function (k) {\n                if (cssStyles[k] &&\n                    colors.indexOf(cssStyles[k]) == -1) {\n                    colors.push(cssStyles[k]);\n                }\n            });\n        };\n        AjfReportBuilderService.prototype.fillFormsVariables = function (forms) {\n            var variables = [];\n            for (var i = 0; i < forms.length; i++) {\n                variables[i] = { nodes: [], labels: [], names: [], types: [] };\n                if (forms[i].nodes != null && forms[i].nodes.length > 0) {\n                    variables[i].nodes = this.filterNodes(forms$1.flattenNodes(forms[i].nodes));\n                }\n                variables[i].labels = this.extractLabelsNodes(variables[i].nodes);\n                variables[i].names = this.extractNamesNodes(variables[i].nodes);\n                variables[i].types = this.extractTypesNodes(variables[i].nodes);\n            }\n            return variables;\n        };\n        /**\n         * utils:\n         *  the obj returned contains the label field of ajfNode\n         * @param nodes\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.extractLabelsNodes = function (nodes) {\n            var obj = [];\n            for (var i = 0; i < nodes.length; i++) {\n                obj.push(nodes[i].label);\n            }\n            return obj;\n        };\n        AjfReportBuilderService.prototype.extractNamesNodes = function (nodes) {\n            var obj = [];\n            for (var i = 0; i < nodes.length; i++) {\n                obj.push(nodes[i].name);\n            }\n            return obj;\n        };\n        AjfReportBuilderService.prototype.extractTypesNodes = function (nodes) {\n            var obj = [];\n            for (var i = 0; i < nodes.length; i++) {\n                var p = nodes[i];\n                obj.push(p.fieldType);\n            }\n            return obj;\n        };\n        AjfReportBuilderService.prototype.setOrigin = function (origin) {\n            this._originUpdate.next(origin);\n        };\n        /**\n         * utils:\n         * This method round the value to the decimal position\n         *\n         * @param value\n         * @param decimalpositions\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.roundTo = function (value, decimalPositions) {\n            var i = value * Math.pow(10, decimalPositions);\n            i = Math.floor(i);\n            return i / Math.pow(10, decimalPositions);\n        };\n        /**\n         * utils:\n         * This validator check if the value is a number.\n         *\n         * @param value\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.isNumber = function (value) {\n            return /^\\d+(\\.\\d+)?/.test(value);\n        };\n        AjfReportBuilderService.prototype.isNumberArray = function (value) {\n            for (var i = 0; i < value.length; i++) {\n                if (!this.isNumber(value[i])) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        Object.defineProperty(AjfReportBuilderService.prototype, \"onDragged\", {\n            /**\n             * get _onDragged Observable\n             *\n             * @readonly\n             * @memberOf AjfReportBuilderService\n             */\n            get: function () {\n                return this._onDragged;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfReportBuilderService.prototype, \"onOver\", {\n            /**\n             * get _onOver Observable\n             *\n             * @readonly\n             * @memberOf AjfReportBuilderService\n             */\n            get: function () {\n                return this._onOver;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfReportBuilderService.prototype, \"fixedZoom\", {\n            /**\n             * get _fixedZoom Observable\n             *\n             * @readonly\n             * @memberOf AjfReportBuilderService\n             */\n            get: function () {\n                return this._fixedZoom;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         *  change status of _fixedZoom in true\n         *\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.fixedZoomIn = function () {\n            this._fixedZoomUpdate.next(true);\n        };\n        /**\n         *  change status of _fixedZoom in false\n         *\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.fixedZoomOut = function () {\n            this._fixedZoomUpdate.next(false);\n        };\n        Object.defineProperty(AjfReportBuilderService.prototype, \"onDragEnter\", {\n            /**\n             * get _onDragEnter observable\n             *\n             * @readonly\n             * @memberOf AjfReportBuilderService\n             */\n            get: function () {\n                return this._onDragEnter;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         *  update _onDragEnter with  section(header,content,footer) and index\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.dragEnter = function (array, index) {\n            this._onDragEnterUpdate.next({ array: array, index: index });\n        };\n        /**\n         *  update _ondragged with true\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.dragStarted = function () {\n            this._onDraggedUpdate.next(true);\n        };\n        /**\n         *  update _onDragged with false\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.dragEnded = function () {\n            this._onDraggedUpdate.next(false);\n        };\n        /**\n         *  update _onOver with true\n         *\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.overStarted = function () {\n            this._onOverUpdate.next(true);\n        };\n        /**\n         * update _onOver with false\n         *\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.overEnded = function () {\n            this._onOverUpdate.next(false);\n        };\n        /**\n         *\n         *  update _onDragged with false\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.dragLeave = function () {\n            this._onDragEnterUpdate.next({});\n        };\n        Object.defineProperty(AjfReportBuilderService.prototype, \"report\", {\n            /**\n             * Get the report\n             *\n             * @readonly\n             * @memberOf AjfReportBuilderService\n             */\n            get: function () {\n                return this._report.asObservable();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * emit save report event\n         *\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.saveReport = function () {\n            if (this._saveReportEvent != null) {\n                this._saveReportEvent.emit();\n            }\n        };\n        AjfReportBuilderService.prototype.saveImageFormula = function (formula) {\n            this._currentWidgetUpdate.next(function (widget) {\n                if (widget == null) {\n                    return widget;\n                }\n                var w = widget;\n                w.flag = formula;\n                w.icon = formula;\n                return w;\n            });\n        };\n        AjfReportBuilderService.prototype.saveFormulaToHtml = function (htmlFormula, reference) {\n            if (this._saveFormulaTOHtml != null) {\n                var obj = {\n                    'formula': htmlFormula,\n                    'reference': reference\n                };\n                this._saveFormulaTOHtml.emit(obj);\n            }\n        };\n        AjfReportBuilderService.prototype.setEmptyContent = function (val) {\n            this._emptyContent.next(val);\n        };\n        AjfReportBuilderService.prototype.pushJsonStack = function (json) {\n            var currentStack = this._jsonStack.getValue();\n            if (currentStack.indexOf(json) === -1 && json !== this._lastDeletedJson) {\n                currentStack.push(json);\n            }\n            this._jsonStack.next(currentStack);\n        };\n        AjfReportBuilderService.prototype.popJsonStack = function () {\n            var emptyJson = '{\"header\":{\"content\":[],\"styles\":{}},' +\n                '\"content\":{\"content\":[],\"styles\":{}},\"' +\n                'footer\":{\"content\":[],\"styles\":{}},\"styles\":{}}';\n            var currentStack = this._jsonStack.getValue();\n            currentStack.pop();\n            this._lastDeletedJson = currentStack.pop();\n            if (currentStack.length <= 0) {\n                this._lastDeletedJson = '';\n                this._jsonStack.next([]);\n                this.updateCurrentWidget(null);\n                this.setEmptyContent(true);\n                return emptyJson;\n            }\n            this._jsonStack.next(currentStack);\n            return this._lastDeletedJson;\n        };\n        Object.defineProperty(AjfReportBuilderService.prototype, \"columnWidthChanged\", {\n            /**\n             * get the emitter\n             *\n             * @readonly\n             *\n             * @memberOf AjfReportBuilderService\n             */\n            get: function () {\n                return this.columnWidthChangedEmitter;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfReportBuilderService.prototype, \"customWidgets\", {\n            /**\n             * get _customWidgets Observable\n             *\n             * @readonly\n             * @memberOf AjfReportBuilderService\n             */\n            get: function () {\n                return this._customWidgets;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfReportBuilderService.prototype, \"headerWidgets\", {\n            /**\n             * Get the header widget\n             *\n             * @readonly\n             * @memberOf AjfReportBuilderService\n             */\n            get: function () {\n                return this._headerWidgets;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfReportBuilderService.prototype, \"headerStyles\", {\n            /**\n             * Get the header styles\n             *\n             * @readonly\n             * @memberOf AjfReportBuilderService\n             */\n            get: function () {\n                return this._headerStyles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfReportBuilderService.prototype, \"contentWidgets\", {\n            /**\n             * Get the Content widget\n             *\n             * @readonly\n             * @memberOf AjfReportBuilderService\n             */\n            get: function () {\n                return this._contentWidgets;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfReportBuilderService.prototype, \"contentStyles\", {\n            /**\n             * Get the content styles\n             *\n             * @readonly\n             * @memberOf AjfReportBuilderService\n             */\n            get: function () {\n                return this._contentStyles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfReportBuilderService.prototype, \"footerWidgets\", {\n            /**\n             * Get the footer widget\n             *\n             * @readonly\n             * @memberOf AjfReportBuilderService\n             */\n            get: function () {\n                return this._footerWidgets;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfReportBuilderService.prototype, \"footerStyles\", {\n            /**\n             * Get the footer styles\n             *\n             * @readonly\n             * @memberOf AjfReportBuilderService\n             */\n            get: function () {\n                return this._footerStyles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfReportBuilderService.prototype, \"colors\", {\n            /**\n             * Get the colors of report\n             *\n             * @readonly\n             * @memberOf AjfReportBuilderService\n             */\n            get: function () {\n                return this._color;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfReportBuilderService.prototype, \"emptyContent\", {\n            get: function () {\n                return this._emptyContent;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         *\n         * @param type\n         * @param newWidget\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.updateArrayWidgets = function (type, newWidget) {\n            if ((type !== 'header') && (type !== 'content') && (type !== 'footer')) {\n                throw new Error('Unknown type ' + type);\n            }\n            this._updates[type].next(function (_widgets) {\n                return newWidget;\n            });\n        };\n        Object.defineProperty(AjfReportBuilderService.prototype, \"formsVariables\", {\n            /**\n             * get _formsVariables Observable\n             *\n             * @readonly\n             * @memberOf AjfReportBuilderService\n             */\n            get: function () {\n                return this._formsVariables;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfReportBuilderService.prototype, \"conditionNames\", {\n            get: function () {\n                return this._conditionNames;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfReportBuilderService.prototype, \"currentWidget\", {\n            /**\n             * Get the current widget\n             *\n             * @readonly\n             * @memberOf AjfReportBuilderService\n             */\n            get: function () {\n                return this._currentWidget;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * This method Update _currentWidgetUpdate with newWidget.\n         *\n         * @param newWidget\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.updateCurrentWidget = function (newWidget) {\n            var _this = this;\n            this._currentWidgetUpdate.next(function (_widget) {\n                _this._saveReportEvent.emit();\n                return newWidget;\n            });\n        };\n        Object.defineProperty(AjfReportBuilderService.prototype, \"getSaveReport\", {\n            /**\n             * Get the report\n             *\n             * @readonly\n             * @memberOf AjfReportBuilderService\n             */\n            get: function () {\n                return this._saveReport.asObservable();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfReportBuilderService.prototype, \"reportSaved\", {\n            /**\n             * get _jsonSavedReport obeservable\n             *\n             * @readonly\n             * @memberOf AjfReportBuilderService\n             */\n            get: function () {\n                return this._savedReport;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfReportBuilderService.prototype, \"reportStyles\", {\n            /**\n             * get _reportStyles observable\n             *\n             * @readonly\n             * @memberOf AjfReportBuilderService\n             */\n            get: function () {\n                return this._reportStyles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfReportBuilderService.prototype, \"reportForms\", {\n            /**\n             * get _reportForms observable\n             *\n             * @readonly\n             * @memberOf AjfReportBuilderService\n             */\n            get: function () {\n                return this._reportForms;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfReportBuilderService.prototype, \"origin\", {\n            /**\n             * get the _origin Observable\n             *\n             * @readonly\n             * @memberOf AjfReportBuilderService\n             */\n            get: function () {\n                return this._origin;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * This method assigns the new width to the idx column\n         * and recalculates the width of the remaining columns of the layout.\n         * The range value are from 0,1 to 1.\n         *\n         * RULES:\n         * The min value for column is 0,1.\n         * The sum of all columns width is always 1.\n         * The method round the values.\n         * If is present only one column the width is always 1.\n         *\n         * When the new value `>` old value:\n         * the width of the remaining columns decreases.\n         * When the new value `<` old value:\n         * the width of the remaining columns increases.\n         *\n         * When values ​​are periodic, rounding assigns the gap to the current value.\n         * For example: 3 columns with 0,33 believe 1 column 0,34 and 2 columns 0,33.\n         *\n         * @param newValue\n         * @param idx\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.instantColumnValue = function (newValue, idx) {\n            var _this = this;\n            this._currentWidgetUpdate.next(function (widget) {\n                if (widget == null) {\n                    return widget;\n                }\n                var myObj = widget;\n                var size = myObj.columns.length;\n                var spreadValue = 0;\n                var objNum = 0;\n                var sum = 0;\n                var idxFirstNoObj = -1;\n                var add = false;\n                var foundFirstNoObj = false;\n                var re1 = new RegExp('(^[0]\\.\\[1-9][0-9]$)');\n                var re2 = new RegExp('(^[0]\\.\\[1-9]$)');\n                var re3 = new RegExp('^[1]$');\n                var oldValue = myObj.columns[idx];\n                newValue = Number(_this.roundTo(newValue, 2).toFixed(2));\n                if (myObj.columns[idx] == null) {\n                    throw new Error('invalid value');\n                }\n                for (var j = 0; j < size; j++) {\n                    if (myObj.columns[j] === -1) {\n                        objNum++;\n                    }\n                }\n                if (oldValue == -1) {\n                    oldValue = 0.1;\n                    objNum--;\n                    newValue = Number(_this.roundTo(1 / (size - objNum), 2).toFixed(2));\n                    myObj.columns[idx] = 0.1;\n                }\n                else if (oldValue < 0.1) {\n                    oldValue = 0.1;\n                }\n                if (newValue !== -1) {\n                    if (myObj.columns.length === 1) {\n                        myObj.columns[0] = 1;\n                        return myObj;\n                    }\n                    if (newValue < 0.1) {\n                        newValue = 0.1;\n                    }\n                    else if (newValue + 0.1 * (size - objNum - 1) > 1) {\n                        newValue = 1 - (0.1 * (size - objNum - 1));\n                    }\n                    if ((oldValue === newValue) && (oldValue === 0.1)) {\n                        myObj.columns[idx] = newValue;\n                        return myObj;\n                    }\n                    if (oldValue > newValue) {\n                        add = true;\n                        spreadValue = (oldValue - newValue) / (size - objNum - 1);\n                    }\n                    else {\n                        add = false;\n                        spreadValue = (newValue - oldValue) / (size - objNum - 1);\n                    }\n                    spreadValue = Number(_this.roundTo(spreadValue, 2).toFixed(2));\n                    if (spreadValue < 0.01) {\n                        spreadValue = 0.1;\n                    }\n                }\n                else {\n                    myObj.columns[idx] = -1;\n                    objNum++;\n                    add = true;\n                    if (myObj.columns.length == 1) {\n                        spreadValue = 1;\n                    }\n                    else {\n                        spreadValue = (oldValue) / (size - objNum);\n                    }\n                }\n                for (var i = 0; i < size; i++) {\n                    if (myObj.columns[i] !== -1) {\n                        if ((i == idx)) {\n                            myObj.columns[idx] = newValue;\n                        }\n                        else {\n                            if (add) {\n                                myObj.columns[i] += spreadValue;\n                                if ((myObj.columns[i] > 0.9) && (myObj.columns.length - objNum != 1)) {\n                                    myObj.columns[i] = 0.90;\n                                }\n                            }\n                            else {\n                                myObj.columns[i] -= spreadValue;\n                                if (myObj.columns[i] < 0.1) {\n                                    myObj.columns[i] = 0.10;\n                                }\n                            }\n                            myObj.columns[i] = Number(_this.roundTo(myObj.columns[i], 2).toFixed(2));\n                            sum += myObj.columns[i];\n                        }\n                        sum = Number(_this.roundTo(sum, 2).toFixed(2));\n                        if (foundFirstNoObj == false) {\n                            idxFirstNoObj = i;\n                            foundFirstNoObj = true;\n                        }\n                    }\n                }\n                if (newValue === -1) {\n                    myObj.columns[idx] = -1;\n                    if (foundFirstNoObj) {\n                        myObj.columns[idxFirstNoObj] += Number(_this.roundTo(1 - sum, 2).toFixed(2));\n                    }\n                }\n                else {\n                    myObj.columns[idx] = Number(_this.roundTo(1 - sum, 2).toFixed(2));\n                }\n                for (var j = 0; j < myObj.columns.length; j++) {\n                    if (myObj.columns[j] !== -1 &&\n                        !re1.test(String(myObj.columns[j])) &&\n                        !re2.test(String(myObj.columns[j])) &&\n                        !re3.test(String(myObj.columns[j]))) {\n                        _this.instantColumnValue(0.10, j);\n                    }\n                }\n                _this.columnWidthChangedEmitter.emit();\n                _this._saveReportEvent.emit();\n                return myObj;\n            });\n        };\n        /**\n         * This method set the imageUrl on the current AjfImageWidget.\n         *\n         * @param imageUrl\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.setImageUrl = function (imageUrl) {\n            this._currentWidgetUpdate.next(function (widget) {\n                if (widget == null) {\n                    return null;\n                }\n                var myObj = widget;\n                myObj.url = models.createFormula({ formula: \"\\\"\" + imageUrl + \"\\\"\" });\n                return myObj;\n            });\n        };\n        AjfReportBuilderService.prototype.setIcon = function (icon) {\n            this._currentWidgetUpdate.next(function (widget) {\n                if (widget == null) {\n                    return null;\n                }\n                var myObj = widget;\n                myObj.icon = models.createFormula({ formula: \"\\\"\" + icon + \"\\\"\" });\n                return myObj;\n            });\n        };\n        AjfReportBuilderService.prototype.setFlag = function (value) {\n            this._currentWidgetUpdate.next(function (widget) {\n                if (widget == null) {\n                    return null;\n                }\n                var myObj = widget;\n                myObj.flag = models.createFormula({ formula: \"\\\"\" + value + \"\\\"\" });\n                return myObj;\n            });\n        };\n        AjfReportBuilderService.prototype.saveCondition = function (conditionText) {\n            this._currentWidgetUpdate.next(function (widget) {\n                if (widget == null) {\n                    return null;\n                }\n                if (widget.visibility != null) {\n                    widget.visibility.condition = conditionText;\n                }\n                return widget;\n            });\n        };\n        AjfReportBuilderService.prototype.saveChartFormula = function (_label, _level, _mainIndex, _index, formulaText, aggregationType) {\n            this._currentWidgetUpdate.next(function (w) {\n                if (w == null) {\n                    return null;\n                }\n                var widget = w;\n                if (widget != null && widget.dataset != null) {\n                    var formula = models.createFormula({});\n                    var aggregation = reports.createAggregation({});\n                    // let obj: any;\n                    formula.formula = formulaText;\n                    aggregation.aggregation = aggregationType;\n                    // obj = {\n                    //   'formula': formula.toJson(),\n                    //   'aggregation': aggregation.toJson(),\n                    //   'label': label\n                    // };\n                    // dataset = AjfDataset.fromJson(obj);\n                    // check if the row that contains main data is defined\n                    /* if (widget.dataset[0] == null) {\n                      widget.dataset[0] = [];\n                    }\n            \n                    if (level == 0 && mainIndex == -1 && index == -1) {\n            \n                      widget.dataset[0].push(dataset);\n                    } else if (level == 1 && mainIndex == -1 && index == -1) {\n            \n                      widget.dataset[widget.dataset.length] = [];\n                      widget.dataset[widget.dataset.length - 1].push(dataset);\n                    } else if (index === - 1) {\n                      widget.dataset[mainIndex + 1].push(dataset);\n                    } else {\n                      widget.dataset[mainIndex].splice(index, 1, dataset);\n                    } */\n                }\n                return widget;\n            });\n        };\n        AjfReportBuilderService.prototype.saveTableFormula = function (_label, aggregationType, formulaText, _mainIndex, _index) {\n            this._currentWidgetUpdate.next(function (w) {\n                if (w == null) {\n                    return null;\n                }\n                var widget = w;\n                if (widget.dataset != null) {\n                    var formula = models.createFormula({});\n                    var aggregation = reports.createAggregation({});\n                    // let dataset: AjfDataset = new AjfDataset();\n                    // let rowDataset: AjfDataset[] = [];\n                    // let obj: any;\n                    formula.formula = formulaText;\n                    aggregation.aggregation = aggregationType;\n                    // obj = {\n                    //   'formula': formula.toJson(),\n                    //   'aggregation': aggregation.toJson(),\n                    //   'label': label\n                    // };\n                    // dataset = AjfDataset.fromJson(obj);\n                    /* if (mainIndex === - 1) {\n                      widget.dataset[widget.dataset.length] = [];\n                      widget.dataset[widget.dataset.length - 1].push(dataset);\n                    } else {\n                      if (index === -1) {\n                        widget.dataset[mainIndex].push(dataset);\n                      } else {\n                        widget.dataset[mainIndex].splice(index, 1, dataset);\n                      }\n                    } */\n                }\n                return widget;\n            });\n        };\n        AjfReportBuilderService.prototype.removeTableMainData = function (index) {\n            this._removeFromCurrentWidgetArrayProperty('dataset', index);\n        };\n        AjfReportBuilderService.prototype.removeData = function (_mainIndex, _index) {\n            this._currentWidgetUpdate.next(function (widget) {\n                var myObj = widget;\n                /* if (index === -1) {\n                  myObj.dataset.splice(mainIndex, 1);\n                } else {\n                  myObj.dataset[mainIndex].splice(index, 1);\n                } */\n                return myObj;\n            });\n        };\n        /**\n         * update type field of AjfChartWidget current widget\n         *\n         * @param type\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.setChartType = function (type) {\n            this._setCurrentWidgetProperty('type', type);\n        };\n        /**\n         * remove  idx element of xLabels field of AjfChartWidget current widget\n         *\n         * @param idx\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.removeMainData = function (_idx) {\n            this._currentWidgetUpdate.next(function (widget) {\n                var myObj = widget;\n                // myObj.dataset[0].splice(idx, 1);\n                return myObj;\n            });\n        };\n        AjfReportBuilderService.prototype.removeRelatedData = function (_mainIdx, _idx) {\n            this._currentWidgetUpdate.next(function (widget) {\n                var myObj = widget;\n                /* if (idx == -1) {\n                  myObj.dataset.splice(mainIdx + 1, 1);\n                } else {\n                  myObj.dataset[mainIdx + 1].splice(idx, 1);\n                } */\n                return myObj;\n            });\n        };\n        /**\n         * update backgroundColor field of AjfChartWidget current widget\n         *\n         * @param colors\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.setChartBackgroundColor = function (colors) {\n            this._setCurrentWidgetProperty('backgroundColor', colors);\n        };\n        AjfReportBuilderService.prototype.addChartBackgroundColor = function (color) {\n            this._addToCurrentWidgetArrayProperty('backgroundColor', color);\n        };\n        AjfReportBuilderService.prototype.removeChartBackgroundColor = function (idx) {\n            this._removeFromCurrentWidgetArrayProperty('backgroundColor', idx);\n        };\n        /**\n         * update borderColor field of AjfChartWidget current widget\n         *\n         * @param colors\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.setChartBorderColor = function (colors) {\n            this._setCurrentWidgetProperty('borderColor', colors);\n        };\n        AjfReportBuilderService.prototype.setChartBorderWidth = function (value) {\n            this._setCurrentWidgetProperty('borderWidth', value);\n        };\n        AjfReportBuilderService.prototype.addChartBorderColor = function (color) {\n            this._addToCurrentWidgetArrayProperty('borderColor', color);\n        };\n        AjfReportBuilderService.prototype.removeChartBorderColor = function (idx) {\n            this._removeFromCurrentWidgetArrayProperty('borderColor', idx);\n        };\n        /**\n         * This method set the AjfReport.\n         *\n         * @param report\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.setReport = function (report) {\n            this._report.next(report);\n        };\n        /**\n         * This method set the export report.\n         *\n         * @param report\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.setSaveReport = function (json) {\n            this._saveReport.next(json);\n        };\n        /**\n         * This method set the font attribute on the current AjfWidget.\n         *\n         * There is a check on font-size attribute,\n         * if is no specificate the type of size font set 'pt' as default.\n         *\n         * @param label\n         * @param value\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.setWidgetStyles = function (label, value) {\n            var _this = this;\n            this._currentWidgetUpdate.next(function (widget) {\n                var myObj = widget;\n                var pxStyles = [\n                    'font-size', 'height', 'width', 'border-width', 'border-radius', 'padding', 'margin'\n                ];\n                var isPxStyle = pxStyles.indexOf(label) > -1;\n                if (isPxStyle && !(value instanceof Array) && _this.isNumber(value)) {\n                    value += 'px';\n                }\n                else if (isPxStyle && value instanceof Array && _this.isNumberArray(value)) {\n                    value = value.join('px ') + \"px\";\n                }\n                myObj.styles[label] = value;\n                return myObj;\n            });\n        };\n        /**\n         * this method update the styles of origin widget array\n         *\n         * @param origin can be header content or footer\n         * @param label for example background-color\n         * @param value for example rgb(255,255,255,1)\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.setSectionStyles = function (origin, label, value) {\n            if ((origin !== 'header') && (origin !== 'content') && (origin !== 'footer')) {\n                throw new Error('uncknow origin ' + origin);\n            }\n            this._updates[origin].next(function (widget) {\n                widget.styles[label] = value;\n                widget.styles = __assign({}, widget.styles);\n                return widget;\n            });\n        };\n        /**\n         * this method set the style of the whole report.\n         *\n         * @param label for example background-color\n         * @param value for example rgb(255,255,255,1)\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.setReportStyles = function (label, value) {\n            this._reportStylesUpdate.next(function (styles) {\n                if (styles == null) {\n                    styles = {};\n                }\n                else {\n                    styles[label] = value;\n                    styles = __assign({}, styles);\n                }\n                return styles;\n            });\n        };\n        /**\n         *  update forms\n         *\n         * @param forms\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.setReportForms = function (forms) {\n            this._reportFormsUpdate.next(function (_form) {\n                return forms || [];\n            });\n        };\n        /**\n         * update customWidgets\n         *\n         * @param widget\n         * @param [position]\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.addCustomWidgets = function (widget, position) {\n            this._customWidgetsUpdate.next(function (customWidgets) {\n                customWidgets = customWidgets || [];\n                if (position != null && position >= 0) {\n                    customWidgets.splice(position, 0, widget);\n                }\n                else {\n                    customWidgets.push(widget);\n                }\n                return customWidgets;\n            });\n        };\n        /**\n         * reset customWidgets\n         *\n         * @param widget\n         * @param [position]\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.resetCustomWidgets = function () {\n            this._customWidgetsUpdate.next(function (customWidgets) {\n                customWidgets.length = 0;\n                return customWidgets;\n            });\n        };\n        /**\n         * update label of widget\n         *\n         * @param label\n         * @param position\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.changeLabelCustomWidget = function (label, position) {\n            this._customWidgetsUpdate.next(function (customWidgets) {\n                customWidgets[position].type = label;\n                return customWidgets;\n            });\n        };\n        /**\n         * Add an AjfWidget on _headerWidgetsUpdate\n         *\n         * @param widget\n         * @param [position]\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.addHeaderWidget = function (widget, position) {\n            this._addWidgetToContainer(this._headerWidgetsUpdate, widget, position);\n        };\n        /**\n         * Add an AjfWidget on _contentWidgetsUpdate\n         *\n         * @param widget\n         * @param [position]\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.addContentWidget = function (widget, position) {\n            this._addWidgetToContainer(this._contentWidgetsUpdate, widget, position);\n        };\n        /**\n         * Add an AjfWidget on _footerWidgetsUpdate\n         *\n         * @param widget\n         * @param [position]\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.addfooterWidget = function (widget, position) {\n            this._addWidgetToContainer(this._footerWidgetsUpdate, widget, position);\n        };\n        AjfReportBuilderService.prototype.unfixedColumn = function (idx) {\n            var _this = this;\n            this._currentWidgetUpdate.next(function (widget) {\n                if (widget == null) {\n                    return widget;\n                }\n                var myObj = widget;\n                var num = myObj.columns.length;\n                var checkSum = 0;\n                var objNum = 0;\n                var value = 1;\n                var spreadValue;\n                myObj.columns[idx] = 0;\n                for (var j = 0; j < num; j++) {\n                    if (myObj.columns[j] === -1) {\n                        objNum++;\n                    }\n                }\n                value = Number(_this.roundTo(1 / (num - objNum), 2).toFixed(2));\n                for (var i = 0; i < num; i++) {\n                    if (myObj.columns[i] !== -1) {\n                        myObj.columns[i] = value;\n                        checkSum = Number(_this.roundTo(checkSum + value, 2).toFixed(2));\n                    }\n                }\n                checkSum = Number(_this.roundTo(checkSum, 2).toFixed(2));\n                if (checkSum > 1) {\n                    spreadValue = parseFloat(_this.roundTo(((checkSum - 1) % 1), 2).toFixed(2));\n                    myObj.columns[idx] -= spreadValue;\n                    myObj.columns[idx] = _this.roundTo(myObj.columns[idx], 2);\n                }\n                else if (checkSum < 1) {\n                    myObj.columns[idx] += (1 - (checkSum % 1));\n                    myObj.columns[idx] = Number(_this.roundTo(myObj.columns[idx], 2).toFixed(2));\n                }\n                return myObj;\n            });\n        };\n        /**\n         * Add column on the current AjfLayoutWidget.\n         *\n         * When adding a column the width of the other columns is recalculated\n         * by dividing it by the number of column\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.addColumn = function () {\n            var _this = this;\n            this._currentWidgetUpdate.next(function (widget) {\n                if (widget == null) {\n                    return null;\n                }\n                var myObj = widget;\n                var tempObj = [];\n                var num = myObj.columns.length + 1;\n                var checkSum = 0;\n                var objNum = 0;\n                var value = 1;\n                var tmpValue;\n                if (num > 10) {\n                    throw new Error('exceed max columns');\n                }\n                for (var j = 0; j < num; j++) {\n                    if (myObj.columns[j] === -1) {\n                        objNum++;\n                    }\n                }\n                value = Number(_this.roundTo(1 / (num - objNum), 2).toFixed(2));\n                for (var i = 0; i < num; i++) {\n                    if (myObj.columns[i] === -1) {\n                        tempObj.push(-1);\n                    }\n                    else {\n                        tempObj.push(value);\n                        checkSum = Number(_this.roundTo(checkSum + value, 2).toFixed(2));\n                    }\n                }\n                checkSum = Number(_this.roundTo(checkSum, 2).toFixed(2));\n                if (checkSum > 1) {\n                    tmpValue =\n                        parseFloat(_this.roundTo(((checkSum - 1) % 1), 2).toFixed(2));\n                    tempObj[0] -= tmpValue;\n                    tempObj[0] = _this.roundTo(tempObj[0], 2);\n                }\n                else if (checkSum < 1) {\n                    tempObj[0] += (1 - (checkSum % 1));\n                    tempObj[0] = Number(_this.roundTo(tempObj[0], 2).toFixed(2));\n                }\n                myObj.columns = tempObj;\n                // TODO: @trik what's value?!?\n                var columnObj = reports.createWidget({\n                    widgetType: 7,\n                });\n                myObj.content.push(columnObj);\n                _this._saveReportEvent.emit();\n                return myObj;\n            });\n        };\n        AjfReportBuilderService.prototype.removeWidgetToColumn = function (column, index) {\n            column.content.splice(index, 1);\n        };\n        /**\n         * This method remove a widget on the current AjfReport.\n         *\n         * @param node\n         * the position array:\n         *\n         * header -`>` headerWidgets\n         * content -`>` contentWidgets\n         * footer -`>` footerWidgets\n         * column -`>` column of layout\n         * layoutContent -`>` content of layout\n         * obj -`>` obj of layout\n         * customWidget -`>` custom widget\n         *\n         * @param idx the position array\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.remove = function (node, idx) {\n            var _this = this;\n            switch (node) {\n                case 'header':\n                case 'content':\n                case 'footer':\n                    this._updates[node].next(function (widgets) {\n                        if (widgets.widgets.length === 0) {\n                            throw new Error('you can not remove from empty array');\n                        }\n                        if (widgets.widgets[idx] == null) {\n                            throw new Error('invalid index');\n                        }\n                        widgets.widgets.splice(idx, 1);\n                        _this.updateCurrentWidget(null);\n                        return widgets;\n                    });\n                    break;\n                case 'layout':\n                    this._currentWidgetUpdate.next(function (widget) {\n                        if (widget == null) {\n                            return null;\n                        }\n                        var myObj = widget;\n                        if (myObj.columns.length === 1) {\n                            myObj.content[0].content.length = 0;\n                            return myObj;\n                        }\n                        if (myObj.columns[idx] == null) {\n                            throw new Error('this content is undefined');\n                        }\n                        else {\n                            var spread = myObj.columns[idx] / (myObj.columns.length - 1);\n                            if (myObj.columns.length > 1) {\n                                myObj.columns.splice(idx, 1);\n                                myObj.content.splice(idx, 1);\n                            }\n                            for (var i = 0; i < myObj.columns.length; i++) {\n                                myObj.columns[i] += spread;\n                            }\n                            _this.instantColumnValue(myObj.columns[0], 0);\n                        }\n                        return myObj;\n                    });\n                    break;\n                case 'column':\n                case 'layoutContent':\n                case 'unfixedColumn':\n                    this._currentWidgetUpdate.next(function (widget) {\n                        if (widget == null) {\n                            return null;\n                        }\n                        var myObj = widget;\n                        if (node === 'column') {\n                            var clm = widget;\n                            clm.content.splice(idx, 1);\n                        }\n                        else if (node === 'layoutContent') {\n                            if (myObj.columns.length === 0) {\n                                throw new Error('the column length is 0');\n                            }\n                            if (myObj.content.length === 0) {\n                                throw new Error('can not remove any widget from empty content');\n                            }\n                            if (myObj.columns[idx] != null && myObj.content[idx] == null) {\n                                throw new Error('this content is undefined');\n                            }\n                        }\n                        else if (node === 'unfixedColumn') {\n                            if (myObj.columns[idx] !== -1) {\n                                throw new Error('the column position value  isnt -1');\n                            }\n                            _this.unfixedColumn(idx);\n                        }\n                        // if (node !== 'obj') {\n                        //   let spread = myObj.columns[idx] / (myObj.columns.length - 1);\n                        //   myObj.content.splice(idx, 1);\n                        //   if (myObj.columns.length > 1) {\n                        //     myObj.columns.splice(idx, 1);\n                        //   }\n                        //   for (let i = 0; i < myObj.columns.length; i++) {\n                        //     myObj.columns[i] += spread;\n                        //   }\n                        //   this.instantColumnValue(myObj.columns[0], 0);\n                        // }\n                        return myObj;\n                    });\n                    break;\n                case 'customWidgets':\n                    {\n                        this._updates[node].next(function (widgets) {\n                            if (widgets.length === 0) {\n                                throw new Error('you can not remove from empty array');\n                            }\n                            if (widgets[idx] == null) {\n                                throw new Error('invalid index');\n                            }\n                            widgets.splice(idx, 1);\n                            return widgets;\n                        });\n                    }\n                    break;\n                default: throw new Error('unknown node ' + node);\n            }\n        };\n        /**\n         * This method add a AjfWidget on the current AjfLayoutWidget.\n         *\n         * @param newWidget\n         * @param idx\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.addToContent = function (newWidget, idx) {\n            this._currentWidgetUpdate.next(function (widget) {\n                if (widget == null) {\n                    return null;\n                }\n                var myObj = widget;\n                if (myObj.content[idx] != null) {\n                    myObj.content.splice(idx, 1);\n                }\n                myObj.content.splice(idx, 0, newWidget);\n                return myObj;\n            });\n        };\n        AjfReportBuilderService.prototype.addToColumn = function (event, toColumn, position) {\n            if (event.dragData && event.dragData.fromColumn != null) {\n                var fromColumn = event.dragData.fromColumn;\n                var widget = event.dragData.widget;\n                var fromIndex = event.dragData.fromIndex;\n                fromColumn.content.splice(fromIndex, 1);\n                toColumn.content.push(widget);\n            }\n            else if (event.dragData && event.dragData.arrayFrom) {\n                this.remove(event.dragData.arrayFrom, event.dragData.fromIndex);\n                toColumn.content.push(event.dragData.widget);\n            }\n            else if (event.dragData && event.dragData.json) {\n                var obj = JSON.parse(event.dragData.json);\n                var newWidget = utils.deepCopy(obj);\n                if (position != null) {\n                    toColumn.content.splice(position, 0, newWidget);\n                }\n                else {\n                    toColumn.content.push(newWidget);\n                }\n            }\n            else {\n                var obj = { 'widgetType': reports.AjfWidgetType[event.dragData] };\n                var newWidget = utils.deepCopy(obj);\n                if (position != null) {\n                    toColumn.content.splice(position, 0, newWidget);\n                }\n                else {\n                    toColumn.content.push(newWidget);\n                }\n            }\n        };\n        AjfReportBuilderService.prototype.changePositionOnColumn = function (event, toColumn, toIndex) {\n            var fromColumn = event.dragData.fromColumn;\n            var fromIndex = event.dragData.fromIndex;\n            var fromWidget = fromColumn.content[fromIndex];\n            var toWidget = fromColumn.content[toIndex];\n            if (fromColumn == toColumn) {\n                fromColumn.content[fromIndex] = toWidget;\n                fromColumn.content[toIndex] = fromWidget;\n            }\n            else {\n                fromColumn.content.splice(fromIndex, 1);\n                toColumn.content.splice(toIndex, 0, fromWidget);\n            }\n        };\n        /**\n         * This method add the obj on the idx position.\n         * Obj have a no specificate width and is not calculate as columns\n         *\n         * @param idx\n         *\n         * @memberOf AjfReportBuilderService\n         */\n        AjfReportBuilderService.prototype.fixedColumn = function (idx) {\n            this.instantColumnValue(-1, idx);\n        };\n        AjfReportBuilderService.prototype.changeColumn = function (from, to, layoutWidget) {\n            if (to < 0 || to >= layoutWidget.content.length) {\n                return;\n            }\n            if (from > layoutWidget.content.length - 1 && to > from) {\n                return;\n            }\n            var fromColumn = layoutWidget.content[from];\n            var fromColumnValue = layoutWidget.columns[from];\n            var toColumn = layoutWidget.content[to];\n            var toColumnValue = layoutWidget.columns[to];\n            layoutWidget.content[from] = toColumn;\n            layoutWidget.columns[from] = toColumnValue;\n            layoutWidget.content[to] = fromColumn;\n            layoutWidget.columns[to] = fromColumnValue;\n            this.updateCurrentWidget(layoutWidget);\n        };\n        AjfReportBuilderService.prototype.addCustomColor = function (color) {\n            this._updates['color'].next(function (colors) {\n                if (colors.indexOf(color) < 0) {\n                    colors.push(color);\n                }\n                return colors;\n            });\n        };\n        AjfReportBuilderService.prototype._addWidgetToContainer = function (subj, widget, position) {\n            subj.next(function (widgets) {\n                if (position != null && position >= 0) {\n                    widgets.widgets.splice(position, 0, widget);\n                }\n                else {\n                    widgets.widgets.push(widget);\n                }\n                return widgets;\n            });\n            this.updateCurrentWidget(widget);\n            this.setEmptyContent(false);\n        };\n        AjfReportBuilderService.prototype._setCurrentWidgetProperty = function (propName, value) {\n            this._currentWidgetUpdate.next(function (widget) {\n                if (widget == null) {\n                    return null;\n                }\n                widget[propName] = value;\n                return widget;\n            });\n        };\n        AjfReportBuilderService.prototype._addToCurrentWidgetArrayProperty = function (propName, value) {\n            this._currentWidgetUpdate.next(function (widget) {\n                if (widget == null) {\n                    return null;\n                }\n                var arr = widget[propName];\n                arr.push(value);\n                widget[propName] = arr;\n                return widget;\n            });\n        };\n        AjfReportBuilderService.prototype._removeFromCurrentWidgetArrayProperty = function (propName, idx) {\n            this._currentWidgetUpdate.next(function (widget) {\n                widget[propName].splice(idx, 1);\n                return widget;\n            });\n        };\n        AjfReportBuilderService.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        AjfReportBuilderService.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [AJF_REPORTS_CONFIG,] }] }\n        ]; };\n        return AjfReportBuilderService;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    /**\n     * this component manages the report text\n     *\n     * @export\n     */\n    var AjfReportBuilderColumn = /** @class */ (function () {\n        function AjfReportBuilderColumn(_service) {\n            this._service = _service;\n            /**\n             * if true mouse event is on dragged status\n             *\n             * @memberOf AjfReportBuilderContent\n             */\n            this.showActions = false;\n            this.layoutShow = false;\n            // this boolean sign if is dragged a widget\n            this.onDragged = false;\n            this._onDraggedSub = rxjs.Subscription.EMPTY;\n        }\n        AjfReportBuilderColumn.prototype.addToList = function (event, idx, toColumn) {\n            this.onDragEndHandler();\n            if (event.dragData.fromColumn) {\n                this._service.changePositionOnColumn(event, toColumn, idx);\n            }\n            else {\n                this._service.addToColumn(event, toColumn, idx);\n            }\n        };\n        /**\n         *  sign the start of mouse drag with 200 ms of delay\n         *\n         * @memberOf AjfReportBuilderContent\n         */\n        AjfReportBuilderColumn.prototype.onDragStartHandler = function () {\n            var _this = this;\n            var s = rxjs.timer(200)\n                .subscribe(function () {\n                s.unsubscribe();\n                _this._service.dragStarted();\n            });\n        };\n        /**\n         * sign the end of mouse drag\n         *\n         * @memberOf AjfReportBuilderContent\n         */\n        AjfReportBuilderColumn.prototype.onDragEndHandler = function () {\n            this._service.dragEnded();\n        };\n        AjfReportBuilderColumn.prototype.ngOnInit = function () {\n            // this.widget = changes.widget.currentValue;\n            var _this = this;\n            this._onDraggedSub = this._service.onDragged\n                .subscribe(function (x) {\n                _this.onDragged = x;\n            });\n        };\n        AjfReportBuilderColumn.prototype.ngOnDestroy = function () {\n            this._onDraggedSub.unsubscribe();\n        };\n        AjfReportBuilderColumn.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-column',\n                        template: \"<ng-template [ngIf]=\\\"column.content != null\\\">\\n  <div class=\\\"ajf-column\\\"\\n    [ngClass]=\\\"{'ajf-is-on-over': showActions}\\\"\\n    (mouseenter)=\\\"showActions = true\\\"\\n    (mouseleave)=\\\"showActions = false\\\">\\n    <mat-list>\\n      <ng-template ngFor let-widget let-idx=\\\"index\\\" [ngForOf]=\\\"column.content\\\">\\n\\n        <ng-template [ngIf]=\\\"!onDragged\\\">\\n          <ajf-report-builder-widgets-row-buttons\\n              cdkDrag\\n              [cdkDragData]=\\\"{fromColumn: column, fromIndex: idx, widget: widget, dropZones: ['widget']}\\\"\\n              [from]=\\\"'column'\\\"\\n              [fromWidget]=\\\"column\\\"\\n              [widget]=\\\"widget\\\"\\n              [position]=\\\"idx\\\"\\n              [child]=\\\"true\\\"\\n              (cdkDragStarted)=\\\"onDragStartHandler()\\\"\\n              (cdkDragEnded)=\\\"onDragEndHandler()\\\">\\n          </ajf-report-builder-widgets-row-buttons>\\n        </ng-template>\\n        <ajf-report-builder-renderer-widget [widget]=\\\"widget\\\"></ajf-report-builder-renderer-widget>\\n      </ng-template>\\n    </mat-list>\\n  </div>\\n</ng-template>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\".ajf-column{max-width:100%;max-height:100%;background:rgba(0,0,0,0);z-index:100}.ajf-column span{flex-direction:row;width:100%}.ajf-column .mat-list{padding:0}.ajf-column:hover span,.ajf-is-on-over span{visibility:visible !important;display:block !important}.ajf-column-drop-zone{margin:10%;height:50px;background-color:#fff;border:9px solid rgba(66,134,244,.6);border-radius:16px}mat-list{height:100%;padding:0}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfReportBuilderColumn.ctorParameters = function () { return [\n            { type: AjfReportBuilderService }\n        ]; };\n        AjfReportBuilderColumn.propDecorators = {\n            column: [{ type: core.Input }]\n        };\n        return AjfReportBuilderColumn;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    function ajfReportBuilderWidgetToString(widgetType) {\n        return \"reportbuilder-\" + widgetType.toLowerCase();\n    }\n    function ajfWidgetTypeStringToIcon(widgetType) {\n        return \"widget-\" + widgetType.toLowerCase();\n    }\n    function ajfWidgetTypeToIcon(widgetType) {\n        return ajfWidgetTypeStringToIcon(reports.AjfWidgetType[widgetType]);\n    }\n    function ajfWidgetTypeStringToLabel(widgetType) {\n        return \"widgetType.\" + widgetType;\n    }\n    function ajfWidgetTypeToLabel(type) {\n        return ajfWidgetTypeStringToLabel(reports.AjfWidgetType[type]);\n    }\n    function widgetReportBuilderIconName(type) {\n        return \"reportbuilder-\" + reports.AjfWidgetType[type].toLowerCase();\n    }\n    function sanitizeConditionString(str) {\n        str = str.trim();\n        while (str.indexOf('  ') > 0) {\n            str = str.replace('  ', ' ');\n        }\n        return str;\n    }\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfReportBuilderConditionEditor = /** @class */ (function () {\n        /**\n         * this constructor will init current condition by ajfBuilderservice\n         * and init condition and availableFieldNames subscriptions\n         */\n        function AjfReportBuilderConditionEditor(_service) {\n            this._service = _service;\n            this.isValid = false;\n            this.names = [];\n            // conditionText is a string\n            this.conditionText = 'true';\n            //  operators is an array of any type that contains all allow operators\n            this.operators = [\n                '( )', '\\' \\'',\n                '<', '<=', '==', '>=', '>', '!=', '!',\n                '&&', '||',\n                '+', '-', '*', '/', '%',\n                'true', 'false'\n            ];\n            this._conditionNamesSub = rxjs.Subscription.EMPTY;\n        }\n        AjfReportBuilderConditionEditor.prototype.extractNames = function (formsVariables) {\n            this.names.length = 0;\n            for (var i = 0; i < formsVariables.length; i++) {\n                this.names = this.names.concat(formsVariables[i].names);\n            }\n        };\n        AjfReportBuilderConditionEditor.prototype.setCurrent = function (id, index) {\n            this.currentId = id;\n            this.appendText(this.formsVariables[id].names[index]);\n            this.checkValidation();\n        };\n        /**\n         * this method will return success if the current condtion is valid\n         * @return boolean\n         */\n        AjfReportBuilderConditionEditor.prototype.validateCondition = function () {\n            return models.validateExpression(this.conditionText, this.names);\n        };\n        // TODO complete the comment\n        /**\n         * this method will append text to json\n         * @param text      : string -\n         * @param goBackNum : number -\n         */\n        AjfReportBuilderConditionEditor.prototype.appendText = function (text, _goBackNum) {\n            if (text == null || this.conditionTextArea == null) {\n                return;\n            }\n            var el = this.conditionTextArea.nativeElement;\n            var sStart = Math.min(el.selectionStart, el.selectionEnd);\n            var sEnd = Math.max(el.selectionStart, el.selectionEnd);\n            var startingString = this.conditionText.substr(0, sStart);\n            var endingString = this.conditionText.substr(sEnd);\n            var initialLenght = startingString.length;\n            var newStr = '';\n            startingString = sanitizeConditionString(startingString);\n            endingString = sanitizeConditionString(endingString);\n            sStart += startingString.length - initialLenght +\n                text.length + (startingString.length > 0 ? 2 : 1);\n            newStr = startingString.length > 0 ? startingString + \" \" : '';\n            this.conditionText = \"\" + newStr + text + \" \" + endingString;\n            var s = rxjs.timer(0).subscribe(function () {\n                if (s && !s.closed) {\n                    s.unsubscribe();\n                }\n                if (el.createTextRange) {\n                    var range = el.createTextRange();\n                    range.move('character', sStart);\n                    range.select();\n                }\n                else {\n                    if (el.selectionStart) {\n                        el.focus();\n                        el.setSelectionRange(sStart, sStart);\n                    }\n                    else {\n                        el.focus();\n                    }\n                }\n            });\n        };\n        AjfReportBuilderConditionEditor.prototype.checkValidation = function () {\n            this.isValid = this.validateCondition();\n            if (this.isValid) {\n                this.saveCondition();\n            }\n        };\n        /**\n         * this method will save current condition\n         */\n        AjfReportBuilderConditionEditor.prototype.saveCondition = function () {\n            this._service.saveCondition(this.conditionText);\n        };\n        AjfReportBuilderConditionEditor.prototype.ngOnInit = function () {\n            var _this = this;\n            this.conditionText = this.visibility.condition;\n            this.isValid = true;\n            if (this.conditionText == 'true') {\n                this.conditionText = '';\n            }\n            this._conditionNamesSub = this._service.conditionNames\n                .subscribe(function (x) {\n                _this.formsVariables = x;\n                if (x != null) {\n                    _this.extractNames(_this.formsVariables);\n                }\n            });\n        };\n        /**\n         * this method will destroy a conditionSubscriptions\n         */\n        AjfReportBuilderConditionEditor.prototype.ngOnDestroy = function () {\n            this._conditionNamesSub.unsubscribe();\n        };\n        AjfReportBuilderConditionEditor.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-report-builder-condition-editor',\n                        template: \"<ng-template [ngIf]=\\\"formsVariables != null && visibility != null\\\">\\n  <mat-card>\\n    <mat-card-header>\\n      <mat-card-title>condition of visibility</mat-card-title>\\n      <mat-card-subtitle>\\n        <ng-template [ngIf]=\\\"visibility\\\">\\n          {{visibility.condition}}\\n        </ng-template>\\n      </mat-card-subtitle>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <br>\\n      <form>\\n        <mat-select [(ngModel)]=\\\"a\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeholder=\\\"Select condition\\\">\\n          <ng-template ngFor let-form let-id=\\\"index\\\" [ngForOf]=\\\"formsVariables\\\">\\n            <mat-option *ngFor=\\\"let label of form.labels;let i = index;\\\" [value]=\\\"label\\\" (click)=\\\"setCurrent(id, i)\\\">\\n              {{ id}}: {{ label }}\\n            </mat-option>\\n          </ng-template>\\n        </mat-select>\\n        <mat-select [(ngModel)]=\\\"b\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeholder=\\\"Select operator\\\">\\n          <mat-option *ngFor=\\\"let operator of operators\\\" (click)=\\\"appendText(operator);\\\">\\n            {{ operator }}\\n          </mat-option>\\n        </mat-select>\\n      </form>\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <ng-template [ngIf]=\\\"!isValid\\\">\\n        <ng-container translate>Invalid condition! Please check syntax.</ng-container>\\n      </ng-template>\\n      <textarea\\n          #conditionTextArea\\n          [(ngModel)]=\\\"conditionText\\\"\\n          (keyup)=\\\"checkValidation()\\\">\\n        </textarea>\\n    </mat-card-actions>\\n  </mat-card>\\n</ng-template>\\n\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\"ajf-report-builder-condition-editor textarea{width:100%}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfReportBuilderConditionEditor.ctorParameters = function () { return [\n            { type: AjfReportBuilderService }\n        ]; };\n        AjfReportBuilderConditionEditor.propDecorators = {\n            visibility: [{ type: core.Input }],\n            conditionTextArea: [{ type: core.ViewChild, args: ['conditionTextArea', { static: false },] }]\n        };\n        return AjfReportBuilderConditionEditor;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    /**\n     *  manage the content page\n     *\n     * @export\n     */\n    var AjfReportBuilderContent = /** @class */ (function () {\n        function AjfReportBuilderContent(_service, _cdRef) {\n            this._service = _service;\n            this._cdRef = _cdRef;\n            // this boolean sign if is dragged a widget\n            this.onDragged = false;\n            /**\n             *  observe the status of the fixed zoom\n             *\n             * @memberOf AjfReportBuilderContent\n             */\n            this.fixedZoom = false;\n            // this boolean sign if widget is in drag enter status\n            this.onDragEnter = {};\n            this.show = false;\n            // this array contains all widget locate in header zone\n            this.headerWidgets = [];\n            // this array contains all widget locate in content zone\n            this.contentWidgets = [];\n            // this array contains all widget locate in footer zone\n            this.footerWidgets = [];\n            this.onOver = false;\n            // this is the current widget\n            this.currentWidget = null;\n            /**\n             * if true mouse event is on dragged status\n             *\n             * @memberOf AjfReportBuilderContent\n             */\n            this.showActions = false;\n            this._onDraggedSub = rxjs.Subscription.EMPTY;\n            this._fixedZoomSub = rxjs.Subscription.EMPTY;\n            this._onDragEnterSub = rxjs.Subscription.EMPTY;\n            this._headerWidgetsSub = rxjs.Subscription.EMPTY;\n            this._contentWidgetsSub = rxjs.Subscription.EMPTY;\n            this._footerWidgetsSub = rxjs.Subscription.EMPTY;\n            this._onOverSub = rxjs.Subscription.EMPTY;\n            this._currentWidgetSub = rxjs.Subscription.EMPTY;\n            this.headerStyles = this._service.headerStyles;\n            this.contentStyles = this._service.contentStyles;\n            this.footerStyles = this._service.footerStyles;\n        }\n        AjfReportBuilderContent.prototype.onMouseOver = function () {\n            this.showActions = true;\n            this._service.overStarted();\n        };\n        AjfReportBuilderContent.prototype.onMouseLeave = function () {\n            this.showActions = false;\n            this._service.overEnded();\n        };\n        AjfReportBuilderContent.prototype.canDropPredicate = function (dropZones) {\n            return function (item) {\n                for (var i = 0; i < item.data.dropZones.length; i++) {\n                    if (dropZones.indexOf(item.data.dropZones[i]) > -1) {\n                        return true;\n                    }\n                }\n                return false;\n            };\n        };\n        AjfReportBuilderContent.prototype.isLayout = function (widget) {\n            return widget.widgetType === reports.AjfWidgetType.Layout;\n        };\n        /**\n         *  sign the start of mouse drag with 200 ms of delay\n         *\n         * @memberOf AjfReportBuilderContent\n         */\n        AjfReportBuilderContent.prototype.onDragStartHandler = function () {\n            var _this = this;\n            var s = rxjs.timer(200)\n                .subscribe(function () {\n                if (s != null) {\n                    s.unsubscribe();\n                }\n                _this._service.dragStarted();\n            });\n        };\n        /**\n         * sign the end of mouse drag\n         *\n         * @memberOf AjfReportBuilderContent\n         */\n        AjfReportBuilderContent.prototype.onDragEndHandler = function () {\n            this._service.dragEnded();\n        };\n        /**\n         *  sign the enter of mouse drag\n         *\n         * @memberOf AjfReportBuilderContent\n         */\n        AjfReportBuilderContent.prototype.onDragEnterHandler = function (array, index) {\n            if (index == null) {\n                return;\n            }\n            this._service.dragEnter(array, index);\n        };\n        /**\n         * sign the leave of mouse drag\n         *\n         * @memberOf AjfReportBuilderContent\n         */\n        AjfReportBuilderContent.prototype.onDragLeaveHandler = function () {\n            this._service.dragLeave();\n        };\n        /**\n         *  return true if array and index is === with array and index of onDragEnter\n         *\n         * @param array\n         * @param index\n         *\n         * @memberOf AjfReportBuilderContent\n         */\n        AjfReportBuilderContent.prototype.onDragEnterCheck = function (array, index) {\n            if ((array === this.onDragEnter.array) &&\n                ((index === this.onDragEnter.index) || (index === -1))) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        };\n        /**\n         * remove widget element from type array in idx position\n         *\n         * @param type can be header content or footer\n         * @param idx\n         *\n         * @memberOf AjfReportBuilderContent\n         */\n        AjfReportBuilderContent.prototype.remove = function (type, idx) {\n            this._service.remove(type, idx);\n        };\n        /**\n         * add widget element into type array in idx position\n         *\n         * @param type\n         * @param event\n         *\n         * @memberOf AjfReportBuilderContent\n         */\n        AjfReportBuilderContent.prototype.addToList = function (arrayTo, event, to) {\n            this.onDragEndHandler();\n            this._service.setOrigin(arrayTo);\n            var itemData = event.item.data;\n            if (itemData.fromColumn != null) {\n                this._service.removeWidgetToColumn(itemData.fromColumn, itemData.fromIndex);\n                this.currentWidget = itemData.widget;\n            }\n            else if (itemData.widget != null) {\n                this.remove(itemData.arrayFrom, itemData.from);\n                this.currentWidget = itemData.widget;\n            }\n            else if (itemData.json != null && itemData.json !== '') {\n                this.currentWidget = utils.deepCopy(itemData.json);\n            }\n            else {\n                var obj = { 'widgetType': reports.AjfWidgetType[itemData.widgetType] };\n                this.currentWidget = utils.deepCopy(obj);\n            }\n            this.onDragEndHandler();\n            if (this.currentWidget != null) {\n                switch (arrayTo) {\n                    case 'header':\n                        this._service.addHeaderWidget(this.currentWidget, to);\n                        break;\n                    case 'content':\n                        this._service.addContentWidget(this.currentWidget, to);\n                        break;\n                    case 'footer':\n                        this._service.addfooterWidget(this.currentWidget, to);\n                        break;\n                }\n            }\n            this.onDragLeaveHandler();\n        };\n        AjfReportBuilderContent.prototype.ngOnInit = function () {\n            var _this = this;\n            this._headerWidgetsSub = this._service.headerWidgets\n                .subscribe(function (x) {\n                _this.headerWidgets = x.widgets;\n            });\n            this._contentWidgetsSub = this._service.contentWidgets\n                .subscribe(function (x) {\n                _this.contentWidgets = x.widgets;\n            });\n            this._footerWidgetsSub = this._service.footerWidgets\n                .subscribe(function (x) {\n                _this.footerWidgets = x.widgets;\n            });\n            this._onDraggedSub = this._service.onDragged\n                .subscribe(function (x) {\n                _this.onDragged = x;\n            });\n            this._fixedZoomSub = this._service.fixedZoom\n                .subscribe(function (bool) {\n                _this.fixedZoom = bool;\n            });\n            this._onDragEnterSub = this._service.onDragEnter\n                .subscribe(function (x) {\n                _this.onDragEnter = x;\n            });\n            this._onOverSub = this._service.onOver\n                .subscribe(function (x) {\n                _this.onOver = x;\n            });\n        };\n        AjfReportBuilderContent.prototype.ngAfterViewChecked = function () {\n            this._cdRef.detectChanges();\n        };\n        AjfReportBuilderContent.prototype.ngOnDestroy = function () {\n            [\n                this._headerWidgetsSub, this._contentWidgetsSub, this._footerWidgetsSub,\n                this._currentWidgetSub, this._onDraggedSub, this._fixedZoomSub,\n                this._onOverSub, this._onDragEnterSub\n            ].forEach(function (s) { s.unsubscribe(); });\n        };\n        AjfReportBuilderContent.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-report-builder-content',\n                        template: \"<div\\n  class=\\\"ajf-overlay\\\"\\n  [ngClass]=\\\"{'ajf-drag-mode': onDragged, 'ajf-zoom-mode': fixedZoom}\\\"\\n  [applyStyles]=\\\"reportStyles|async\\\"\\n  (mouseenter)=\\\"show = true\\\"\\n  (mouseleave)=\\\"show = false\\\">\\n  <div\\n    class=\\\"ajf-header\\\"\\n    [ngClass]=\\\"{'ajf-is-on-over': onDragged || show}\\\"\\n    [applyStyles]=\\\"(headerStyles|async)\\\">\\n    <mat-list *ngFor=\\\"let t of headerWidgets; let i = index\\\">\\n      <div cdkDropList\\n          class=\\\"ajf-drop-zone\\\"\\n          [ngClass]=\\\"{'ajf-show': true}\\\"\\n          [cdkDropListEnterPredicate]=\\\"canDropPredicate(['widget','column'])\\\"\\n          (cdkDropListDropped)=\\\"addToList('header', $event, i);\\\"\\n          (dragenter)=\\\"onDragEnterHandler('header', i)\\\"\\n          (dragleave)=\\\"onDragLeaveHandler()\\\">\\n      </div>\\n      <ajf-report-builder-widgets-row-buttons\\n          cdkDrag\\n          [cdkDragData]=\\\"{widget: t,fromIndex: i,arrayFrom: 'header', dropZones: ['widget','column']}\\\"\\n          [style.display]=\\\"(showActions || onDragged)? 'block' : 'none'\\\"\\n          [from]=\\\"'header'\\\"\\n          [widget]=\\\"t\\\"\\n          [position]=\\\"i\\\"\\n          (cdkDragStarted)=\\\"onDragStartHandler();\\\"\\n          (cdkDragEnded)=\\\"onDragEndHandler()\\\">\\n      </ajf-report-builder-widgets-row-buttons>\\n      <ajf-report-builder-renderer-widget [widget]=\\\"t\\\" [position]=\\\"i\\\" [section]=\\\"'header'\\\" (currentWidget)=\\\"currentWidget\\\"></ajf-report-builder-renderer-widget>\\n    </mat-list>\\n    <div cdkDropList\\n        class=\\\"ajf-drop-zone-container\\\"\\n        [ngClass]=\\\"{'ajf-show': true}\\\"\\n        [cdkDropListEnterPredicate]=\\\"canDropPredicate(['header','widget','column'])\\\"\\n        (cdkDropListDropped)=\\\"addToList('header', $event)\\\"\\n        (dragenter)=\\\"onDragEnterHandler('header', headerWidgets?.length)\\\"\\n        (dragleave)=\\\"onDragLeaveHandler()\\\">\\n    </div>\\n  </div>\\n  <div\\n    class=\\\"ajf-content\\\"\\n    [ngClass]=\\\"{'ajf-is-on-over': onDragged || show}\\\"\\n    [applyStyles]=\\\"contentStyles|async\\\">\\n    <mat-list *ngFor=\\\"let t of contentWidgets; let i = index\\\">\\n      <div cdkDropList\\n          class=\\\"ajf-drop-zone\\\"\\n          [ngClass]=\\\"{'ajf-show': true}\\\"\\n          [cdkDropListEnterPredicate]=\\\"canDropPredicate(['widget','column'])\\\"\\n          (cdkDropListDropped)=\\\"addToList('content', $event, i)\\\"\\n          (dragenter)=\\\"onDragEnterHandler('content', i)\\\"\\n          (dragleave)=\\\"onDragLeaveHandler()\\\">\\n      </div>\\n      <ajf-report-builder-widgets-row-buttons\\n          cdkDrag\\n          [cdkDragData]=\\\"{widget: t, fromIndex: i, arrayFrom: 'content', dropZones: ['widget','column']}\\\"\\n          [style.display]=\\\"showActions ? 'block' : 'none'\\\"\\n          [from]=\\\"'content'\\\"\\n          [widget]=\\\"t\\\"\\n          [position]=\\\"i\\\"\\n          (cdkDragStarted)=\\\"onDragStartHandler()\\\"\\n          (cdkDragEnded)=\\\"onDragEndHandler();\\\">\\n      </ajf-report-builder-widgets-row-buttons>\\n      <ajf-report-builder-renderer-widget [widget]=\\\"t\\\" [position]=\\\"i\\\" [section]=\\\"'content'\\\" (currentWidget)=\\\"currentWidget\\\"></ajf-report-builder-renderer-widget>\\n    </mat-list>\\n    <div cdkDropList\\n        class=\\\"ajf-drop-zone-container\\\"\\n        [ngClass]=\\\"{'ajf-show': onDragged}\\\"\\n        [cdkDropListEnterPredicate]=\\\"canDropPredicate(['content','widget','column'])\\\"\\n        (cdkDropListDropped)=\\\"addToList('content', $event)\\\"\\n        (dragenter)=\\\"onDragEnterHandler('content', contentWidgets?.length)\\\"\\n        (dragleave)=\\\"onDragLeaveHandler()\\\">\\n      <label translate>Drop here</label>\\n    </div>\\n  </div>\\n  <div\\n    class=\\\"ajf-footer\\\"\\n    [ngClass]=\\\"{'ajf-is-on-over': onDragged || show}\\\"\\n    [applyStyles]=\\\"footerStyles|async\\\">\\n    <mat-list *ngFor=\\\"let t of footerWidgets; let i = index\\\">\\n      <div cdkDropList\\n          class=\\\"ajf-drop-zone\\\"\\n          [ngClass]=\\\"{'ajf-show': true}\\\"\\n          [cdkDropListEnterPredicate]=\\\"canDropPredicate(['widget','column'])\\\"\\n          (cdkDropListDropped)=\\\"addToList('footer', $event, i)\\\"\\n          (dragenter)=\\\"onDragEnterHandler('footer', i)\\\"\\n          (dragleave)=\\\"onDragLeaveHandler()\\\">\\n      </div>\\n      <ajf-report-builder-widgets-row-buttons\\n          cdkDrag\\n          [cdkDragData]=\\\"{widget: t, fromIndex: i, arrayFrom: 'footer', dropZones: ['widget','column']}\\\"\\n          [style.display]=\\\"showActions ? 'block' : 'none'\\\"\\n          [from]=\\\"'footer'\\\"\\n          [widget]=\\\"t\\\"\\n          [position]=\\\"i\\\"\\n          (cdkDragStarted)=\\\"onDragStartHandler()\\\"\\n          (cdkDragEnded)=\\\"onDragEndHandler()\\\">\\n      </ajf-report-builder-widgets-row-buttons>\\n      <ajf-report-builder-renderer-widget [widget]=\\\"t\\\" [position]=\\\"i\\\" [section]=\\\"'footer'\\\" (currentWidget)=\\\"currentWidget\\\"></ajf-report-builder-renderer-widget>\\n    </mat-list>\\n    <div cdkDropList\\n        class=\\\"ajf-drop-zone-container\\\"\\n        [ngClass]=\\\"{'ajf-show': onDragged}\\\"\\n        [cdkDropListEnterPredicate]=\\\"canDropPredicate(['footer','widget','column'])\\\"\\n        (cdkDropListDropped)=\\\"addToList('footer', $event)\\\"\\n        (dragenter)=\\\"onDragEnterHandler('footer', headerWidgets?.length)\\\"\\n        (dragleave)=\\\"onDragLeaveHandler()\\\">\\n      <label translate>Drop here</label>\\n    </div>\\n</div>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        host: {\n                            '(mouseover)': 'onMouseOver()',\n                            '(mouseleave)': 'onMouseLeave()'\n                        },\n                        styles: [\"ajf-report-builder-content{text-align:center;display:block;margin-bottom:300px}ajf-report-builder-content .ajf-overlay.ajf-drag-mode{max-height:700px;margin-top:50px;background-color:beige}ajf-report-builder-content .ajf-drag-mode{overflow:scroll;zoom:50%}ajf-report-builder-content .ajf-drag-mode .ajf-header,ajf-report-builder-content .ajf-drag-mode .ajf-content,ajf-report-builder-content .ajf-drag-mode .ajf-footer{margin-bottom:20px;border:23px solid rgba(66,134,244,.2)}ajf-report-builder-content .ajf-drag-mode .ajf-header .ajf-drop-zone,ajf-report-builder-content .ajf-drag-mode .ajf-content .ajf-drop-zone,ajf-report-builder-content .ajf-drag-mode .ajf-footer .ajf-drop-zone{width:auto;background-color:rgba(66,134,244,.2);border:23px solid #fff;position:relative;min-height:50px !important;z-index:0;opacity:1}ajf-report-builder-content .ajf-drag-mode .ajf-header .ajf-drop-zone-container,ajf-report-builder-content .ajf-drag-mode .ajf-content .ajf-drop-zone-container,ajf-report-builder-content .ajf-drag-mode .ajf-footer .ajf-drop-zone-container{background-color:rgba(66,134,244,.2) !important;border:23px solid #fff !important}ajf-report-builder-content .ajf-drag-mode .ajf-header,ajf-report-builder-content .ajf-drag-mode .ajf-footer{border:23px solid rgba(255,102,102,.4) !important}ajf-report-builder-content .ajf-drag-mode .ajf-header .ajf-drop-zone-container,ajf-report-builder-content .ajf-drag-mode .ajf-footer .ajf-drop-zone-container{background-color:rgba(255,102,102,.4) !important}ajf-report-builder-content .ajf-drag-mode .ajf-header .ajf-drop-zone,ajf-report-builder-content .ajf-drag-mode .ajf-footer .ajf-drop-zone{background-color:rgba(255,102,102,.4) !important}ajf-report-builder-content .ajf-drag-mode .ajf-drop-zone-container{background-color:#000;border:16px solid #fff;position:relative;opacity:0;z-index:0;min-height:50px !important;display:none !important}ajf-report-builder-content .ajf-zoom-mode{zoom:50%}ajf-report-builder-content .ajf-header,ajf-report-builder-content .ajf-content,ajf-report-builder-content .ajf-footer{height:100%;min-height:50px;position:relative;text-align:center;display:block}ajf-report-builder-content .ajf-header .mat-list,ajf-report-builder-content .ajf-content .mat-list,ajf-report-builder-content .ajf-footer .mat-list{padding:0}ajf-report-builder-content .ajf-header .ajf-zoom:hover,ajf-report-builder-content .ajf-content .ajf-zoom:hover,ajf-report-builder-content .ajf-footer .ajf-zoom:hover{padding-bottom:100px;overflow-y:scroll}ajf-report-builder-content .ajf-content:hover{background-color:rgba(66,134,244,.2) !important}ajf-report-builder-content .ajf-header:hover,ajf-report-builder-content .ajf-footer:hover{background-color:rgba(255,102,102,.4)}ajf-report-builder-content .ajf-header:hover,ajf-report-builder-content .ajf-content:hover,ajf-report-builder-content .ajf-footer:hover,ajf-report-builder-content .ajf-is-on-over{border:3px dotted #3a7999}ajf-report-builder-content .ajf-header:hover label,ajf-report-builder-content .ajf-content:hover label,ajf-report-builder-content .ajf-footer:hover label,ajf-report-builder-content .ajf-is-on-over label{visibility:visible !important;opacity:.4;display:block !important}ajf-report-builder-content .ajf-header:hover .ajf-drop-zone-container,ajf-report-builder-content .ajf-content:hover .ajf-drop-zone-container,ajf-report-builder-content .ajf-footer:hover .ajf-drop-zone-container,ajf-report-builder-content .ajf-is-on-over .ajf-drop-zone-container{display:block !important}ajf-report-builder-content .ajf-header:hover mat-list button,ajf-report-builder-content .ajf-content:hover mat-list button,ajf-report-builder-content .ajf-footer:hover mat-list button,ajf-report-builder-content .ajf-is-on-over mat-list button{display:inline}ajf-report-builder-content .ajf-my-content{width:100%;white-space:nowrap;overflow-y:auto}ajf-report-builder-content .ajf-show,ajf-report-builder-content .ajf-on-drag-over{opacity:1 !important;z-index:10}ajf-report-builder-content mat-list{position:relative;display:block}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfReportBuilderContent.ctorParameters = function () { return [\n            { type: AjfReportBuilderService },\n            { type: core.ChangeDetectorRef }\n        ]; };\n        return AjfReportBuilderContent;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfReportBuilderCustomWidgetDialog = /** @class */ (function () {\n        function AjfReportBuilderCustomWidgetDialog(_service, _dialogRef) {\n            this._service = _service;\n            this._dialogRef = _dialogRef;\n        }\n        AjfReportBuilderCustomWidgetDialog.prototype.changeLabel = function () {\n            this._service.changeLabelCustomWidget(this.label, this.position);\n            this._dialogRef.close();\n        };\n        AjfReportBuilderCustomWidgetDialog.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'custom-widget-dialog',\n                        template: \"<h3 matDialogTitle> set the label widget</h3>\\n<mat-form-field>\\n  <input matInput placeholder=\\\"add the label of this custom widget\\\" [(ngModel)]=\\\"label\\\"/>\\n</mat-form-field>\\n<button matDialogClose (click)=\\\"changeLabel()\\\"> Ok </button>\\n\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfReportBuilderCustomWidgetDialog.ctorParameters = function () { return [\n            { type: AjfReportBuilderService },\n            { type: dialog.MatDialogRef }\n        ]; };\n        AjfReportBuilderCustomWidgetDialog.propDecorators = {\n            label: [{ type: core.Input }],\n            position: [{ type: core.Input }]\n        };\n        return AjfReportBuilderCustomWidgetDialog;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfReportBuilderCustomWidgetToolbarButton = /** @class */ (function () {\n        // {...t, dropZones: ['header','content','footer','column','widget']}\n        /**\n         * this constructor will init icon registry\n         */\n        function AjfReportBuilderCustomWidgetToolbarButton(_service) {\n            this._service = _service;\n            this.customWidgets = [];\n        }\n        /**\n         * this method call a service method for remove custom widget\n         *\n         * @memberOf AjfReportBuilderCustomWidgetToolbarButton\n         */\n        AjfReportBuilderCustomWidgetToolbarButton.prototype.remove = function () {\n            this._service.remove('customWidgets', this.position);\n        };\n        /**\n         * this method will init  fieldIcon and fieldLabel\n         */\n        AjfReportBuilderCustomWidgetToolbarButton.prototype.ngOnInit = function () {\n            this.widgetIcon = ajfWidgetTypeStringToIcon(this.widgetType);\n            this.widgetLabel = ajfWidgetTypeStringToLabel(this.widgetType);\n        };\n        AjfReportBuilderCustomWidgetToolbarButton.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-report-builder-custom-widget-toolbar-button',\n                        template: \"<a mat-button>\\n  {{ widgetType}}\\n  <i class=\\\"material-icons\\\"(click)=\\\"remove()\\\">remove_circle_outline</i>\\n</a>\\n\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\"ajf-report-builder-custom-widget-toolbar-button{margin-right:20px}ajf-report-builder-custom-widget-toolbar-button a{min-height:60px;margin-top:20px}ajf-report-builder-custom-widget-toolbar-button a i{display:none}ajf-report-builder-custom-widget-toolbar-button a:hover i{display:inline;position:absolute !important;margin-left:5px !important;z-index:5}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfReportBuilderCustomWidgetToolbarButton.ctorParameters = function () { return [\n            { type: AjfReportBuilderService }\n        ]; };\n        AjfReportBuilderCustomWidgetToolbarButton.propDecorators = {\n            widgetType: [{ type: core.Input }],\n            position: [{ type: core.Input }]\n        };\n        return AjfReportBuilderCustomWidgetToolbarButton;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfReportBuilderCustomWidgetsToolbar = /** @class */ (function () {\n        function AjfReportBuilderCustomWidgetsToolbar(_service, dialog) {\n            this._service = _service;\n            this.dialog = dialog;\n            this.customWidgets = [];\n            this._customWidgetsSub = rxjs.Subscription.EMPTY;\n            this._threeColumnsLayout = '{\"widgetType\":0,' +\n                '\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"columns\":[0.34,0.33,0.33],' +\n                '\"content\":' +\n                '[{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]},' +\n                '{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]},' +\n                '{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]}]}';\n            this._fourColumnsLayout = '{\"widgetType\":0,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},' +\n                '\"columns\":[0.25,0.25,0.25,0.25],\"content\":' +\n                '[{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]},' +\n                '{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]},' +\n                '{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]},' +\n                '{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]}]}';\n        }\n        AjfReportBuilderCustomWidgetsToolbar.prototype.openDialog = function (idx) {\n            this._dialogRef = this.dialog.open(AjfReportBuilderCustomWidgetDialog);\n            this._dialogRef.componentInstance.label = this.customWidgets[idx].type;\n            this._dialogRef.componentInstance.position = idx;\n        };\n        /**\n         *  sign the start of mouse drag with 200 ms of delay\n         *\n         * @memberOf AjfReportBuilderContent\n         */\n        AjfReportBuilderCustomWidgetsToolbar.prototype.onDragStartHandler = function () {\n            var _this = this;\n            var s = rxjs.timer(200)\n                .subscribe(function () {\n                if (s != null) {\n                    s.unsubscribe();\n                }\n                _this._service.dragStarted();\n            });\n        };\n        /**\n         * sign the end of mouse drag\n         *\n         * @memberOf AjfReportBuilderContent\n         */\n        AjfReportBuilderCustomWidgetsToolbar.prototype.onDragEndHandler = function () {\n            this._service.dragEnded();\n        };\n        /**\n         *  sign the enter of mouse drag\n         *\n         * @memberOf AjfReportBuilderContent\n         */\n        AjfReportBuilderCustomWidgetsToolbar.prototype.onDragEnterHandler = function (array, index) {\n            this._service.dragEnter(array, index);\n        };\n        /**\n         * sign the leave of mouse drag\n         *\n         * @memberOf AjfReportBuilderContent\n         */\n        AjfReportBuilderCustomWidgetsToolbar.prototype.onDragLeaveHandler = function () {\n            this._service.dragLeave();\n        };\n        AjfReportBuilderCustomWidgetsToolbar.prototype.ngOnInit = function () {\n            var _this = this;\n            this._customWidgetsSub = this._service.customWidgets\n                .subscribe(function (x) {\n                _this.customWidgets = x;\n                if (_this.customWidgets.length > 0 &&\n                    _this.customWidgets[_this.customWidgets.length - 1].type == '') {\n                    _this.openDialog(_this.customWidgets.length - 1);\n                }\n            });\n            this._service.addCustomWidgets({\n                json: this._threeColumnsLayout,\n                type: 'LayoutWidgetWith3Columns',\n            });\n            this._service.addCustomWidgets({\n                json: this._fourColumnsLayout,\n                type: 'LayoutWidgetWith4Columns'\n            });\n        };\n        AjfReportBuilderCustomWidgetsToolbar.prototype.ngOnDestroy = function () {\n            this._customWidgetsSub.unsubscribe();\n            this._service.resetCustomWidgets();\n        };\n        AjfReportBuilderCustomWidgetsToolbar.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-report-builder-custom-widgets-toolbar',\n                        template: \"<mat-toolbar>\\n  <ng-template ngFor let-t [ngForOf]=\\\"customWidgets\\\" let-i=\\\"index\\\">\\n    <ajf-report-builder-custom-widget-toolbar-button\\n          cdkDrag\\n          [cdkDragData]=\\\"t\\\"\\n          [widgetType]=\\\"t.type\\\"\\n          [position]=\\\"i\\\"\\n          (cdkDragStarted)=\\\"onDragStartHandler()\\\"\\n          (cdkDragEnded)=\\\"onDragEndHandler();\\\"\\n          (click)=\\\"openDialog(i)\\\">\\n    </ajf-report-builder-custom-widget-toolbar-button>\\n   </ng-template>\\n</mat-toolbar>\\n\\n\\n\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\"ajf-report-builder-custom-widgets-toolbar .mat-toolbar{background-color:rgba(144,238,144,.6);border-radius:16px}ajf-report-builder-custom-widgets-toolbar .ajf-hide{display:none}ajf-report-builder-custom-widgets-toolbar .ajf-show{display:block}ajf-report-builder-custom-widgets-toolbar a{margin-right:10px}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfReportBuilderCustomWidgetsToolbar.ctorParameters = function () { return [\n            { type: AjfReportBuilderService },\n            { type: dialog.MatDialog }\n        ]; };\n        return AjfReportBuilderCustomWidgetsToolbar;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfDataType;\n    (function (AjfDataType) {\n        AjfDataType[AjfDataType[\"MainData\"] = 0] = \"MainData\";\n        AjfDataType[AjfDataType[\"Dataset\"] = 1] = \"Dataset\";\n        AjfDataType[AjfDataType[\"RelatedData\"] = 2] = \"RelatedData\";\n        AjfDataType[AjfDataType[\"LENGTH\"] = 3] = \"LENGTH\";\n    })(AjfDataType || (AjfDataType = {}));\n    var AjfReportBuilderFormsAnalyzerDialog = /** @class */ (function () {\n        function AjfReportBuilderFormsAnalyzerDialog(_service, _dialogRef, _) {\n            var _this = this;\n            this._service = _service;\n            this._dialogRef = _dialogRef;\n            this.aggregationTypes = utils.sizedEnumToStringArray(reports.AjfAggregationType);\n            //  operators is an array of any type that contains all allow operators\n            this.operators = [\n                'true', 'false', '( )', '\\' \\'',\n                '<', '<=', '>=', '>', '!=', '!',\n                '&&', '||',\n                '+', '-', '*', '/', '%', '=='\n            ];\n            this.formulaText = '';\n            this.formulaDate = '';\n            this.safeFormulaText = '';\n            this.label = '';\n            this.condition = '';\n            this.aggregationType = reports.AjfAggregationType.Sum;\n            this.currentId = 0;\n            this.currentIndex = 0;\n            this.labels = [];\n            this.currentWidget = null;\n            this.formsVariablesName = [];\n            this.formsVariablesType = [];\n            this._formAnalyzerSub = rxjs.Subscription.EMPTY;\n            this._currentWidgetSub = rxjs.Subscription.EMPTY;\n            this._first = true;\n            if (this.init == false) {\n                this.formulaText = '';\n                this.aggregationType = reports.AjfAggregationType.Sum;\n            }\n            this._currentWidgetSub = this._service.currentWidget\n                .subscribe(function (x) {\n                if (x != null) {\n                    _this.currentWidget = x;\n                    if (_this.currentWidget.widgetType == 2) {\n                        var myObj = _this.currentWidget;\n                        if (myObj.imageType == image$1.AjfImageType.Flag) {\n                            _this.formula = (myObj.flag) ? myObj.flag.formula : '';\n                        }\n                        else {\n                            _this.formula = (myObj.icon) ? myObj.icon.formula : '';\n                        }\n                    }\n                }\n            });\n            this._formAnalyzerSub = this._service.formsVariables\n                .subscribe(function (x) {\n                if (x != null) {\n                    _this.formsVariables = x;\n                }\n            });\n        }\n        AjfReportBuilderFormsAnalyzerDialog.prototype.onEditorInit = function () {\n            monaco.languages.typescript.javascriptDefaults.setDiagnosticsOptions({\n                noSemanticValidation: false,\n                noSyntaxValidation: false\n            });\n            monaco.languages.typescript.javascriptDefaults.setCompilerOptions({\n                target: monaco.languages.typescript.ScriptTarget.ES2015,\n                allowNonTsExtensions: true,\n                allowJs: true,\n                module: monaco.languages.typescript.ModuleKind.None\n            });\n            try {\n                monaco.languages.typescript.javascriptDefaults.addExtraLib('', 'condition-editor-variables.d.ts');\n            }\n            catch (e) {\n                monaco.languages.typescript.javascriptDefaults\n                    ._extraLibs['condition-editor-variables.d.ts'] = '';\n            }\n            try {\n                monaco.languages.typescript.javascriptDefaults.addExtraLib('', 'condition-editor-functions.d.ts');\n            }\n            catch (e) {\n                monaco.languages.typescript.javascriptDefaults\n                    ._extraLibs['condition-editor-functions.d.ts'] = '';\n            }\n            this._initFormsVariablesNames();\n            this._updateVariables();\n            this._updateFunctions();\n        };\n        AjfReportBuilderFormsAnalyzerDialog.prototype._initFormsVariablesNames = function () {\n            var _this = this;\n            this.formsVariables.forEach(function (formVar) {\n                formVar.names.forEach(function (name) {\n                    _this.formsVariablesName.push(name);\n                });\n                formVar.types.forEach(function (type) {\n                    _this.formsVariablesType.push(_this._fieldVarType(type) || '');\n                });\n            });\n        };\n        AjfReportBuilderFormsAnalyzerDialog.prototype._updateVariables = function () {\n            if (this.formsVariables == null) {\n                return;\n            }\n            try {\n                var value = '';\n                for (var i = 0; i < this.formsVariablesName.length; i++) {\n                    value += \"declare const \" + this.formsVariablesName[i] + \": \" + this.formsVariablesType[i] + \";\";\n                }\n                value += \"\\n\";\n                monaco.languages.typescript.javascriptDefaults\n                    ._extraLibs['condition-editor-variables.d.ts'] = value;\n            }\n            catch (e) { }\n        };\n        AjfReportBuilderFormsAnalyzerDialog.prototype._updateFunctions = function () {\n            try {\n                monaco.languages.typescript.javascriptDefaults._extraLibs['condition-editor-functions.d.ts'] =\n                    models.AjfExpressionUtils.UTIL_FUNCTIONS;\n            }\n            catch (e) { }\n        };\n        AjfReportBuilderFormsAnalyzerDialog.prototype._fieldVarType = function (fieldType) {\n            switch (fieldType) {\n                case forms$1.AjfFieldType.Boolean:\n                    return 'boolean';\n                case forms$1.AjfFieldType.Date:\n                case forms$1.AjfFieldType.DateInput:\n                case forms$1.AjfFieldType.Time:\n                    return 'Date';\n                case forms$1.AjfFieldType.Empty:\n                    return 'void';\n                case forms$1.AjfFieldType.Formula:\n                    return 'number';\n                case forms$1.AjfFieldType.MultipleChoice:\n                case forms$1.AjfFieldType.SingleChoice:\n                    return 'any';\n                case forms$1.AjfFieldType.Number:\n                    return 'number';\n                case forms$1.AjfFieldType.Table:\n                    return 'Array';\n                case forms$1.AjfFieldType.String:\n                case forms$1.AjfFieldType.Text:\n                    return 'string';\n            }\n            return null;\n        };\n        AjfReportBuilderFormsAnalyzerDialog.prototype.setCurrent = function (id, label, index) {\n            if (!this.init) {\n                this.label = label;\n                this.init = true;\n            }\n            this.insertVariable(this.formsVariables[id].names[index] || '');\n        };\n        AjfReportBuilderFormsAnalyzerDialog.prototype.setCurrentId = function (id) {\n            this.currentId = id;\n            this.labels = this.formsVariables[id].labels;\n            this._updateVariables();\n        };\n        AjfReportBuilderFormsAnalyzerDialog.prototype.setAggregationType = function (type) {\n            this.aggregationType = type;\n        };\n        AjfReportBuilderFormsAnalyzerDialog.prototype.checkValidation = function () {\n            if (this.validateFormula()) {\n                this.safeFormulaText = this.formulaText;\n                this.isValid = true;\n            }\n            else {\n                this.isValid = false;\n            }\n            if (this.formulaText == '') {\n                this.isValid = false;\n            }\n        };\n        AjfReportBuilderFormsAnalyzerDialog.prototype.validateFormula = function () {\n            if (this.formulaText == '') {\n                this.init = false;\n            }\n            if (this.formsVariables == null) {\n                return false;\n            }\n            else {\n                return models.validateExpression(this.formulaText, this.formsVariablesName);\n            }\n        };\n        AjfReportBuilderFormsAnalyzerDialog.prototype.saveDataset = function () {\n            if (this.currentWidget != null) {\n                switch (this.currentWidget.widgetType) {\n                    case 2:\n                        this.saveImageFormula();\n                        break;\n                    case 3:\n                        this.saveFormulaHtml();\n                        break;\n                    case 4:\n                        this.saveChartFormula();\n                        break;\n                    case 5:\n                        this.saveTableFormula();\n                        break;\n                }\n            }\n            this.close();\n        };\n        AjfReportBuilderFormsAnalyzerDialog.prototype.saveImageFormula = function () {\n            this._service.saveImageFormula(models.createFormula({ formula: this.formulaText }));\n        };\n        AjfReportBuilderFormsAnalyzerDialog.prototype.saveFormulaHtml = function () {\n            this._service.saveFormulaToHtml(this.formulaText, this.reference);\n        };\n        AjfReportBuilderFormsAnalyzerDialog.prototype.saveChartFormula = function () {\n            this._service.saveChartFormula(this.label, this.level, this.mainIndex, this.index, this.formulaText, this.aggregationType);\n        };\n        AjfReportBuilderFormsAnalyzerDialog.prototype.saveTableFormula = function () {\n            this._service.saveTableFormula(this.label, this.aggregationType, this.formulaText, this.mainIndex, this.index);\n        };\n        AjfReportBuilderFormsAnalyzerDialog.prototype.insertVariable = function (variable) {\n            if (this.monacoEditor != null && this.monacoEditor.editor != null) {\n                var editor = this.monacoEditor.editor;\n                var value = editor.getValue().split('\\n');\n                var position = editor.getPosition();\n                var ln = position.lineNumber - 1;\n                var line = value[ln];\n                var col = position.column - 1;\n                line = line.substring(0, col) + variable + line.substring(col);\n                value[ln] = line;\n                position.column += variable.length;\n                this.monacoEditor.value = value.join('\\n');\n                editor.setPosition(position);\n                editor.focus();\n                this.formulaText = editor.getValue();\n                this.checkValidation();\n            }\n        };\n        AjfReportBuilderFormsAnalyzerDialog.prototype.setVariable = function (variable) {\n            if (this.monacoEditor != null && this.monacoEditor.editor != null) {\n                var editor = this.monacoEditor.editor;\n                editor.setValue(variable);\n            }\n        };\n        AjfReportBuilderFormsAnalyzerDialog.prototype.reset = function () {\n            this.formulaText = '';\n            this.aggregationType = reports.AjfAggregationType.None;\n        };\n        AjfReportBuilderFormsAnalyzerDialog.prototype.close = function () {\n            this.reset();\n            this._dialogRef.close();\n        };\n        AjfReportBuilderFormsAnalyzerDialog.prototype.ngOnInit = function () {\n            this.formulaText = this.formula;\n            this.aggregationType = this.aggregation;\n            this.label = this.labelText;\n            if (this.formulaText == '' || this.formulaText == null) {\n                this.isValid = false;\n            }\n            else {\n                this.isValid = true;\n            }\n        };\n        AjfReportBuilderFormsAnalyzerDialog.prototype.ngAfterViewChecked = function () {\n            if (this._first && this.monacoEditor != null && this.monacoEditor.editor != null) {\n                this.insertVariable(this.formulaText || '');\n                this._first = false;\n            }\n        };\n        AjfReportBuilderFormsAnalyzerDialog.prototype.ngOnDestroy = function () {\n            this._formAnalyzerSub.unsubscribe();\n            this._currentWidgetSub.unsubscribe();\n        };\n        AjfReportBuilderFormsAnalyzerDialog.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'forms-analyzer-dialog',\n                        template: \"<h3 matDialogTitle> Formula editor </h3>\\n<div mat-dialog-content #elem>\\n  <ng-template [ngIf]=\\\"currentWidget != null && formsVariables != null\\\">\\n    <div class=\\\"ajf-left\\\">\\n      <mat-list>\\n        <mat-list-item *ngFor=\\\"let operator of operators\\\">\\n          <button mat-button (click)=\\\"insertVariable(operator)\\\">\\n            <h4 matLine>{{operator}}</h4>\\n          </button>\\n        </mat-list-item>\\n      </mat-list>\\n    </div>\\n    <div class=\\\"ajf-main\\\">\\n      <mat-select *ngIf=\\\"!isFormula\\\" placeholder=\\\"Select type of agregation\\\" [(ngModel)]=\\\"aggregationType\\\">\\n          <mat-option [value]=\\\"idx\\\" *ngFor=\\\"let ag of aggregationTypes; let idx = index\\\"> {{ ag }} </mat-option>\\n      </mat-select>\\n      <mat-form-field *ngIf=\\\"!isFormula\\\">\\n        <textarea matInput placeholder=\\\"Name field\\\" [(ngModel)]=\\\"label\\\" ></textarea>\\n      </mat-form-field>\\n        <ajf-monaco-editor\\n          (init)=\\\"onEditorInit()\\\"\\n          (valueChange)=\\\"formulaText = $event;checkValidation();\\\"\\n          [value]=\\\"condition\\\" language=\\\"javascript\\\">\\n        </ajf-monaco-editor>\\n    </div>\\n    <div class=\\\"ajf-menu\\\">\\n      <form>\\n        <mat-select placeholder=\\\"Select form\\\" (selectionChange)=\\\"setCurrentId($event.value)\\\">\\n          <ng-template ngFor let-form let-id=\\\"index\\\" [ngForOf]=\\\"formsVariables\\\">\\n            <mat-option [value]=\\\"id\\\"> {{ id }} </mat-option>\\n          </ng-template>\\n        </mat-select>\\n      </form>\\n      <mat-list>\\n        <h3 matSubheader>Field list</h3>\\n        <mat-list-item *ngFor=\\\"let label of labels;let i = index\\\">\\n          <button mat-button (click)=\\\"setCurrent(currentId, label, i)\\\">\\n            <h4 matLine>{{label}}</h4>\\n          </button>\\n        </mat-list-item>\\n      </mat-list>\\n    </div>\\n  </ng-template>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"saveDataset()\\\" [disabled]=\\\"!isValid\\\">Save</button>\\n</div>\\n\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\"forms-analyzer-dialog{height:512px}forms-analyzer-dialog h4[matLine]{font-size:xx-small}forms-analyzer-dialog [mat-dialog-content]{flex-direction:row;display:flex;align-items:stretch;min-width:1000px}forms-analyzer-dialog [mat-dialog-content] .ajf-left{flex:1 0 10%;width:10%;overflow-y:auto}forms-analyzer-dialog [mat-dialog-content] .ajf-left form>mat-select{width:90%;margin-left:10px;margin-right:10px}forms-analyzer-dialog [mat-dialog-content] .ajf-main{flex:1 0 55%;min-width:512px}forms-analyzer-dialog [mat-dialog-content] .ajf-main monaco-editor{height:450px;min-width:300px}forms-analyzer-dialog [mat-dialog-content] .ajf-main mat-select{width:80%}forms-analyzer-dialog [mat-dialog-content] .ajf-main mat-form-field{width:80%}forms-analyzer-dialog [mat-dialog-content] .ajf-main mat-form-field textarea{width:auto;height:auto}forms-analyzer-dialog [mat-dialog-content] .ajf-main textarea{width:80%;height:75px}forms-analyzer-dialog [mat-dialog-content] .ajf-menu{flex:1 0 30%;overflow-y:auto;min-width:350px}forms-analyzer-dialog [mat-dialog-content] .ajf-menu form>mat-select{width:90%;margin-left:10px;margin-right:10px}forms-analyzer-dialog ajf-monaco-editor{min-width:400px}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfReportBuilderFormsAnalyzerDialog.ctorParameters = function () { return [\n            { type: AjfReportBuilderService },\n            { type: dialog.MatDialogRef },\n            { type: forms$1.AjfValidationService }\n        ]; };\n        AjfReportBuilderFormsAnalyzerDialog.propDecorators = {\n            formula: [{ type: core.Input }],\n            isFormula: [{ type: core.Input }],\n            labelText: [{ type: core.Input }],\n            aggregation: [{ type: core.Input }],\n            init: [{ type: core.Input }],\n            level: [{ type: core.Input }],\n            index: [{ type: core.Input }],\n            mainIndex: [{ type: core.Input }],\n            reference: [{ type: core.Input }],\n            monacoEditor: [{ type: core.ViewChild, args: [monacoEditor.AjfMonacoEditor, { static: false },] }]\n        };\n        return AjfReportBuilderFormsAnalyzerDialog;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    /**\n     * this component provides the support for connect the form fields with the report\n     *\n     * @export\n     */\n    var AjfReportBuilderFormsAnalyzer = /** @class */ (function () {\n        function AjfReportBuilderFormsAnalyzer(_service, dialog) {\n            var _this = this;\n            this._service = _service;\n            this.dialog = dialog;\n            this.currentWidget = null;\n            this.forms = [];\n            this.choicesOrigins = {};\n            this.currentMainDataIndex = -1;\n            this._dataset = [];\n            this._currentWidgetSub = rxjs.Subscription.EMPTY;\n            this._formAnalyzerSub = rxjs.Subscription.EMPTY;\n            this._currentWidgetSub = this._service.currentWidget\n                .subscribe(function (x) {\n                if (x != null) {\n                    _this.currentWidget = x;\n                    // this._dataset = myObj.dataset;\n                }\n                else {\n                    _this.currentWidget = null;\n                }\n            });\n            this._formAnalyzerSub = this._service.formsVariables\n                .subscribe(function (x) {\n                if (x != null) {\n                    _this.formsVariables = x;\n                }\n            });\n        }\n        AjfReportBuilderFormsAnalyzer.prototype.setCurrentIndex = function (index) {\n            this.currentMainDataIndex = index;\n        };\n        AjfReportBuilderFormsAnalyzer.prototype.isSelected = function (index) {\n            if (index === this.currentMainDataIndex) {\n                return 'primary';\n            }\n            else {\n                return undefined;\n            }\n        };\n        /**\n         *  get the X components label of the chart.\n         *  they are contained in the first row of dataset\n         *\n         *\n         * @memberof AjfReportBuilderFormsAnalyzer\n         */\n        AjfReportBuilderFormsAnalyzer.prototype.getMainData = function () {\n            if (this._dataset[0] != null) {\n                var mainData = [];\n                for (var i = 0; i < this._dataset[0].length; i++) {\n                    mainData.push(this._dataset[0][i].label || '');\n                }\n                return mainData;\n            }\n            else {\n                return [];\n            }\n        };\n        /**\n         *  get the Y components label of the chart.\n         *  they are contained in the first column of dataset\n         *\n         *\n         * @memberof AjfReportBuilderFormsAnalyzer\n         */\n        AjfReportBuilderFormsAnalyzer.prototype.getDataset = function () {\n            var dataset = [];\n            if (this._dataset[0] != null) {\n                for (var i = 1; i < this._dataset.length; i++) {\n                    dataset.push(this._dataset[i][0].label || '');\n                }\n                return dataset;\n            }\n            else {\n                return [];\n            }\n        };\n        /**\n         * get the related data label of the chart.\n         * they are contained in the row of the Y component\n         *\n         *\n         * @memberof AjfReportBuilderFormsAnalyzer\n         */\n        AjfReportBuilderFormsAnalyzer.prototype.getRelatedData = function () {\n            if (this._dataset[this.currentMainDataIndex + 1] != null) {\n                var relatedData = [];\n                for (var i = 1; i < this._dataset[this.currentMainDataIndex + 1].length; i++) {\n                    relatedData.push(this._dataset[this.currentMainDataIndex + 1][i].label || '');\n                }\n                return relatedData;\n            }\n            else {\n                return [];\n            }\n        };\n        AjfReportBuilderFormsAnalyzer.prototype.getTableHeader = function () {\n            var mainData = [];\n            if (this._dataset != null) {\n                for (var i = 0; i < this._dataset.length; i++) {\n                    if (this._dataset[i][0] != null) {\n                        mainData.push(this._dataset[i][0].label || '');\n                    }\n                }\n            }\n            return mainData;\n        };\n        AjfReportBuilderFormsAnalyzer.prototype.getTableData = function () {\n            if (this._dataset[this.currentMainDataIndex] != null) {\n                var tableData = [];\n                for (var i = 1; i < this._dataset[this.currentMainDataIndex].length; i++) {\n                    if (this._dataset[this.currentMainDataIndex][i] != null) {\n                        tableData.push(this._dataset[this.currentMainDataIndex][i].label || '');\n                    }\n                }\n                return tableData;\n            }\n            else {\n                return [];\n            }\n        };\n        AjfReportBuilderFormsAnalyzer.prototype.needMainData = function () {\n            var myObj = this.currentWidget;\n            if (myObj.chartType === reports.AjfChartType.Scatter ||\n                myObj.chartType === reports.AjfChartType.Bubble) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        };\n        AjfReportBuilderFormsAnalyzer.prototype.removeMainData = function (index) {\n            this._service.removeMainData(index);\n        };\n        AjfReportBuilderFormsAnalyzer.prototype.removeDataset = function (index) {\n            this.currentMainDataIndex = index;\n            this._service.removeRelatedData(this.currentMainDataIndex, -1);\n        };\n        AjfReportBuilderFormsAnalyzer.prototype.removeTableMainData = function (index) {\n            this._service.removeTableMainData(index);\n        };\n        AjfReportBuilderFormsAnalyzer.prototype.removeRelatedData = function (index) {\n            this._service.removeRelatedData(this.currentMainDataIndex, index);\n        };\n        AjfReportBuilderFormsAnalyzer.prototype.removeData = function (mainIndex, index) {\n            this._service.removeData(mainIndex, index);\n        };\n        /**\n         *\n         *\n         *\n         * @param index\n         * @param editMode\n         *\n         * @memberof AjfReportBuilderFormsAnalyzer\n         */\n        AjfReportBuilderFormsAnalyzer.prototype.openDialog = function (level, mainIndex, index, editMode) {\n            this.dialogRef = this.dialog.open(AjfReportBuilderFormsAnalyzerDialog);\n            if (editMode) {\n                if (level === 1 && index === -1) {\n                    index = 0;\n                }\n                if (level === 1) {\n                    if (this.currentWidget != null && this.currentWidget.widgetType == reports.AjfWidgetType.Chart) {\n                        mainIndex++;\n                    }\n                    index++;\n                }\n                this.dialogRef.componentInstance.labelText =\n                    this._dataset[mainIndex] &&\n                        this._dataset[mainIndex][index].label || '';\n                /* this.dialogRef.componentInstance.formula =\n                  this._dataset[mainIndex] &&\n                  this._dataset[mainIndex][index].formula.formula || ''; */\n                this.dialogRef.componentInstance.aggregation =\n                    this._dataset[mainIndex] &&\n                        this._dataset[mainIndex][index].aggregation.aggregation || reports.AjfAggregationType.None;\n            }\n            else {\n                this.dialogRef.componentInstance.labelText = '';\n                this.dialogRef.componentInstance.formula = '';\n                this.dialogRef.componentInstance.aggregation = 0;\n            }\n            // this.dialogRef.componentInstance.formsVariables = this.formsVariables;\n            this.dialogRef.componentInstance.currentWidget = this.currentWidget;\n            this.dialogRef.componentInstance.level = level;\n            this.dialogRef.componentInstance.mainIndex = mainIndex;\n            this.dialogRef.componentInstance.index = index;\n            this.dialogRef.componentInstance.init = false;\n        };\n        AjfReportBuilderFormsAnalyzer.prototype.openDialogAddMainData = function () {\n            this.openDialog(0, -1, -1, false);\n        };\n        AjfReportBuilderFormsAnalyzer.prototype.openDialogChartEditMainData = function () {\n            this.openDialog(0, 0, this.currentMainDataIndex, true);\n        };\n        AjfReportBuilderFormsAnalyzer.prototype.openDialogTableEditMainData = function () {\n            this.openDialog(0, this.currentMainDataIndex, 0, true);\n        };\n        AjfReportBuilderFormsAnalyzer.prototype.openDialogChartAddDataset = function () {\n            this.openDialog(1, -1, -1, false);\n        };\n        AjfReportBuilderFormsAnalyzer.prototype.openDialogTableAddDataset = function () {\n            this.openDialog(1, this.currentMainDataIndex, -1, false);\n        };\n        AjfReportBuilderFormsAnalyzer.prototype.openDialogChartAddDataOfDataset = function () {\n            this.openDialog(1, this.currentMainDataIndex, -1, false);\n        };\n        AjfReportBuilderFormsAnalyzer.prototype.openDialogChartEditDataset = function () {\n            this.openDialog(1, this.currentMainDataIndex, -1, true);\n        };\n        AjfReportBuilderFormsAnalyzer.prototype.openDialogTableEditDataset = function (index) {\n            this.openDialog(1, this.currentMainDataIndex, index, true);\n        };\n        AjfReportBuilderFormsAnalyzer.prototype.openDialogChartEditDataOfDataset = function (index) {\n            this.openDialog(1, this.currentMainDataIndex, index, true);\n        };\n        AjfReportBuilderFormsAnalyzer.prototype.ngOnDestroy = function () {\n            this._currentWidgetSub.unsubscribe();\n            this._formAnalyzerSub.unsubscribe();\n        };\n        AjfReportBuilderFormsAnalyzer.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-report-builder-forms-analyzer',\n                        template: \"<ng-template [ngIf]=\\\"currentWidget != null && formsVariables != null\\\">\\n  <ng-template [ngIf]=\\\"currentWidget.widgetType == 4\\\">\\n    <ng-template  [ngIf]=\\\"needMainData()\\\">\\n      <mat-tab-group>\\n        <mat-tab [label]=\\\"'Main Data' | translate\\\">\\n          <button mat-button (click)=\\\"openDialogAddMainData()\\\" style=\\\"width:100%;\\\">\\n            Add Main Data\\n          </button>\\n          <mat-grid-list rowHeight=\\\"50px\\\" cols=\\\"3\\\">\\n            <ng-template ngFor let-label [ngForOf]=\\\"getMainData()\\\" let-idx=\\\"index\\\">\\n              <mat-grid-tile>\\n                  {{ label }}\\n              </mat-grid-tile>\\n              <mat-grid-tile>\\n                <button mat-button translate\\n                    (click)=\\\"setCurrentIndex(idx);openDialogChartEditMainData()\\\">Edit</button>\\n              </mat-grid-tile>\\n              <mat-grid-tile>\\n                <button mat-button translate\\n                    (click)=\\\"removeMainData(idx)\\\">Remove</button>\\n              </mat-grid-tile>\\n            </ng-template>\\n          </mat-grid-list>\\n          <div class=\\\"ajf-ui ajf-divider\\\"></div>\\n        </mat-tab>\\n      </mat-tab-group>\\n    </ng-template>\\n    <mat-tab-group>\\n      <mat-tab label=\\\"dataset\\\">\\n        <button mat-button (click)=\\\"openDialogChartAddDataset()\\\" style=\\\"width:100%\\\">\\n            add dataset\\n        </button>\\n        <mat-grid-list rowHeight=\\\"50px\\\" cols=\\\"4\\\">\\n          <ng-template ngFor let-label [ngForOf]=\\\"getDataset()\\\" let-idx=\\\"index\\\">\\n              <mat-grid-tile>\\n                <button mat-button [color]=\\\"isSelected(idx)\\\"(click)=\\\"setCurrentIndex(idx)\\\">\\n                  {{ label }}\\n                </button>\\n              </mat-grid-tile>\\n              <mat-grid-tile>\\n                <button mat-button (click)=\\\"setCurrentIndex(idx);openDialogChartAddDataOfDataset()\\\" style=\\\"width:100%\\\">\\n                  add data\\n                </button>\\n              </mat-grid-tile>\\n              <mat-grid-tile>\\n              <button mat-button translate\\n                  (click)=\\\"setCurrentIndex(idx);openDialogChartEditDataset()\\\">Edit</button>\\n              </mat-grid-tile>\\n              <mat-grid-tile>\\n                <button mat-button translate\\n                    (click)=\\\"removeDataset(idx)\\\">Remove</button>\\n              </mat-grid-tile>\\n          </ng-template>\\n        </mat-grid-list>\\n      </mat-tab>\\n      <mat-tab label=\\\"data\\\">\\n        <mat-grid-list rowHeight=\\\"50px\\\" cols=\\\"3\\\">\\n          <ng-template ngFor let-label [ngForOf]=\\\"getRelatedData()\\\" let-idx=\\\"index\\\">\\n            <mat-grid-tile>\\n                {{ label }}\\n            </mat-grid-tile>\\n            <mat-grid-tile>\\n              <button mat-button translate\\n                  (click)=\\\"openDialogChartEditDataOfDataset(idx)\\\">Edit</button>\\n            </mat-grid-tile>\\n            <mat-grid-tile>\\n              <button mat-button translate\\n                  (click)=\\\"removeRelatedData(idx)\\\">Remove</button>\\n            </mat-grid-tile>\\n          </ng-template>\\n        </mat-grid-list>\\n        <div class=\\\"ajf-ui ajf-divider\\\"></div>\\n      </mat-tab>\\n    </mat-tab-group>\\n  </ng-template>\\n  <ng-template [ngIf]=\\\"currentWidget.widgetType == 5\\\">\\n    <ng-template  [ngIf]=\\\"needMainData()\\\">\\n      <mat-tab-group>\\n        <mat-tab [label]=\\\"'Main Data' | translate\\\">\\n          <button mat-button (click)=\\\"openDialogAddMainData()\\\"\\n              translate\\n              style=\\\"width:100%;\\\">Add Main Data</button>\\n          <mat-grid-list rowHeight=\\\"50px\\\" cols=\\\"4\\\">\\n            <ng-template ngFor let-label [ngForOf]=\\\"getTableHeader()\\\" let-idx=\\\"index\\\">\\n              <mat-grid-tile>\\n                <button mat-button [color]=\\\"isSelected(idx)\\\"(click)=\\\"setCurrentIndex(idx)\\\">\\n                  {{ label }}\\n                </button>\\n              </mat-grid-tile>\\n              <mat-grid-tile>\\n                <button mat-button translate\\n                    (click)=\\\"setCurrentIndex(idx);openDialogTableAddDataset()\\\"\\n                    style=\\\"width:100%\\\">add data</button>\\n              </mat-grid-tile>\\n              <mat-grid-tile>\\n                <button mat-button translate\\n                    (click)=\\\"setCurrentIndex(idx);openDialogTableEditMainData()\\\">Edit</button>\\n              </mat-grid-tile>\\n              <mat-grid-tile>\\n                <button mat-button translate\\n                    (click)=\\\"removeTableMainData(idx)\\\">Remove</button>\\n              </mat-grid-tile>\\n            </ng-template>\\n          </mat-grid-list>\\n          <div class=\\\"ajf-ui ajf-divider\\\"></div>\\n        </mat-tab>\\n        <mat-tab [label]=\\\"'data' | translate\\\">\\n          <mat-grid-list rowHeight=\\\"50px\\\" cols=\\\"3\\\">\\n            <ng-template ngFor let-label [ngForOf]=\\\"getTableData()\\\" let-idx=\\\"index\\\">\\n              <mat-grid-tile>\\n                  {{ label }}\\n              </mat-grid-tile>\\n              <mat-grid-tile>\\n                <button mat-button translate\\n                    (click)=\\\"openDialogTableEditDataset(idx)\\\">Edit</button>\\n              </mat-grid-tile>\\n              <mat-grid-tile>\\n                <button mat-button translate\\n                    (click)=\\\"removeData(currentMainDataIndex, idx + 1)\\\">Remove</button>\\n              </mat-grid-tile>\\n            </ng-template>\\n          </mat-grid-list>\\n          <div class=\\\"ajf-ui ajf-divider\\\"></div>\\n      </mat-tab>\\n      </mat-tab-group>\\n    </ng-template>\\n  </ng-template>\\n</ng-template>\\n\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\"ajf-report-builder-forms-analyzer{min-height:512px}ajf-report-builder-forms-analyzer .ajf-editor{flex:.75 0 auto;display:flex;flex-direction:row;align-items:stretch}ajf-report-builder-forms-analyzer .ajf-editor monaco-editor{flex:1 0 auto;min-width:512px;min-height:256px}ajf-report-builder-forms-analyzer mat-dialog-container{flex:1 0 auto;min-width:512px;min-height:256px}ajf-report-builder-forms-analyzer .ajf-editor-panel{flex:.25 0 auto;overflow-y:auto}ajf-report-builder-forms-analyzer .mat-list-item-content{position:normal !important;display:block !important;height:350px !important}ajf-report-builder-forms-analyzer mat-tab-group .mat-tab-body-wrapper,ajf-report-builder-forms-analyzer mat-tab-group .mat-list-item-content{position:normal !important;display:block !important;height:350px !important}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfReportBuilderFormsAnalyzer.ctorParameters = function () { return [\n            { type: AjfReportBuilderService },\n            { type: dialog.MatDialog }\n        ]; };\n        return AjfReportBuilderFormsAnalyzer;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfImageFilterPipe = /** @class */ (function () {\n        function AjfImageFilterPipe() {\n        }\n        AjfImageFilterPipe.prototype.transform = function (items, args) {\n            return items.filter(function (item) {\n                return (args.length === 0) || item.info.toLowerCase().includes(args.toLowerCase());\n            });\n        };\n        AjfImageFilterPipe.decorators = [\n            { type: core.Pipe, args: [{\n                        name: 'ajfImageFilter'\n                    },] },\n            { type: core.Injectable }\n        ];\n        return AjfImageFilterPipe;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    /**\n     * this component handle a group of image object\n     * there are 2 types of view\n     *  ajf-icon and class\n     *\n     * take a json in input\n     *  'icon': 'false', // if true ajf-icon activated\n     *  'class': ['flag-icon'], // add class in object style\n     *  'prefixClass': 'flag-icon-', // prefix of class contained on data set\n     *  'title': 'flags', title of data set\n     *  'data': [\n     *    {\n     *      'class': 'dz', strind added on prefix\n     *      'info': 'Algeria' info related to object (exploit on toolTip)\n     *    }\n     *  ]\n     * };\n     *\n     * @export\n     */\n    var AjfReportBuilderImageGroup = /** @class */ (function () {\n        function AjfReportBuilderImageGroup(_service) {\n            this._service = _service;\n            this._icon = null;\n            this._classes = '';\n            this.open = false;\n            this.valueToSearch = '';\n            /**\n             * this event is fired when the user click on formula button on quill editor rool barƒ\n             *\n             * @memberof QuillEditorComponent\n             */\n            this.formulaClick = new core.EventEmitter();\n        }\n        Object.defineProperty(AjfReportBuilderImageGroup.prototype, \"icon\", {\n            get: function () { return this._icon; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfReportBuilderImageGroup.prototype, \"classes\", {\n            get: function () { return this._classes; },\n            enumerable: true,\n            configurable: true\n        });\n        AjfReportBuilderImageGroup.prototype.setIcon = function (fontSet, fontIcon) {\n            this._icon = { fontSet: fontSet, fontIcon: fontIcon };\n            this._service.setIcon(this._icon);\n        };\n        AjfReportBuilderImageGroup.prototype.setFlag = function (value) {\n            this._classes = value;\n            this._service.setFlag(value);\n        };\n        AjfReportBuilderImageGroup.prototype.setSearch = function (value) {\n            this.valueToSearch = value.currentTarget.value;\n        };\n        AjfReportBuilderImageGroup.prototype.emitFormula = function () {\n            this.formulaClick.emit();\n        };\n        AjfReportBuilderImageGroup.prototype.getFlag = function (value) {\n            var returnValue = '';\n            for (var i = 0; i < this.data.class.length; i++) {\n                returnValue += this.data.class[i] + ' ';\n            }\n            returnValue += this.data.prefixClass + value;\n            return returnValue;\n        };\n        AjfReportBuilderImageGroup.prototype.toggle = function () {\n            this.open = !this.open;\n        };\n        AjfReportBuilderImageGroup.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-image-group',\n                        template: \"<ng-template [ngIf]=\\\"data != null\\\">\\n  <button mat-button (click)=\\\"toggle()\\\" style=\\\"width:100%\\\">{{data.title}}</button>\\n  <ng-template [ngIf]=\\\"open\\\">\\n    <button mat-button (click)=\\\"emitFormula()\\\">Set formula</button>\\n    <mat-card *ngIf=\\\"data.icon === 'true'\\\">\\n      <mat-card-header>\\n        {{data.title}}\\n      </mat-card-header>\\n      <mat-card-content>\\n        <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"100px\\\">\\n          <ng-container *ngFor=\\\"let value of data.data\\\">\\n            <mat-grid-tile *ngFor=\\\"let icon of value.icons\\\" [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\">\\n              <button style=\\\"height:100%\\\" (click)=\\\"setIcon(value.name, icon.name)\\\" [matTooltip]=\\\"icon.label\\\" matTooltipPosition=\\\"above\\\" mat-button>\\n                <mat-icon\\n                  [fontSet]=\\\"value.name\\\"\\n                  [fontIcon]=\\\"icon.name\\\">\\n                </mat-icon>\\n              </button>\\n            </mat-grid-tile>\\n          </ng-container>\\n        </mat-grid-list>\\n      </mat-card-content>\\n    </mat-card>\\n    <mat-card *ngIf=\\\"data.icon === 'false'\\\">\\n      <mat-card-header>\\n        <mat-card-title>\\n          {{data.title}}\\n        </mat-card-title>\\n        <mat-card-subtitle>\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"{{data.title}} to search\\\" [(ngModel)]=\\\"valueToSearch\\\">\\n          </mat-form-field>\\n        </mat-card-subtitle>\\n      </mat-card-header>\\n      <mat-card-content>\\n        <div class=\\\"ajf-image-group-container\\\">\\n          <mat-grid-list cols=\\\"3\\\">\\n            <mat-grid-tile *ngFor=\\\"let value of data.data | ajfImageFilter: valueToSearch\\\" [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\">\\n              <button style=\\\"height:100%\\\" (click)=\\\"setFlag(getFlag(value.class))\\\" matTooltip=\\\"{{value.info}}\\\" [matTooltipPosition]=\\\"'above'\\\" mat-button>\\n                <span class={{getFlag(value.class)}} style=\\\"width: 100%;height: 100%;\\\"></span>\\n              </button>\\n            </mat-grid-tile>\\n          </mat-grid-list>\\n        </div>\\n      </mat-card-content>\\n    </mat-card>\\n    <ajf-report-builder-forms-analyzer></ajf-report-builder-forms-analyzer>\\n  </ng-template>\\n</ng-template>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\"ajf-image-group mat-grid-list{height:300px !important;overflow-y:auto}ajf-image-group .mat-grid-list{height:300px !important}ajf-image-group mat-card>mat-card-content>.ajf-image-group-container{overflow-y:scroll;height:300px}ajf-image-group mat-icon{font-size:30px}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfReportBuilderImageGroup.ctorParameters = function () { return [\n            { type: AjfReportBuilderService }\n        ]; };\n        AjfReportBuilderImageGroup.propDecorators = {\n            data: [{ type: core.Input }],\n            formulaClick: [{ type: core.Output }]\n        };\n        return AjfReportBuilderImageGroup;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfReportBuilderProperties = /** @class */ (function () {\n        function AjfReportBuilderProperties(_dialog, _service) {\n            var _this = this;\n            this._dialog = _dialog;\n            this._service = _service;\n            /**\n             *  true when the first time chart type is setted\n             *\n             * @memberOf AjfReportBuilderProperties\n             */\n            this.initChartType = false;\n            /**\n             * the current widget\n             *\n             * @memberOf AjfReportBuilderProperties\n             */\n            this.currentWidget = null;\n            /**\n             * this array contains the forms exploited for generate data labels\n             *\n             * @memberOf AjfReportBuilderProperties\n             */\n            this.forms = [];\n            this.colors = [];\n            /**\n             * FAKE DATA\n             */\n            this.formsJson = { forms: [] };\n            /**\n             * WIDGET\n             */\n            this.widgetName = '';\n            this.marginExpanded = false;\n            this.paddingExpanded = false;\n            this.borderWidthExpanded = false;\n            this.borderRadiusExpanded = false;\n            this.backgroundColor = '#127bdc';\n            this.styleBackgroundColor = 'rgb(255,255,255,0)';\n            this.borderColor = '#127bdc';\n            this.styleColor = 'rgb(0,0,0,0)';\n            this.align = [false, 'center', 'right', 'justify'];\n            this.fonts = [\n                false,\n                'blackr',\n                'black-italic',\n                'bold',\n                'bold-condensed',\n                'bold-condensed-italic',\n                'bold-italic',\n                'condensed',\n                'condensed-italic',\n                'italic',\n                'light',\n                'light-italic',\n                'medium',\n                'medium-italic',\n                'thinr',\n                'thin-italic'\n            ];\n            this.currentModule = {};\n            this.quillModules = {\n                toolbar: [\n                    ['formula'],\n                    ['bold', 'italic', 'underline', 'strike'],\n                    // ['blockquote', 'code-block'],\n                    [{ 'header': 1 }, { 'header': 2 }],\n                    [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n                    [{ 'script': 'sub' }, { 'script': 'super' }],\n                    // [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\n                    // [{ 'direction': 'rtl' }],                         // text direction\n                    [{ 'size': ['small', false, 'large', 'huge'] }],\n                    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n                    [{ 'color': this.colors },\n                        { 'background': this.colors }],\n                    [{ 'font': this.fonts }],\n                    [{ 'align': this.align }],\n                    ['clean'],\n                ]\n            };\n            this.chartBorderColor = [];\n            this.chartBorderWidth = 3;\n            /**\n             *\n             * IMAGE\n             */\n            this.imageUrl = 'https://angular.io/resources/images/logos/angular2/angular.png';\n            /**\n             *\n             * TEXT\n             */\n            this.htmlText = '';\n            /**\n             * these variables indicate that the user want to change section\n             */\n            this.reportStyles = false;\n            this.sectionStyles = false;\n            this.widgetStyles = true;\n            this.sectionColor = false;\n            this.widgetColor = false;\n            this.visibilitySection = false;\n            this.currentColor = '';\n            this._icon = null;\n            this.iconSet = {\n                'icon': 'true',\n                'title': 'report',\n                'data': null\n            };\n            this.flagSet = {\n                'icon': 'false',\n                'class': ['flag-icon'],\n                'prefixClass': 'flag-icon-',\n                'title': 'flags',\n                'data': [\n                    {\n                        'class': 'dz',\n                        'info': 'Algeria'\n                    },\n                    {\n                        'class': 'ao',\n                        'info': 'Angola'\n                    },\n                    {\n                        'class': 'bj',\n                        'info': 'Benin'\n                    },\n                    {\n                        'class': 'bw',\n                        'info': 'Botswana'\n                    },\n                    {\n                        'class': 'bf',\n                        'info': 'Burkina Faso'\n                    },\n                    {\n                        'class': 'bi',\n                        'info': 'Burundi'\n                    },\n                    {\n                        'class': 'cm',\n                        'info': 'Cameroon'\n                    },\n                    {\n                        'class': 'cv',\n                        'info': 'Cabo Verde'\n                    },\n                    {\n                        'class': 'cf',\n                        'info': 'The Central African Republic'\n                    },\n                    {\n                        'class': 'td',\n                        'info': 'Chad'\n                    },\n                    {\n                        'class': 'km',\n                        'info': 'The Comoros'\n                    },\n                    {\n                        'class': 'ci',\n                        'info': 'Cote D\\'avoire'\n                    },\n                    {\n                        'class': 'cd',\n                        'info': 'The Democratic Republic of Congo'\n                    },\n                    {\n                        'class': 'dj',\n                        'info': 'Dijibouti'\n                    },\n                    {\n                        'class': 'eg',\n                        'info': 'Egypt'\n                    },\n                    {\n                        'class': 'gq',\n                        'info': 'Equatorial Guinea'\n                    },\n                    {\n                        'class': 'er',\n                        'info': 'Eritrea'\n                    },\n                    {\n                        'class': 'et',\n                        'info': 'Ethiopia'\n                    },\n                    {\n                        'class': 'tf',\n                        'info': 'French Southern Territories'\n                    },\n                    {\n                        'class': 'ga',\n                        'info': 'Gabon'\n                    },\n                    {\n                        'class': 'gm',\n                        'info': 'The Gambia'\n                    },\n                    {\n                        'class': 'gh',\n                        'info': 'Ghana'\n                    },\n                    {\n                        'class': 'gn',\n                        'info': 'Guinea'\n                    },\n                    {\n                        'class': 'gw',\n                        'info': 'Guinea-Bissau'\n                    },\n                    {\n                        'class': 'ke',\n                        'info': 'Kenya'\n                    },\n                    {\n                        'class': 'ls',\n                        'info': 'Leshotho'\n                    },\n                    {\n                        'class': 'lr',\n                        'info': 'Liberia'\n                    },\n                    {\n                        'class': 'ly',\n                        'info': 'Libya'\n                    },\n                    {\n                        'class': 'mg',\n                        'info': 'Madagascar'\n                    },\n                    {\n                        'class': 'mw',\n                        'info': 'Malawy'\n                    },\n                    {\n                        'class': 'ml',\n                        'info': 'Mali'\n                    },\n                    {\n                        'class': 'mr',\n                        'info': 'Mauritania'\n                    },\n                    {\n                        'class': 'mu',\n                        'info': 'Mauritius'\n                    },\n                    {\n                        'class': 'yt',\n                        'info': 'Mayotte'\n                    },\n                    {\n                        'class': 'ma',\n                        'info': 'Marocco'\n                    },\n                    {\n                        'class': 'mz',\n                        'info': 'Mozambique'\n                    },\n                    {\n                        'class': 'na',\n                        'info': 'Namibia'\n                    },\n                    {\n                        'class': 'ne',\n                        'info': 'Niger'\n                    },\n                    {\n                        'class': 'ng',\n                        'info': 'Nigeria'\n                    },\n                    {\n                        'class': 'cg',\n                        'info': 'Republic of the Congo'\n                    },\n                    {\n                        'class': 'rw',\n                        'info': 'Rwnda'\n                    },\n                    {\n                        'class': 're',\n                        'info': 'rèunion'\n                    },\n                    {\n                        'class': 'sh',\n                        'info': 'Saint Helena, Ascension and Tristan da Cunha'\n                    },\n                    {\n                        'class': 'st',\n                        'info': 'Sao Tome and Principe'\n                    },\n                    {\n                        'class': 'sn',\n                        'info': 'Senegal'\n                    },\n                    {\n                        'class': 'sc',\n                        'info': 'Seychelles'\n                    },\n                    {\n                        'class': 'sl',\n                        'info': 'Sierra Leone'\n                    },\n                    {\n                        'class': 'so',\n                        'info': 'Somalia'\n                    },\n                    {\n                        'class': 'za',\n                        'info': 'South Africa'\n                    },\n                    {\n                        'class': 'ss',\n                        'info': 'South Sudan'\n                    },\n                    {\n                        'class': 'sd',\n                        'info': 'Sudan'\n                    },\n                    {\n                        'class': 'sz',\n                        'info': 'Swaziland'\n                    },\n                    {\n                        'class': 'tz',\n                        'info': 'Tanzania'\n                    },\n                    {\n                        'class': 'tg',\n                        'info': 'Togo'\n                    },\n                    {\n                        'class': 'tn',\n                        'info': 'Tunisia'\n                    },\n                    {\n                        'class': 'ug',\n                        'info': 'Uganda'\n                    },\n                    {\n                        'class': 'eh',\n                        'info': 'Western Sahara'\n                    },\n                    {\n                        'class': 'zm',\n                        'info': 'Zambia'\n                    },\n                    {\n                        'class': 'zw',\n                        'info': 'Zimbawe'\n                    },\n                    {\n                        'class': 'iq',\n                        'info': 'Iraq'\n                    },\n                    {\n                        'class': 'lb',\n                        'info': 'Lebanon'\n                    },\n                    {\n                        'class': 'bd',\n                        'info': 'Bangladesh'\n                    },\n                    {\n                        'class': 'ir',\n                        'info': 'Iran (Islamic Republic of)'\n                    },\n                    {\n                        'class': 'my',\n                        'info': 'Malaysia'\n                    },\n                    {\n                        'class': 'np',\n                        'info': 'Nepal'\n                    },\n                    {\n                        'class': 'pk',\n                        'info': 'Pakistan'\n                    },\n                    {\n                        'class': 'th',\n                        'info': 'Thailand'\n                    },\n                    {\n                        'class': 'jo',\n                        'info': 'Jordan'\n                    },\n                    {\n                        'class': 'ye',\n                        'info': 'Yemen'\n                    }\n                ]\n            };\n            this._currentWidgetSub = rxjs.Subscription.EMPTY;\n            this._formsSub = rxjs.Subscription.EMPTY;\n            this._colorSub = rxjs.Subscription.EMPTY;\n            this._headerStyleSub = rxjs.Subscription.EMPTY;\n            this._contentStylesSub = rxjs.Subscription.EMPTY;\n            this._footerStylesSub = rxjs.Subscription.EMPTY;\n            this._originSub = rxjs.Subscription.EMPTY;\n            this._stylesUpdatesSubs = rxjs.Subscription.EMPTY;\n            this._updateWidgetMarginEvt = new core.EventEmitter();\n            this._updateWidgetPaddingEvt = new core.EventEmitter();\n            this._updateWidgetBorderWidthEvt = new core.EventEmitter();\n            this._updateWidgetBorderRadiusEvt = new core.EventEmitter();\n            this.tabValue = 'backgroundColor';\n            this.setForms();\n            this.iconSet.data = Object.keys(_service.iconSets).filter(function (x) { return x != 'ajf-icon'; }).map(function (i) {\n                return { name: i, icons: _service.iconSets[i] };\n            });\n            this._headerStyleSub = this._service.headerStyles.subscribe(function (s) {\n                if (s['background-color'] != null) {\n                    _this.styleBackgroundColor = s['background-color'];\n                }\n            });\n            this._contentStylesSub = this._service.contentStyles.subscribe(function (s) {\n                if (s['background-color'] != null) {\n                    _this.styleBackgroundColor = s['background-color'];\n                }\n            });\n            this._footerStylesSub = this._service.footerStyles.subscribe(function (s) {\n                if (s['background-color'] != null) {\n                    _this.styleBackgroundColor = s['background-color'];\n                }\n            });\n            this._originSub = this._service.origin.subscribe(function (s) {\n                _this.origin = s;\n            });\n        }\n        Object.defineProperty(AjfReportBuilderProperties.prototype, \"currentLayoutWidget\", {\n            get: function () {\n                return this.currentWidget;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfReportBuilderProperties.prototype, \"currentTextWidget\", {\n            get: function () {\n                return this.currentWidget;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfReportBuilderProperties.prototype, \"icon\", {\n            get: function () { return this._icon; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         *\n         * UTILS\n         */\n        /**\n         * return a number value\n         *\n         * @param value\n         *\n         * @memberOf AjfReportBuilderProperties\n         */\n        AjfReportBuilderProperties.prototype.toNumber = function (value) {\n            var numberPattern = /^(-)?\\d+/g;\n            if (value == null) {\n                return 0;\n            }\n            else {\n                var matches = value.match(numberPattern);\n                if (matches == null || matches.length == 0) {\n                    return 0;\n                }\n                return Number(matches[0]);\n            }\n        };\n        AjfReportBuilderProperties.prototype.toNumberArray = function (value) {\n            var _this = this;\n            if (value == null) {\n                return [];\n            }\n            else {\n                return (value || '').replace('px', '').split(' ')\n                    .filter(function (v) { return v !== '' && v != null; })\n                    .map(function (v) { return _this.toNumber(v); });\n            }\n        };\n        AjfReportBuilderProperties.prototype.fillPxNumberArray = function (value) {\n            var vl = value.length;\n            switch (vl) {\n                case 0:\n                    return [0, 0, 0, 0];\n                case 1:\n                    var v = value[0];\n                    return [v, v, v, v];\n                case 2:\n                    var v21 = value[0];\n                    var v22 = value[1];\n                    return [v21, v22, v21, v22];\n                case 3:\n                    var v31 = value[0];\n                    var v32 = value[1];\n                    var v33 = value[2];\n                    return [v31, v32, v33, v32];\n                default:\n                    return value;\n            }\n        };\n        AjfReportBuilderProperties.prototype.percent = function (value) {\n            var temp = this.roundTo(value * 100, 3);\n            return temp;\n        };\n        AjfReportBuilderProperties.prototype.roundTo = function (value, decimalPositions) {\n            var i = value * Math.pow(10, decimalPositions);\n            i = Math.floor(i);\n            return i / Math.pow(10, decimalPositions);\n        };\n        /**\n         * call to service to set the forms\n         *\n         * @memberOf AjfReportBuilderProperties\n         */\n        AjfReportBuilderProperties.prototype.setForms = function () {\n            var forms = [];\n            try {\n                for (var i = 0; i < this.formsJson.forms.length; i++) {\n                    forms.push(utils.deepCopy(this.formsJson.forms[i]));\n                }\n                this._service.setReportForms(forms);\n            }\n            catch (e) { }\n        };\n        /**\n         * call to service to set the width of the idx column of layout widget\n         *\n         * @param col\n         * @param idx\n         *\n         * @memberOf AjfReportBuilderProperties\n         */\n        AjfReportBuilderProperties.prototype.instantColumnValue = function (col, idx) {\n            if (col === null) {\n                return;\n            }\n            this._service.instantColumnValue(col, idx);\n        };\n        /**\n         *  force copy of style\n         *\n         * @memberOf AjfReportBuilderProperties\n         */\n        // TODO delete this\n        AjfReportBuilderProperties.prototype.setStyle = function () {\n            if (this.currentWidget == null) {\n                return;\n            }\n            this.currentWidget.styles = utils.deepCopy(this.currentWidget.styles);\n            this._service.updateCurrentWidget(this.currentWidget);\n        };\n        /**\n         * call to service to add new style to widget\n         *\n         * @param label\n         * @param value\n         *\n         * @memberOf AjfReportBuilderProperties\n         */\n        AjfReportBuilderProperties.prototype.setWidgetStyles = function (label, value) {\n            this._service.setWidgetStyles(label, value);\n            this.currentColor = value;\n            this.setStyle();\n        };\n        AjfReportBuilderProperties.prototype.setWidgetMargin = function (idx, value) {\n            this._updateWidgetMarginEvt.emit({ idx: idx, value: value });\n        };\n        AjfReportBuilderProperties.prototype.setWidgetPadding = function (idx, value) {\n            this._updateWidgetPaddingEvt.emit({ idx: idx, value: value });\n        };\n        AjfReportBuilderProperties.prototype.setWidgetBorderWidth = function (idx, value) {\n            this._updateWidgetBorderWidthEvt.emit({ idx: idx, value: value });\n        };\n        AjfReportBuilderProperties.prototype.setWidgetBorderRadius = function (idx, value) {\n            this._updateWidgetBorderRadiusEvt.emit({ idx: idx, value: value });\n        };\n        /**\n         * call to service to add new style to section\n         *\n         * @param label\n         * @param value\n         *\n         * @memberOf AjfReportBuilderProperties\n         */\n        AjfReportBuilderProperties.prototype.setSectionStyles = function (label, value) {\n            this._service.setSectionStyles(this.origin, label, value);\n            this.styleColor = value;\n        };\n        /**\n         * call to service to add new style to report\n         *\n         * @param label\n         * @param value\n         *\n         * @memberOf AjfReportBuilderProperties\n         */\n        AjfReportBuilderProperties.prototype.setReportStyles = function (label, value) {\n            this._service.setReportStyles(label, value);\n            this.styleBackgroundColor = value;\n        };\n        /**\n         * add custom color\n         *\n         *\n         * @memberOf AjfReportBuilderProperties\n         */\n        AjfReportBuilderProperties.prototype.addCustomColor = function () {\n            this._service.addCustomColor(this.currentColor);\n            this._service.updateCurrentWidget(this.currentWidget);\n        };\n        /**\n         * get the module exploit to quill text editor\n         *\n         * @returns\n         *\n         * @memberOf AjfReportBuilderProperties\n         */\n        AjfReportBuilderProperties.prototype.getModule = function () {\n            return this.quillModules;\n        };\n        /**\n         * true is the input type value is equal to current widget type\n         *\n         * @param value\n         * @returns\n         *\n         * @memberOf AjfReportBuilderProperties\n         */\n        AjfReportBuilderProperties.prototype.isChartTypeSelected = function (value) {\n            if (this.initChartType == false) {\n                return false;\n            }\n            var myObj = this.currentWidget;\n            if (value === myObj.chartType) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        };\n        /* layout functions */\n        /**\n         * call to service to add a column to current layout widget\n         *\n         *\n         * @memberOf AjfReportBuilderProperties\n         */\n        AjfReportBuilderProperties.prototype.addColumn = function () {\n            this._service.addColumn();\n        };\n        /**\n         * call to service to add a obj to current layout widget\n         *\n         * @param idx\n         *\n         * @memberOf AjfReportBuilderProperties\n         */\n        AjfReportBuilderProperties.prototype.fixedColumn = function (idx) {\n            this._service.fixedColumn(idx);\n        };\n        /**\n         * call to service to remove obj of current layout widget\n         *\n         * @param idx\n         *\n         * @memberOf AjfReportBuilderProperties\n         */\n        AjfReportBuilderProperties.prototype.unfixedColumn = function (idx) {\n            this._service.remove('unfixedColumn', idx);\n        };\n        /* image functions */\n        /**\n         * call to service to set image url\n         *\n         *\n         * @memberOf AjfReportBuilderProperties\n         */\n        AjfReportBuilderProperties.prototype.setImageUrl = function () {\n            this._service.setImageUrl(this.imageUrl);\n        };\n        AjfReportBuilderProperties.prototype.setIcon = function (icon) {\n            this._icon = icon;\n            this._service.setIcon(icon);\n        };\n        /* chart functions */\n        /**\n         * call to service to set the type of chart\n         *\n         * @param type\n         *\n         * @memberOf AjfReportBuilderProperties\n         */\n        AjfReportBuilderProperties.prototype.setChartType = function (type) {\n            this.initChartType = true;\n            this._service.setChartType(type);\n        };\n        AjfReportBuilderProperties.prototype.setChartBorderColor = function (value) {\n            if (value == null) {\n                return;\n            }\n            this._service.setChartBorderWidth(value);\n        };\n        AjfReportBuilderProperties.prototype.setTab = function (event) {\n            if (event.index === 0) {\n                this.tabValue = 'backgroundColor';\n            }\n            else {\n                this.tabValue = 'borderColor';\n            }\n        };\n        /**\n         * call to service to remove background color to current chart\n         *\n         * @param index\n         *\n         * @memberOf AjfReportBuilderProperties\n         */\n        AjfReportBuilderProperties.prototype.removeChartBackgroundColor = function (index) {\n            this._service.removeChartBackgroundColor(index);\n        };\n        /**\n         * call to service to remove border color to current chart\n         *\n         * @param index\n         *\n         * @memberOf AjfReportBuilderProperties\n         */\n        AjfReportBuilderProperties.prototype.removeChartBorderColor = function (index) {\n            this._service.removeChartBorderColor(index);\n        };\n        AjfReportBuilderProperties.prototype.hideMenu = function () {\n            this._service.updateCurrentWidget(null);\n        };\n        AjfReportBuilderProperties.prototype.openFormulaDialog = function (event) {\n            this.dialogRef = this._dialog.open(AjfReportBuilderFormsAnalyzerDialog);\n            this.dialogRef.componentInstance.aggregation = reports.AjfAggregationType.None;\n            this.dialogRef.componentInstance.isFormula = true;\n            if (event != null && event.reference != null) {\n                this.dialogRef.componentInstance.formula = event.formula;\n                this.dialogRef.componentInstance.reference = event.reference;\n            }\n        };\n        AjfReportBuilderProperties.prototype.ngOnInit = function () {\n            var _this = this;\n            this._formsSub = this._service.reportForms\n                .subscribe(function (x) {\n                _this.forms = x || [];\n            });\n            this._currentWidgetSub = this._service.currentWidget\n                .subscribe(function (x) {\n                if (x != null) {\n                    if (_this.currentWidget !== x) {\n                        _this.currentWidget = x;\n                        _this.widgetName = reports.AjfWidgetType[x.widgetType];\n                        _this.reportStyles = false;\n                        _this.sectionStyles = false;\n                        _this.widgetStyles = false;\n                        _this.sectionColor = false;\n                        _this.widgetColor = false;\n                        _this.visibilitySection = false;\n                    }\n                }\n                else {\n                    _this.currentWidget = null;\n                    _this.widgetName = '';\n                }\n            });\n            this._colorSub = this._service.colors\n                .subscribe(function (x) {\n                if (x && x.length > 0) {\n                    _this.colors = x;\n                    _this.quillModules = {\n                        toolbar: [\n                            ['bold', 'italic', 'underline', 'strike'],\n                            // ['blockquote', 'code-block'],\n                            [{ 'header': 1 }, { 'header': 2 }],\n                            [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n                            [{ 'script': 'sub' }, { 'script': 'super' }],\n                            // [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\n                            // [{ 'direction': 'rtl' }],                         // text direction\n                            [{ 'size': ['small', false, 'large', 'huge'] }],\n                            [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n                            [{ 'color': _this.colors },\n                                { 'background': _this.colors }],\n                            [{ 'font': _this.fonts }],\n                            [{ 'align': _this.align }],\n                            ['formula'],\n                            ['clean'],\n                        ]\n                    };\n                }\n            });\n            this.getHTML = this._service.currentWidget.pipe(operators.map(function (widget) {\n                if (widget != null) {\n                    var myObj = _this.currentWidget;\n                    return myObj.htmlText;\n                }\n                return '';\n            }), operators.distinctUntilChanged(), operators.startWith('<p><br></p>'));\n            this.getHeightWidget = this._service.currentWidget.pipe(operators.filter(function (x) { return x != null; }), operators.map(function (myObj) {\n                if (myObj != null) {\n                    var value = _this.toNumber(myObj.styles['height']);\n                    if (value != null || value != null) {\n                        return value;\n                    }\n                }\n                return undefined;\n            }), operators.distinctUntilChanged());\n            this.getFontSizeWidget = this._service.currentWidget.pipe(operators.map(function (myObj) {\n                if (myObj != null) {\n                    return (_this.toNumber(myObj.styles['font-size']) || 12);\n                }\n                return undefined;\n            }), operators.distinctUntilChanged());\n            this.getFontAlignWidget = this._service.currentWidget.pipe(operators.map(function (myObj) {\n                if (myObj != null) {\n                    return ((myObj.styles['text-align']) || 'center');\n                }\n                return undefined;\n            }), operators.distinctUntilChanged());\n            this.getBorderWidthWidget = this._service.currentWidget.pipe(operators.map(function (myObj) {\n                if (myObj != null) {\n                    return _this.fillPxNumberArray(_this.toNumberArray(myObj.styles['border-width']));\n                }\n                return undefined;\n            }), operators.distinctUntilChanged(), operators.startWith([0, 0, 0, 0]));\n            this.getBorderWidthWidgetTop = this.getBorderWidthWidget.pipe(operators.filter(function (m) { return m != null; }), operators.map(function (m) { return m[0]; }));\n            this.getBorderWidthWidgetRight = this.getBorderWidthWidget.pipe(operators.filter(function (m) { return m != null; }), operators.map(function (m) { return m[1]; }));\n            this.getBorderWidthWidgetBottom = this.getBorderWidthWidget.pipe(operators.filter(function (m) { return m != null; }), operators.map(function (m) { return m[2]; }));\n            this.getBorderWidthWidgetLeft = this.getBorderWidthWidget.pipe(operators.filter(function (m) { return m != null; }), operators.map(function (m) { return m[3]; }));\n            this.getBorderRadiusWidget = this._service.currentWidget.pipe(operators.map(function (myObj) {\n                if (myObj != null) {\n                    return _this.fillPxNumberArray(_this.toNumberArray(myObj.styles['border-radius']));\n                }\n                return undefined;\n            }), operators.distinctUntilChanged(), operators.startWith([0, 0, 0, 0]));\n            this.getBorderRadiusWidgetTopLeft = this.getBorderRadiusWidget.pipe(operators.filter(function (m) { return m != null; }), operators.map(function (m) { return m[0]; }));\n            this.getBorderRadiusWidgetTopRight = this.getBorderRadiusWidget.pipe(operators.filter(function (m) { return m != null; }), operators.map(function (m) { return m[1]; }));\n            this.getBorderRadiusWidgetBottomRight = this.getBorderRadiusWidget.pipe(operators.filter(function (m) { return m != null; }), operators.map(function (m) { return m[2]; }));\n            this.getBorderRadiusWidgetBottomLeft = this.getBorderRadiusWidget.pipe(operators.filter(function (m) { return m != null; }), operators.map(function (m) { return m[3]; }));\n            this.getMarginWidget = this._service.currentWidget.pipe(operators.map(function (myObj) {\n                if (myObj != null && myObj.styles != null && myObj.styles['margin'] != null) {\n                    return _this.fillPxNumberArray(_this.toNumberArray(myObj.styles['margin']));\n                }\n                return undefined;\n            }), operators.distinctUntilChanged(), operators.startWith([0, 0, 0, 0]));\n            this.getMarginWidgetTop = this.getMarginWidget.pipe(operators.filter(function (m) { return m != null; }), operators.map(function (m) { return m[0]; }));\n            this.getMarginWidgetRight = this.getMarginWidget.pipe(operators.filter(function (m) { return m != null; }), operators.map(function (m) { return m[1]; }));\n            this.getMarginWidgetBottom = this.getMarginWidget.pipe(operators.filter(function (m) { return m != null; }), operators.map(function (m) { return m[2]; }));\n            this.getMarginWidgetLeft = this.getMarginWidget.pipe(operators.filter(function (m) { return m != null; }), operators.map(function (m) { return m[3]; }));\n            this.getPaddingWidget = this._service.currentWidget.pipe(operators.map(function (myObj) {\n                if (myObj != null && myObj.styles != null && myObj.styles['padding'] != null) {\n                    return _this.fillPxNumberArray(_this.toNumberArray(myObj.styles['padding']));\n                }\n                return undefined;\n            }), operators.distinctUntilChanged());\n            this.getPaddingWidgetTop = this.getPaddingWidget.pipe(operators.filter(function (m) { return m != null; }), operators.map(function (m) { return m[0]; }));\n            this.getPaddingWidgetRight = this.getPaddingWidget.pipe(operators.filter(function (m) { return m != null; }), operators.map(function (m) { return m[1]; }));\n            this.getPaddingWidgetBottom = this.getPaddingWidget.pipe(operators.filter(function (m) { return m != null; }), operators.map(function (m) { return m[2]; }));\n            this.getPaddingWidgetLeft = this.getPaddingWidget.pipe(operators.filter(function (m) { return m != null; }), operators.map(function (m) { return m[3]; }));\n            this.getBackgroundColorWidget = this._service.currentWidget.pipe(operators.map(function (myObj) {\n                if (myObj != null && myObj.styles != null) {\n                    return myObj.styles['backgroundColor'] || '';\n                }\n            }), operators.distinctUntilChanged());\n            this.getColorWidget = this._service.currentWidget.pipe(operators.map(function (myObj) {\n                if (myObj != null && myObj.styles != null) {\n                    return myObj.styles['color'] || '';\n                }\n            }), operators.distinctUntilChanged());\n            this._stylesUpdatesSubs = this._updateWidgetMarginEvt\n                .pipe(operators.withLatestFrom(this.getMarginWidget))\n                .subscribe(function (r) {\n                if (r == null) {\n                    return;\n                }\n                var idx = r[0].idx;\n                var value = r[0].value;\n                var v = r[1] || [0, 0, 0, 0];\n                if (v == null || v.length < idx) {\n                    return;\n                }\n                v[idx] = value;\n                _this.setWidgetStyles('margin', v);\n            });\n            this._stylesUpdatesSubs.add(this._updateWidgetPaddingEvt\n                .pipe(operators.withLatestFrom(this.getPaddingWidget))\n                .subscribe(function (r) {\n                if (r == null) {\n                    return;\n                }\n                var idx = r[0].idx;\n                var value = r[0].value;\n                var v = r[1] || [0, 0, 0, 0];\n                if (v == null || v.length < idx) {\n                    return;\n                }\n                v[idx] = value;\n                _this.setWidgetStyles('padding', v);\n            }));\n            this._stylesUpdatesSubs\n                .add(this._updateWidgetBorderWidthEvt\n                .pipe(operators.withLatestFrom(this.getBorderWidthWidget))\n                .subscribe(function (r) {\n                if (r == null) {\n                    return;\n                }\n                var idx = r[0].idx;\n                var value = r[0].value;\n                var v = r[1] || [0, 0, 0, 0];\n                if (v == null || v.length < idx) {\n                    return;\n                }\n                v[idx] = value;\n                _this.setWidgetStyles('border-width', v);\n            }));\n            this._stylesUpdatesSubs.add(this._updateWidgetBorderRadiusEvt\n                .pipe(operators.withLatestFrom(this.getBorderRadiusWidget))\n                .subscribe(function (r) {\n                if (r == null) {\n                    return;\n                }\n                var idx = r[0].idx;\n                var value = r[0].value;\n                var v = r[1] || [0, 0, 0, 0];\n                if (v == null || v.length < idx) {\n                    return;\n                }\n                v[idx] = value;\n                _this.setWidgetStyles('border-radius', v);\n            }));\n        };\n        AjfReportBuilderProperties.prototype.ngOnChanges = function (changes) {\n            this.currentWidget = changes.widget.currentValue;\n            if (this.currentWidget == null) {\n                return;\n            }\n            this.widgetName = reports.AjfWidgetType[this.currentWidget.widgetType];\n        };\n        AjfReportBuilderProperties.prototype.ngOnDestroy = function () {\n            this._currentWidgetSub.unsubscribe();\n            this._formsSub.unsubscribe();\n            this._colorSub.unsubscribe();\n            this._headerStyleSub.unsubscribe();\n            this._contentStylesSub.unsubscribe();\n            this._footerStylesSub.unsubscribe();\n            this._originSub.unsubscribe();\n            this._stylesUpdatesSubs.unsubscribe();\n        };\n        AjfReportBuilderProperties.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-report-builder-properties',\n                        template: \"<ng-template [ngIf]=\\\"currentWidget != null\\\">\\n  <div class=\\\"ajf-content\\\">\\n    <button\\n      mat-button\\n      class=\\\"ajf-hide-menu\\\"\\n      matTooltip=\\\"hide-menu\\\"\\n      (click)=\\\"hideMenu()\\\"\\n      [matTooltipPosition]=\\\"'above'\\\">\\n      <mat-icon>remove_circle_outline</mat-icon>\\n    </button>\\n    <mat-button-toggle-group class=\\\"ajf-menu-css\\\">\\n      <mat-button-toggle\\n        (click)=\\\"reportStyles = !reportStyles; sectionStyles = false; widgetStyles = false\\\" value=\\\"left\\\"\\n        [ngClass]=\\\"{'ajf-selected': reportStyles}\\\">\\n        report\\n        <ng-container translate>CSS style</ng-container>\\n      </mat-button-toggle>\\n      <mat-button-toggle\\n        (click)=\\\"sectionStyles = !sectionStyles; reportStyles = false; widgetStyles = false\\\"\\n        [ngClass]=\\\"{'ajf-selected': sectionStyles}\\\">\\n        {{ origin }}\\n        <ng-container translate>CSS style</ng-container>\\n      </mat-button-toggle>\\n      <mat-button-toggle\\n        (click)=\\\"widgetStyles = !widgetStyles; sectionStyles = false; reportStyles = false\\\"\\n        [ngClass]=\\\"{'ajf-selected': widgetStyles}\\\">\\n        {{ widgetName }}\\n        <ng-container translate>CSS style</ng-container>\\n      </mat-button-toggle>\\n    </mat-button-toggle-group>\\n    <div class=\\\"ajf-style-container\\\" *ngIf=\\\"(reportStyles) ? true : false \\\">\\n      <mat-tab-group>\\n        <mat-tab label=\\\"Background Color\\\">\\n          <div class=\\\"ajf-style-panel\\\">\\n            <ajf-theme-color [section]=\\\"'report'\\\" [label]=\\\"'color'\\\"></ajf-theme-color>\\n          </div>\\n        </mat-tab>\\n      </mat-tab-group>\\n    </div>\\n    <div class=\\\"ajf-style-container\\\" *ngIf=\\\"(sectionStyles) ? true : false \\\">\\n      <mat-tab-group>\\n        <mat-tab label=\\\"Background Color\\\">\\n          <div class=\\\"ajf-style-panel\\\">\\n            <ajf-theme-color [section]=\\\"'section'\\\" [label]=\\\"'color'\\\"></ajf-theme-color>\\n          </div>\\n        </mat-tab>\\n      </mat-tab-group>\\n    </div>\\n    <div class=\\\"ajf-style-container\\\" *ngIf=\\\"(widgetStyles) ? true : false \\\">\\n      <mat-tab-group *ngIf=\\\"(currentWidget.widgetType != 4)\\\">\\n        <mat-tab label=\\\"Color\\\">\\n          <div class=\\\"ajf-style-panel\\\">\\n            <ajf-theme-color [section]=\\\"'widget'\\\" [label]=\\\"'color'\\\" [init]=\\\"'icon'\\\"></ajf-theme-color>\\n          </div>\\n        </mat-tab>\\n        <mat-tab label=\\\"Background Color\\\">\\n          <div class=\\\"ajf-style-panel\\\">\\n            <ajf-theme-color [section]=\\\"'widget'\\\" [label]=\\\"'background-color'\\\"></ajf-theme-color>\\n          </div>\\n        </mat-tab>\\n      </mat-tab-group>\\n      <div class=\\\"properties-container\\\" *ngIf=\\\"(currentWidget.widgetType !== 8)\\\">\\n        <div class=\\\"ajf-layout-preview\\\">\\n          <div class=\\\"ajf-vbottom\\\">\\n            <div translate>height</div>\\n            <div>{{ getHeightWidget|async }}</div>\\n          </div>\\n          <div class=\\\"ajf-margin-box\\\">\\n            <div class=\\\"ajf-top-label\\\" translate>margin</div>\\n            <div class=\\\"ajf-vtop\\\">{{ getMarginWidgetTop|async }}</div>\\n            <div class=\\\"ajf-vright\\\">{{ getMarginWidgetRight|async }}</div>\\n            <div class=\\\"ajf-vbottom\\\">{{ getMarginWidgetBottom|async }}</div>\\n            <div class=\\\"ajf-vleft\\\">{{ getMarginWidgetLeft|async }}</div>\\n            <div class=\\\"ajf-border-box\\\">\\n              <div class=\\\"ajf-vtop\\\">{{ getBorderWidthWidgetTop|async }}</div>\\n              <div class=\\\"ajf-vright\\\">{{ getBorderWidthWidgetRight|async }}</div>\\n              <div class=\\\"ajf-vbottom\\\">{{ getBorderWidthWidgetBottom|async }}</div>\\n              <div class=\\\"ajf-vleft\\\">{{ getBorderWidthWidgetLeft|async }}</div>\\n              <div class=\\\"ajf-vtl\\\">{{ getBorderRadiusWidgetTopLeft|async }}</div>\\n              <div class=\\\"ajf-vtr\\\">{{ getBorderRadiusWidgetTopRight|async }}</div>\\n              <div class=\\\"ajf-vbr\\\">{{ getBorderRadiusWidgetBottomRight|async }}</div>\\n              <div class=\\\"ajf-vbl\\\">{{ getBorderRadiusWidgetBottomLeft|async }}</div>\\n              <div class=\\\"ajf-top-label\\\" translate>border</div>\\n              <div class=\\\"ajf-padding-box\\\">\\n                <div class=\\\"ajf-top-label\\\" translate>padding</div>\\n                <div class=\\\"ajf-vtop\\\">{{ getPaddingWidgetTop|async }}</div>\\n                <div class=\\\"ajf-vright\\\">{{ getPaddingWidgetRight|async }}</div>\\n                <div class=\\\"ajf-vbottom\\\">{{ getPaddingWidgetBottom|async }}</div>\\n                <div class=\\\"ajf-vleft\\\">{{ getPaddingWidgetLeft|async }}</div>\\n                <div class=\\\"ajf-content-box\\\" translate>content</div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <mat-grid-list rowHeight=\\\"2em\\\" cols=\\\"12\\\">\\n          <mat-grid-tile></mat-grid-tile>\\n          <mat-grid-tile class=\\\"ajf-lal\\\" colspan=\\\"4\\\">\\n            <span>height</span>\\n          </mat-grid-tile>\\n          <mat-grid-tile colspan=\\\"7\\\">\\n            <mat-slider\\n              (change)=\\\"setWidgetStyles('height', $event.value)\\\"\\n              min=\\\"0\\\"\\n              max=\\\"200\\\"\\n              step=\\\"1\\\"\\n              [value]=\\\"getHeightWidget|async\\\"\\n              tickInterval=\\\"1\\\"\\n              thumbLabel>\\n            </mat-slider>\\n          </mat-grid-tile>\\n        </mat-grid-list>\\n        <mat-grid-list cols=\\\"12\\\">\\n          <mat-grid-tile>\\n            <mat-icon *ngIf=\\\"!marginExpanded\\\"\\n                (click)=\\\"marginExpanded = !marginExpanded\\\">keyboard_arrow_right</mat-icon>\\n            <mat-icon *ngIf=\\\"marginExpanded\\\"\\n                (click)=\\\"marginExpanded = !marginExpanded\\\">keyboard_arrow_down</mat-icon>\\n          </mat-grid-tile>\\n          <mat-grid-tile class=\\\"ajf-lal\\\" colspan=\\\"4\\\">\\n            <span translate>margin</span>\\n          </mat-grid-tile>\\n          <mat-grid-tile colspan=\\\"7\\\">\\n            <mat-slider\\n              [disabled]=\\\"marginExpanded\\\"\\n              (change)=\\\"setWidgetStyles('margin', $event.value)\\\"\\n              min=\\\"-50\\\"\\n              max=\\\"50\\\"\\n              step=\\\"1\\\"\\n              [value]=\\\"getMarginWidgetTop|async\\\"\\n              tickInterval=\\\"auto\\\"\\n              thumbLabel>\\n            </mat-slider>\\n          </mat-grid-tile>\\n        </mat-grid-list>\\n        <ng-template [ngIf]=\\\"marginExpanded\\\">\\n          <mat-grid-list cols=\\\"12\\\">\\n            <mat-grid-tile></mat-grid-tile>\\n            <mat-grid-tile class=\\\"ajf-lal\\\" colspan=\\\"4\\\">\\n              &nbsp;&nbsp;<span translate>margin top</span>\\n            </mat-grid-tile>\\n            <mat-grid-tile colspan=\\\"7\\\">\\n              <mat-slider\\n                (change)=\\\"setWidgetMargin(0, $event.value)\\\"\\n                min=\\\"-50\\\"\\n                max=\\\"50\\\"\\n                step=\\\"1\\\"\\n                [value]=\\\"getMarginWidgetTop|async\\\"\\n                tickInterval=\\\"auto\\\"\\n                thumbLabel>\\n              </mat-slider>\\n            </mat-grid-tile>\\n          </mat-grid-list>\\n          <mat-grid-list cols=\\\"12\\\">\\n            <mat-grid-tile></mat-grid-tile>\\n            <mat-grid-tile class=\\\"ajf-lal\\\" colspan=\\\"4\\\">\\n              &nbsp;&nbsp;<span translate>margin right</span>\\n            </mat-grid-tile>\\n            <mat-grid-tile colspan=\\\"7\\\">\\n              <mat-slider\\n                (change)=\\\"setWidgetMargin(1, $event.value)\\\"\\n                min=\\\"-50\\\"\\n                max=\\\"50\\\"\\n                step=\\\"1\\\"\\n                [value]=\\\"getMarginWidgetRight|async\\\"\\n                tickInterval=\\\"auto\\\"\\n                thumbLabel>\\n              </mat-slider>\\n            </mat-grid-tile>\\n          </mat-grid-list>\\n          <mat-grid-list cols=\\\"12\\\">\\n            <mat-grid-tile></mat-grid-tile>\\n            <mat-grid-tile class=\\\"ajf-lal\\\" colspan=\\\"4\\\">\\n              &nbsp;&nbsp;<span translate>margin bottom</span>\\n            </mat-grid-tile>\\n            <mat-grid-tile colspan=\\\"7\\\">\\n              <mat-slider\\n                (change)=\\\"setWidgetMargin(2, $event.value)\\\"\\n                min=\\\"-50\\\"\\n                max=\\\"50\\\"\\n                step=\\\"1\\\"\\n                [value]=\\\"getMarginWidgetBottom|async\\\"\\n                tickInterval=\\\"auto\\\"\\n                thumbLabel>\\n              </mat-slider>\\n            </mat-grid-tile>\\n          </mat-grid-list>\\n          <mat-grid-list cols=\\\"12\\\">\\n            <mat-grid-tile></mat-grid-tile>\\n            <mat-grid-tile class=\\\"ajf-lal\\\" colspan=\\\"4\\\">\\n              &nbsp;&nbsp;<span translate>margin left</span>\\n            </mat-grid-tile>\\n            <mat-grid-tile colspan=\\\"7\\\">\\n              <mat-slider\\n                (change)=\\\"setWidgetMargin(3, $event.value)\\\"\\n                min=\\\"-50\\\"\\n                max=\\\"50\\\"\\n                step=\\\"1\\\"\\n                [value]=\\\"getMarginWidgetLeft|async\\\"\\n                tickInterval=\\\"auto\\\"\\n                thumbLabel>\\n              </mat-slider>\\n            </mat-grid-tile>\\n          </mat-grid-list>\\n        </ng-template>\\n        <mat-grid-list cols=\\\"12\\\">\\n          <mat-grid-tile>\\n            <mat-icon *ngIf=\\\"!paddingExpanded\\\"\\n                (click)=\\\"paddingExpanded = !paddingExpanded\\\">keyboard_arrow_right</mat-icon>\\n            <mat-icon *ngIf=\\\"paddingExpanded\\\"\\n                (click)=\\\"paddingExpanded = !paddingExpanded\\\">keyboard_arrow_down</mat-icon>\\n          </mat-grid-tile>\\n          <mat-grid-tile class=\\\"ajf-lal\\\" colspan=\\\"4\\\">\\n            <span translate>padding</span>\\n          </mat-grid-tile>\\n          <mat-grid-tile colspan=\\\"7\\\">\\n            <mat-slider\\n              (change)=\\\"setWidgetStyles('padding', $event.value)\\\"\\n              min=\\\"-50\\\"\\n              max=\\\"50\\\"\\n              step=\\\"1\\\"\\n              [value]=\\\"getPaddingWidgetTop|async\\\"\\n              tickInterval=\\\"auto\\\"\\n              thumbLabel>\\n            </mat-slider>\\n          </mat-grid-tile>\\n        </mat-grid-list>\\n        <ng-template [ngIf]=\\\"paddingExpanded\\\">\\n          <mat-grid-list cols=\\\"12\\\">\\n            <mat-grid-tile></mat-grid-tile>\\n            <mat-grid-tile class=\\\"ajf-lal\\\" colspan=\\\"4\\\">\\n              &nbsp;&nbsp;<span translate>padding top</span>\\n            </mat-grid-tile>\\n            <mat-grid-tile colspan=\\\"7\\\">\\n              <mat-slider\\n                (change)=\\\"setWidgetPadding(0, $event.value)\\\"\\n                min=\\\"-50\\\"\\n                max=\\\"50\\\"\\n                step=\\\"1\\\"\\n                [value]=\\\"getPaddingWidgetTop|async\\\"\\n                tickInterval=\\\"auto\\\"\\n                thumbLabel>\\n              </mat-slider>\\n            </mat-grid-tile>\\n          </mat-grid-list>\\n          <mat-grid-list cols=\\\"12\\\">\\n            <mat-grid-tile></mat-grid-tile>\\n            <mat-grid-tile class=\\\"ajf-lal\\\" colspan=\\\"4\\\">\\n              &nbsp;&nbsp;<span translate>padding right</span>\\n            </mat-grid-tile>\\n            <mat-grid-tile colspan=\\\"7\\\">\\n              <mat-slider\\n                (change)=\\\"setWidgetPadding(1, $event.value)\\\"\\n                min=\\\"-50\\\"\\n                max=\\\"50\\\"\\n                step=\\\"1\\\"\\n                [value]=\\\"getPaddingWidgetRight|async\\\"\\n                tickInterval=\\\"auto\\\"\\n                thumbLabel>\\n              </mat-slider>\\n            </mat-grid-tile>\\n          </mat-grid-list>\\n          <mat-grid-list cols=\\\"12\\\">\\n            <mat-grid-tile></mat-grid-tile>\\n            <mat-grid-tile class=\\\"ajf-lal\\\" colspan=\\\"4\\\">\\n              &nbsp;&nbsp;<span translate>padding bottom</span>\\n            </mat-grid-tile>\\n            <mat-grid-tile colspan=\\\"7\\\">\\n              <mat-slider\\n                (change)=\\\"setWidgetPadding(2, $event.value)\\\"\\n                min=\\\"-50\\\"\\n                max=\\\"50\\\"\\n                step=\\\"1\\\"\\n                [value]=\\\"getPaddingWidgetBottom|async\\\"\\n                tickInterval=\\\"auto\\\"\\n                thumbLabel>\\n              </mat-slider>\\n            </mat-grid-tile>\\n          </mat-grid-list>\\n          <mat-grid-list cols=\\\"12\\\">\\n            <mat-grid-tile></mat-grid-tile>\\n            <mat-grid-tile class=\\\"ajf-lal\\\" colspan=\\\"4\\\">\\n              &nbsp;&nbsp;<span translate>padding left</span>\\n            </mat-grid-tile>\\n            <mat-grid-tile colspan=\\\"7\\\">\\n              <mat-slider\\n                (change)=\\\"setWidgetPadding(3, $event.value)\\\"\\n                min=\\\"-50\\\"\\n                max=\\\"50\\\"\\n                step=\\\"1\\\"\\n                [value]=\\\"getPaddingWidgetLeft|async\\\"\\n                tickInterval=\\\"auto\\\"\\n                thumbLabel>\\n              </mat-slider>\\n            </mat-grid-tile>\\n          </mat-grid-list>\\n        </ng-template>\\n        <mat-grid-list cols=\\\"12\\\">\\n          <mat-grid-tile>\\n            <mat-icon *ngIf=\\\"!borderWidthExpanded\\\"\\n                (click)=\\\"borderWidthExpanded = !borderWidthExpanded\\\">keyboard_arrow_right</mat-icon>\\n            <mat-icon *ngIf=\\\"borderWidthExpanded\\\"\\n                (click)=\\\"borderWidthExpanded = !borderWidthExpanded\\\">keyboard_arrow_down</mat-icon>\\n          </mat-grid-tile>\\n          <mat-grid-tile class=\\\"ajf-lal\\\" colspan=\\\"4\\\">\\n            <span translate>border width</span>\\n          </mat-grid-tile>\\n          <mat-grid-tile colspan=\\\"7\\\">\\n            <mat-slider\\n              (change)=\\\"setWidgetStyles('border-width', $event.value)\\\"\\n              min=\\\"0\\\"\\n              max=\\\"10\\\"\\n              step=\\\"1\\\"\\n              [value]=\\\"getBorderWidthWidgetTop|async\\\"\\n              tickInterval=\\\"1\\\"\\n              thumbLabel>\\n            </mat-slider>\\n          </mat-grid-tile>\\n        </mat-grid-list>\\n        <ng-template [ngIf]=\\\"borderWidthExpanded\\\">\\n          <mat-grid-list cols=\\\"12\\\">\\n            <mat-grid-tile></mat-grid-tile>\\n            <mat-grid-tile class=\\\"ajf-lal\\\" colspan=\\\"4\\\">\\n              &nbsp;&nbsp;<span translate>border width top</span>\\n            </mat-grid-tile>\\n            <mat-grid-tile colspan=\\\"7\\\">\\n              <mat-slider\\n                (change)=\\\"setWidgetBorderWidth(0, $event.value)\\\"\\n                min=\\\"1\\\"\\n                max=\\\"10\\\"\\n                step=\\\"1\\\"\\n                [value]=\\\"getBorderWidthWidgetTop|async\\\"\\n                tickInterval=\\\"auto\\\"\\n                thumbLabel>\\n              </mat-slider>\\n            </mat-grid-tile>\\n          </mat-grid-list>\\n          <mat-grid-list cols=\\\"12\\\">\\n            <mat-grid-tile></mat-grid-tile>\\n            <mat-grid-tile class=\\\"ajf-lal\\\" colspan=\\\"4\\\">\\n              &nbsp;&nbsp;<span translate>border width right</span>\\n            </mat-grid-tile>\\n            <mat-grid-tile colspan=\\\"7\\\">\\n              <mat-slider\\n                (change)=\\\"setWidgetBorderWidth(1, $event.value)\\\"\\n                min=\\\"1\\\"\\n                max=\\\"10\\\"\\n                step=\\\"1\\\"\\n                [value]=\\\"getBorderWidthWidgetRight|async\\\"\\n                tickInterval=\\\"auto\\\"\\n                thumbLabel>\\n              </mat-slider>\\n            </mat-grid-tile>\\n          </mat-grid-list>\\n          <mat-grid-list cols=\\\"12\\\">\\n            <mat-grid-tile></mat-grid-tile>\\n            <mat-grid-tile class=\\\"ajf-lal\\\" colspan=\\\"4\\\">\\n              &nbsp;&nbsp;<span translate>border width bottom</span>\\n            </mat-grid-tile>\\n            <mat-grid-tile colspan=\\\"7\\\">\\n              <mat-slider\\n                (change)=\\\"setWidgetBorderWidth(2, $event.value)\\\"\\n                min=\\\"1\\\"\\n                max=\\\"10\\\"\\n                step=\\\"1\\\"\\n                [value]=\\\"getBorderWidthWidgetBottom|async\\\"\\n                tickInterval=\\\"auto\\\"\\n                thumbLabel>\\n              </mat-slider>\\n            </mat-grid-tile>\\n          </mat-grid-list>\\n          <mat-grid-list cols=\\\"12\\\">\\n            <mat-grid-tile></mat-grid-tile>\\n            <mat-grid-tile class=\\\"ajf-lal\\\" colspan=\\\"4\\\">\\n              &nbsp;&nbsp;<span translate>border width left</span>\\n            </mat-grid-tile>\\n            <mat-grid-tile colspan=\\\"7\\\">\\n              <mat-slider\\n                (change)=\\\"setWidgetBorderWidth(3, $event.value)\\\"\\n                min=\\\"1\\\"\\n                max=\\\"10\\\"\\n                step=\\\"1\\\"\\n                [value]=\\\"getBorderWidthWidgetLeft|async\\\"\\n                tickInterval=\\\"auto\\\"\\n                thumbLabel>\\n              </mat-slider>\\n            </mat-grid-tile>\\n          </mat-grid-list>\\n        </ng-template>\\n        <mat-grid-list cols=\\\"12\\\">\\n          <mat-grid-tile>\\n            <mat-icon *ngIf=\\\"!borderRadiusExpanded\\\"\\n                (click)=\\\"borderRadiusExpanded = !borderRadiusExpanded\\\">keyboard_arrow_right</mat-icon>\\n            <mat-icon *ngIf=\\\"borderRadiusExpanded\\\"\\n                (click)=\\\"borderRadiusExpanded = !borderRadiusExpanded\\\">keyboard_arrow_down</mat-icon>\\n          </mat-grid-tile>\\n          <mat-grid-tile class=\\\"ajf-lal\\\" colspan=\\\"4\\\">\\n            <span translate>border radius</span>\\n          </mat-grid-tile>\\n          <mat-grid-tile colspan=\\\"7\\\">\\n            <mat-slider\\n              (change)=\\\"setWidgetStyles('border-radius', $event.value)\\\"\\n              min=\\\"0\\\"\\n              max=\\\"100\\\"\\n              step=\\\"1\\\"\\n              tickInterval=\\\"10\\\"\\n              thumbLabel>\\n            </mat-slider>\\n          </mat-grid-tile>\\n        </mat-grid-list>\\n        <ng-template [ngIf]=\\\"borderRadiusExpanded\\\">\\n          <mat-grid-list cols=\\\"12\\\">\\n            <mat-grid-tile></mat-grid-tile>\\n            <mat-grid-tile class=\\\"ajf-lal\\\" colspan=\\\"4\\\">\\n              &nbsp;&nbsp;<span translate>border radius top left</span>\\n            </mat-grid-tile>\\n            <mat-grid-tile colspan=\\\"7\\\">\\n              <mat-slider\\n                (change)=\\\"setWidgetBorderRadius(0, $event.value)\\\"\\n                min=\\\"1\\\"\\n                max=\\\"100\\\"\\n                step=\\\"1\\\"\\n                [value]=\\\"getBorderRadiusWidgetTopLeft|async\\\"\\n                tickInterval=\\\"auto\\\"\\n                thumbLabel>\\n              </mat-slider>\\n            </mat-grid-tile>\\n          </mat-grid-list>\\n          <mat-grid-list cols=\\\"12\\\">\\n            <mat-grid-tile></mat-grid-tile>\\n            <mat-grid-tile class=\\\"ajf-lal\\\" colspan=\\\"4\\\">\\n              &nbsp;&nbsp;<span translate>border radius top right</span>\\n            </mat-grid-tile>\\n            <mat-grid-tile colspan=\\\"7\\\">\\n              <mat-slider\\n                (change)=\\\"setWidgetBorderRadius(1, $event.value)\\\"\\n                min=\\\"1\\\"\\n                max=\\\"100\\\"\\n                step=\\\"1\\\"\\n                [value]=\\\"getBorderRadiusWidgetTopRight|async\\\"\\n                tickInterval=\\\"auto\\\"\\n                thumbLabel>\\n              </mat-slider>\\n            </mat-grid-tile>\\n          </mat-grid-list>\\n          <mat-grid-list cols=\\\"12\\\">\\n            <mat-grid-tile></mat-grid-tile>\\n            <mat-grid-tile class=\\\"ajf-lal\\\" colspan=\\\"4\\\">\\n              &nbsp;&nbsp;<span translate>border radius bottom left</span>\\n            </mat-grid-tile>\\n            <mat-grid-tile colspan=\\\"7\\\">\\n              <mat-slider\\n                (change)=\\\"setWidgetBorderRadius(2, $event.value)\\\"\\n                min=\\\"1\\\"\\n                max=\\\"100\\\"\\n                step=\\\"1\\\"\\n                [value]=\\\"getBorderRadiusWidgetBottomLeft|async\\\"\\n                tickInterval=\\\"auto\\\"\\n                thumbLabel>\\n              </mat-slider>\\n            </mat-grid-tile>\\n          </mat-grid-list>\\n          <mat-grid-list cols=\\\"12\\\">\\n            <mat-grid-tile></mat-grid-tile>\\n            <mat-grid-tile class=\\\"ajf-lal\\\" colspan=\\\"4\\\">\\n              &nbsp;&nbsp;<span translate>border radius bottom right</span>\\n            </mat-grid-tile>\\n            <mat-grid-tile colspan=\\\"7\\\">\\n              <mat-slider\\n                (change)=\\\"setWidgetBorderRadius(3, $event.value)\\\"\\n                min=\\\"1\\\"\\n                max=\\\"100\\\"\\n                step=\\\"1\\\"\\n                [value]=\\\"getBorderRadiusWidgetBottomRight|async\\\"\\n                tickInterval=\\\"auto\\\"\\n                thumbLabel>\\n              </mat-slider>\\n            </mat-grid-tile>\\n          </mat-grid-list>\\n        </ng-template>\\n      </div>\\n      <div class=\\\"properties-container\\\" *ngIf=\\\"currentWidget.widgetType === 2\\\">\\n        <mat-grid-list cols=\\\"12\\\">\\n          <mat-grid-tile></mat-grid-tile>\\n          <mat-grid-tile class=\\\"ajf-lal\\\" colspan=\\\"3\\\">\\n            <span translate>font size</span>\\n          </mat-grid-tile>\\n          <mat-grid-tile colspan=\\\"7\\\">\\n            <mat-slider\\n              (change)=\\\"setWidgetStyles('font-size', $event.value);\\\"\\n              min=\\\"1\\\"\\n              max=\\\"150\\\"\\n              step=\\\"1\\\"\\n              [value]=\\\"getFontSizeWidget|async\\\"\\n              tickInterval=\\\"1\\\"\\n              thumbLabel>\\n            </mat-slider>\\n          </mat-grid-tile>\\n        </mat-grid-list>\\n      </div>\\n      <ng-template [ngIf]=\\\"currentWidget.widgetType === 5\\\">\\n        <br>\\n        <form>\\n          <mat-form-field>\\n            <input\\n              matInput\\n              [placeholder]=\\\"'Font size' | translate\\\"\\n              [value]=\\\"getFontSizeWidget|async\\\"\\n              [(ngModel)]=\\\"fontSize\\\"\\n              [ngModelOptions]=\\\"{standalone: true}\\\"\\n              (change)=\\\"setWidgetStyles('font-size', fontSize)\\\">\\n          </mat-form-field>\\n          <mat-select\\n              (selectionChange)=\\\"setWidgetStyles('font-style', $event.value)\\\"\\n              [placeholder]=\\\"'Font style' | translate\\\">\\n            <mat-option translate value=\\\"normal\\\">Normal</mat-option>\\n            <mat-option translate value=\\\"italic\\\">Italic</mat-option>\\n            <mat-option translate value=\\\"oblique\\\">Oblique</mat-option>\\n          </mat-select>\\n          <mat-select\\n              (selectionChange)=\\\"setWidgetStyles('text-align', $event.value)\\\"\\n              [placeholder]=\\\"'Align' | translate\\\">\\n            <mat-option translate value=\\\"center\\\">Center</mat-option>\\n            <mat-option translate value=\\\"left\\\">Left</mat-option>\\n            <mat-option translate value=\\\"right\\\">Right</mat-option>\\n          </mat-select>\\n        </form>\\n      </ng-template>\\n      <h1>\\n        <ng-container translate>properties of</ng-container>\\n        {{ widgetName }}\\n      </h1>\\n    </div>\\n    <div [ngSwitch]=\\\"currentWidget.widgetType\\\">\\n      <ng-template [ngSwitchCase]=\\\"0\\\">\\n        <h1 translate>Column</h1>\\n        <ng-template ngFor let-col [ngForOf]=\\\"currentLayoutWidget.columns\\\" let-idx=\\\"index\\\">\\n          <mat-toolbar>\\n              <mat-toolbar-row *ngIf=\\\"col !== -1\\\">\\n                <mat-grid-list cols=\\\"12\\\">\\n                  <mat-grid-tile colspan=\\\"1\\\">\\n                    {{idx + 1}}\\n                  </mat-grid-tile>\\n                  <mat-grid-tile colspan=\\\"9\\\">\\n                    <mat-slider\\n                      style=\\\"width: 90%;\\\"\\n                      min=\\\"0.1\\\"\\n                      max=\\\"1\\\"\\n                      step=\\\"0.01\\\"\\n                      value=\\\"{{col}}\\\"\\n                      thumb-label=\\\"true\\\"\\n                      tick-interval=\\\"true\\\"\\n                      (change)=\\\"instantColumnValue($event.value,idx)\\\">\\n                    </mat-slider>\\n                    {{percent(col)}}%\\n                  </mat-grid-tile>\\n                  <mat-grid-tile colspan=\\\"2\\\">\\n                    <button style=\\\"width: 5%;\\\" mat-button (click)=\\\"fixedColumn(idx)\\\">fixed</button>\\n                  </mat-grid-tile>\\n                </mat-grid-list>\\n              </mat-toolbar-row>\\n              <mat-toolbar-row *ngIf=\\\"col == -1\\\">\\n                <mat-grid-list cols=\\\"12\\\">\\n                  <mat-grid-tile colspan=\\\"1\\\">\\n                    {{idx + 1}}\\n                  </mat-grid-tile>\\n                  <mat-grid-tile colspan=\\\"11\\\">\\n                    <button  style=\\\"width: 90%;\\\" mat-button (click)=\\\"unfixedColumn(idx)\\\">percent</button>\\n                  </mat-grid-tile>\\n                </mat-grid-list>\\n              </mat-toolbar-row>\\n          </mat-toolbar>\\n        </ng-template>\\n        <mat-toolbar>\\n          <mat-toolbar-row>\\n            <button mat-button\\n                translate\\n                (click)=\\\"addColumn()\\\"\\n                *ngIf=\\\"currentLayoutWidget.columns.length < 10\\\">Add column</button>\\n          </mat-toolbar-row>\\n        </mat-toolbar>\\n      </ng-template>\\n      <ng-template [ngSwitchCase]=\\\"2\\\">\\n        <ajf-image-group (formulaClick)=\\\"openFormulaDialog($event)\\\" [data]=\\\"iconSet\\\"></ajf-image-group>\\n        <ajf-image-group (formulaClick)=\\\"openFormulaDialog($event)\\\" [data]=\\\"flagSet\\\"></ajf-image-group>\\n        <ajf-report-builder-forms-analyzer></ajf-report-builder-forms-analyzer>\\n        <input\\n            mat-input\\n            [placeholder]=\\\"'paste a link' | translate\\\"\\n            style=\\\"width: 100%;\\\"\\n            [(ngModel)]=\\\"imageUrl\\\">\\n        <button mat-button (click)=\\\"setImageUrl()\\\"\\n            translate>Set image</button>\\n      </ng-template>\\n      <ng-template [ngSwitchCase]=\\\"3\\\">\\n        <div style=\\\"width:500px;\\\">\\n          <ajf-quill-editor\\n            [(ngModel)]=\\\"currentTextWidget.htmlText\\\"\\n            [modules]=\\\"getModule()\\\"\\n            [maxLength]=\\\"200\\\"\\n            [theme]=\\\"bubble\\\"\\n            [initHTML]=\\\"(getHTML|async) || ''\\\"\\n            (formulaClick)=\\\"openFormulaDialog($event)\\\">\\n          </ajf-quill-editor>\\n        </div>\\n      </ng-template>\\n      <ng-template [ngSwitchCase]=\\\"4\\\">\\n        <h3 translate>Choose type of Chart</h3>\\n        <mat-button-toggle-group class=\\\"ajf-chart-buttons\\\">\\n          <div class=\\\"ajf-row\\\">\\n            <mat-button-toggle\\n              value=\\\"reportbuilder-linechart\\\"\\n              (click)=\\\"setChartType(0)\\\">\\n              <mat-icon\\n                fontSet=\\\"ajf-icon\\\"\\n                fontIcon=\\\"reportbuilder-linechart\\\">\\n              </mat-icon>\\n            </mat-button-toggle>\\n            <mat-button-toggle\\n              value=\\\"reportbuilder-barchartvertical\\\"\\n              (click)=\\\"setChartType(1)\\\">\\n              <mat-icon\\n                fontSet=\\\"ajf-icon\\\"\\n                fontIcon=\\\"reportbuilder-barchartvertical\\\">\\n              </mat-icon>\\n              </mat-button-toggle>\\n            <mat-button-toggle\\n                value=\\\"reportbuilder-bubblechart\\\"\\n                (click)=\\\"setChartType(8)\\\">\\n                <mat-icon\\n                  fontSet=\\\"ajf-icon\\\"\\n                  fontIcon=\\\"reportbuilder-bubblechart\\\">\\n                </mat-icon>\\n              </mat-button-toggle>\\n          </div>\\n          <div class=row>\\n            <mat-button-toggle\\n              value=\\\"reportbuilder-barcharthorizontal\\\"\\n              (click)=\\\"setChartType(2)\\\">\\n              <mat-icon\\n                fontSet=\\\"ajf-icon\\\"\\n                fontIcon=\\\"reportbuilder-barcharthorizontal\\\">\\n              </mat-icon>\\n            </mat-button-toggle>\\n            <mat-button-toggle\\n              value=\\\"reportbuilder-radarchart\\\"\\n              (click)=\\\"setChartType(3)\\\">\\n              <mat-icon\\n                fontSet=\\\"ajf-icon\\\"\\n                fontIcon=\\\"reportbuilder-radarchart\\\">\\n              </mat-icon>\\n            </mat-button-toggle>\\n             <mat-button-toggle\\n              value=\\\"reportbuilder-barchartvertical\\\"\\n              (click)=\\\"setChartType(1)\\\">\\n              <mat-icon\\n                fontSet=\\\"ajf-icon\\\"\\n                fontIcon=\\\"reportbuilder-barchartvertical\\\">\\n              </mat-icon>\\n            </mat-button-toggle>\\n          </div>\\n          <div class=\\\"ajf-row\\\">\\n            <mat-button-toggle\\n              value=\\\"reportbuilder-scatterchart\\\"\\n              (click)=\\\"setChartType(4)\\\">\\n              <mat-icon\\n                fontSet=\\\"ajf-icon\\\"\\n                fontIcon=\\\"reportbuilder-scatterchart\\\">\\n              </mat-icon>\\n            </mat-button-toggle>\\n            <mat-button-toggle\\n              value=\\\"reportbuilder-polarareachart\\\"\\n              (click)=\\\"setChartType(5)\\\">\\n              <mat-icon\\n                fontSet=\\\"ajf-icon\\\"\\n                fontIcon=\\\"reportbuilder-polarareachart\\\">\\n              </mat-icon>\\n            </mat-button-toggle>\\n          </div>\\n          <div class=\\\"ajf-row\\\">\\n            <mat-button-toggle\\n              value=\\\"reportbuilder-piechart\\\"\\n              (click)=\\\"setChartType(6)\\\">\\n              <mat-icon\\n                fontSet=\\\"ajf-icon\\\"\\n                fontIcon=\\\"reportbuilder-piechart\\\">\\n              </mat-icon>\\n            </mat-button-toggle>\\n            <mat-button-toggle\\n              value=\\\"reportbuilder-donoughtchart\\\"\\n              (click)=\\\"setChartType(7)\\\">\\n              <mat-icon\\n                fontSet=\\\"ajf-icon\\\"\\n                fontIcon=\\\"reportbuilder-donoughtchart\\\">\\n              </mat-icon>\\n            </mat-button-toggle>\\n          </div>\\n        </mat-button-toggle-group>\\n        <h3 translate>Labels</h3>\\n        <ajf-report-builder-forms-analyzer></ajf-report-builder-forms-analyzer>\\n        <ajf-theme-color [section]=\\\"'chart'\\\" [label]=\\\"tabValue\\\"></ajf-theme-color>\\n          <mat-card>\\n            <mat-card-header>\\n              <mat-card-title>Border width</mat-card-title>\\n            </mat-card-header>\\n            <mat-card-content>\\n              <mat-slider\\n                min=\\\"1\\\"\\n                max=\\\"100\\\"\\n                style=\\\"width:99%;\\\"\\n                step=\\\"1\\\"\\n                (change)=\\\"setChartBorderColor($event.value)\\\"\\n                [value]=\\\"chartBorderWidth\\\"\\n                tickInterval=\\\"auto\\\"\\n                thumbLabel>\\n              </mat-slider>\\n            </mat-card-content>\\n          </mat-card>\\n          <mat-tab-group (selectChange)=\\\"setTab($event)\\\">\\n            <mat-tab label=\\\"Background\\\">\\n              <mat-list>\\n                <ng-template ngFor let-color [ngForOf]=\\\"(getChartBackgroundColor|async)\\\" let-idx=\\\"index\\\">\\n                  <mat-list-item>\\n                    <span [style.background]=\\\"color\\\">\\n                      {{ color }}\\n                    </span>\\n                    <button mat-button translate\\n                        (click)=\\\"removeChartBackgroundColor(idx)\\\">Remove</button>\\n                  </mat-list-item>\\n                </ng-template>\\n              </mat-list>\\n            </mat-tab>\\n            <mat-tab label=\\\"Border\\\">\\n              <mat-list>\\n                <ng-template ngFor let-color [ngForOf]=\\\"(getChartBorderColor|async)\\\" let-idx=\\\"index\\\">\\n                  <mat-list-item>\\n                    <span [style.background]=\\\"color\\\">\\n                      {{ color }}\\n                    </span>\\n                    <button mat-button (click)=\\\"removeChartBorderColor(idx)\\\">remove</button>\\n                  </mat-list-item>\\n                </ng-template>\\n              </mat-list>\\n            </mat-tab>\\n          </mat-tab-group>\\n      </ng-template>\\n      <ng-template [ngSwitchCase]=\\\"5\\\">\\n        <ajf-report-builder-forms-analyzer></ajf-report-builder-forms-analyzer>\\n      </ng-template>\\n    </div>\\n    <button mat-button\\n        (click)=\\\"visibilitySection = !visibilitySection\\\"\\n        [ngClass]=\\\"{'ajf-selected': visibilitySection}\\\">\\n      {{ widgetName }}\\n      <ng-container translate>Visibility</ng-container>\\n    </button>\\n    <div [style.display]=\\\"visibilitySection ? 'block' : 'none'\\\">\\n      <ajf-report-builder-condition-editor [visibility]=\\\"currentWidget.visibility\\\"></ajf-report-builder-condition-editor>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\"ajf-report-builder-properties .ajf-selected{background-color:darkred;color:#fff}ajf-report-builder-properties .ajf-style-container{height:auto;width:100%;position:relative;margin-bottom:60px;text-align:center}ajf-report-builder-properties .ajf-style-container mat-tab-group .ajf-style-panel{min-height:350px}ajf-report-builder-properties .ajf-style-container .ajf-style-background,ajf-report-builder-properties .ajf-style-container .ajf-style-color{width:100%;height:350px;position:relative;margin:30px}ajf-report-builder-properties .ajf-style-container .mat-list-item-content{position:normal !important;display:block !important;height:350px !important}ajf-report-builder-properties .ajf-style-container mat-tab-group .mat-tab-body-wrapper,ajf-report-builder-properties .ajf-style-container mat-tab-group .mat-list-item-content{position:normal !important;display:block !important;height:350px !important}ajf-report-builder-properties .ajf-content{margin-top:10px;margin-right:15px;margin-bottom:290px;margin-left:15px}ajf-report-builder-properties .ajf-content .ajf-menu-css{width:100% !important;font-size:10px !important}ajf-report-builder-properties .ajf-content .ajf-menu-css mat-button-toggle{width:33% !important}ajf-report-builder-properties .ajf-content mat-button-toggle-group{width:100% !important}ajf-report-builder-properties .ajf-content mat-button-toggle-group mat-button-toggle{width:auto !important}ajf-report-builder-properties .ajf-content mat-button-toggle-group mat-button-toggle mat-icon{margin:15px}ajf-report-builder-properties button{width:100%;margin-bottom:30px}ajf-report-builder-properties .ajf-hide-menu{width:auto !important}ajf-report-builder-properties h1,ajf-report-builder-properties h3,ajf-report-builder-properties h5{text-align:center}ajf-report-builder-properties .ajf-row{display:flex;flex-direction:column;width:100%}ajf-report-builder-properties .mat-tab-body.mat-tab-active{min-height:600px}ajf-report-builder-properties mat-grid-list{width:100%}ajf-report-builder-properties mat-grid-tile{overflow:visible !important}ajf-report-builder-properties mat-grid-tile.ajf-lal{text-align:left}ajf-report-builder-properties .ajf-chart-buttons mat-icon{font-size:15px}ajf-report-builder-properties .ajf-layout-preview{background-color:#fff;width:100%;font-size:.9em;box-sizing:border-box;position:relative}ajf-report-builder-properties .ajf-layout-preview .ajf-top-label{position:absolute;top:1em;left:1em;text-align:left}ajf-report-builder-properties .ajf-layout-preview .ajf-vtop{position:absolute;top:1em;right:0;left:0}ajf-report-builder-properties .ajf-layout-preview .ajf-vbottom{position:absolute;bottom:0;right:0;left:0}ajf-report-builder-properties .ajf-layout-preview .ajf-vright{position:absolute;top:50%;right:1em;margin-top:.5em}ajf-report-builder-properties .ajf-layout-preview .ajf-vleft{position:absolute;top:50%;left:1em;margin-top:.5em}ajf-report-builder-properties .ajf-layout-preview .ajf-vtl{position:absolute;top:1em;left:1em}ajf-report-builder-properties .ajf-layout-preview .ajf-vtr{position:absolute;top:1em;right:1em}ajf-report-builder-properties .ajf-layout-preview .ajf-vbl{position:absolute;bottom:1em;left:1em}ajf-report-builder-properties .ajf-layout-preview .ajf-vbr{position:absolute;bottom:1em;right:1em}ajf-report-builder-properties .ajf-layout-preview .ajf-margin-box{background-color:#fff;padding:3em;position:relative;border:solid 1px #ccc}ajf-report-builder-properties .ajf-layout-preview .ajf-margin-box .ajf-border-box{background-color:#ddd;padding:3em;position:relative;box-sizing:border-box}ajf-report-builder-properties .ajf-layout-preview .ajf-margin-box .ajf-border-box>.ajf-top-label{left:4em}ajf-report-builder-properties .ajf-layout-preview .ajf-margin-box .ajf-border-box .ajf-padding-box{padding:3em;background-color:#aaa;position:relative;box-sizing:border-box}ajf-report-builder-properties .ajf-layout-preview .ajf-margin-box .ajf-border-box .ajf-padding-box .ajf-content-box{background-color:#888;padding:2em;text-align:center;box-sizing:border-box}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfReportBuilderProperties.ctorParameters = function () { return [\n            { type: dialog.MatDialog },\n            { type: AjfReportBuilderService }\n        ]; };\n        return AjfReportBuilderProperties;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfQuillEditor = /** @class */ (function () {\n        function AjfQuillEditor(_elementRef, _renderer, _service) {\n            var _this = this;\n            this._elementRef = _elementRef;\n            this._renderer = _renderer;\n            this._service = _service;\n            this.emptyArray = [];\n            this._init = false;\n            this.dateFormats = [\n                {\n                    'label': 'June 23rd 2017, 12:39:12 pm',\n                    'value': 'MMMM Do YYYY, h:mm:ss a',\n                    'validator': 'MMMMDoYYYYhmmssa'\n                }, {\n                    'label': 'Friday',\n                    'value': 'dddd',\n                    'validator': 'dddd'\n                }, {\n                    'label': 'Jun 23rd 17',\n                    'value': 'MMM Do YY',\n                    'validator': 'MMMDoYY'\n                }\n            ];\n            this.fonts = [\n                false,\n                'blackr',\n                'black-italic',\n                'bold',\n                'bold-condensed',\n                'bold-condensed-italic',\n                'bold-italic',\n                'condensed',\n                'condensed-italic',\n                'italic',\n                'light',\n                'light-italic',\n                'medium',\n                'medium-italic',\n                'thinr',\n                'thin-italic'\n            ];\n            this.defaultModules = {\n                formula: true,\n                toolbar: [\n                    ['formula'],\n                    ['bold', 'italic', 'underline', 'strike'],\n                    // ['blockquote', 'code-block'],\n                    [{ 'header': 1 }, { 'header': 2 }],\n                    [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n                    [{ 'script': 'sub' }, { 'script': 'super' }],\n                    // [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\n                    // [{ 'direction': 'rtl' }],                         // text direction\n                    [{ 'size': ['small', false, 'large', 'huge'] }],\n                    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n                    [{ 'color': this.emptyArray.slice() },\n                        { 'background': this.emptyArray.slice() }],\n                    [{ 'font': this.fonts }],\n                    [{ 'align': this.emptyArray.slice() }],\n                    ['clean'],\n                ]\n            };\n            this.font = Quill.import('formats/font');\n            this.editorCreated = new core.EventEmitter();\n            this.contentChanged = new core.EventEmitter();\n            this.selectionChanged = new core.EventEmitter();\n            /**\n             * this event is fired when the user click on formula button on quill editor rool barƒ\n             *\n             * @memberof QuillEditorComponent\n             */\n            this.formulaClick = new core.EventEmitter();\n            this.onModelChange = function () { };\n            this.onModelTouched = function () { };\n            this._formulas = [];\n            this._formulaTextSub = rxjs.Subscription.EMPTY;\n            this.font.whitelist = this.fonts;\n            this.font.whitelist.push('regular');\n            this._formulaTextSub =\n                this._service.getFormulaToHtmlEvent()\n                    .subscribe(function (event) {\n                    // reference is defined only when the user want to edit the formula\n                    if (event.reference !== undefined) {\n                        event.reference.innerHTML = event.formula;\n                        _this._renderer.setAttribute(event.reference, 'formula', event.formula);\n                        var efs = _this._formulas.filter(function (f) { return f.formula === event.reference; });\n                        var formulaEntry = void 0;\n                        var unlisten = void 0;\n                        if (efs.length > 0) {\n                            formulaEntry = efs[0];\n                            unlisten = formulaEntry.unlisten;\n                            if (unlisten != null) {\n                                unlisten();\n                            }\n                        }\n                        else {\n                            formulaEntry = { formula: event.reference, unlisten: null };\n                            _this._formulas.push(formulaEntry);\n                        }\n                        formulaEntry.unlisten = _this._renderer.listen(event.reference, 'click', function () {\n                            var obj = {\n                                'formula': event.formula,\n                                'reference': event.reference\n                            };\n                            _this.formulaClick.emit(obj);\n                        });\n                    }\n                    else {\n                        var quillEditor = _this._elementRef.nativeElement.querySelector('.ajf-ql-editor');\n                        var link_1 = _this._renderer.createElement('a');\n                        _this._renderer.setAttribute(link_1, 'href', 'javascript:void(0)');\n                        _this._renderer.setStyle(link_1, 'cursor', 'pointer');\n                        _this._renderer.setAttribute(link_1, 'formula', _this.check(event.formula));\n                        var linkLabel = _this._renderer.createText(event.formula);\n                        _this._renderer.appendChild(link_1, linkLabel);\n                        // add listener related on the click event of the new formula\n                        var unlisten = _this._renderer.listen(link_1, 'click', function (_) {\n                            var obj = {\n                                'formula': _this.check(event.formula),\n                                'reference': link_1\n                            };\n                            _this.formulaClick.emit(obj);\n                        });\n                        _this._renderer.appendChild(quillEditor, link_1);\n                        _this._formulas.push({ unlisten: unlisten, formula: link_1 });\n                    }\n                });\n        }\n        AjfQuillEditor.prototype.check = function (value) {\n            for (var i = 0; i < this.dateFormats.length; i++) {\n                if (this.dateFormats[i].value == value) {\n                    return this.dateFormats[i].validator;\n                }\n            }\n            return value;\n        };\n        /**\n         * this function search fomulas inside the init text\n         * and allocate the related listener on click event\n         *\n         * @memberof QuillEditorComponent\n         */\n        AjfQuillEditor.prototype.setHTML = function () {\n            this.writeValue(this.initHTML);\n        };\n        AjfQuillEditor.prototype.ngAfterViewInit = function () {\n            var _this = this;\n            var toolbarElem = this._elementRef.nativeElement.querySelector('[ajf-quill-editor-toolbar]');\n            var modules = this.modules || this.defaultModules;\n            Quill.register(this.font, true);\n            if (toolbarElem) {\n                modules['toolbar'] = toolbarElem;\n                modules['formula'] = true;\n            }\n            this._elementRef.nativeElement.insertAdjacentHTML('beforeend', '<div quill-editor-element></div>');\n            this.editorElem = this._elementRef.nativeElement.querySelector('[quill-editor-element]');\n            this.quillEditor = new Quill(this.editorElem, {\n                modules: modules,\n                placeholder: this.placeholder || 'Insert text here ...',\n                readOnly: this.readOnly || false,\n                theme: this.theme || 'snow',\n                formats: this.formats\n            });\n            this.editorCreated.emit(this.quillEditor);\n            this.setHTML();\n            // mark model as touched if editor lost focus\n            this.quillEditor.on('selection-change', function (range, oldRange, source) {\n                _this.selectionChanged.emit({\n                    editor: _this.quillEditor,\n                    range: range,\n                    oldRange: oldRange,\n                    source: source\n                });\n                if (!range) {\n                    _this.onModelTouched();\n                }\n            });\n            // update model if text changes\n            this.quillEditor.on('text-change', function (delta, oldDelta, source) {\n                var html = _this.editorElem.children[0].innerHTML;\n                var text = _this.quillEditor.getText();\n                if (html === '<p><br></p>') {\n                    html = null;\n                }\n                _this.onModelChange(html);\n                _this.contentChanged.emit({\n                    editor: _this.quillEditor,\n                    html: html,\n                    text: text,\n                    delta: delta,\n                    oldDelta: oldDelta,\n                    source: source\n                });\n            });\n            var elem = this._elementRef.nativeElement.querySelector('.ajf-ql-formula');\n            this.listenFunc = this._renderer.listen(elem, 'click', function (_) {\n                _this.formulaClick.emit();\n            });\n        };\n        AjfQuillEditor.prototype.writeValue = function (currentValue) {\n            var _this = this;\n            this.content = currentValue;\n            if (this.quillEditor) {\n                if (currentValue) {\n                    if (currentValue == this.initHTML && !this._init) {\n                        var editor = this._elementRef.nativeElement.querySelector('.ajf-ql-editor');\n                        editor.innerHTML = this.initHTML;\n                        var allFormulas = this._elementRef.nativeElement.querySelectorAll('[formula]');\n                        allFormulas.forEach(function (elem) {\n                            var unlisten = _this._renderer.listen(elem, 'click', function (_) {\n                                var obj = {\n                                    'formula': _this.check(elem.innerText),\n                                    'reference': elem\n                                };\n                                _this.formulaClick.emit(obj);\n                            });\n                            _this._renderer.setStyle(elem, 'cursor', 'pointer');\n                            _this._formulas.push({ unlisten: unlisten, formula: elem });\n                            _this._init = true;\n                        });\n                    }\n                    else if (currentValue != this.initHTML) {\n                        this.quillEditor.pasteHTML(currentValue);\n                    }\n                    return;\n                }\n                this.quillEditor.setText('');\n            }\n        };\n        AjfQuillEditor.prototype.registerOnChange = function (fn) {\n            this.onModelChange = fn;\n        };\n        AjfQuillEditor.prototype.registerOnTouched = function (fn) {\n            this.onModelTouched = fn;\n        };\n        AjfQuillEditor.prototype.validate = function (_c) {\n            if (!this.quillEditor) {\n                return null;\n            }\n            var err = {}, valid = true;\n            var textLength = this.quillEditor.getText().trim().length;\n            if (this.minLength) {\n                err.minLengthError = {\n                    given: textLength,\n                    minLength: this.minLength\n                };\n                valid = textLength >= this.minLength || !textLength;\n            }\n            if (this.maxLength) {\n                err.maxLengthError = {\n                    given: textLength,\n                    maxLength: this.maxLength\n                };\n                valid = textLength <= this.maxLength && valid;\n            }\n            return valid ? null : err;\n        };\n        AjfQuillEditor.prototype.ngOnChanges = function (changes) {\n            if (changes['readOnly'] && this.quillEditor) {\n                this.quillEditor.enable(!changes['readOnly'].currentValue);\n            }\n            if (changes['modules'] && this.quillEditor) {\n                Quill.register(this.font, true);\n                this.quillEditor = new Quill(this.editorElem, {\n                    modules: changes['modules']['currentValue'],\n                    placeholder: this.placeholder || 'Insert text here ...',\n                    readOnly: this.readOnly || false,\n                    theme: this.theme || 'snow',\n                    formats: this.formats\n                });\n                this._elementRef.nativeElement.children[0].remove();\n            }\n        };\n        AjfQuillEditor.prototype.ngOnDestroy = function () {\n            for (var i = 0; i < this._formulas.length; i++) {\n                var unlisten = this._formulas[i].unlisten;\n                if (unlisten != null) {\n                    unlisten();\n                }\n            }\n            this._formulaTextSub.unsubscribe();\n        };\n        AjfQuillEditor.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-quill-editor',\n                        template: \"\\n    <ng-content select=\\\"[ajf-quill-editor-toolbar]\\\"></ng-content>\\n  \",\n                        providers: [{\n                                provide: forms.NG_VALUE_ACCESSOR,\n                                useExisting: core.forwardRef(function () { return AjfQuillEditor; }),\n                                multi: true\n                            }, {\n                                provide: forms.NG_VALIDATORS,\n                                useExisting: core.forwardRef(function () { return AjfQuillEditor; }),\n                                multi: true\n                            }],\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\"ajf-quill-editor .ajf-ql-container .ajf-ql-editor{min-height:200px;width:500px !important;padding-bottom:50px}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfQuillEditor.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: core.Renderer2 },\n            { type: AjfReportBuilderService }\n        ]; };\n        AjfQuillEditor.propDecorators = {\n            theme: [{ type: core.Input }],\n            modules: [{ type: core.Input }],\n            readOnly: [{ type: core.Input }],\n            placeholder: [{ type: core.Input }],\n            maxLength: [{ type: core.Input }],\n            minLength: [{ type: core.Input }],\n            formats: [{ type: core.Input }],\n            initHTML: [{ type: core.Input }],\n            editorCreated: [{ type: core.Output }],\n            contentChanged: [{ type: core.Output }],\n            selectionChanged: [{ type: core.Output }],\n            formulaClick: [{ type: core.Output }]\n        };\n        return AjfQuillEditor;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfReportBuilderRendererWidget = /** @class */ (function () {\n        function AjfReportBuilderRendererWidget(_service) {\n            this._service = _service;\n            // this boolean sign if is dragged a widget\n            this.onDragged = false;\n            this.currentContentWidget = null;\n            this._onDraggedSub = rxjs.Subscription.EMPTY;\n        }\n        Object.defineProperty(AjfReportBuilderRendererWidget.prototype, \"widgetTypes\", {\n            get: function () {\n                return reports.AjfWidgetType;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AjfReportBuilderRendererWidget.prototype, \"layoutWidget\", {\n            get: function () {\n                return this.widget;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        AjfReportBuilderRendererWidget.prototype.canDropPredicate = function (item) {\n            for (var i = 0; i < item.data.dropZones.length; i++) {\n                if (['header', 'widget'].indexOf(item.data.dropZones[i]) > -1) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        /**\n         *  sign the start of mouse drag with 200 ms of delay\n         *\n         * @memberOf AjfReportBuilderContent\n         */\n        AjfReportBuilderRendererWidget.prototype.onDragStartHandler = function () {\n            var _this = this;\n            var s = rxjs.timer(200)\n                .subscribe(function () {\n                s.unsubscribe();\n                _this._service.dragStarted();\n            });\n        };\n        /**\n         * sign the end of mouse drag\n         *\n         * @memberOf AjfReportBuilderContent\n         */\n        AjfReportBuilderRendererWidget.prototype.onDragEndHandler = function () {\n            this._service.dragEnded();\n        };\n        AjfReportBuilderRendererWidget.prototype.getColumnContent = function () {\n            var myObj = this.widget;\n            return myObj.content;\n        };\n        AjfReportBuilderRendererWidget.prototype.getIcon = function () {\n            var defVal = { fontSet: '', fontIcon: '' };\n            var myObj = this.widget;\n            if (myObj.icon == null) {\n                return null;\n            }\n            return models.evaluateExpression(myObj.icon.formula) || defVal;\n        };\n        AjfReportBuilderRendererWidget.prototype.getFlag = function () {\n            var defVal = 'ch';\n            var myObj = this.widget;\n            if (myObj.flag == null) {\n                return null;\n            }\n            return models.evaluateExpression(myObj.flag.formula) || defVal;\n        };\n        AjfReportBuilderRendererWidget.prototype.getPercent = function (index) {\n            var myObj = this.widget;\n            var percent = myObj.columns[index] * 100;\n            return percent.toString() + \"%\";\n        };\n        AjfReportBuilderRendererWidget.prototype.getImageUrl = function () {\n            var defVal = '';\n            var myObj = this.widget;\n            if (myObj.url == null) {\n                return null;\n            }\n            return models.evaluateExpression(myObj.url.formula) || defVal;\n        };\n        AjfReportBuilderRendererWidget.prototype.getImageType = function () {\n            return this.widget != null ? this.widget.imageType : image$1.AjfImageType.Image;\n        };\n        AjfReportBuilderRendererWidget.prototype.getHtmlText = function () {\n            var myObj = this.widget;\n            if (myObj.htmlText === '') {\n                return '...';\n            }\n            else {\n                return myObj.htmlText;\n            }\n        };\n        AjfReportBuilderRendererWidget.prototype.getCoordinate = function () {\n            var myObj = this.widget;\n            if (myObj.coordinate == null) {\n                return [51.505, -0.09, 13];\n            }\n            else {\n                return myObj.coordinate;\n            }\n        };\n        AjfReportBuilderRendererWidget.prototype.getTileLayer = function () {\n            var myObj = this.widget;\n            if (myObj.tileLayer === '') {\n                return 'http://{s}.tile.osm.org/{z}/{x}/{y}.png';\n            }\n            else {\n                return myObj.tileLayer;\n            }\n        };\n        AjfReportBuilderRendererWidget.prototype.getAttribution = function () {\n            var myObj;\n            myObj = this.widget;\n            if (myObj.attribution === '') {\n                return \"&copy; <a href='http://osm.org/copyright'>O</a> contributors\";\n            }\n            else {\n                return myObj.attribution;\n            }\n        };\n        AjfReportBuilderRendererWidget.prototype.addToList = function (event, toColumn) {\n            this.onDragEndHandler();\n            this._service.addToColumn(event, toColumn);\n        };\n        AjfReportBuilderRendererWidget.prototype.ngOnInit = function () {\n            var _this = this;\n            this._onDraggedSub = this._service.onDragged\n                .subscribe(function (x) {\n                _this.onDragged = x;\n            });\n            this.getChartType = this._service.currentWidget.pipe(operators.map(function (widget) {\n                if (widget == null) {\n                    return 0;\n                }\n                var myObj = _this.widget;\n                return (myObj.chartType);\n            }), operators.distinctUntilChanged(), operators.startWith(0));\n            this.getDataset = this._service.currentWidget.pipe(operators.map(function (widget) {\n                if (widget != null && widget.dataset != null) {\n                    var myObj = _this.widget;\n                    return myObj.dataset;\n                }\n                else {\n                    return [];\n                }\n            }), operators.distinctUntilChanged());\n            this.getTableTitles = this._service.currentWidget.pipe(operators.map(function (widget) {\n                if (widget == null) {\n                    return [];\n                }\n                var myObj = _this.widget;\n                if (myObj.dataset != null) {\n                    var tableTitle = [];\n                    for (var i = 0; i < myObj.dataset.length; i++) {\n                        if (myObj.dataset[i][0] != null) {\n                            tableTitle.push(myObj.dataset[i][0].label || '');\n                        }\n                    }\n                    return tableTitle;\n                }\n                else {\n                    return [];\n                }\n            }));\n            this.getTableContent = this._service.currentWidget.pipe(operators.map(function (widget) {\n                if (widget == null) {\n                    return [];\n                }\n                var myObj = _this.widget;\n                if (myObj.dataset != null) {\n                    var tableContent = [];\n                    for (var i = 0; i < myObj.dataset.length; i++) {\n                        for (var j = 0; j < myObj.dataset[i].length; j++) {\n                            if ((myObj.dataset[i] != null) && (myObj.dataset[i][j + 1] != null)) {\n                                if (tableContent[j] == null) {\n                                    tableContent[j] = [];\n                                }\n                                if (tableContent[j][i] == null) {\n                                    tableContent[j][i] = ' ';\n                                }\n                                tableContent[j].splice(i, 1, myObj.dataset[i][j + 1].label || '');\n                            }\n                        }\n                    }\n                    return tableContent;\n                }\n                return [];\n            }));\n            this._service.updateCurrentWidget(this.widget);\n        };\n        AjfReportBuilderRendererWidget.prototype.ngOnChanges = function (changes) {\n            if (changes.widget && changes.widget.currentValue != null) {\n                this.widget = changes.widget.currentValue;\n            }\n        };\n        AjfReportBuilderRendererWidget.prototype.ngOnDestroy = function () {\n            this._onDraggedSub.unsubscribe();\n        };\n        AjfReportBuilderRendererWidget.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-report-builder-renderer-widget',\n                        template: \"<div class=\\\"ajf-container\\\"\\n    [ngSwitch]=\\\"widget?.widgetType\\\"\\n    [ngClass]=\\\"{'ajf-drag-mode': (onDragged || fixedZoom)}\\\">\\n  <div *ngSwitchCase=\\\"widgetTypes.Layout\\\" class=\\\"ajf-row ajf-layout\\\"\\n    [applyStyles]=\\\"widget.styles\\\">\\n      <div class=\\\"ajf-columns\\\">\\n        <ng-template ngFor let-clm [ngForOf]=\\\"getColumnContent()\\\" let-idx=\\\"index\\\">\\n          <div class=\\\"ajf-column\\\"\\n            [ngClass]=\\\"{'ajf-fixed': layoutWidget.columns[idx] == -1}\\\"\\n            [style.width]=getPercent(idx)\\n            [applyStyles]=\\\"layoutWidget.content[idx].styles\\\">\\n            <ajf-report-builder-widgets-row-buttons\\n              [from]=\\\"'layout'\\\"\\n              [fromWidget]=\\\"widget\\\"\\n              [widget]=\\\"clm\\\"\\n              [position]=\\\"idx\\\"\\n              (onDragStart)=\\\"onDragStartHandler();\\\"\\n              (onDragEnd)=\\\"onDragEndHandler();\\\"\\n              [child]=\\\"true\\\">\\n            </ajf-report-builder-widgets-row-buttons>\\n            <ajf-column\\n              [column]=\\\"clm\\\"\\n              [applyStyles]=\\\"widget.styles\\\">\\n            </ajf-column>\\n            <ng-template [ngIf]=\\\"onDragged === true\\\">\\n              <div cdkDropList\\n                [cdkDropListEnterPredicate]=\\\"canDropPredicate\\\"\\n                [style.display]=\\\"onDragged ? 'block' : 'none'\\\"\\n                (cdkDropListDropped)=\\\"addToList($event, clm)\\\"\\n                class=\\\"ajf-column-drop-zone\\\"\\n                (dragover)=\\\"layoutShow = true;\\\"\\n                (dragleave)=\\\"layoutShow = false;\\\">\\n              </div>\\n            </ng-template>\\n          </div>\\n        </ng-template>\\n      </div>\\n  </div>\\n  <div *ngSwitchCase=\\\"widgetTypes.Image\\\" class=\\\"ajf-row\\\">\\n    <ajf-image\\n      [applyStyles]=\\\"widget.styles\\\"\\n      [type]=\\\"getImageType()\\\"\\n      [imageUrl]=\\\"getImageUrl()\\\"\\n      [icon]=\\\"getIcon()\\\"\\n      [flag]=\\\"getFlag()\\\">\\n    </ajf-image>\\n  </div>\\n  <div *ngSwitchCase=\\\"widgetTypes.Text\\\" class=\\\"ajf-row ajf-text\\\">\\n    <ajf-text [htmlText]=\\\"getHtmlText() | translate\\\"  [applyStyles]=\\\"widget.styles\\\"></ajf-text>\\n  </div>\\n  <div *ngSwitchCase=\\\"widgetTypes.Chart\\\" class=\\\"ajf-row\\\" [applyStyles]=\\\"widget.styles\\\">\\n  </div>\\n  <!-- <div *ngSwitchCase=\\\"widgetTypes.Table\\\" class=\\\"ajf-row\\\" [applyStyles]=\\\"widget.styles\\\">\\n    <ajf-table *ngIf=\\\"getTableContent|async as tc\\\" [data]=\\\"tc!\\\" ></ajf-table>\\n  </div> -->\\n  <div *ngSwitchCase=\\\"widgetTypes.Map\\\" class=\\\"ajf-row\\\" [applyStyles]=\\\"widget.styles\\\">\\n    <ajf-map [coordinate]=\\\"getCoordinate()\\\" [tileLayer]=\\\"getTileLayer()\\\" [attribution]=\\\"getAttribution()\\\">\\n    </ajf-map>\\n  </div>\\n</div>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\"ajf-report-builder-renderer-widget .ajf-drag-mode .ajf-layout{border:none !important}ajf-report-builder-renderer-widget .ajf-drag-mode .ajf-row{border:9px solid blue;border-radius:36px;height:100%}ajf-report-builder-renderer-widget .ajf-drag-mode .ajf-row .ajf-columns{border:9px solid red !important;height:100%;margin-bottom:20px;padding-bottom:20px;padding-top:20px}ajf-report-builder-renderer-widget .ajf-drag-mode .ajf-row .ajf-columns .ajf-fixed{border:9px solid #ff0 !important}ajf-report-builder-renderer-widget .ajf-drag-mode .ajf-row .ajf-columns .ajf-column{border:9px solid #9acd32;margin-left:10px;margin-right:10px;border-radius:36px;height:100%}ajf-report-builder-renderer-widget .ajf-drag-mode .ajf-row .ajf-columns .ajf-column ajf-report-builder-widgets-row-buttons{visibility:visible !important;display:block !important}ajf-report-builder-renderer-widget .ajf-drag-mode .ajf-row .ajf-columns .ajf-column .ajf-container{min-height:50px}ajf-report-builder-renderer-widget .ajf-container{height:inherit;display:block;min-height:50px}ajf-report-builder-renderer-widget .ajf-row-button{width:100%}ajf-report-builder-renderer-widget .ajf-container:hover{border:3px dotted blue;border-radius:16px;opacity:1;min-height:50px}ajf-report-builder-renderer-widget .ajf-on-dragged{border:23px dotted blue}ajf-report-builder-renderer-widget .ajf-selected{background-color:red}ajf-report-builder-renderer-widget .ajf-show,ajf-report-builder-renderer-widget .ajf-on-drag-over{border:33px dotted blue;opacity:1 !important;z-index:10}ajf-report-builder-renderer-widget .ajf-no-obj{max-width:200px;max-height:200px;width:auto;height:auto}ajf-report-builder-renderer-widget .ajf-row{display:flex;flex-direction:column;height:100%}ajf-report-builder-renderer-widget .ajf-columns{display:flex;flex-direction:row}ajf-report-builder-renderer-widget .ajf-column{min-height:50px}ajf-report-builder-renderer-widget .ajf-column ajf-report-builder-widgets-row-buttons{visibility:hidden !important;display:none !important}ajf-report-builder-renderer-widget .ajf-column:hover{border:3px dashed #9acd32;border-radius:16px}ajf-report-builder-renderer-widget .ajf-column:hover ajf-report-builder-widgets-row-buttons{visibility:visible !important;display:block !important}ajf-report-builder-renderer-widget .ajf-column:hover .ajf-container{min-height:50px}ajf-report-builder-renderer-widget .ajf-fixed:hover{border:3px dashed red !important}ajf-report-builder-renderer-widget .ajf-fixed{min-width:100px}ajf-report-builder-renderer-widget .ajf-column-drop-zone{margin:10%;height:50px;background-color:#fff;border:9px solid rgba(66,134,244,.6);border-radius:16px}ajf-report-builder-renderer-widget .ajf-text{min-height:20px}ajf-report-builder-renderer-widget ajf-map{z-index:30}ajf-report-builder-renderer-widget ajf-column{width:100%}ajf-report-builder-renderer-widget button{width:100%}ajf-report-builder-renderer-widget mat-list{height:100%;padding:0}ajf-report-builder-renderer-widget .ajf-ui.ajf-fluid.ajf-image{max-width:100%;height:auto}ajf-report-builder-renderer-widget .ajf-column-right{float:right;width:33%;background-color:#8b4513}ajf-report-builder-renderer-widget .ajf-column-center{display:inline-block;width:33%;background-color:olive}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfReportBuilderRendererWidget.ctorParameters = function () { return [\n            { type: AjfReportBuilderService }\n        ]; };\n        AjfReportBuilderRendererWidget.propDecorators = {\n            widget: [{ type: core.Input }],\n            position: [{ type: core.Input }],\n            section: [{ type: core.Input }]\n        };\n        return AjfReportBuilderRendererWidget;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfReportBuilderThemeColorDialog = /** @class */ (function () {\n        function AjfReportBuilderThemeColorDialog(_service, _dialogRef) {\n            this._service = _service;\n            this._dialogRef = _dialogRef;\n            this.currentWidget = null;\n            this.currentColor = 'rgb(255,255,255,0)';\n            this.section = 'color';\n            this._currentWidgetSub = rxjs.Subscription.EMPTY;\n        }\n        AjfReportBuilderThemeColorDialog.prototype.setWidgetStyles = function (value) {\n            this._service.setWidgetStyles(this.section, value);\n            this.currentColor = value;\n            this.setStyle();\n        };\n        AjfReportBuilderThemeColorDialog.prototype.setStyle = function () {\n            if (this.currentWidget == null) {\n                return;\n            }\n            this.currentWidget.styles = utils.deepCopy(this.currentWidget.styles);\n            this._service.updateCurrentWidget(this.currentWidget);\n        };\n        AjfReportBuilderThemeColorDialog.prototype.addCustomColor = function () {\n            this._service.addCustomColor(this.currentColor);\n            this._service.updateCurrentWidget(this.currentWidget);\n            this._dialogRef.close();\n        };\n        AjfReportBuilderThemeColorDialog.prototype.close = function () {\n            this._dialogRef.close();\n        };\n        AjfReportBuilderThemeColorDialog.prototype.ngOnInit = function () {\n            var _this = this;\n            this._currentWidgetSub = this._service.currentWidget\n                .subscribe(function (x) {\n                if (x !== null) {\n                    if (_this.currentWidget !== x) {\n                        _this.currentWidget = x;\n                    }\n                }\n                else {\n                    _this.currentWidget = null;\n                }\n            });\n        };\n        AjfReportBuilderThemeColorDialog.prototype.ngAfterViewInit = function () {\n            this.elem.nativeElement.children[1].firstElementChild['style']['position'] = 'initial';\n        };\n        AjfReportBuilderThemeColorDialog.prototype.ngOnDestroy = function () {\n            this._currentWidgetSub.unsubscribe();\n        };\n        AjfReportBuilderThemeColorDialog.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'theme-color-dialog',\n                        template: \"<div mat-dialog-content #colorpic>\\n   <input\\n          [hidden]=false\\n          [colorPicker]=\\\"currentColor\\\"\\n          [style.background]=\\\"currentColor\\\"\\n          [value]=\\\"currentColor\\\"\\n          [cpDialogDisplay]=\\\"'inline'\\\"\\n          [cpPosition]=\\\"'top'\\\"\\n          [cpToggle]=\\\"true\\\"\\n          [cpWidth]=\\\"'400px'\\\"\\n          [cpOutputFormat]=\\\"'rgba'\\\"\\n          (colorPickerChange)=\\\"setWidgetStyles($event)\\\"/>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"addCustomColor()\\\">Save color</button>\\n</div>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfReportBuilderThemeColorDialog.ctorParameters = function () { return [\n            { type: AjfReportBuilderService },\n            { type: dialog.MatDialogRef }\n        ]; };\n        AjfReportBuilderThemeColorDialog.propDecorators = {\n            elem: [{ type: core.ViewChild, args: ['colorpic', { static: true },] }]\n        };\n        return AjfReportBuilderThemeColorDialog;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    /**\n     * this component manages the report text\n     *\n     * @export\n     */\n    var AjfReportBuilderThemeColor = /** @class */ (function () {\n        function AjfReportBuilderThemeColor(_service, dialog) {\n            this._service = _service;\n            this.dialog = dialog;\n            this.currentWidget = null;\n            this.alphaColor = 1;\n            this.styleBackgroundColor = 'rgb(255,255,255,0)';\n            this.styleColor = 'rgb(0,0,0,0)';\n            this._colorsSub = rxjs.Subscription.EMPTY;\n            this._currentWidgetSub = rxjs.Subscription.EMPTY;\n            this._originSub = rxjs.Subscription.EMPTY;\n            this._headerStyleSub = rxjs.Subscription.EMPTY;\n            this._contentStylesSub = rxjs.Subscription.EMPTY;\n            this._footerStylesSub = rxjs.Subscription.EMPTY;\n        }\n        AjfReportBuilderThemeColor.prototype.setStyles = function (value) {\n            switch (this.section) {\n                case 'widget':\n                    this.setWidgetStyles(value);\n                    break;\n                case 'report':\n                    this.setReportStyles(value);\n                    break;\n                case 'section':\n                    this.setSectionStyles(value);\n                    break;\n                case 'chart':\n                    this.setChartStyle(value);\n                    break;\n            }\n        };\n        AjfReportBuilderThemeColor.prototype.setChartStyle = function (value) {\n            if (this.label === 'backgroundColor') {\n                this.addChartBackgroundColor(value);\n            }\n            else {\n                this.addChartBorderColor(value);\n            }\n        };\n        AjfReportBuilderThemeColor.prototype.setAlphaColor = function (value) {\n            value = value.toFixed(2);\n            for (var i = 0; i < this.colors.length; i++) {\n                var lastComma = this.colors[i].lastIndexOf(',');\n                this.colors[i] = this.colors[i].substring(0, lastComma) + ',' + value + ')';\n            }\n        };\n        /**\n         * call to service to add new style to widget\n         *\n         * @param label\n         * @param value\n         *\n         * @memberOf AjfReportBuilderProperties\n         */\n        AjfReportBuilderThemeColor.prototype.setWidgetStyles = function (value) {\n            if (this.section === 'chart') {\n                this.setChartStyle(value);\n            }\n            else {\n                this._service.setWidgetStyles(this.label, value);\n                this.currentColor = value;\n                this.setStyle();\n            }\n        };\n        /**\n         * call to service to add new style to section\n         *\n         * @param label\n         * @param value\n         *\n         * @memberOf AjfReportBuilderProperties\n         */\n        AjfReportBuilderThemeColor.prototype.setSectionStyles = function (value) {\n            this._service.setSectionStyles(this.origin, this.label, value);\n            this.styleColor = value;\n        };\n        /**\n         * call to service to add new style to report\n         *\n         * @param label\n         * @param value\n         *\n         * @memberOf AjfReportBuilderProperties\n         */\n        AjfReportBuilderThemeColor.prototype.setReportStyles = function (value) {\n            this._service.setReportStyles(this.label, value);\n            this.styleBackgroundColor = value;\n        };\n        /**\n         * call to service to add background color to current chart\n         *\n         *\n         * @memberOf AjfReportBuilderProperties\n         */\n        AjfReportBuilderThemeColor.prototype.addChartBackgroundColor = function (value) {\n            this._service.addChartBackgroundColor(value);\n        };\n        /**\n         * call to service to add border color to current chart\n         *\n         *\n         * @memberOf AjfReportBuilderProperties\n         */\n        AjfReportBuilderThemeColor.prototype.addChartBorderColor = function (value) {\n            this._service.addChartBorderColor(value);\n        };\n        AjfReportBuilderThemeColor.prototype.setStyle = function () {\n            if (this.currentWidget == null) {\n                return;\n            }\n            this.currentWidget.styles = utils.deepCopy(this.currentWidget.styles);\n            this._service.updateCurrentWidget(this.currentWidget);\n        };\n        AjfReportBuilderThemeColor.prototype.openDialog = function () {\n            this.dialogRef = this.dialog.open(AjfReportBuilderThemeColorDialog);\n        };\n        AjfReportBuilderThemeColor.prototype.ngOnInit = function () {\n            var _this = this;\n            this._colorsSub = this._service.colors\n                .subscribe(function (x) {\n                _this.colors = x;\n            });\n            this._currentWidgetSub = this._service.currentWidget\n                .subscribe(function (x) {\n                if (x != null) {\n                    if (_this.currentWidget !== x) {\n                        _this.currentWidget = x;\n                    }\n                }\n                else {\n                    _this.currentWidget = null;\n                }\n            });\n            this.getColorWidget = this._service.currentWidget.pipe(operators.map(function (myObj) {\n                if (myObj != null) {\n                    return myObj.styles['color'] || '';\n                }\n            }), operators.distinctUntilChanged());\n            this._originSub = this._service.origin.subscribe(function (s) {\n                _this.origin = s;\n            });\n            this._headerStyleSub = this._service.headerStyles.subscribe(function (s) {\n                if (s['background-color'] != null) {\n                    _this.styleBackgroundColor = s['background-color'];\n                }\n            });\n            this._contentStylesSub = this._service.contentStyles.subscribe(function (s) {\n                if (s['background-color'] != null) {\n                    _this.styleBackgroundColor = s['background-color'];\n                }\n            });\n            this._footerStylesSub = this._service.footerStyles.subscribe(function (s) {\n                if (s['background-color'] != null) {\n                    _this.styleBackgroundColor = s['background-color'];\n                }\n            });\n        };\n        AjfReportBuilderThemeColor.prototype.ngOnDestroy = function () {\n            this._colorsSub.unsubscribe();\n            this._currentWidgetSub.unsubscribe();\n            this._originSub.unsubscribe();\n            this._headerStyleSub.unsubscribe();\n            this._contentStylesSub.unsubscribe();\n            this._footerStylesSub.unsubscribe();\n        };\n        AjfReportBuilderThemeColor.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-theme-color',\n                        template: \"<mat-card style=\\\"width:90%\\\">\\n  <mat-card-header>\\n    <mat-card-title> {{ label }} Trasparency</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n       <mat-slider\\n      style=\\\"width:90%\\\"\\n      (change)=\\\"setAlphaColor($event.value)\\\"\\n      min=\\\"0\\\"\\n      max=\\\"1\\\"\\n      step=\\\"0.1\\\"\\n      [value]=\\\"alphaColor\\\"\\n      thumbLabel>\\n    </mat-slider>\\n  </mat-card-content>\\n</mat-card>\\n<mat-card style=\\\"width:90%\\\">\\n  <mat-card-header>\\n    <mat-card-title> {{ label }} </mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <mat-grid-list\\n      cols=\\\"8\\\"\\n      rowHeight=\\\"25px\\\">\\n      <mat-grid-tile\\n        *ngFor=\\\"let color of colors\\\"\\n        [colspan]=\\\"1\\\"\\n        [rowspan]=\\\"1\\\"\\n        [style.background]=\\\"color\\\">\\n        <button\\n          style=\\\"height:100%\\\"\\n          (click)=\\\"setStyles(color)\\\"\\n          mat-button>\\n        </button>\\n      </mat-grid-tile>\\n    </mat-grid-list>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button (click)=\\\"openDialog()\\\" style=\\\"width:90%;\\\">Add color</button>\\n    <button mat-button (click)=\\\"setStyles('')\\\" style=\\\"width:90%\\\"> Reset </button>\\n  </mat-card-actions>\\n</mat-card>\\n\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfReportBuilderThemeColor.ctorParameters = function () { return [\n            { type: AjfReportBuilderService },\n            { type: dialog.MatDialog }\n        ]; };\n        AjfReportBuilderThemeColor.propDecorators = {\n            section: [{ type: core.Input }],\n            label: [{ type: core.Input }],\n            init: [{ type: core.Input }]\n        };\n        return AjfReportBuilderThemeColor;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfReportBuilderToolbarDialog = /** @class */ (function () {\n        function AjfReportBuilderToolbarDialog(_service, _dialogRef) {\n            this._service = _service;\n            this._dialogRef = _dialogRef;\n        }\n        AjfReportBuilderToolbarDialog.prototype.resetReport = function () {\n            var emptyReport = {\n                'header': { 'content': [], 'styles': {} },\n                'content': { 'content': [], 'styles': {} },\n                'footer': { 'content': [], 'styles': {} },\n                'styles': {}\n            };\n            this._service.setReport(emptyReport);\n            this._dialogRef.close();\n        };\n        AjfReportBuilderToolbarDialog.prototype.close = function () {\n            this._dialogRef.close();\n        };\n        AjfReportBuilderToolbarDialog.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'toolbar-dialog',\n                        template: \"<h1 matDialogTitle>Dialog</h1>\\n<div mat-dialog-content>Are you sure you want to erase the report?</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"resetReport()\\\">Yes</button>\\n  <button mat-button (click)=\\\"close()\\\">No</button>\\n</div>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfReportBuilderToolbarDialog.ctorParameters = function () { return [\n            { type: AjfReportBuilderService },\n            { type: dialog.MatDialogRef }\n        ]; };\n        return AjfReportBuilderToolbarDialog;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfReportBuilderToolbar = /** @class */ (function () {\n        function AjfReportBuilderToolbar(_service, dialog) {\n            this._service = _service;\n            this.dialog = dialog;\n            // this is an any EventEmitter\n            this.addClick = new core.EventEmitter();\n            this.zoom = false;\n            this.emptyContent = this._service.emptyContent;\n        }\n        AjfReportBuilderToolbar.prototype.canDropPredicate = function (item) {\n            return item.data.dropZones.indexOf('widget') > -1;\n        };\n        AjfReportBuilderToolbar.prototype.JSONRequest = function () {\n        };\n        /**\n         * this method will pass event to event emitter\n         */\n        AjfReportBuilderToolbar.prototype.onAddClick = function (event) {\n            this.addClick.emit(event);\n        };\n        AjfReportBuilderToolbar.prototype.addToList = function (event) {\n            if (event.item.data.widget != null) {\n                this._service.addCustomWidgets({\n                    json: JSON.stringify(event.item.data.widget.toJson()),\n                    type: ''\n                });\n            }\n        };\n        AjfReportBuilderToolbar.prototype.undoLastOperation = function () {\n            try {\n                var myObj = JSON.parse(this._service.popJsonStack() || '');\n                this._service.setReport(utils.deepCopy(myObj));\n            }\n            catch (e) { }\n        };\n        AjfReportBuilderToolbar.prototype.isZoomed = function () {\n            this.zoom = !this.zoom;\n            if (this.zoom) {\n                this._service.fixedZoomIn();\n            }\n            else {\n                this._service.fixedZoomOut();\n            }\n        };\n        AjfReportBuilderToolbar.prototype.openDialog = function () {\n            this.dialogRef = this.dialog.open(AjfReportBuilderToolbarDialog);\n        };\n        AjfReportBuilderToolbar.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-report-builder-toolbar',\n                        outputs: ['addClick'],\n                        template: \"<mat-toolbar>\\n  <button\\n    mat-button\\n    (click)=\\\"onAddClick($event)\\\"\\n    matTooltip=\\\"open widget sidebar\\\"\\n    [matTooltipPosition]=\\\"'above'\\\">\\n    Open\\n  </button>\\n  <button\\n    mat-button\\n    (click)=\\\"openDialog()\\\"\\n    matTooltip=\\\"reset the current report\\\"\\n    [matTooltipPosition]=\\\"'above'\\\">reset\\n  </button>\\n  <button\\n    mat-button\\n    (click)=\\\"undoLastOperation()\\\"\\n    matTooltip=\\\"undo the last operation\\\"\\n    [disabled]=\\\"emptyContent|async\\\"\\n    [matTooltipPosition]=\\\"'above'\\\">Undo</button>\\n\\n  <button mat-button\\n    class=\\\"ajf-custom-widget-drop-zone\\\"\\n    cdkDropList\\n    [cdkDropListEnterPredicate]=\\\"canDropPredicate\\\"\\n    (cdkDropListDropped)=\\\"addToList($event);\\\"\\n    matTooltip=\\\"add custom widget on toolbar\\\"\\n    [matTooltipPosition]=\\\"'above'\\\">\\n    add custom widget here\\n    <i class=\\\"material-icons\\\">add_circle_outline</i>\\n  </button>\\n  <section class=\\\"example-section\\\">\\n    <mat-slide-toggle\\n        [checked]=\\\"zoom\\\"\\n        (change)=isZoomed()\\n        matTooltip=\\\"apply zoom out\\\"\\n        [matTooltipPosition]=\\\"'above'\\\">\\n      zoom out\\n    </mat-slide-toggle>\\n  </section>\\n</mat-toolbar>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\"ajf-report-builder-toolbar a{margin-right:10px}ajf-report-builder-toolbar .ajf-custom-widget-drop-zone{position:absolute;right:0;background-color:#90ee90}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfReportBuilderToolbar.ctorParameters = function () { return [\n            { type: AjfReportBuilderService },\n            { type: dialog.MatDialog }\n        ]; };\n        return AjfReportBuilderToolbar;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfReportBuilderWidgetToolbarButton = /** @class */ (function () {\n        function AjfReportBuilderWidgetToolbarButton() {\n        }\n        AjfReportBuilderWidgetToolbarButton.prototype.ngOnInit = function () {\n            this.widgetIcon = ajfReportBuilderWidgetToString(this.widgetType);\n        };\n        AjfReportBuilderWidgetToolbarButton.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-report-builder-widget-toolbar-button',\n                        template: \"<button\\n  mat-button\\n  matTooltip=\\\"{{ widgetType}}\\\"\\n  [matTooltipPosition]=\\\"'above'\\\">\\n  <mat-icon\\n    fontSet=\\\"ajf-icon\\\"\\n    fontIcon=\\\"{{ widgetIcon }}\\\">\\n  </mat-icon>\\n</button>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\"ajf-report-builder-widget-toolbar-button button mat-icon{font-size:35px;padding-top:10px;padding-bottom:10px;padding-right:20px;color:#3f51b5}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfReportBuilderWidgetToolbarButton.ctorParameters = function () { return []; };\n        AjfReportBuilderWidgetToolbarButton.propDecorators = {\n            widgetType: [{ type: core.Input }]\n        };\n        return AjfReportBuilderWidgetToolbarButton;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfReportBuilderWidgetsRowButtons = /** @class */ (function () {\n        /**\n         *\n         * @param private _afjBuilderService: AjfBuilderService\n         */\n        function AjfReportBuilderWidgetsRowButtons(_service) {\n            this._service = _service;\n            this.isOver = false;\n            this.currentWidget = null;\n            this.isClicked = false;\n            this.color = [];\n            // this boolean sign if is dragged a widget\n            this.onDragged = false;\n            // this boolean sign if is on over a widget\n            this.onOver = false;\n            this._currentWidgetSub = rxjs.Subscription.EMPTY;\n            this._onDraggedSub = rxjs.Subscription.EMPTY;\n            this._onOverSub = rxjs.Subscription.EMPTY;\n        }\n        AjfReportBuilderWidgetsRowButtons.prototype.selectedWidget = function () {\n            this.isClicked = !this.isClicked;\n            this._service.setOrigin(this.from);\n            this._service.updateCurrentWidget(this.widget);\n        };\n        AjfReportBuilderWidgetsRowButtons.prototype.remove = function () {\n            if (this.fromWidget != null) {\n                this._service.updateCurrentWidget(this.fromWidget);\n            }\n            this._service.remove(this.from, this.position);\n        };\n        AjfReportBuilderWidgetsRowButtons.prototype.onFocus = function () {\n            if (this.widget === this.currentWidget) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        };\n        AjfReportBuilderWidgetsRowButtons.prototype.changeColumn = function (direction) {\n            if (direction == 'back') {\n                this._service.changeColumn(this.position, this.position - 1, this.fromWidget);\n            }\n            else {\n                this._service.changeColumn(this.position, this.position + 1, this.fromWidget);\n            }\n        };\n        AjfReportBuilderWidgetsRowButtons.prototype.isColumn = function () {\n            if (this.label === 'Column') {\n                return true;\n            }\n            else {\n                return false;\n            }\n        };\n        AjfReportBuilderWidgetsRowButtons.prototype.isOneColumn = function () {\n            var rootObj = this.fromWidget;\n            if (rootObj.columns.length > 1) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        };\n        AjfReportBuilderWidgetsRowButtons.prototype.ngOnInit = function () {\n            var _this = this;\n            this.label = reports.AjfWidgetType[this.widget.widgetType];\n            this.widgetIcon = widgetReportBuilderIconName(this.widget.widgetType);\n            this.widgetLabel = ajfWidgetTypeToLabel(this.widget.widgetType);\n            this._onDraggedSub = this._service.onDragged\n                .subscribe(function (x) {\n                _this.onDragged = x;\n            });\n            this._onOverSub = this._service.onOver\n                .subscribe(function (x) {\n                _this.onOver = x;\n            });\n            this._currentWidgetSub = this._service.currentWidget\n                .subscribe(function (x) {\n                _this.currentWidget = x;\n                if (x !== _this.widget) {\n                    _this.isClicked = false;\n                }\n            });\n        };\n        AjfReportBuilderWidgetsRowButtons.prototype.ngOnDestroy = function () {\n            this._onDraggedSub.unsubscribe();\n            this._onOverSub.unsubscribe();\n            this._currentWidgetSub.unsubscribe();\n        };\n        AjfReportBuilderWidgetsRowButtons.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-report-builder-widgets-row-buttons',\n                        template: \"<div class=\\\"ajf-container\\\" *ngIf=\\\"onOver || onDragged\\\">\\n  <div class=\\\"ajf-button-row\\\">\\n    <ng-template [ngIf]=\\\"isColumn() && onDragged == false\\\">\\n      <span\\n        (click)=\\\"changeColumn('forward')\\\"\\n        matTooltip=\\\"move right\\\"\\n        [matTooltipPosition]=\\\"'above'\\\">\\n        <i class=\\\"material-icons\\\">arrow_forward</i>\\n      </span>\\n    </ng-template>\\n    <ng-template [ngIf]=\\\"(isColumn()== false && onDragged == true) || true\\\">\\n      <span mat-button\\n        [ngClass]=\\\"{'ajf-selected': onFocus()}\\\"\\n        matTooltip=\\\"{{label}}\\\"\\n        [matTooltipPosition]=\\\"'above'\\\"\\n        (click)=\\\"selectedWidget()\\\">\\n        <ng-template [ngIf]=\\\"isColumn()\\\">\\n        <i class=\\\"material-icons\\\" >settings</i>\\n        </ng-template>\\n        <ng-template [ngIf]=\\\"(isColumn()) ? false : true\\\">\\n          <mat-icon\\n            fontSet=\\\"ajf-icon\\\"\\n            fontIcon=\\\"{{ widgetIcon }}\\\">\\n          </mat-icon>\\n        </ng-template>\\n      </span>\\n      <span\\n        mat-button\\n        matTooltip=\\\"remove\\\"\\n        (click)=\\\"remove()\\\"\\n        [matTooltipPosition]=\\\"'above'\\\">\\n        <mat-icon>remove_circle_outline</mat-icon>\\n      </span>\\n    </ng-template>\\n    <ng-template [ngIf]=\\\"isColumn() && onDragged == false\\\">\\n      <span\\n        (click)=\\\"changeColumn('back')\\\"\\n        matTooltip=\\\"move left\\\"\\n        [matTooltipPosition]=\\\"'above'\\\">\\n        <i class=\\\"material-icons\\\">arrow_back</i>\\n      </span>\\n    </ng-template>\\n  </div>\\n</div>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\"ajf-report-builder-widgets-row-buttons{position:relative;display:block}ajf-report-builder-widgets-row-buttons .ajf-container{height:30px}ajf-report-builder-widgets-row-buttons .ajf-container .ajf-button-row{margin:0;width:100% !important;padding:0;position:absolute;right:0;display:flex;flex-direction:row-reverse;z-index:50;overflow-x:auto;background-color:rgba(144,238,144,.6);color:#000 !important;border-radius:16px}ajf-report-builder-widgets-row-buttons .ajf-container .ajf-button-row button,ajf-report-builder-widgets-row-buttons .ajf-container .ajf-button-row span{flex-flow:wrap row;margin-right:10px;cursor:pointer}ajf-report-builder-widgets-row-buttons .ajf-container .ajf-button-row button mat-icon,ajf-report-builder-widgets-row-buttons .ajf-container .ajf-button-row span mat-icon{margin-top:5px;font-size:20px}ajf-report-builder-widgets-row-buttons .ajf-container .ajf-selected{background-color:#3b623b;color:#81d481}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfReportBuilderWidgetsRowButtons.ctorParameters = function () { return [\n            { type: AjfReportBuilderService }\n        ]; };\n        AjfReportBuilderWidgetsRowButtons.propDecorators = {\n            from: [{ type: core.Input }],\n            fromWidget: [{ type: core.Input }],\n            position: [{ type: core.Input }],\n            widget: [{ type: core.Input }],\n            child: [{ type: core.Input }],\n            isOver: [{ type: core.Input }]\n        };\n        return AjfReportBuilderWidgetsRowButtons;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfReportBuilderWidgetsToolbar = /** @class */ (function () {\n        /**\n         *\n         * @param private _afjBuilderService: AjfBuilderService\n         */\n        function AjfReportBuilderWidgetsToolbar(_service) {\n            this._service = _service;\n            // fieldTypes is an array string that contains the field options\n            this.chartTypes = utils.sizedEnumToStringArray(reports.AjfChartType);\n            this.widgetTypes = utils.sizedEnumToStringArray(reports.AjfWidgetType);\n            // delete Column widget\n            var pos = this.widgetTypes.indexOf('Column');\n            if (pos !== -1) {\n                this.widgetTypes.splice(pos, 1);\n            }\n        }\n        /**\n         *  sign the start of mouse drag with 200 ms of delay\n         *\n         * @memberOf AjfReportBuilderContent\n         */\n        AjfReportBuilderWidgetsToolbar.prototype.onDragStartHandler = function () {\n            var _this = this;\n            var s = rxjs.timer(200)\n                .subscribe(function () {\n                if (s != null) {\n                    s.unsubscribe();\n                }\n                _this._service.dragStarted();\n            });\n        };\n        /**\n         * sign the end of mouse drag\n         *\n         * @memberOf AjfReportBuilderContent\n         */\n        AjfReportBuilderWidgetsToolbar.prototype.onDragEndHandler = function () {\n            this._service.dragEnded();\n        };\n        AjfReportBuilderWidgetsToolbar.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-report-builder-widgets-toolbar',\n                        template: \"<mat-list>\\n  <mat-list-item *ngFor=\\\"let t of widgetTypes\\\">\\n    <ajf-report-builder-widget-toolbar-button ng-if=\\\"t != 'Column'\\\"\\n        cdkDrag\\n        [cdkDragData]=\\\"{widgetType: t, dropZones: ['header','content','footer','column','widget']}\\\"\\n        [widgetType]=\\\"t\\\"\\n        (onDragStart)=\\\"onDragStartHandler();\\\"\\n        (onDragEnd)=\\\"onDragEndHandler();\\\">\\n    </ajf-report-builder-widget-toolbar-button>\\n  </mat-list-item>\\n</mat-list>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfReportBuilderWidgetsToolbar.ctorParameters = function () { return [\n            { type: AjfReportBuilderService }\n        ]; };\n        return AjfReportBuilderWidgetsToolbar;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfReportBuilder = /** @class */ (function () {\n        function AjfReportBuilder(_service) {\n            this._service = _service;\n            this._init = false;\n        }\n        Object.defineProperty(AjfReportBuilder.prototype, \"report\", {\n            get: function () { return this._report; },\n            set: function (report) {\n                if (report != null) {\n                    this._report = report;\n                    if (this._init) {\n                        this._setCurrentReport();\n                    }\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        AjfReportBuilder.prototype.ngAfterContentInit = function () {\n            this._setCurrentReport();\n            this._init = true;\n        };\n        AjfReportBuilder.prototype._setCurrentReport = function () {\n            this._service.setReportForms(this.report != null ? this.report.forms || [] : []);\n            this._service.setReport(this.report);\n        };\n        AjfReportBuilder.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-report-builder',\n                        template: \"<ajf-report-builder-toolbar (addClick)=\\\"start.toggle()\\\"></ajf-report-builder-toolbar>\\n<ajf-report-builder-custom-widgets-toolbar (addClick)=\\\"start.toggle()\\\"></ajf-report-builder-custom-widgets-toolbar>\\n<mat-drawer-container>\\n    <mat-drawer #start position=\\\"start\\\" mode=\\\"side\\\" class=\\\"ajf-builder-sidebar\\\">\\n        <ajf-report-builder-widgets-toolbar></ajf-report-builder-widgets-toolbar>\\n    </mat-drawer>\\n    <ajf-report-builder-content></ajf-report-builder-content>\\n    <mat-drawer #end position=\\\"end\\\" mode=\\\"side\\\" class=\\\"ajf-builder-prop\\\" [opened]=\\\"true\\\">\\n      <ajf-report-builder-properties></ajf-report-builder-properties>\\n    </mat-drawer>\\n</mat-drawer-container>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\"ajf-report-builder{display:block;position:relative;width:100%;height:100%;overflow:hidden}ajf-report-builder mat-sidenav-container{height:100%}ajf-report-builder mat-sidenav-container .ajf-builder-sidebar{max-width:7%}ajf-report-builder mat-sidenav-container .ajf-builder-prop{max-width:30%}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfReportBuilder.ctorParameters = function () { return [\n            { type: AjfReportBuilderService }\n        ]; };\n        AjfReportBuilder.propDecorators = {\n            startSidenav: [{ type: core.ViewChild, args: [sidenav.MatSidenav, { static: true },] }],\n            report: [{ type: core.Input }]\n        };\n        return AjfReportBuilder;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfReportBuilderModule = /** @class */ (function () {\n        function AjfReportBuilderModule() {\n        }\n        AjfReportBuilderModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [\n                            common.CommonModule,\n                            forms.FormsModule,\n                            dragDrop.DragDropModule,\n                            button.MatButtonModule,\n                            buttonToggle.MatButtonToggleModule,\n                            card.MatCardModule,\n                            dialog.MatDialogModule,\n                            gridList.MatGridListModule,\n                            icon.MatIconModule,\n                            list.MatListModule,\n                            select.MatSelectModule,\n                            sidenav.MatSidenavModule,\n                            slideToggle.MatSlideToggleModule,\n                            slider.MatSliderModule,\n                            tabs.MatTabsModule,\n                            toolbar.MatToolbarModule,\n                            tooltip.MatTooltipModule,\n                            core$1.TranslateModule,\n                            ngxColorPicker.ColorPickerModule,\n                            common$1.AjfCommonModule,\n                            image.AjfImageModule,\n                            map.AjfMapModule,\n                            monacoEditor.AjfMonacoEditorModule,\n                            table.AjfTableModule,\n                            text.AjfTextModule,\n                        ],\n                        declarations: [\n                            AjfQuillEditor,\n                            AjfReportBuilderColumn,\n                            AjfReportBuilderConditionEditor,\n                            AjfReportBuilderContent,\n                            AjfReportBuilderCustomWidgetDialog,\n                            AjfReportBuilderCustomWidgetToolbarButton,\n                            AjfReportBuilderCustomWidgetsToolbar,\n                            AjfReportBuilderFormsAnalyzerDialog,\n                            AjfReportBuilderFormsAnalyzer,\n                            AjfReportBuilderImageGroup,\n                            AjfReportBuilderProperties,\n                            AjfReportBuilderRendererWidget,\n                            AjfReportBuilderThemeColorDialog,\n                            AjfReportBuilderThemeColor,\n                            AjfReportBuilderToolbarDialog,\n                            AjfReportBuilderToolbar,\n                            AjfReportBuilderWidgetToolbarButton,\n                            AjfReportBuilderWidgetsRowButtons,\n                            AjfReportBuilderWidgetsToolbar,\n                            AjfReportBuilder,\n                            AjfImageFilterPipe,\n                        ],\n                        exports: [\n                            AjfReportBuilder,\n                        ],\n                        providers: [\n                            AjfReportBuilderService,\n                        ]\n                    },] }\n        ];\n        return AjfReportBuilderModule;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.AJF_REPORTS_CONFIG = AJF_REPORTS_CONFIG;\n    exports.AjfReportBuilder = AjfReportBuilder;\n    exports.AjfReportBuilderModule = AjfReportBuilderModule;\n    exports.AjfReportBuilderService = AjfReportBuilderService;\n    exports.ɵgc_ajf_src_material_report_builder_report_builder_a = AjfQuillEditor;\n    exports.ɵgc_ajf_src_material_report_builder_report_builder_b = AjfReportBuilderColumn;\n    exports.ɵgc_ajf_src_material_report_builder_report_builder_c = AjfReportBuilderConditionEditor;\n    exports.ɵgc_ajf_src_material_report_builder_report_builder_d = AjfReportBuilderContent;\n    exports.ɵgc_ajf_src_material_report_builder_report_builder_e = AjfReportBuilderCustomWidgetDialog;\n    exports.ɵgc_ajf_src_material_report_builder_report_builder_f = AjfReportBuilderCustomWidgetToolbarButton;\n    exports.ɵgc_ajf_src_material_report_builder_report_builder_g = AjfReportBuilderCustomWidgetsToolbar;\n    exports.ɵgc_ajf_src_material_report_builder_report_builder_h = AjfReportBuilderFormsAnalyzerDialog;\n    exports.ɵgc_ajf_src_material_report_builder_report_builder_i = AjfReportBuilderFormsAnalyzer;\n    exports.ɵgc_ajf_src_material_report_builder_report_builder_j = AjfReportBuilderImageGroup;\n    exports.ɵgc_ajf_src_material_report_builder_report_builder_k = AjfReportBuilderProperties;\n    exports.ɵgc_ajf_src_material_report_builder_report_builder_l = AjfReportBuilderRendererWidget;\n    exports.ɵgc_ajf_src_material_report_builder_report_builder_m = AjfReportBuilderThemeColorDialog;\n    exports.ɵgc_ajf_src_material_report_builder_report_builder_n = AjfReportBuilderThemeColor;\n    exports.ɵgc_ajf_src_material_report_builder_report_builder_o = AjfReportBuilderToolbarDialog;\n    exports.ɵgc_ajf_src_material_report_builder_report_builder_p = AjfReportBuilderToolbar;\n    exports.ɵgc_ajf_src_material_report_builder_report_builder_q = AjfReportBuilderWidgetToolbarButton;\n    exports.ɵgc_ajf_src_material_report_builder_report_builder_r = AjfReportBuilderWidgetsRowButtons;\n    exports.ɵgc_ajf_src_material_report_builder_report_builder_s = AjfReportBuilderWidgetsToolbar;\n    exports.ɵgc_ajf_src_material_report_builder_report_builder_t = AjfImageFilterPipe;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-report-builder.umd.js.map\n"]}