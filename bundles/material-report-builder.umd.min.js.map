{"version":3,"file":"material-report-builder.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/material/report-builder/tokens.ts","../../src/material/report-builder/report-builder-service.ts","../../src/material/report-builder/column.ts","../../src/material/report-builder/utils.ts","../../src/material/report-builder/condition-editor.ts","../../src/material/report-builder/content.ts","../../src/material/report-builder/custom-widget-dialog.ts","../../src/material/report-builder/custom-widget-toolbar-button.ts","../../src/material/report-builder/custom-widgets-toolbar.ts","../../src/material/report-builder/forms-analyzer-dialog.ts","../../src/material/report-builder/forms-analyzer.ts","../../src/material/report-builder/image-filter.ts","../../src/material/report-builder/image-group.ts","../../src/material/report-builder/properties.ts","../../src/material/report-builder/quill-editor.ts","../../src/material/report-builder/renderer-widget.ts","../../src/material/report-builder/theme-color-dialog.ts","../../src/material/report-builder/theme-color.ts","../../src/material/report-builder/toolbar-dialog.ts","../../src/material/report-builder/toolbar.ts","../../src/material/report-builder/widget-toolbar-button.ts","../../src/material/report-builder/widgets-row-buttons.ts","../../src/material/report-builder/widgets-toolbar.ts","../../src/material/report-builder/report-builder.ts","../../src/material/report-builder/report-builder-module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {InjectionToken} from '@angular/core';\n\nimport {AjfReportsConfig} from './models';\n\nexport const AJF_REPORTS_CONFIG = new InjectionToken<AjfReportsConfig>('AJF_REPORTS_CONFIG');\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {EventEmitter, Inject, Injectable, Optional} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {\n  combineLatest, filter, map, publishReplay, refCount,\n  scan, share, startWith\n} from 'rxjs/operators';\n\nimport {AjfFormula} from '@ajf/core/models';\nimport {\n  AjfField,\n  AjfFieldType,\n  AjfForm,\n  AjfNode,\n  AjfNodeGroup,\n  AjfRepeatingSlide,\n  AjfSlide,\n  AjfStringField,\n  flattenNodes\n} from '@ajf/core/forms';\nimport {\n  AjfAggregation,\n  AjfReport,\n  AjfReportChartWidget,\n  AjfReportColumnWidget,\n  AjfReportContainer,\n  AjfReportCustomWidget,\n  AjfReportDataWidget,\n  AjfReportImageWidget,\n  AjfReportLayoutWidget,\n  AjfReportStyles,\n  AjfReportTableWidget,\n  AjfReportTextWidget,\n  AjfReportWidget,\n  AjfReportWidgetType,\n} from '@ajf/core/reports';\n\nimport {\n  IAjfReportWidgetsOperation,\n  IAjfReportCustomWidgetsOperation,\n  IAjfReportStylesOperation,\n  IAjfReportWidgetOperation,\n  IAjfColorOperation,\n  IAjfFormVariablesOperation,\n  IAjfReportFormsOperation\n} from './operations';\n\nimport {\n  AjfFormVariables,\n  AjfReportIcons,\n  AjfReportsConfig,\n  AjfReportWidgetsContainer\n} from './models';\n\nimport {AJF_REPORTS_CONFIG} from './tokens';\n\n/**\n * This service contains all the logic to model the report widget.\n *\n * @export\n */\n@Injectable()\nexport class AjfReportBuilderService {\n\n  /**\n   *  this Observable observe the customWidgets obj\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _customWidgets: Observable<AjfReportCustomWidget[]>;\n  private _customWidgetsUpdate: Subject<IAjfReportCustomWidgetsOperation> =\n  new Subject<IAjfReportCustomWidgetsOperation>();\n\n  /**\n   * this Observable observe the name of the section that contains the current widget.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _origin: Observable<string>;\n  private _originUpdate: Subject<string> = new Subject<string>();\n\n  /**\n   * this Observable observe the exported json\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _savedReport: Observable<AjfReport>;\n  private _savedReportUpdate: Subject<AjfReport> = new Subject<AjfReport>();\n\n  private _jsonStack: BehaviorSubject<string[]> =\n  new BehaviorSubject<string[]>([]);\n\n  private _lastDeletedJson: string | undefined;\n\n  private _emptyContent: BehaviorSubject<boolean> =\n  new BehaviorSubject<boolean>(true);\n\n  /**\n   *  this Observable observe if is fired drag mouse event.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _onDragged: Observable<boolean>;\n  private _onDraggedUpdate: Subject<boolean> = new Subject<boolean>();\n\n\n  private _onOver: Observable<boolean>;\n  private _onOverUpdate: Subject<boolean> = new Subject<boolean>();\n\n\n  /**\n   * this Observable observe the status of permanent zoom\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _fixedZoom: Observable<boolean>;\n  private _fixedZoomUpdate: Subject<boolean> = new Subject<boolean>();\n\n\n  /**\n   *  this Observable observe if is fired drag mouse event.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _onDragEnter: Observable<any>;\n  private _onDragEnterUpdate: Subject<any> = new Subject<any>();\n\n  /**\n   * Observe the header widget array.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _headerWidgets: Observable<AjfReportWidgetsContainer>;\n  private _headerWidgetsUpdate: Subject<IAjfReportWidgetsOperation> =\n  new Subject<IAjfReportWidgetsOperation>();\n\n  /**\n   * observe the header styles.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _headerStyles: Observable<AjfReportStyles>;\n\n  /**\n   * Observe the content widget array\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _contentWidgets: Observable<AjfReportWidgetsContainer>;\n  private _contentWidgetsUpdate: Subject<IAjfReportWidgetsOperation> =\n  new Subject<IAjfReportWidgetsOperation>();\n\n  /**\n   * this Observable observe the content styles.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _contentStyles: Observable<AjfReportStyles>;\n\n  /**\n   * this Observable observe the footer widget array.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _footerWidgets: Observable<AjfReportWidgetsContainer>;\n  private _footerWidgetsUpdate: Subject<IAjfReportWidgetsOperation> =\n  new Subject<IAjfReportWidgetsOperation>();\n\n\n  private _color: Observable<string[]>;\n  private _colorUpdate: Subject<IAjfColorOperation> =\n  new Subject<IAjfColorOperation>();\n  private _defaultColor: string[] =\n  [\n    'rgba(0, 0, 0, 1)', 'rgba(51, 153, 255, 1)', 'rgba(153, 204, 0, 1)', 'rgba(255, 102, 0, 1)',\n    'rgba(0, 204, 204, 1)', 'rgba(204, 204, 153, 1)', 'rgba(255, 153, 0, 1)', 'rgba(230, 0, 0, 1)',\n    'rgba(255, 153, 0, 1)', 'rgba(255, 255, 0, 1)', 'rgba(0, 138, 0, 1)', 'rgba(0, 102, 204, 1)',\n    'rgba(153, 51, 255, 1)', 'rgba(255, 255, 255, 1)', 'rgba(250, 204, 204, 1)',\n    'rgba(255, 235, 204, 1)', 'rgba(255, 255, 204, 1)', 'rgba(204, 232, 204, 1)',\n    'rgba(204, 224, 245, 1)', 'rgba(235, 214, 255, 1)', 'rgba(187, 187, 187, 1)',\n    'rgba(240, 102, 102, 1)', 'rgba(255, 194, 102, 1)', 'rgba(255, 255, 102, 1)',\n    'rgba(102, 185, 102, 1)', 'rgba(102, 163, 224, 1)', 'rgba(194, 133, 255, 1)',\n    'rgba(136, 136, 136, 1)', 'rgba(161, 0, 0, 1)', 'rgba(178, 107, 0, 1)',\n    'rgba(178, 178, 0, 1)', 'rgba(0, 97, 0, 1)', 'rgba(0, 71, 178, 1)',\n    'rgba(107, 36, 178, 1)', 'rgba(68, 68, 68, 1)', 'rgba(92, 0, 0, 1)', 'rgba(102, 61, 0, 1)',\n    'rgba(102, 102, 0, 1)', 'rgba(0, 55, 0, 1)', 'rgba(0, 41, 102, 1)', 'rgba(61, 20, 102, 1)'\n  ];\n\n\n  /**\n   * this Observable observe the footer styles.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _footerStyles: Observable<AjfReportStyles>;\n\n  /**\n   *  this Observable observe the current widget which holds the focus.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _currentWidget: Observable<AjfReportWidget | null>;\n  private _currentWidgetUpdate: BehaviorSubject<IAjfReportWidgetOperation | null> =\n    new BehaviorSubject<IAjfReportWidgetOperation | null>(null);\n\n\n  /**\n   * Observe the AjfFormVariables exploit for field selecting from forms\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _formsVariables: Observable<AjfFormVariables[]>;\n  private _formsVariablesUpdate: BehaviorSubject<IAjfFormVariablesOperation | null> =\n    new BehaviorSubject<IAjfFormVariablesOperation | null>(null);\n\n  /**\n   * Observe the AjfFormVariables exploit for field selecting from forms\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _conditionNames: Observable<AjfFormVariables[]>;\n  private _conditionNamesUpdate: BehaviorSubject<IAjfFormVariablesOperation | null> =\n    new BehaviorSubject<IAjfFormVariablesOperation | null>(null);\n\n  /**\n   * this BehaviorSubject update export report.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _saveReport: BehaviorSubject<any> =\n  new BehaviorSubject<any>(null);\n\n  /**\n   * this BehaviorSubject contains the AjfReport.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _report: BehaviorSubject<AjfReport | null> =\n    new BehaviorSubject<AjfReport | null>(null);\n\n  /**\n   *  this Observable observe the styles of report.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _reportStyles: Observable<AjfReportStyles>;\n  private _reportStylesUpdate: Subject<IAjfReportStylesOperation> =\n  new Subject<IAjfReportStylesOperation>();\n\n  /**\n   * observe the forms fetched\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _reportForms: Observable<AjfForm[]>;\n  private _reportFormsUpdate: Subject<IAjfReportFormsOperation> =\n  new Subject<IAjfReportFormsOperation>();\n\n  /**\n   * dictionary for  widgetsUpdate\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _updates: any = {\n    header: this._headerWidgetsUpdate,\n    content: this._contentWidgetsUpdate,\n    footer: this._footerWidgetsUpdate,\n    color: this._colorUpdate,\n    customWidgets: this._customWidgetsUpdate\n  };\n\n  /**\n   * event emitter that notify when wont to save report\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  private _saveReportEvent: EventEmitter<void> = new EventEmitter<void>();\n\n  private _saveFormulaTOHtml: EventEmitter<any> = new EventEmitter<any>();\n\n  getFormulaToHtmlEvent(): Observable<string> {\n    return this._saveFormulaTOHtml.asObservable();\n  }\n\n  /**\n   * event emitter that notify when column width changed\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  columnWidthChangedEmitter: EventEmitter<void> = new EventEmitter<void>();\n\n  private _iconSets: AjfReportIcons = {\n    'ajf-icon': []\n  };\n  get iconSets(): AjfReportIcons { return this._iconSets; }\n\n  /**\n   * Creates an instance of AjfReportBuilderService.\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  constructor(\n    @Optional() @Inject(AJF_REPORTS_CONFIG) reportsConfig: AjfReportsConfig\n  ) {\n\n    this._lastDeletedJson = '';\n\n    if (reportsConfig != null) {\n      if (reportsConfig.icons != null) {\n        this._iconSets = {...this._iconSets, ...reportsConfig.icons};\n      }\n    }\n\n    this._origin = (<Observable<string>>this._originUpdate).pipe(\n      startWith('header'),\n      share()\n    );\n\n    this._savedReport = (<Observable<AjfReport>>this._savedReportUpdate).pipe(\n      share()\n    );\n\n    this._onDragged = (<Observable<boolean>>this._onDraggedUpdate).pipe(\n      startWith(false),\n      share()\n    );\n\n    this._onOver = (<Observable<boolean>>this._onOverUpdate).pipe(\n      startWith(false),\n      share()\n    );\n\n    this._fixedZoom = (<Observable<boolean>>this._fixedZoomUpdate).pipe(\n      startWith(false),\n      share()\n    );\n\n    this._onDragEnter = this._onDragEnterUpdate.pipe(share());\n\n    this._reportStyles = (<Observable<IAjfReportStylesOperation>>this._reportStylesUpdate).pipe(\n      scan((styles: AjfReportStyles, op: IAjfReportStylesOperation) => {\n        return op(styles);\n      }, <AjfReportStyles>{}),\n      share(),\n      startWith(<AjfReportStyles>{})\n    );\n\n    this._reportForms = (<Observable<IAjfReportFormsOperation>>this._reportFormsUpdate).pipe(\n      scan((forms: AjfForm[], op: IAjfReportFormsOperation) => {\n        return op(forms);\n      }, []),\n      share(),\n      startWith([])\n    );\n\n    this._customWidgets = (<Observable<IAjfReportCustomWidgetsOperation>>this._customWidgetsUpdate)\n      .pipe(\n        scan((widgets: AjfReportCustomWidget[], op: IAjfReportCustomWidgetsOperation) => {\n          return op(widgets);\n        }, []),\n        share(),\n        startWith([])\n      );\n\n    this._formsVariables = (<Observable<IAjfFormVariablesOperation>>this._formsVariablesUpdate)\n      .pipe(\n        filter(s => s != null),\n        scan((variables: AjfFormVariables[], op: IAjfFormVariablesOperation) => {\n          return op(variables);\n        }, []),\n        publishReplay(1),\n        refCount()\n      );\n\n    this._conditionNames = (<Observable<IAjfFormVariablesOperation>>this._conditionNamesUpdate)\n      .pipe(\n        filter(s => s != null),\n        scan((variables: AjfFormVariables[], op: IAjfFormVariablesOperation) => {\n          return op(variables);\n        }, []),\n        share(),\n        startWith([])\n      );\n\n    this._headerWidgets = (<Observable<IAjfReportWidgetsOperation>>this._headerWidgetsUpdate).pipe(\n      scan((widgets: AjfReportWidgetsContainer, op: IAjfReportWidgetsOperation) => {\n        return op(widgets);\n      }, <AjfReportWidgetsContainer>{ widgets: [], styles: {} }),\n      startWith(<AjfReportWidgetsContainer>{ widgets: [], styles: {} }),\n      publishReplay(1),\n      refCount()\n    );\n\n    this._headerStyles = this._headerWidgets.pipe(\n      map((widgets: AjfReportWidgetsContainer) => {\n        return widgets != null ? widgets.styles : {};\n      })\n    );\n\n    this._contentWidgets = (<Observable<IAjfReportWidgetsOperation>>this._contentWidgetsUpdate)\n      .pipe(\n        scan((widgets: AjfReportWidgetsContainer, op: IAjfReportWidgetsOperation) => {\n          return op(widgets);\n        }, <AjfReportWidgetsContainer>{ widgets: [], styles: {} }),\n        startWith(<AjfReportWidgetsContainer>{ widgets: [], styles: {} }),\n        publishReplay(1),\n        refCount()\n      );\n\n    this._contentStyles = this._contentWidgets.pipe(\n      map((widgets: AjfReportWidgetsContainer) => {\n        return widgets != null ? widgets.styles : {};\n      })\n    );\n\n    this._footerWidgets = (<Observable<IAjfReportWidgetsOperation>>this._footerWidgetsUpdate).pipe(\n      scan((widgets: AjfReportWidgetsContainer, op: IAjfReportWidgetsOperation) => {\n        return op(widgets);\n      }, <AjfReportWidgetsContainer>{ widgets: [], styles: {} }),\n      startWith(<AjfReportWidgetsContainer>{ widgets: [], styles: {} }),\n      publishReplay(1),\n      refCount()\n    );\n\n    this._footerStyles = this._footerWidgets.pipe(\n      map((widgets: AjfReportWidgetsContainer) => {\n        return widgets != null ? widgets.styles : {};\n      })\n    );\n\n    this._color = (<Observable<IAjfColorOperation>>this._colorUpdate).pipe(\n      scan((color: string[], op: IAjfColorOperation) => {\n        return op(color);\n      }, this._defaultColor),\n      share(),\n      startWith(this._defaultColor)\n    );\n\n    this._currentWidget = (<Observable<IAjfReportWidgetOperation>>this._currentWidgetUpdate).pipe(\n      filter(s => s != null),\n      scan((widget: AjfReportWidget | null, op: IAjfReportWidgetOperation) => {\n        return op(widget);\n      }, undefined),\n      publishReplay(1),\n      refCount()\n    );\n\n    this._reportForms.pipe(\n      filter(f => f.length != 0),\n      map((forms: AjfForm[]) => {\n        return (_c: AjfFormVariables[]): AjfFormVariables[] => {\n          return this.fillFormsVariables(forms);\n        };\n      })\n    ).subscribe(this._formsVariablesUpdate);\n\n    this._reportForms.pipe(\n      filter(f => f.length != 0),\n      map((forms: AjfForm[]) => {\n        return (_c: AjfFormVariables[]): AjfFormVariables[] => {\n          return this.fillFormsVariables(forms);\n        };\n      })\n    ).subscribe(this._conditionNamesUpdate);\n\n    const reportObs = this._report;\n\n    reportObs.pipe(\n      map((r: AjfReport | null) => {\n        return (_colors: string[]): string[] => {\n          let tempColors: string[] = this._defaultColor;\n          if (r == null) {\n            return [];\n          } else {\n            this.parseColor(r.styles, tempColors);\n            this.parseColor(r.content.styles, tempColors);\n            this.parseColor(r.footer.styles, tempColors);\n            this.parseColor(r.header.styles, tempColors);\n            for (let i = 0; i < r.header.content.length; i++) {\n              let obj = r.header.content[i];\n              this.parseColor(obj.styles, tempColors);\n              if (obj instanceof AjfReportLayoutWidget) {\n                let layoutObj = <AjfReportLayoutWidget>obj;\n                for (let j = 0; j < layoutObj.content.length; j++) {\n                  let columnObj = <AjfReportColumnWidget>layoutObj.content[j];\n                  this.parseColor(columnObj.styles, tempColors);\n                  for (let z = 0; z < columnObj.content.length; z++) {\n                    let widgetObj = columnObj.content[z];\n                    this.parseColor(widgetObj.styles, tempColors);\n                  }\n                }\n              }\n            }\n          }\n          return <string[]>tempColors;\n        };\n      })\n    ).subscribe(this._colorUpdate);\n\n    reportObs.pipe(\n      map((r: AjfReport | null) => {\n        return (_styles: AjfReportStyles): AjfReportStyles => {\n          if (r == null || r.styles == null) {\n            return <AjfReportStyles>{};\n          } else {\n            return <AjfReportStyles>r.styles;\n          }\n        };\n      })\n    ).subscribe(this._reportStylesUpdate);\n\n    reportObs.pipe(\n      map((r: AjfReport | null) => {\n        return (_widgets: AjfReportWidgetsContainer): AjfReportWidgetsContainer => {\n          if (r == null || r.header == null) {\n            return <AjfReportWidgetsContainer>{ widgets: [], styles: {} };\n          } else {\n            return <AjfReportWidgetsContainer>{\n              widgets: r.header.content || [],\n              styles: r.header.styles || {}\n            };\n          }\n        };\n      })\n    ).subscribe(this._headerWidgetsUpdate);\n\n    reportObs.pipe(\n      map((r: AjfReport | null) => {\n        return (_widgets: AjfReportWidgetsContainer): AjfReportWidgetsContainer => {\n          if (r == null || r.content == null) {\n            return <AjfReportWidgetsContainer>{ widgets: [], styles: {} };\n          } else {\n            return <AjfReportWidgetsContainer>{\n              widgets: r.content.content || [],\n              styles: r.content.styles || {}\n            };\n          }\n        };\n      })\n    ).subscribe(this._contentWidgetsUpdate);\n\n    reportObs.pipe(\n      map((r: AjfReport | null) => {\n        return (_widgets: AjfReportWidgetsContainer): AjfReportWidgetsContainer => {\n          if (r == null || r.footer == null) {\n            return <AjfReportWidgetsContainer>{ widgets: [], styles: {} };\n          } else {\n            return <AjfReportWidgetsContainer>{\n              widgets: r.footer.content || [],\n              styles: r.footer.styles || {}\n            };\n          }\n        };\n      })\n    ).subscribe(this._footerWidgetsUpdate);\n\n    this._saveReport.pipe(\n      map((json: any) => {\n        return (_r: any): any => {\n          if (json = null) {\n            return {};\n          }\n          return json;\n        };\n      })\n    );\n\n    this._saveReportEvent.pipe(\n      combineLatest(this.report, this.reportForms),\n      combineLatest(\n        this._headerWidgets.pipe(filter(w => w != null)),\n        this._contentWidgets.pipe(filter(w => w != null)),\n        this._footerWidgets.pipe(filter(w => w != null)),\n        this._reportStyles.pipe(filter(w => w != null)),\n      )\n    ).subscribe((r: [\n        [void, AjfReport | null, AjfForm[]],\n        AjfReportWidgetsContainer, AjfReportWidgetsContainer,\n        AjfReportWidgetsContainer, AjfReportStyles\n      ]) => {\n        let obj: any = {};\n        const curRo = r[0][1];\n        const forms = r[0][2] != null ? r[0][2] || [] : (\n          curRo != null ? curRo.forms || [] : []\n        );\n\n        obj['header'] = { content: r[1].widgets.map(w => w.toJson()), styles: r[1].styles };\n        obj['content'] = { content: r[2].widgets.map(w => w.toJson()), styles: r[2].styles };\n        obj['footer'] = { content: r[3].widgets.map(w => w.toJson()), styles: r[3].styles };\n        obj['styles'] = r[4];\n\n        const ro = new AjfReport(forms, {\n          header: new AjfReportContainer({\n            content: r[1].widgets,\n            styles: r[1].styles\n          }),\n          content: new AjfReportContainer({\n            content: r[2].widgets,\n            styles: r[2].styles\n          }),\n          footer: new AjfReportContainer({\n            content: r[3].widgets,\n            styles: r[3].styles\n          }),\n          styles: r[4]\n        });\n\n        this.setSaveReport(obj);\n        this._savedReportUpdate.next(ro);\n        this.pushJsonStack(JSON.stringify(obj));\n      });\n  }\n\n  /**\n   *\n   *  functions\n   *\n   */\n\n  /**\n   * utils:\n   * remove AjfNodeGroup, AjfSlide, AjfRepeatingSlide, AjfStringField from ajfnode array\n   *\n   * @param nodes\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  filterNodes(nodes: AjfNode[]): AjfNode[] {\n    for (let i = 0; i < nodes.length; i++) {\n      if (\n        nodes[i] instanceof AjfNodeGroup ||\n        nodes[i] instanceof AjfSlide ||\n        nodes[i] instanceof AjfRepeatingSlide ||\n        nodes[i] instanceof AjfStringField\n      ) {\n        nodes.splice(i, 1);\n        i--;\n      }\n    }\n    return nodes;\n  }\n\n  parseColor(cssStyles: any, colors: string[]): void {\n    const styleKeys = ['background-color', 'backgroundColor', 'color'];\n    styleKeys.forEach((k) => {\n      if (\n        cssStyles[k] &&\n        colors.indexOf(cssStyles[k]) == -1\n      ) {\n        colors.push(cssStyles[k]);\n      }\n    });\n  }\n\n  fillFormsVariables(forms: AjfForm[]) {\n    let variables: AjfFormVariables[] = [];\n    for (let i = 0; i < forms.length; i++) {\n      variables[i] = { nodes: [], labels: [], names: [], types: [] };\n\n      if (forms[i].nodes != null && forms[i].nodes.length > 0) {\n        variables[i].nodes = this.filterNodes(flattenNodes(forms[i].nodes));\n      }\n      variables[i].labels = this.extractLabelsNodes(variables[i].nodes);\n      variables[i].names = this.extractNamesNodes(variables[i].nodes);\n      variables[i].types = this.extractTypesNodes(variables[i].nodes);\n\n    }\n    return variables;\n  }\n  /**\n   * utils:\n   *  the obj returned contains the label field of ajfNode\n   * @param nodes\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  extractLabelsNodes(nodes: AjfNode[]): any {\n    let obj: string[] = [];\n    for (let i = 0; i < nodes.length; i++) {\n      obj.push(nodes[i].label);\n    }\n    return obj;\n  }\n\n  extractNamesNodes(nodes: AjfNode[]): any {\n    let obj: string[] = [];\n    for (let i = 0; i < nodes.length; i++) {\n      obj.push(nodes[i].name);\n    }\n    return obj;\n  }\n  extractTypesNodes(nodes: AjfNode[]): any {\n    let obj: AjfFieldType[] = [];\n    for (let i = 0; i < nodes.length; i++) {\n      let p: AjfField = <AjfField>nodes[i];\n      obj.push(p.fieldType);\n    }\n    return obj;\n  }\n\n  setOrigin(origin: string): void {\n    this._originUpdate.next(origin);\n  }\n\n  /**\n   * utils:\n   * This method round the value to the decimal position\n   *\n   * @param value\n   * @param decimalpositions\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  roundTo(value: number, decimalPositions: number) {\n    let i = value * Math.pow(10, decimalPositions);\n\n    i = Math.floor(i);\n\n    return i / Math.pow(10, decimalPositions);\n  }\n\n  /**\n   * utils:\n   * This validator check if the value is a number.\n   *\n   * @param value\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  isNumber(value: any): boolean {\n    return /^\\d+(\\.\\d+)?/.test(value);\n  }\n\n  isNumberArray(value: any[]): boolean {\n    value.forEach((v) => {\n      if (!this.isNumber(v)) {\n        return false;\n      }\n    });\n    return true;\n  }\n\n  /**\n   * get _onDragged Observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get onDragged(): Observable<any> {\n    return this._onDragged;\n  }\n\n  /**\n   * get _onOver Observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get onOver(): Observable<any> {\n    return this._onOver;\n  }\n\n  /**\n   * get _fixedZoom Observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get fixedZoom(): Observable<boolean> {\n    return this._fixedZoom;\n  }\n\n  /**\n   *  change status of _fixedZoom in true\n   *\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  fixedZoomIn(): void {\n    this._fixedZoomUpdate.next(true);\n  }\n\n  /**\n   *  change status of _fixedZoom in false\n   *\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  fixedZoomOut(): void {\n    this._fixedZoomUpdate.next(false);\n  }\n\n  /**\n   * get _onDragEnter observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get onDragEnter(): Observable<any> {\n    return this._onDragEnter;\n  }\n\n  /**\n   *  update _onDragEnter with  section(header,content,footer) and index\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  dragEnter(array: string, index: number): void {\n    this._onDragEnterUpdate.next({ array, index });\n  }\n\n  /**\n   *  update _ondragged with true\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  dragStarted(): void {\n    this._onDraggedUpdate.next(true);\n  }\n\n  /**\n   *  update _onDragged with false\n   *\n   * @memberOf AjfReportBuilderService\n   */\n\n  dragEnded(): void {\n    this._onDraggedUpdate.next(false);\n  }\n\n\n  /**\n   *  update _onOver with true\n   *\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  overStarted(): void {\n    this._onOverUpdate.next(true);\n  }\n\n\n  /**\n   * update _onOver with false\n   *\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  overEnded(): void {\n    this._onOverUpdate.next(false);\n  }\n\n  /**\n   *\n   *  update _onDragged with false\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  dragLeave(): void {\n    this._onDragEnterUpdate.next({});\n  }\n\n  /**\n   * Get the report\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get report(): Observable<AjfReport | null> {\n    return this._report.asObservable();\n  }\n\n  /**\n   * emit save report event\n   *\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  saveReport() {\n    if (this._saveReportEvent != null) {\n      this._saveReportEvent.emit();\n    }\n  }\n\n  saveImageFormula(formula: AjfFormula) {\n    this._currentWidgetUpdate.next(\n      (widget: AjfReportWidget | null): AjfReportWidget | null => {\n        if (widget == null) { return widget; }\n        const w = widget as AjfReportImageWidget;\n        w.flag = formula;\n        w.icon = formula;\n        return w;\n      });\n  }\n\n  saveFormulaToHtml(htmlFormula: string, reference: any) {\n    if (this._saveFormulaTOHtml != null) {\n      const obj = {\n        'formula': htmlFormula,\n        'reference': reference\n      };\n      this._saveFormulaTOHtml.emit(obj);\n    }\n  }\n\n  setEmptyContent(val: boolean): void {\n    this._emptyContent.next(val);\n  }\n\n\n  pushJsonStack(json: string): void {\n    let currentStack = this._jsonStack.getValue();\n\n    if (currentStack.indexOf(json) === -1 && json !== this._lastDeletedJson) {\n      currentStack.push(json);\n    }\n\n    this._jsonStack.next(currentStack);\n  }\n\n  popJsonStack(): string | undefined {\n    let emptyJson =\n      '{\"header\":{\"content\":[],\"styles\":{}},' +\n      '\"content\":{\"content\":[],\"styles\":{}},\"' +\n      'footer\":{\"content\":[],\"styles\":{}},\"styles\":{}}';\n    let currentStack = this._jsonStack.getValue();\n    currentStack.pop();\n    this._lastDeletedJson = currentStack.pop();\n\n    if (currentStack.length <= 0) {\n      this._lastDeletedJson = '';\n      this._jsonStack.next([]);\n      this.updateCurrentWidget(null);\n      this.setEmptyContent(true);\n      return emptyJson;\n    }\n    this._jsonStack.next(currentStack);\n\n    return this._lastDeletedJson;\n  }\n\n\n  /**\n   * get the emitter\n   *\n   * @readonly\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  get columnWidthChanged() {\n    return this.columnWidthChangedEmitter;\n  }\n\n  /**\n   * get _customWidgets Observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get customWidgets(): Observable<AjfReportCustomWidget[]> {\n    return this._customWidgets;\n  }\n\n  /**\n   * Get the header widget\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get headerWidgets(): Observable<AjfReportWidgetsContainer> {\n    return this._headerWidgets;\n  }\n\n  /**\n   * Get the header styles\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get headerStyles(): Observable<AjfReportStyles> {\n    return this._headerStyles;\n  }\n\n  /**\n   * Get the Content widget\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get contentWidgets(): Observable<AjfReportWidgetsContainer> {\n    return this._contentWidgets;\n  }\n\n  /**\n   * Get the content styles\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get contentStyles(): Observable<AjfReportStyles> {\n    return this._contentStyles;\n  }\n\n  /**\n   * Get the footer widget\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get footerWidgets(): Observable<AjfReportWidgetsContainer> {\n    return this._footerWidgets;\n  }\n\n  /**\n   * Get the footer styles\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get footerStyles(): Observable<AjfReportStyles> {\n    return this._footerStyles;\n  }\n\n  /**\n   * Get the colors of report\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get colors(): Observable<string[]> {\n    return this._color;\n  }\n\n  get emptyContent(): Observable<boolean> {\n    return <Observable<boolean>>this._emptyContent;\n  }\n\n  /**\n   *\n   * @param type\n   * @param newWidget\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  updateArrayWidgets(type: string, newWidget: AjfReportWidgetsContainer) {\n    if ((type !== 'header') && (type !== 'content') && (type !== 'footer')) {\n      throw new Error('Unknown type ' + type);\n    }\n    this._updates[type].next((_widgets: AjfReportWidgetsContainer): AjfReportWidgetsContainer => {\n      return newWidget;\n    });\n  }\n\n  /**\n   * get _formsVariables Observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get formsVariables(): Observable<AjfFormVariables[]> {\n    return this._formsVariables;\n  }\n\n  get conditionNames(): Observable<AjfFormVariables[]> {\n    return this._conditionNames;\n  }\n  /**\n   * Get the current widget\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get currentWidget(): Observable<AjfReportWidget | null> {\n    return this._currentWidget;\n  }\n\n  /**\n   * This method Update _currentWidgetUpdate with newWidget.\n   *\n   * @param newWidget\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  updateCurrentWidget(newWidget: AjfReportWidget | null) {\n    this._currentWidgetUpdate.next(\n      (_widget: AjfReportWidget | null): AjfReportWidget | null => {\n        this._saveReportEvent.emit();\n        return newWidget;\n      }\n    );\n  }\n\n  /**\n   * Get the report\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get getSaveReport(): Observable<any> {\n    return this._saveReport.asObservable();\n  }\n\n  /**\n   * get _jsonSavedReport obeservable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get reportSaved(): Observable<AjfReport> {\n    return this._savedReport;\n  }\n\n\n  /**\n   * get _reportStyles observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get reportStyles(): Observable<AjfReportStyles> {\n    return this._reportStyles;\n  }\n\n  /**\n   * get _reportForms observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get reportForms(): Observable<AjfForm[]> {\n    return this._reportForms;\n  }\n\n  /**\n   * get the _origin Observable\n   *\n   * @readonly\n   * @memberOf AjfReportBuilderService\n   */\n  get origin(): Observable<string> {\n    return this._origin;\n  }\n\n  /**\n   * This method assigns the new width to the idx column\n   * and recalculates the width of the remaining columns of the layout.\n   * The range value are from 0,1 to 1.\n   *\n   * RULES:\n   * The min value for column is 0,1.\n   * The sum of all columns width is always 1.\n   * The method round the values.\n   * If is present only one column the width is always 1.\n   *\n   * When the new value `>` old value:\n   * the width of the remaining columns decreases.\n   * When the new value `<` old value:\n   * the width of the remaining columns increases.\n   *\n   * When values ​​are periodic, rounding assigns the gap to the current value.\n   * For example: 3 columns with 0,33 believe 1 column 0,34 and 2 columns 0,33.\n   *\n   * @param newValue\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  instantColumnValue(newValue: number, idx: number) {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      if (widget == null) { return widget; }\n      let myObj = <AjfReportLayoutWidget>widget;\n\n      let size = myObj.columns.length;\n\n      let spreadValue = 0;\n      let objNum = 0;\n      let sum = 0;\n      let idxFirstNoObj = -1;\n\n      let add = false;\n      let foundFirstNoObj = false;\n\n      let re1 = new RegExp('(^[0]\\.\\[1-9][0-9]$)');\n      let re2 = new RegExp('(^[0]\\.\\[1-9]$)');\n      let re3 = new RegExp('^[1]$');\n\n      let oldValue = myObj.columns[idx];\n\n      newValue = Number(this.roundTo(newValue, 2).toFixed(2));\n\n      if (myObj.columns[idx] == null) {\n        throw new Error('invalid value');\n      }\n\n      for (let j = 0; j < size; j++) {\n        if (myObj.columns[j] === -1) { objNum++; }\n      }\n\n      if (oldValue == -1) {\n        oldValue = 0.1;\n        objNum--;\n        newValue = Number(this.roundTo(1 / (size - objNum), 2).toFixed(2));\n        myObj.columns[idx] = 0.1;\n      } else if (oldValue < 0.1) {\n        oldValue = 0.1;\n      }\n\n\n      if (newValue !== -1) {\n\n        if (myObj.columns.length === 1) {\n          myObj.columns[0] = 1;\n          return myObj;\n        }\n\n        if (newValue < 0.1) {\n          newValue = 0.1;\n        } else if (newValue + 0.1 * (size - objNum - 1) > 1) {\n          newValue = 1 - (0.1 * (size - objNum - 1));\n        }\n\n        if ((oldValue === newValue) && (oldValue === 0.1)) {\n          myObj.columns[idx] = newValue;\n          return myObj;\n        }\n\n        if (oldValue > newValue) {\n          add = true;\n          spreadValue = (oldValue - newValue) / (size - objNum - 1);\n        } else {\n          add = false;\n          spreadValue = (newValue - oldValue) / (size - objNum - 1);\n        }\n\n        spreadValue = Number(this.roundTo(spreadValue, 2).toFixed(2));\n\n        if (spreadValue < 0.01) {\n          spreadValue = 0.1;\n        }\n\n      } else {\n        myObj.columns[idx] = -1;\n        objNum++;\n        add = true;\n        if (myObj.columns.length == 1) {\n          spreadValue = 1;\n        } else {\n          spreadValue = (oldValue) / (size - objNum);\n        }\n      }\n\n      for (let i = 0; i < size; i++) {\n        if (myObj.columns[i] !== -1) {\n\n          if ((i == idx)) {\n            myObj.columns[idx] = newValue;\n          } else {\n\n            if (add) {\n              myObj.columns[i] += spreadValue;\n              if ((myObj.columns[i] > 0.9) && (myObj.columns.length - objNum != 1)) {\n                myObj.columns[i] = 0.90;\n              }\n\n            } else {\n              myObj.columns[i] -= spreadValue;\n              if (myObj.columns[i] < 0.1) {\n                myObj.columns[i] = 0.10;\n              }\n            }\n\n            myObj.columns[i] = Number(this.roundTo(myObj.columns[i], 2).toFixed(2));\n            sum += myObj.columns[i];\n          }\n\n          sum = Number(this.roundTo(sum, 2).toFixed(2));\n\n          if (foundFirstNoObj == false) {\n            idxFirstNoObj = i;\n            foundFirstNoObj = true;\n          }\n        }\n      }\n\n      if (newValue === -1) {\n        myObj.columns[idx] = -1;\n        if (foundFirstNoObj) {\n          myObj.columns[idxFirstNoObj] += Number(this.roundTo(1 - sum, 2).toFixed(2));\n        }\n      } else {\n        myObj.columns[idx] = Number(this.roundTo(1 - sum, 2).toFixed(2));\n\n      }\n\n      for (let j = 0; j < myObj.columns.length; j++) {\n        if (\n          myObj.columns[j] !== -1 &&\n          !re1.test(String(myObj.columns[j])) &&\n          !re2.test(String(myObj.columns[j])) &&\n          !re3.test(String(myObj.columns[j]))\n        ) {\n          this.instantColumnValue(0.10, j);\n        }\n      }\n      this.columnWidthChangedEmitter.emit();\n      this._saveReportEvent.emit();\n      return myObj;\n    });\n\n  }\n\n  /**\n   * This method set the imageUrl on the current AjfReportImageWidget.\n   *\n   * @param imageUrl\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setImageUrl(imageUrl: string) {\n    this._currentWidgetUpdate.next(\n      (widget: AjfReportWidget | null): AjfReportWidget | null => {\n        if (widget == null) { return null; }\n        const myObj = <AjfReportImageWidget>widget;\n        myObj.setUrl(imageUrl);\n        return myObj;\n      }\n    );\n  }\n\n  setIcon(icon: { fontSet: string, fontIcon: string }) {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      if (widget == null) { return null; }\n      const myObj = <AjfReportImageWidget>widget;\n      myObj.setIcon(icon);\n      return myObj;\n    });\n  }\n\n  setFlag(value: string) {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      if (widget == null) { return null; }\n      const myObj = <AjfReportImageWidget>widget;\n      myObj.setFlag(value);\n      return myObj;\n    });\n  }\n\n  saveCondition(conditionText: string) {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      if (widget == null) { return null; }\n      if (widget.visibility != null) { widget.visibility.condition = conditionText; }\n      return widget;\n    });\n  }\n\n  saveChartFormula(\n    _label: string,\n    _level: number,\n    _mainIndex: number,\n    _index: number,\n    formulaText: string,\n    aggregationType: number) {\n    this._currentWidgetUpdate.next((w: AjfReportWidget | null): AjfReportWidget | null => {\n      if (w == null) { return null; }\n      const widget = w as AjfReportChartWidget;\n      if (widget != null && widget.dataset != null) {\n        let formula: AjfFormula = new AjfFormula();\n        let aggregation: AjfAggregation = new AjfAggregation();\n        // let obj: any;\n\n        formula.formula = formulaText;\n        aggregation.aggregation = aggregationType;\n\n        // obj = {\n        //   'formula': formula.toJson(),\n        //   'aggregation': aggregation.toJson(),\n        //   'label': label\n        // };\n\n        // dataset = AjfDataset.fromJson(obj);\n        // check if the row that contains main data is defined\n        /* if (widget.dataset[0] == null) {\n          widget.dataset[0] = [];\n        }\n\n        if (level == 0 && mainIndex == -1 && index == -1) {\n\n          widget.dataset[0].push(dataset);\n        } else if (level == 1 && mainIndex == -1 && index == -1) {\n\n          widget.dataset[widget.dataset.length] = [];\n          widget.dataset[widget.dataset.length - 1].push(dataset);\n        } else if (index === - 1) {\n          widget.dataset[mainIndex + 1].push(dataset);\n        } else {\n          widget.dataset[mainIndex].splice(index, 1, dataset);\n        } */\n\n      }\n      return widget;\n    });\n  }\n\n  saveTableFormula(\n    _label: string,\n    aggregationType: number,\n    formulaText: string,\n    _mainIndex: number,\n    _index: number) {\n    this._currentWidgetUpdate.next((w: AjfReportWidget | null): AjfReportWidget | null => {\n      if (w == null) { return null; }\n      const widget = w as AjfReportTableWidget;\n      if (widget.dataset != null) {\n        let formula: AjfFormula = new AjfFormula();\n        let aggregation: AjfAggregation = new AjfAggregation();\n        // let dataset: AjfDataset = new AjfDataset();\n        // let rowDataset: AjfDataset[] = [];\n        // let obj: any;\n\n        formula.formula = formulaText;\n        aggregation.aggregation = aggregationType;\n\n        // obj = {\n        //   'formula': formula.toJson(),\n        //   'aggregation': aggregation.toJson(),\n        //   'label': label\n        // };\n\n        // dataset = AjfDataset.fromJson(obj);\n        /* if (mainIndex === - 1) {\n          widget.dataset[widget.dataset.length] = [];\n          widget.dataset[widget.dataset.length - 1].push(dataset);\n        } else {\n          if (index === -1) {\n            widget.dataset[mainIndex].push(dataset);\n          } else {\n            widget.dataset[mainIndex].splice(index, 1, dataset);\n          }\n        } */\n      }\n      return widget;\n    });\n  }\n\n  removeTableMainData(index: number) {\n    this._removeFromCurrentWidgetArrayProperty('dataset', index);\n  }\n\n  removeData(_mainIndex: number, _index: number) {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      let myObj = <AjfReportDataWidget>widget;\n\n      /* if (index === -1) {\n        myObj.dataset.splice(mainIndex, 1);\n      } else {\n        myObj.dataset[mainIndex].splice(index, 1);\n      } */\n\n      return myObj;\n    });\n  }\n\n  /**\n   * update type field of AjfReportChartWidget current widget\n   *\n   * @param type\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setChartType(type: number) {\n    this._setCurrentWidgetProperty('type', type);\n  }\n\n  /**\n   * remove  idx element of xLabels field of AjfReportChartWidget current widget\n   *\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  removeMainData(_idx: number) {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      let myObj = <AjfReportChartWidget>widget;\n      // myObj.dataset[0].splice(idx, 1);\n\n      return myObj;\n    });\n  }\n\n  removeRelatedData(_mainIdx: number, _idx: number) {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      let myObj = <AjfReportChartWidget>widget;\n      /* if (idx == -1) {\n        myObj.dataset.splice(mainIdx + 1, 1);\n      } else {\n        myObj.dataset[mainIdx + 1].splice(idx, 1);\n      } */\n\n      return myObj;\n    });\n  }\n\n\n  /**\n   * update backgroundColor field of AjfReportChartWidget current widget\n   *\n   * @param colors\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setChartBackgroundColor(colors: string[]) {\n    this._setCurrentWidgetProperty('backgroundColor', colors);\n  }\n\n  addChartBackgroundColor(color: string) {\n    this._addToCurrentWidgetArrayProperty('backgroundColor', color);\n  }\n\n  removeChartBackgroundColor(idx: number) {\n    this._removeFromCurrentWidgetArrayProperty('backgroundColor', idx);\n  }\n\n  /**\n   * update borderColor field of AjfReportChartWidget current widget\n   *\n   * @param colors\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setChartBorderColor(colors: string[]) {\n    this._setCurrentWidgetProperty('borderColor', colors);\n  }\n\n  setChartBorderWidth(value: number) {\n    this._setCurrentWidgetProperty('borderWidth', value);\n  }\n\n  addChartBorderColor(color: string) {\n    this._addToCurrentWidgetArrayProperty('borderColor', color);\n  }\n\n  removeChartBorderColor(idx: number) {\n    this._removeFromCurrentWidgetArrayProperty('borderColor', idx);\n  }\n\n  /**\n   * This method set the AjfReport.\n   *\n   * @param report\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setReport(report: AjfReport): void {\n    this._report.next(report);\n  }\n\n  /**\n   * This method set the export report.\n   *\n   * @param report\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setSaveReport(json: any): void {\n    this._saveReport.next(json);\n  }\n\n  /**\n   * This method set the font attribute on the current AjfReportWidget.\n   *\n   * There is a check on font-size attribute,\n   * if is no specificate the type of size font set 'pt' as default.\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setWidgetStyles(label: string, value: string | string[]) {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      let myObj = <AjfReportTextWidget>widget;\n\n      const pxStyles = [\n        'font-size', 'height', 'width', 'border-width', 'border-radius', 'padding', 'margin'\n      ];\n      const isPxStyle = pxStyles.indexOf(label) > -1;\n      if (isPxStyle && !(value instanceof Array) && this.isNumber(value)) {\n        value += 'px';\n      } else if (isPxStyle && value instanceof Array && this.isNumberArray(value)) {\n        value = `${value.join('px ')}px`;\n      }\n\n      myObj.styles[label] = value;\n\n      return myObj;\n    });\n  }\n\n  /**\n   * this method update the styles of origin widget array\n   *\n   * @param origin can be header content or footer\n   * @param label for example background-color\n   * @param value for example rgb(255,255,255,1)\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setSectionStyles(origin: string, label: string, value: string) {\n    if ((origin !== 'header') && (origin !== 'content') && (origin !== 'footer')) {\n      throw new Error('uncknow origin ' + origin);\n    }\n\n    this._updates[origin].next((widget: AjfReportWidgetsContainer): AjfReportWidgetsContainer => {\n      widget.styles[label] = value;\n\n      widget.styles = <AjfReportStyles>{...widget.styles};\n\n      return widget;\n    });\n  }\n\n  /**\n   * this method set the style of the whole report.\n   *\n   * @param label for example background-color\n   * @param value for example rgb(255,255,255,1)\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setReportStyles(label: string, value: string) {\n    this._reportStylesUpdate.next((styles: AjfReportStyles): AjfReportStyles => {\n      if (styles == null) {\n        styles = {};\n      } else {\n        styles[label] = value;\n        styles = <AjfReportStyles>{...styles};\n      }\n      return styles;\n    });\n  }\n\n  /**\n   *  update forms\n   *\n   * @param forms\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  setReportForms(forms: AjfForm[]) {\n    this._reportFormsUpdate.next((_form: AjfForm[]): AjfForm[] => {\n      return forms || [];\n    });\n  }\n\n  /**\n   * update customWidgets\n   *\n   * @param widget\n   * @param [position]\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  addCustomWidgets(widget: AjfReportCustomWidget, position?: number) {\n    this._customWidgetsUpdate.next(\n      (customWidgets: AjfReportCustomWidget[]): AjfReportCustomWidget[] => {\n        customWidgets = customWidgets || [];\n        if (position != null && position >= 0) {\n          customWidgets.splice(position, 0, widget);\n        } else {\n          customWidgets.push(widget);\n        }\n        return customWidgets;\n      }\n    );\n  }\n\n  /**\n   * reset customWidgets\n   *\n   * @param widget\n   * @param [position]\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  resetCustomWidgets() {\n    this._customWidgetsUpdate.next(\n      (customWidgets: AjfReportCustomWidget[]): AjfReportCustomWidget[] => {\n        customWidgets.length = 0;\n        return customWidgets;\n      }\n    );\n  }\n\n  /**\n   * update label of widget\n   *\n   * @param label\n   * @param position\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  changeLabelCustomWidget(label: string, position: number) {\n    this._customWidgetsUpdate.next(\n      (customWidgets: AjfReportCustomWidget[]): AjfReportCustomWidget[] => {\n        customWidgets[position].type = label;\n        return customWidgets;\n      }\n    );\n  }\n\n  /**\n   * Add an AjfReportWidget on _headerWidgetsUpdate\n   *\n   * @param widget\n   * @param [position]\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  addHeaderWidget(widget: AjfReportWidget, position?: number) {\n    this._addWidgetToContainer(this._headerWidgetsUpdate, widget, position);\n  }\n\n  /**\n   * Add an AjfReportWidget on _contentWidgetsUpdate\n   *\n   * @param widget\n   * @param [position]\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  addContentWidget(widget: AjfReportWidget, position?: number) {\n    this._addWidgetToContainer(this._contentWidgetsUpdate, widget, position);\n  }\n\n  /**\n   * Add an AjfReportWidget on _footerWidgetsUpdate\n   *\n   * @param widget\n   * @param [position]\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  addfooterWidget(widget: AjfReportWidget, position?: number) {\n    this._addWidgetToContainer(this._footerWidgetsUpdate, widget, position);\n  }\n\n  unfixedColumn(idx: number) {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      if (widget == null) { return widget; }\n      let myObj = <AjfReportLayoutWidget>widget;\n      let num = myObj.columns.length;\n      let checkSum = 0;\n      let objNum = 0;\n      let value = 1;\n      let spreadValue: any;\n      myObj.columns[idx] = 0;\n\n      for (let j = 0; j < num; j++) {\n        if (myObj.columns[j] === -1) { objNum++; }\n      }\n\n      value = Number(this.roundTo(1 / (num - objNum), 2).toFixed(2));\n\n      for (let i = 0; i < num; i++) {\n        if (myObj.columns[i] !== - 1) {\n          myObj.columns[i] = value;\n          checkSum = Number(this.roundTo(checkSum + value, 2).toFixed(2));\n        }\n      }\n\n      checkSum = Number(this.roundTo(checkSum, 2).toFixed(2));\n\n      if (checkSum > 1) {\n        spreadValue = parseFloat(this.roundTo(((checkSum - 1) % 1), 2).toFixed(2));\n        myObj.columns[idx] -= spreadValue;\n        myObj.columns[idx] = this.roundTo(myObj.columns[idx], 2);\n      } else if (checkSum < 1) {\n        myObj.columns[idx] += (1 - (checkSum % 1));\n        myObj.columns[idx] = Number(this.roundTo(myObj.columns[idx], 2).toFixed(2));\n      }\n\n      return myObj;\n    });\n  }\n\n  /**\n   * Add column on the current AjfReportLayoutWidget.\n   *\n   * When adding a column the width of the other columns is recalculated\n   * by dividing it by the number of column\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  addColumn() {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      if (widget == null) { return null; }\n      let myObj = <AjfReportLayoutWidget>widget;\n      let tempObj: number[] = [];\n      let num = myObj.columns.length + 1;\n      let checkSum = 0;\n      let objNum = 0;\n      let value = 1;\n      let tmpValue: any;\n\n      if (num > 10) {\n        throw new Error('exceed max columns');\n      }\n\n      for (let j = 0; j < num; j++) {\n        if (myObj.columns[j] === -1) { objNum++; }\n      }\n      value = Number(this.roundTo(1 / (num - objNum), 2).toFixed(2));\n\n      for (let i = 0; i < num; i++) {\n        if (myObj.columns[i] === -1) {\n          tempObj.push(-1);\n        } else {\n          tempObj.push(value);\n          checkSum = Number(this.roundTo(checkSum + value, 2).toFixed(2));\n        }\n      }\n      checkSum = Number(this.roundTo(checkSum, 2).toFixed(2));\n\n      if (checkSum > 1) {\n        tmpValue =\n          parseFloat(\n            this.roundTo(\n              ((checkSum - 1) % 1), 2\n            ).toFixed(2));\n        tempObj[0] -= tmpValue;\n        tempObj[0] = this.roundTo(tempObj[0], 2);\n      } else if (checkSum < 1) {\n        tempObj[0] += (1 - (checkSum % 1));\n        tempObj[0] = Number(this.roundTo(tempObj[0], 2).toFixed(2));\n      }\n\n      myObj.columns = tempObj;\n\n      let columnObj = {\n        widgetType: 7,\n        value: myObj.columns[myObj.columns.length - 1]\n      };\n\n      myObj.content.push(new AjfReportColumnWidget(columnObj));\n      this._saveReportEvent.emit();\n      return myObj;\n    });\n  }\n\n  removeWidgetToColumn(column: AjfReportColumnWidget, index: number) {\n    column.content.splice(index, 1);\n  }\n\n  /**\n   * This method remove a widget on the current AjfReport.\n   *\n   * @param node\n   * the position array:\n   *\n   * header -`>` headerWidgets\n   * content -`>` contentWidgets\n   * footer -`>` footerWidgets\n   * column -`>` column of layout\n   * layoutContent -`>` content of layout\n   * obj -`>` obj of layout\n   * customWidget -`>` custom widget\n   *\n   * @param idx the position array\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  remove(node: string, idx: number) {\n\n    switch (node) {\n      case 'header':\n      case 'content':\n      case 'footer':\n        this._updates[node].next(\n          (widgets: AjfReportWidgetsContainer): AjfReportWidgetsContainer => {\n            if (widgets.widgets.length === 0) {\n              throw new Error('you can not remove from empty array');\n            }\n            if (widgets.widgets[idx] == null) {\n              throw new Error('invalid index');\n            }\n            widgets.widgets.splice(idx, 1);\n            this.updateCurrentWidget(null);\n            return widgets;\n          }\n        );\n        break;\n      case 'layout':\n        this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n          if (widget == null) { return null; }\n          let myObj = <AjfReportLayoutWidget>widget;\n\n          if (myObj.columns.length === 1) {\n            myObj.content[0].content.length = 0;\n            return myObj;\n          }\n\n          if (myObj.columns[idx] == null) {\n            throw new Error('this content is undefined');\n          } else {\n            let spread = myObj.columns[idx] / (myObj.columns.length - 1);\n\n            if (myObj.columns.length > 1) {\n              myObj.columns.splice(idx, 1);\n              myObj.content.splice(idx, 1);\n            }\n\n            for (let i = 0; i < myObj.columns.length; i++) {\n              myObj.columns[i] += spread;\n            }\n            this.instantColumnValue(myObj.columns[0], 0);\n          }\n          return myObj;\n        });\n        break;\n      case 'column':\n      case 'layoutContent':\n      case 'unfixedColumn':\n        this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n          if (widget == null) { return null; }\n          let myObj = <AjfReportLayoutWidget>widget;\n\n          if (node === 'column') {\n            let clm = <AjfReportColumnWidget>widget;\n            clm.content.splice(idx, 1);\n          } else if (node === 'layoutContent') {\n            if (myObj.columns.length === 0) {\n              throw new Error('the column length is 0');\n            }\n            if (myObj.content.length === 0) {\n              throw new Error('can not remove any widget from empty content');\n            }\n            if (myObj.columns[idx] != null && myObj.content[idx] == null) {\n              throw new Error('this content is undefined');\n            }\n          } else if (node === 'unfixedColumn') {\n            if (myObj.columns[idx] !== -1) {\n              throw new Error('the column position value  isnt -1');\n            }\n            this.unfixedColumn(idx);\n          }\n          // if (node !== 'obj') {\n          //   let spread = myObj.columns[idx] / (myObj.columns.length - 1);\n          //   myObj.content.splice(idx, 1);\n          //   if (myObj.columns.length > 1) {\n          //     myObj.columns.splice(idx, 1);\n          //   }\n          //   for (let i = 0; i < myObj.columns.length; i++) {\n          //     myObj.columns[i] += spread;\n          //   }\n          //   this.instantColumnValue(myObj.columns[0], 0);\n          // }\n          return myObj;\n        });\n        break;\n      case 'customWidgets':\n        {\n          this._updates[node].next((widgets: AjfReportCustomWidget[]): AjfReportCustomWidget[] => {\n            if (widgets.length === 0) {\n              throw new Error('you can not remove from empty array');\n            }\n            if (widgets[idx] == null) {\n              throw new Error('invalid index');\n            }\n            widgets.splice(idx, 1);\n            return widgets;\n          });\n        }\n        break;\n      default: throw new Error('unknown node ' + node);\n    }\n  }\n\n  /**\n   * This method add a AjfReportWidget on the current AjfReportLayoutWidget.\n   *\n   * @param newWidget\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  addToContent(newWidget: AjfReportWidget, idx: number) {\n\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      if (widget == null) { return null; }\n      let myObj = <AjfReportLayoutWidget>widget;\n\n      if (myObj.content[idx] != null) {\n        myObj.content.splice(idx, 1);\n      }\n      myObj.content.splice(idx, 0, newWidget);\n      return myObj;\n    });\n  }\n\n  addToColumn(event: any, toColumn: AjfReportColumnWidget, position?: number) {\n    if (event.dragData && event.dragData.fromColumn != null) {\n      let fromColumn: AjfReportColumnWidget = event.dragData.fromColumn;\n      let widget: AjfReportWidget = event.dragData.widget;\n      let fromIndex: number = event.dragData.fromIndex;\n\n      fromColumn.content.splice(fromIndex, 1);\n      toColumn.content.push(widget);\n\n    } else if (event.dragData && event.dragData.arrayFrom) {\n      this.remove(event.dragData.arrayFrom, event.dragData.fromIndex);\n      toColumn.content.push(event.dragData.widget);\n    } else if (event.dragData && event.dragData.json) {\n      let obj = JSON.parse(event.dragData.json);\n      let newWidget = AjfReportWidget.fromJson(obj);\n\n      if (position != null) {\n        toColumn.content.splice(position, 0, newWidget);\n      } else {\n        toColumn.content.push(newWidget);\n      }\n    } else {\n      let obj = {\n        'widgetType': AjfReportWidgetType[event.dragData]\n      };\n      let newWidget = AjfReportWidget.fromJson(obj);\n\n      if (position != null) {\n        toColumn.content.splice(position, 0, newWidget);\n      } else {\n        toColumn.content.push(newWidget);\n      }\n    }\n  }\n  changePositionOnColumn(event: any, toColumn: AjfReportColumnWidget, toIndex: number) {\n    let fromColumn: AjfReportColumnWidget = event.dragData.fromColumn;\n    let fromIndex: number = event.dragData.fromIndex;\n    let fromWidget: AjfReportWidget = fromColumn.content[fromIndex];\n    let toWidget: AjfReportWidget = fromColumn.content[toIndex];\n\n    if (fromColumn == toColumn) {\n      fromColumn.content[fromIndex] = toWidget;\n      fromColumn.content[toIndex] = fromWidget;\n    } else {\n      fromColumn.content.splice(fromIndex, 1);\n      toColumn.content.splice(toIndex, 0, fromWidget);\n    }\n  }\n\n  /**\n   * This method add the obj on the idx position.\n   * Obj have a no specificate width and is not calculate as columns\n   *\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderService\n   */\n  fixedColumn(idx: number) {\n    this.instantColumnValue(-1, idx);\n  }\n\n  changeColumn(from: number, to: number, layoutWidget: AjfReportLayoutWidget) {\n    if (to < 0 || to >= layoutWidget.content.length) {\n      return;\n    }\n    if (from > layoutWidget.content.length - 1 && to > from) {\n      return;\n    }\n\n    let fromColumn: AjfReportColumnWidget = <AjfReportColumnWidget>layoutWidget.content[from];\n    let fromColumnValue: number = layoutWidget.columns[from];\n    let toColumn: AjfReportColumnWidget = <AjfReportColumnWidget>layoutWidget.content[to];\n    let toColumnValue: number = layoutWidget.columns[to];\n\n    layoutWidget.content[from] = toColumn;\n    layoutWidget.columns[from] = toColumnValue;\n    layoutWidget.content[to] = fromColumn;\n    layoutWidget.columns[to] = fromColumnValue;\n\n    this.updateCurrentWidget(layoutWidget);\n  }\n\n  addCustomColor(color: string) {\n\n    this._updates['color'].next((colors: string[]): string[] => {\n\n      if (colors.indexOf(color) < 0) {\n        colors.push(color);\n      }\n      return colors;\n    });\n  }\n\n  private _addWidgetToContainer(\n    subj: Subject<IAjfReportWidgetsOperation>,\n    widget: AjfReportWidget, position?: number\n  ) {\n    subj.next((widgets: AjfReportWidgetsContainer): AjfReportWidgetsContainer => {\n      if (position != null && position >= 0) {\n        widgets.widgets.splice(position, 0, widget);\n      } else {\n        widgets.widgets.push(widget);\n      }\n      return widgets;\n    });\n    this.updateCurrentWidget(widget);\n    this.setEmptyContent(false);\n  }\n\n  private _setCurrentWidgetProperty(propName: string, value: any) {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      if (widget == null) { return null; }\n      (widget as any)[propName] = value;\n      return widget;\n    });\n  }\n\n  private _addToCurrentWidgetArrayProperty(propName: string, value: any) {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      if (widget == null) { return null; }\n      const arr = (<Array<any>>(widget as any)[propName]);\n      arr.push(value);\n      (widget as any)[propName] = arr;\n      return widget;\n    });\n  }\n\n  private _removeFromCurrentWidgetArrayProperty(propName: string, idx: number) {\n    this._currentWidgetUpdate.next((widget: AjfReportWidget | null): AjfReportWidget | null => {\n      (<Array<any>>(widget as any)[propName]).splice(idx, 1);\n      return widget;\n    });\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Subscription, timer} from 'rxjs';\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {AjfReportColumnWidget} from '@ajf/core/reports';\nimport {AjfReportBuilderService} from './report-builder-service';\n\n/**\n * this component manages the report text\n *\n * @export\n */\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-column',\n  templateUrl: 'column.html',\n  styleUrls: ['column.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderColumn implements OnDestroy, OnInit {\n\n  /**\n   * if true mouse event is on dragged status\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  showActions = false;\n\n  layoutShow = false;\n\n  // this boolean sign if is dragged a widget\n  onDragged = false;\n\n\n  /**\n   * is the array of values\n   *\n   * @memberOf TableComponent\n   */\n  @Input()\n  column: AjfReportColumnWidget;\n\n  private _onDraggedSub: Subscription = Subscription.EMPTY;\n\n  addToList(event: any, idx: number, toColumn: AjfReportColumnWidget) {\n    this.onDragEndHandler();\n    if (event.dragData.fromColumn) {\n      this._service.changePositionOnColumn(event, toColumn, idx);\n    } else {\n      this._service.addToColumn(event, toColumn, idx);\n    }\n  }\n\n  /**\n   *  sign the start of mouse drag with 200 ms of delay\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragStartHandler(): void {\n    let s = timer(200)\n      .subscribe(() => {\n        s.unsubscribe();\n        this._service.dragStarted();\n      });\n  }\n\n  /**\n   * sign the end of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEndHandler(): void {\n    this._service.dragEnded();\n  }\n  constructor(\n    private _service: AjfReportBuilderService\n  ) {\n  }\n\n  ngOnInit() {\n    // this.widget = changes.widget.currentValue;\n\n    this._onDraggedSub = this._service.onDragged\n      .subscribe(x => {\n        this.onDragged = x;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this._onDraggedSub.unsubscribe();\n  }\n}\n\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfReportWidgetType} from '@ajf/core/reports';\n\nexport function ajfReportBuilderWidgetToString(widgetType: string): string {\n  return `reportbuilder-${widgetType.toLowerCase()}`;\n}\n\nexport function ajfWidgetTypeStringToIcon(widgetType: string): string {\n  return `widget-${widgetType.toLowerCase()}`;\n}\n\nexport function ajfWidgetTypeToIcon(widgetType: AjfReportWidgetType): string {\n  return ajfWidgetTypeStringToIcon(AjfReportWidgetType[widgetType]);\n}\n\nexport function ajfWidgetTypeStringToLabel(widgetType: string): string {\n  return `widgetType.${widgetType}`;\n}\n\nexport function ajfWidgetTypeToLabel(type: AjfReportWidgetType): string {\n  return ajfWidgetTypeStringToLabel(AjfReportWidgetType[type]);\n}\n\nexport function widgetReportBuilderIconName(type: AjfReportWidgetType): string {\n  return `reportbuilder-${AjfReportWidgetType[type].toLowerCase()}`;\n}\n\nexport function sanitizeConditionString(str: string): string {\n  str = str.trim();\n  while (str.indexOf('  ') > 0) {\n    str = str.replace('  ', ' ');\n  }\n  return str;\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n  OnDestroy,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {Subscription, timer} from 'rxjs';\n\nimport {AjfCondition} from '@ajf/core/models';\nimport {AjfFormVariables} from './models';\nimport {AjfReportBuilderService} from './report-builder-service';\nimport {sanitizeConditionString} from './utils';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-condition-editor',\n  templateUrl: 'condition-editor.html',\n  styleUrls: ['condition-editor.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an ajf builder builder condition editor\n * @implements : OnDestroy\n * @implements : AfterViewInit\n */\nexport class AjfReportBuilderConditionEditor implements OnInit, OnDestroy {\n\n  @Input()\n  visibility: AjfCondition;\n\n  formsVariables: AjfFormVariables[];\n  isValid = false;\n  names: string[] = [];\n  currentId: number;\n\n  // conditionText is a string\n  conditionText = 'true';\n\n  a: any;\n  b: any;\n\n\n  @ViewChild('conditionTextArea') conditionTextArea: any;\n  @ViewChild('errorMessage') errorMessage: any;\n\n  //  operators is an array of any type that contains all allow operators\n  operators: string[] = [\n    '( )', '\\' \\'',\n    '<', '<=', '==', '>=', '>', '!=', '!',\n    '&&', '||',\n    '+', '-', '*', '/', '%',\n    'true', 'false'\n  ];\n\n  private _conditionNamesSub: Subscription = Subscription.EMPTY;\n\n  /**\n   * this constructor will init current condition by ajfBuilderservice\n   * and init condition and availableFieldNames subscriptions\n   */\n  constructor(\n    private _service: AjfReportBuilderService\n  ) {\n\n  }\n  extractNames(formsVariables: AjfFormVariables[]) {\n    this.names.length = 0;\n    for (let i = 0; i < formsVariables.length; i++) {\n      this.names = this.names.concat(formsVariables[i].names);\n    }\n  }\n\n  setCurrent(id: number, index: number) {\n    this.currentId = id;\n    this.appendText(this.formsVariables[id].names[index]);\n    this.checkValidation();\n  }\n\n  /**\n   * this method will return success if the current condtion is valid\n   * @return boolean\n   */\n  validateCondition(): boolean {\n    return AjfCondition.validate(this.conditionText, this.names);\n  }\n\n  // TODO complete the comment\n  /**\n   * this method will append text to json\n   * @param text      : string -\n   * @param goBackNum : number -\n   */\n  appendText(text: string, _goBackNum?: number): void {\n    if (text == null || this.conditionTextArea == null) {\n      return;\n    }\n\n    let el = this.conditionTextArea.nativeElement;\n    let sStart: number = Math.min(el.selectionStart, el.selectionEnd);\n    let sEnd: number = Math.max(el.selectionStart, el.selectionEnd);\n    let startingString: string = this.conditionText.substr(0, sStart);\n    let endingString: string = this.conditionText.substr(sEnd);\n    let initialLenght: number = startingString.length;\n    let newStr = '';\n\n    startingString = sanitizeConditionString(startingString);\n    endingString = sanitizeConditionString(endingString);\n    sStart += startingString.length - initialLenght +\n      text.length + (startingString.length > 0 ? 2 : 1);\n    newStr = startingString.length > 0 ? `${startingString} ` : '';\n    this.conditionText = `${newStr}${text} ${endingString}`;\n\n    const s = timer(0).subscribe(() => {\n      if (s && !s.closed) { s.unsubscribe(); }\n      if (el.createTextRange) {\n        let range = el.createTextRange();\n        range.move('character', sStart);\n        range.select();\n      } else {\n        if (el.selectionStart) {\n          el.focus();\n          el.setSelectionRange(sStart, sStart);\n        } else {\n          el.focus();\n        }\n      }\n    });\n  }\n\n  checkValidation() {\n    this.isValid = this.validateCondition();\n    if (this.isValid) {\n      this.saveCondition();\n    }\n  }\n\n  /**\n   * this method will save current condition\n   */\n  saveCondition(): void {\n    this._service.saveCondition(this.conditionText);\n  }\n\n  /**\n   * this method will hide the error message\n   */\n  hideErrorMessage(): void {\n    if (this.errorMessage == null) {\n      return;\n    }\n  }\n\n  ngOnInit(): void {\n    this.conditionText = this.visibility.condition;\n    this.isValid = true;\n\n    if (this.conditionText == 'true') {\n      this.conditionText = '';\n    }\n\n    this._conditionNamesSub = this._service.conditionNames\n      .subscribe((x) => {\n        this.formsVariables = x;\n        if (x != null) {\n          this.extractNames(this.formsVariables);\n        }\n      });\n\n  }\n  /**\n   * this method will destroy a conditionSubscriptions\n   */\n  ngOnDestroy(): void {\n    this._conditionNamesSub.unsubscribe();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterViewChecked, ChangeDetectionStrategy, ChangeDetectorRef, Component,\n  OnInit, OnDestroy, ViewEncapsulation\n} from '@angular/core';\nimport {CdkDrag, CdkDragDrop} from '@angular/cdk/drag-drop';\n\nimport {Observable, Subscription, timer} from 'rxjs';\n\nimport {\n  AjfReportLayoutWidget, AjfReportStyles, AjfReportWidget, AjfReportWidgetType\n} from '@ajf/core/reports';\nimport {deepCopy} from '@ajf/core/utils';\nimport {AjfReportBuilderDragData} from './report-builder-drag-data';\nimport {AjfReportBuilderService} from './report-builder-service';\n\n/**\n *  manage the content page\n *\n * @export\n */\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-content',\n  templateUrl: 'content.html',\n  styleUrls: ['content.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '(mouseover)': 'onMouseOver()',\n    '(mouseleave)': 'onMouseLeave()'\n  }\n})\nexport class AjfReportBuilderContent implements OnInit, AfterViewChecked, OnDestroy {\n  onMouseOver(): void {\n    this.showActions = true;\n    this.service.overStarted();\n  }\n\n  onMouseLeave(): void {\n    this.showActions = false;\n    this.service.overEnded();\n  }\n\n  canDropPredicate(\n    dropZones: string[]\n  ): (item: CdkDrag<AjfReportBuilderDragData>) => boolean {\n    return item => {\n      item.data.dropZones.forEach(d => {\n        if (dropZones.indexOf(d) > -1) { return true; }\n      });\n      return false;\n    };\n  }\n\n  reportStyles: Observable<AjfReportStyles>;\n\n  // this boolean sign if is dragged a widget\n  onDragged = false;\n\n\n  /**\n   *  observe the status of the fixed zoom\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  fixedZoom = false;\n\n  // this boolean sign if widget is in drag enter status\n  onDragEnter: any = {};\n\n\n  show = false;\n\n\n  // this array contains all widget locate in header zone\n  headerWidgets: AjfReportWidget[] = [];\n  /**\n   * observe the css style of header\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  headerStyles: Observable<AjfReportStyles>;\n\n  // this array contains all widget locate in content zone\n  contentWidgets: AjfReportWidget[] = [];\n\n  /**\n   * observe the css style of content\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  contentStyles: Observable<AjfReportStyles>;\n\n  // this array contains all widget locate in footer zone\n  footerWidgets: AjfReportWidget[] = [];\n\n\n  onOver: boolean = false;\n  /**\n   * observe the css style of footer\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  footerStyles: Observable<AjfReportStyles>;\n\n\n  // this is the current widget\n  currentWidget: AjfReportWidget | null = null;\n\n\n  /**\n   * if true mouse event is on dragged status\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  showActions = false;\n\n  private _onDraggedSub: Subscription = Subscription.EMPTY;\n  private _fixedZoomSub: Subscription = Subscription.EMPTY;\n  private _onDragEnterSub: Subscription = Subscription.EMPTY;\n  private _headerWidgetsSub: Subscription = Subscription.EMPTY;\n  private _contentWidgetsSub: Subscription = Subscription.EMPTY;\n  private _footerWidgetsSub: Subscription = Subscription.EMPTY;\n  private _onOverSub: Subscription = Subscription.EMPTY;\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n    private service: AjfReportBuilderService,\n    private cdRef: ChangeDetectorRef) {\n    this.headerStyles = this.service.headerStyles;\n    this.contentStyles = this.service.contentStyles;\n    this.footerStyles = this.service.footerStyles;\n  }\n\n  isLayout(widget: AjfReportWidget): boolean {\n    if (widget instanceof AjfReportLayoutWidget) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   *  sign the start of mouse drag with 200 ms of delay\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragStartHandler(): void {\n    let s = timer(200)\n      .subscribe(() => {\n        if (s != null) { s.unsubscribe(); }\n        this.service.dragStarted();\n      });\n  }\n\n  /**\n   * sign the end of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEndHandler(): void {\n    this.service.dragEnded();\n  }\n\n  /**\n   *  sign the enter of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEnterHandler(array: string, index: number): void {\n    this.service.dragEnter(array, index);\n  }\n\n  /**\n   * sign the leave of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragLeaveHandler(): void {\n    this.service.dragLeave();\n  }\n\n\n  /**\n   *  return true if array and index is === with array and index of onDragEnter\n   *\n   * @param array\n   * @param index\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEnterCheck(array: string, index: number): boolean {\n    if (\n      (array === this.onDragEnter.array) &&\n      ((index === this.onDragEnter.index) || (index === -1))\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * remove widget element from type array in idx position\n   *\n   * @param type can be header content or footer\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  remove(type: string, idx: number) {\n    this.service.remove(type, idx);\n  }\n\n  /**\n   * add widget element into type array in idx position\n   *\n   * @param type\n   * @param event\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  addToList(arrayTo: string, event: CdkDragDrop<AjfReportBuilderDragData>, to?: number) {\n    this.onDragEndHandler();\n    this.service.setOrigin(arrayTo);\n    const itemData = event.item.data as AjfReportBuilderDragData;\n    if (itemData.fromColumn != null) {\n        this.service.removeWidgetToColumn(itemData.fromColumn, itemData.fromIndex!);\n        this.currentWidget = itemData.widget!;\n    } else if (itemData.widget != null) {\n      this.remove(itemData.arrayFrom!, itemData.from!);\n      this.currentWidget = itemData.widget;\n    } else if (itemData.json != null && itemData.json !== '') {\n      this.currentWidget = AjfReportWidget.fromJson(JSON.parse(deepCopy(itemData.json)));\n    } else {\n      let obj = {\n        'widgetType': (AjfReportWidgetType as any)[itemData.widgetType!]\n      };\n      this.currentWidget = AjfReportWidget.fromJson(obj);\n    }\n    this.onDragEndHandler();\n    if (this.currentWidget != null) {\n      switch (arrayTo) {\n        case 'header':\n          this.service.addHeaderWidget(this.currentWidget, to);\n          break;\n        case 'content':\n          this.service.addContentWidget(this.currentWidget, to);\n          break;\n        case 'footer':\n          this.service.addfooterWidget(this.currentWidget, to);\n          break;\n      }\n    }\n    this.onDragLeaveHandler();\n  }\n\n  ngOnInit(): void {\n    this._headerWidgetsSub = this.service.headerWidgets\n      .subscribe(x => {\n        this.headerWidgets = x.widgets;\n      });\n    this._contentWidgetsSub = this.service.contentWidgets\n      .subscribe(x => {\n        this.contentWidgets = x.widgets;\n      });\n    this._footerWidgetsSub = this.service.footerWidgets\n      .subscribe(x => {\n        this.footerWidgets = x.widgets;\n      });\n    this._onDraggedSub = this.service.onDragged\n      .subscribe(x => {\n        this.onDragged = x;\n      });\n    this._fixedZoomSub = this.service.fixedZoom\n      .subscribe(bool => {\n        this.fixedZoom = bool;\n      });\n    this._onDragEnterSub = this.service.onDragEnter\n      .subscribe(x => {\n        this.onDragEnter = x;\n      });\n    this._onOverSub = this.service.onOver\n      .subscribe(x => {\n        this.onOver = x;\n      });\n  }\n\n  ngAfterViewChecked() {\n    this.cdRef.detectChanges();\n  }\n\n  ngOnDestroy(): void {\n    [\n      this._headerWidgetsSub, this._contentWidgetsSub, this._footerWidgetsSub,\n      this._currentWidgetSub, this._onDraggedSub, this._fixedZoomSub,\n      this._onOverSub, this._onDragEnterSub\n    ].forEach(s => { s.unsubscribe(); });\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {AjfReportBuilderService} from './report-builder-service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'custom-widget-dialog',\n  templateUrl: 'custom-widget-dialog.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderCustomWidgetDialog {\n  @Input()\n  label: string;\n  @Input()\n  position: number;\n\n  constructor(\n    private service: AjfReportBuilderService,\n    private _dialogRef: MatDialogRef<AjfReportBuilderCustomWidgetDialog>\n  ) { }\n\n  changeLabel() {\n    this.service.changeLabelCustomWidget(this.label, this.position);\n    this._dialogRef.close();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation} from '@angular/core';\n\nimport {AjfReportBuilderService} from './report-builder-service';\nimport {ajfWidgetTypeStringToIcon, ajfWidgetTypeStringToLabel} from './utils';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-custom-widget-toolbar-button',\n  inputs: ['widgetType', 'position'],\n  templateUrl: 'custom-widget-toolbar-button.html',\n  styleUrls: ['custom-widget-toolbar-button.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an ajf builder field toolbar button\n * @implements : OnInit\n */\nexport class AjfReportBuilderCustomWidgetToolbarButton implements OnInit {\n  widgetType: string;\n  widgetIcon: string;\n  widgetLabel: string;\n  position: number;\n  customWidgets: any[] = [];\n\n  // {...t, dropZones: ['header','content','footer','column','widget']}\n\n  /**\n   * this constructor will init icon registry\n   */\n  constructor(\n    private _service: AjfReportBuilderService\n  ) {\n  }\n\n  /**\n   * this method call a service method for remove custom widget\n   *\n   * @memberOf AjfReportBuilderCustomWidgetToolbarButton\n   */\n  remove() {\n    this._service.remove('customWidgets', this.position);\n  }\n  /**\n   * this method will init  fieldIcon and fieldLabel\n   */\n  ngOnInit(): void {\n    this.widgetIcon = ajfWidgetTypeStringToIcon(this.widgetType);\n    this.widgetLabel = ajfWidgetTypeStringToLabel(this.widgetType);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy, Component, OnDestroy, OnInit, ViewEncapsulation\n} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\n\nimport {Subscription, timer} from 'rxjs';\n\nimport {AjfReportBuilderCustomWidgetDialog} from './custom-widget-dialog';\nimport {AjfReportBuilderService} from './report-builder-service';\n\nexport interface AjfReportStyles {\n  [style: string]: any;\n}\n\nexport interface CustomWidget {\n  json: string;\n  type: string;\n}\n\nexport interface CustomWidgets {\n  widgets: CustomWidget[];\n}\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-custom-widgets-toolbar',\n  styleUrls: ['custom-widgets-toolbar.css'],\n  templateUrl: 'custom-widgets-toolbar.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an ajf builder toolbar\n * @implements : OnDestroy\n */\nexport class AjfReportBuilderCustomWidgetsToolbar implements OnDestroy, OnInit {\n  customWidgets: CustomWidget[] = [];\n\n  private _customWidgetsSub: Subscription = Subscription.EMPTY;\n\n  private _dialogRef: MatDialogRef<AjfReportBuilderCustomWidgetDialog>;\n\n  private _threeColumnsLayout: string =\n  '{\"widgetType\":0,' +\n  '\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"columns\":[0.34,0.33,0.33],' +\n  '\"content\":' +\n  '[{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]},' +\n  '{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]},' +\n  '{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]}]}';\n  private _fourColumnsLayout: string =\n  '{\"widgetType\":0,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},' +\n  '\"columns\":[0.25,0.25,0.25,0.25],\"content\":' +\n  '[{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]},' +\n  '{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]},' +\n  '{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]},' +\n  '{\"widgetType\":7,\"content\":[],\"styles\":{},\"visibility\":{\"condition\":\"true\"},\"content\":[]}]}';\n\n  constructor(\n    private service: AjfReportBuilderService,\n    public dialog: MatDialog) {\n  }\n\n  openDialog(idx: number) {\n    this._dialogRef = this.dialog.open(AjfReportBuilderCustomWidgetDialog);\n    this._dialogRef.componentInstance.label = this.customWidgets[idx].type;\n    this._dialogRef.componentInstance.position = idx;\n  }\n\n\n  /**\n   *  sign the start of mouse drag with 200 ms of delay\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragStartHandler(): void {\n    let s = timer(200)\n      .subscribe(() => {\n        if (s != null) { s.unsubscribe(); }\n        this.service.dragStarted();\n      });\n  }\n\n  /**\n   * sign the end of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEndHandler(): void {\n    this.service.dragEnded();\n  }\n\n  /**\n   *  sign the enter of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEnterHandler(array: string, index: number): void {\n    this.service.dragEnter(array, index);\n  }\n\n  /**\n   * sign the leave of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragLeaveHandler(): void {\n    this.service.dragLeave();\n  }\n  ngOnInit(): void {\n    this._customWidgetsSub = this.service.customWidgets\n      .subscribe(x => {\n        this.customWidgets = x;\n        if (\n          this.customWidgets.length > 0 &&\n          this.customWidgets[this.customWidgets.length - 1].type == ''\n        ) {\n          this.openDialog(this.customWidgets.length - 1);\n        }\n      });\n    this.service.addCustomWidgets({\n      json: this._threeColumnsLayout,\n      type: 'LayoutWidgetWith3Columns',\n    });\n    this.service.addCustomWidgets({\n      json: this._fourColumnsLayout,\n      type: 'LayoutWidgetWith4Columns'\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._customWidgetsSub.unsubscribe();\n    this.service.resetCustomWidgets();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ViewChild,\n  Input,\n  OnInit,\n  AfterViewChecked,\n  OnDestroy,\n  ViewEncapsulation\n} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {Subscription} from 'rxjs';\n\nimport {AjfFieldType, AjfValidationService} from '@ajf/core/forms';\nimport {AjfImageType} from '@ajf/core/image';\nimport {AjfFormula, AjfValidatedProperty} from '@ajf/core/models';\nimport {\n  AjfAggregationType, AjfDataset, AjfReportDataWidget, AjfReportImageWidget, AjfReportWidget\n} from '@ajf/core/reports';\nimport {sizedEnumToStringArray} from '@ajf/core/utils';\nimport {AjfMonacoEditor} from '@ajf/material/monaco-editor';\nimport {AjfFormVariables} from './models';\nimport {AjfReportBuilderService} from './report-builder-service';\n\nexport enum AjfDataType {\n  MainData,\n  Dataset,\n  RelatedData,\n  LENGTH\n}\ndeclare var monaco: any;\n\n@Component({\n  moduleId: module.id,\n  selector: 'forms-analyzer-dialog',\n  templateUrl: 'forms-analyzer-dialog.html',\n  styleUrls: ['forms-analyzer-dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderFormsAnalyzerDialog implements OnInit, AfterViewChecked, OnDestroy {\n\n  aggregationTypes: string[] = sizedEnumToStringArray(AjfAggregationType);\n\n  //  operators is an array of any type that contains all allow operators\n  operators: string[] = [\n    'true', 'false', '( )', '\\' \\'',\n    '<', '<=', '>=', '>', '!=', '!',\n    '&&', '||',\n    '+', '-', '*', '/', '%', '=='\n  ];\n\n  formulaText: string = '';\n  formulaDate: string = '';\n  safeFormulaText: string = '';\n  label: string = '';\n  condition: string = '';\n  aggregationType: AjfAggregationType = AjfAggregationType.Sum;\n  dataset: AjfDataset;\n  currentId: number = 0;\n  currentIndex: number = 0;\n  labels: string[] = [];\n  currentWidget: AjfReportWidget | null = null;\n  formsVariables: AjfFormVariables[];\n  formsVariablesName: string[] = [];\n  formsVariablesType: string[] = [];\n  isValid: boolean;\n\n  @Input()\n  formula: string;\n\n  @Input()\n  isFormula: boolean;\n\n  @Input()\n  labelText: string;\n\n  @Input()\n  aggregation: number;\n\n  @Input()\n  init: boolean;\n\n  @Input()\n  level: number;\n\n  @Input()\n  index: number;\n\n  @Input()\n  mainIndex: number;\n\n  @Input()\n  reference: any;\n\n  @ViewChild('formulaTextArea') formulaTextArea: any;\n  @ViewChild('errorMessage') errorMessage: any;\n  @ViewChild(AjfMonacoEditor) monacoEditor: AjfMonacoEditor;\n\n  private _formAnalyzerSub: Subscription = Subscription.EMPTY;\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n  private _first: boolean = true;\n\n  constructor(\n    private _service: AjfReportBuilderService,\n    private _dialogRef: MatDialogRef<AjfReportBuilderFormsAnalyzerDialog>,\n    _: AjfValidationService\n  ) {\n    if (this.init == false) {\n      this.formulaText = '';\n      this.aggregationType = AjfAggregationType.Sum;\n    }\n    this._currentWidgetSub = this._service.currentWidget\n      .subscribe(x => {\n        if (x != null) {\n\n          this.currentWidget = <AjfReportDataWidget>x;\n\n          if (this.currentWidget.widgetType == 2) {\n            let myObj: AjfReportImageWidget = <AjfReportImageWidget>this.currentWidget;\n            if (myObj.imageType == AjfImageType.Flag) {\n              this.formula = (myObj.flag) ? myObj.flag.formula : '';\n            } else {\n              this.formula = (myObj.icon) ? myObj.icon.formula : '';\n            }\n          }\n\n        }\n      });\n\n    this._formAnalyzerSub = this._service.formsVariables\n      .subscribe((x) => {\n        if (x != null) {\n          this.formsVariables = x;\n        }\n      });\n  }\n\n  onEditorInit(): void {\n    monaco.languages.typescript.javascriptDefaults.setDiagnosticsOptions({\n      noSemanticValidation: false,\n      noSyntaxValidation: false\n    });\n\n    monaco.languages.typescript.javascriptDefaults.setCompilerOptions({\n      target: monaco.languages.typescript.ScriptTarget.ES2015,\n      allowNonTsExtensions: true,\n      allowJs: true,\n      module: monaco.languages.typescript.ModuleKind.None\n    });\n\n    try {\n      monaco.languages.typescript.javascriptDefaults.addExtraLib(\n        '', 'condition-editor-variables.d.ts'\n      );\n    } catch (e) {\n      monaco.languages.typescript.javascriptDefaults\n        ._extraLibs['condition-editor-variables.d.ts'] = '';\n    }\n    try {\n      monaco.languages.typescript.javascriptDefaults.addExtraLib(\n        '', 'condition-editor-functions.d.ts'\n      );\n    } catch (e) {\n      monaco.languages.typescript.javascriptDefaults\n        ._extraLibs['condition-editor-functions.d.ts'] = '';\n    }\n\n    this._initFormsVariablesNames();\n    this._updateVariables();\n    this._updateFunctions();\n  }\n\n\n  private _initFormsVariablesNames(): void {\n    this.formsVariables.forEach((formVar) => {\n      formVar.names.forEach((name) => {\n        this.formsVariablesName.push(name);\n      });\n      formVar.types.forEach((type) => {\n        this.formsVariablesType.push(this._fieldVarType(type) || '');\n      });\n    });\n  }\n\n\n  private _updateVariables(): void {\n    if (this.formsVariables == null) { return; }\n    try {\n      let value: string = '';\n\n      for (let i = 0; i < this.formsVariablesName.length; i++) {\n        value += `declare const ${this.formsVariablesName[i]}: ${this.formsVariablesType[i]};`;\n      }\n\n      value += `\\n`;\n      monaco.languages.typescript.javascriptDefaults\n        ._extraLibs['condition-editor-variables.d.ts'] = value;\n    } catch (e) { }\n  }\n\n  private _updateFunctions(): void {\n    try {\n      monaco.languages.typescript.javascriptDefaults\n        ._extraLibs['condition-editor-functions.d.ts'] = AjfValidatedProperty.UTIL_FUNCTIONS;\n    } catch (e) { }\n  }\n\n  private _fieldVarType(fieldType: AjfFieldType): string | null {\n    switch (fieldType) {\n      case AjfFieldType.Boolean:\n        return 'boolean';\n      case AjfFieldType.Date:\n      case AjfFieldType.DateInput:\n      case AjfFieldType.Time:\n        return 'Date';\n      case AjfFieldType.Empty:\n        return 'void';\n      case AjfFieldType.Formula:\n        return 'number';\n      case AjfFieldType.MultipleChoice:\n      case AjfFieldType.SingleChoice:\n        return 'any';\n      case AjfFieldType.Number:\n        return 'number';\n      case AjfFieldType.Table:\n        return 'Array';\n      case AjfFieldType.String:\n      case AjfFieldType.Text:\n        return 'string';\n    }\n    return null;\n  }\n\n  setCurrent(id: number, label: string, index: number) {\n    if (!this.init) {\n      this.label = label;\n      this.init = true;\n    }\n    this.insertVariable(this.formsVariables[id].names[index] || '');\n  }\n\n  setCurrentId(id: number) {\n    this.currentId = id;\n    this.labels = this.formsVariables[id].labels;\n    this._updateVariables();\n  }\n\n  setAggregationType(type: AjfAggregationType) {\n    this.aggregationType = type;\n  }\n\n  checkValidation() {\n    if (this.validateFormula()) {\n      this.safeFormulaText = this.formulaText;\n      this.isValid = true;\n    } else {\n      this.isValid = false;\n    }\n    if (this.formulaText == '') {\n      this.isValid = false;\n    }\n  }\n\n  validateFormula(): boolean {\n    if (this.formulaText == '') {\n      this.init = false;\n    }\n    if (this.formsVariables == null) {\n      return false;\n    } else {\n      return AjfFormula.validate(this.formulaText, this.formsVariablesName);\n    }\n  }\n\n  saveDataset() {\n    if (this.currentWidget != null) {\n      switch (this.currentWidget.widgetType) {\n        case 2:\n          this.saveImageFormula();\n        case 3:\n          this.saveFormulaHtml();\n          break;\n        case 4:\n          this.saveChartFormula();\n          break;\n        case 5:\n          this.saveTableFormula();\n          break;\n      }\n    }\n    this.close();\n  }\n\n  saveImageFormula() {\n    this._service.saveImageFormula(new AjfFormula(this.formulaText));\n  }\n\n  saveFormulaHtml() {\n    this._service.saveFormulaToHtml(this.formulaText, this.reference);\n  }\n\n  saveChartFormula(): void {\n    this._service.saveChartFormula(\n      this.label,\n      this.level,\n      this.mainIndex,\n      this.index,\n      this.formulaText,\n      this.aggregationType);\n  }\n\n  saveTableFormula(): void {\n    this._service.saveTableFormula(\n      this.label,\n      this.aggregationType,\n      this.formulaText,\n      this.mainIndex,\n      this.index);\n  }\n\n  hideErrorMessage(): void {\n    if (this.errorMessage == null) {\n      return;\n    }\n  }\n\n  insertVariable(variable: string): void {\n    if (this.monacoEditor != null && this.monacoEditor.editor != null) {\n      const editor = this.monacoEditor.editor;\n      let value: string[] = editor.getValue().split('\\n');\n      let position: { column: number, lineNumber: number } = editor.getPosition();\n      const ln = position.lineNumber - 1;\n      let line = value[ln];\n      let col = position.column - 1;\n      line = line.substring(0, col) + variable + line.substring(col);\n      value[ln] = line;\n      position.column += variable.length;\n      this.monacoEditor.value = value.join('\\n');\n      editor.setPosition(position);\n      editor.focus();\n      this.formulaText = editor.getValue();\n      this.checkValidation();\n    }\n  }\n\n  setVariable(variable: string): void {\n    if (this.monacoEditor != null && this.monacoEditor.editor != null) {\n      const editor = this.monacoEditor.editor;\n      editor.setValue(variable);\n    }\n  }\n\n  reset() {\n    this.formulaText = '';\n    this.aggregationType = AjfAggregationType.None;\n  }\n\n  close() {\n    this.reset();\n    this._dialogRef.close();\n  }\n\n  ngOnInit() {\n    this.formulaText = this.formula;\n    this.aggregationType = this.aggregation;\n    this.label = this.labelText;\n\n    if (this.formulaText == '' || this.formulaText == null) {\n      this.isValid = false;\n    } else {\n      this.isValid = true;\n    }\n\n  }\n\n  ngAfterViewChecked() {\n    if (this._first && this.monacoEditor != null && this.monacoEditor.editor != null) {\n      this.insertVariable(this.formulaText || '');\n      this._first = false;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._formAnalyzerSub.unsubscribe();\n    this._currentWidgetSub.unsubscribe();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\n\nimport {Subscription} from 'rxjs';\n\nimport {AjfForm} from '@ajf/core/forms';\nimport {\n  AjfAggregationType,\n  AjfChartType,\n  AjfDataset,\n  AjfReportChartWidget,\n  AjfReportDataWidget,\n  AjfReportWidgetType,\n  AjfReportWidget,\n} from '@ajf/core/reports';\n\nimport {AjfReportBuilderFormsAnalyzerDialog} from './forms-analyzer-dialog';\nimport {AjfFormVariables} from './models';\nimport {AjfReportBuilderService} from './report-builder-service';\n\n/**\n * this component provides the support for connect the form fields with the report\n *\n * @export\n */\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-forms-analyzer',\n  templateUrl: 'forms-analyzer.html',\n  styleUrls: ['forms-analyzer.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderFormsAnalyzer implements OnDestroy {\n  currentWidget: AjfReportWidget | null = null;\n\n  forms: AjfForm[] = [];\n\n  formsVariables: AjfFormVariables[];\n  choicesOrigins: any = {};\n\n  dialogRef: MatDialogRef<AjfReportBuilderFormsAnalyzerDialog>;\n\n  currentMainDataIndex: number = -1;\n  private _dataset: AjfDataset[][] = [];\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n  private _formAnalyzerSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n    private _service: AjfReportBuilderService,\n    public dialog: MatDialog\n  ) {\n    this._currentWidgetSub = this._service.currentWidget\n      .subscribe(x => {\n        if (x != null) {\n          this.currentWidget = x;\n          // this._dataset = myObj.dataset;\n        } else {\n          this.currentWidget = null;\n        }\n      });\n\n\n    this._formAnalyzerSub = this._service.formsVariables\n      .subscribe((x) => {\n        if (x != null) {\n          this.formsVariables = x;\n        }\n      });\n\n\n  }\n\n  setCurrentIndex(index: number) {\n    this.currentMainDataIndex = index;\n  }\n\n  isSelected(index: number): string {\n    if (index === this.currentMainDataIndex) {\n      return 'primary';\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   *  get the X components label of the chart.\n   *  they are contained in the first row of dataset\n   *\n   *\n   * @memberof AjfReportBuilderFormsAnalyzer\n   */\n  getMainData(): string[] {\n    if (this._dataset[0] != null) {\n      let mainData: string[] = [];\n\n      for (let i = 0; i < this._dataset[0].length; i++) {\n        mainData.push(this._dataset[0][i].label);\n      }\n      return mainData;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   *  get the Y components label of the chart.\n   *  they are contained in the first column of dataset\n   *\n   *\n   * @memberof AjfReportBuilderFormsAnalyzer\n   */\n  getDataset(): string[] {\n    let dataset: string[] = [];\n    if (this._dataset[0] != null) {\n      for (let i = 1; i < this._dataset.length; i++) {\n        dataset.push(this._dataset[i][0].label);\n      }\n      return dataset;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * get the related data label of the chart.\n   * they are contained in the row of the Y component\n   *\n   *\n   * @memberof AjfReportBuilderFormsAnalyzer\n   */\n  getRelatedData(): string[] {\n    if (this._dataset[this.currentMainDataIndex + 1] != null) {\n      let relatedData: string[] = [];\n\n      for (let i = 1; i < this._dataset[this.currentMainDataIndex + 1].length; i++) {\n        relatedData.push(this._dataset[this.currentMainDataIndex + 1][i].label);\n      }\n      return relatedData;\n    } else {\n      return [];\n    }\n  }\n\n  getTableHeader(): string[] {\n    let mainData: string[] = [];\n    if (this._dataset != null) {\n      for (let i = 0; i < this._dataset.length; i++) {\n        if (this._dataset[i][0] != null) {\n          mainData.push(this._dataset[i][0].label);\n        }\n      }\n    }\n    return mainData;\n  }\n\n  getTableData(): string[] {\n    if (this._dataset[this.currentMainDataIndex] != null) {\n      let tableData: string[] = [];\n\n      for (let i = 1; i < this._dataset[this.currentMainDataIndex].length; i++) {\n        if (this._dataset[this.currentMainDataIndex][i] != null) {\n          tableData.push(this._dataset[this.currentMainDataIndex][i].label);\n        }\n      }\n      return tableData;\n    } else {\n      return [];\n    }\n  }\n\n  needMainData(): boolean {\n    let myObj = <AjfReportChartWidget>this.currentWidget;\n    if (\n      myObj.chartType === AjfChartType.Scatter ||\n      myObj.chartType === AjfChartType.Bubble\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  removeMainData(index: number) {\n    this._service.removeMainData(index);\n  }\n\n  removeDataset(index: number) {\n    this.currentMainDataIndex = index;\n    this._service.removeRelatedData(this.currentMainDataIndex, -1);\n  }\n  removeTableMainData(index: number) {\n    this._service.removeTableMainData(index);\n  }\n\n  removeRelatedData(index: number) {\n    this._service.removeRelatedData(this.currentMainDataIndex, index);\n  }\n\n  removeData(mainIndex: number, index: number) {\n    this._service.removeData(mainIndex, index);\n  }\n\n  /**\n   *\n   *\n   *\n   * @param index\n   * @param editMode\n   *\n   * @memberof AjfReportBuilderFormsAnalyzer\n   */\n  openDialog(level: number, mainIndex: number, index: number, editMode: boolean) {\n\n    this.dialogRef = this.dialog.open(AjfReportBuilderFormsAnalyzerDialog);\n\n    if (editMode) {\n      if (level === 1 && index === -1) {\n        index = 0;\n      }\n      if (level === 1) {\n        if (\n          this.currentWidget != null &&\n          this.currentWidget.widgetType == AjfReportWidgetType.Chart\n        ) {\n          mainIndex++;\n        }\n        index++;\n      }\n\n      this.dialogRef.componentInstance.labelText =\n        this._dataset[mainIndex] &&\n        this._dataset[mainIndex][index].label || '';\n      /* this.dialogRef.componentInstance.formula =\n        this._dataset[mainIndex] &&\n        this._dataset[mainIndex][index].formula.formula || ''; */\n      this.dialogRef.componentInstance.aggregation =\n        this._dataset[mainIndex] &&\n        this._dataset[mainIndex][index].aggregation.aggregation || AjfAggregationType.None;\n    } else {\n      this.dialogRef.componentInstance.labelText = '';\n      this.dialogRef.componentInstance.formula = '';\n      this.dialogRef.componentInstance.aggregation = 0;\n    }\n\n    // this.dialogRef.componentInstance.formsVariables = this.formsVariables;\n    this.dialogRef.componentInstance.currentWidget = <AjfReportDataWidget>this.currentWidget;\n    this.dialogRef.componentInstance.level = level;\n    this.dialogRef.componentInstance.mainIndex = mainIndex;\n    this.dialogRef.componentInstance.index = index;\n    this.dialogRef.componentInstance.init = false;\n  }\n\n  openDialogAddMainData() {\n    this.openDialog(0, -1, -1, false);\n  }\n\n  openDialogChartEditMainData() {\n    this.openDialog(0, 0, this.currentMainDataIndex, true);\n  }\n\n  openDialogTableEditMainData() {\n    this.openDialog(0, this.currentMainDataIndex, 0, true);\n  }\n\n  openDialogChartAddDataset() {\n    this.openDialog(1, -1, -1, false);\n  }\n  openDialogTableAddDataset() {\n    this.openDialog(1, this.currentMainDataIndex, -1, false);\n  }\n  openDialogChartAddDataOfDataset() {\n    this.openDialog(1, this.currentMainDataIndex, -1, false);\n  }\n  openDialogChartEditDataset() {\n    this.openDialog(1, this.currentMainDataIndex, -1, true);\n  }\n  openDialogTableEditDataset(index: number) {\n    this.openDialog(1, this.currentMainDataIndex, index, true);\n  }\n  openDialogChartEditDataOfDataset(index: number) {\n    this.openDialog(1, this.currentMainDataIndex, index, true);\n  }\n\n  ngOnDestroy(): void {\n    this._currentWidgetSub.unsubscribe();\n    this._formAnalyzerSub.unsubscribe();\n  }\n\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Injectable, Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'ajfImageFilter'\n})\n@Injectable()\nexport class AjfImageFilterPipe implements PipeTransform {\n  transform(items: any[], args: any): any {\n    return items.filter(item =>\n      (args.length === 0) || item.info.toLowerCase().includes(args.toLowerCase()));\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy, Component, Input, Output, EventEmitter, ViewEncapsulation\n} from '@angular/core';\n\nimport {AjfReportBuilderService} from './report-builder-service';\n\n/**\n * this component handle a group of image object\n * there are 2 types of view\n *  ajf-icon and class\n *\n * take a json in input\n *  'icon': 'false', // if true ajf-icon activated\n *  'class': ['flag-icon'], // add class in object style\n *  'prefixClass': 'flag-icon-', // prefix of class contained on data set\n *  'title': 'flags', title of data set\n *  'data': [\n *    {\n *      'class': 'dz', strind added on prefix\n *      'info': 'Algeria' info related to object (exploit on toolTip)\n *    }\n *  ]\n * };\n *\n * @export\n */\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-image-group',\n  templateUrl: 'image-group.html',\n  styleUrls: ['image-group.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderImageGroup  {\n\n  private _icon: {fontSet: string, fontIcon: string} | null = null;\n  private _classes: string = '';\n\n  get icon(): {fontSet: string, fontIcon: string} | null { return this._icon; }\n  get classes(): string { return this._classes; }\n\n  open: boolean = false;\n  valueToSearch: string = '';\n\n  @Input()\n  data: any;\n\n  /**\n   * this event is fired when the user click on formula button on quill editor rool barƒ\n   *\n   * @memberof QuillEditorComponent\n   */\n  @Output() formulaClick: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private _service: AjfReportBuilderService) { }\n\n\n  setIcon(fontSet: string, fontIcon: string) {\n    this._icon = {fontSet, fontIcon};\n    this._service.setIcon(this._icon);\n  }\n\n  setFlag(value: string) {\n    this._classes = value;\n    this._service.setFlag(value);\n  }\n\n  setSearch(value: any) {\n    this.valueToSearch = value.currentTarget.value;\n  }\n\n  emitFormula() {\n    this.formulaClick.emit();\n  }\n\n  getFlag(value: string) {\n    let returnValue = '';\n\n    for (let i = 0; i < this.data.class.length; i++) {\n      returnValue += this.data.class[i] + ' ';\n    }\n\n    returnValue += this.data.prefixClass + value;\n    return returnValue;\n  }\n\n  toggle() {\n    this.open = !this.open;\n  }\n\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy, Component, EventEmitter, OnInit, OnChanges, OnDestroy, ViewEncapsulation\n} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {Observable, Subscription} from 'rxjs';\nimport {distinctUntilChanged, filter, map, startWith, withLatestFrom} from 'rxjs/operators';\n\nimport {\n  AjfAggregationType, AjfReportChartWidget, AjfReportTextWidget,\n  AjfReportWidget, AjfReportWidgetType, AjfReportLayoutWidget\n} from '@ajf/core/reports';\nimport {AjfForm} from '@ajf/core/forms';\nimport {AjfCondition} from '@ajf/core/models';\nimport {deepCopy} from '@ajf/core/utils';\n\nimport {AjfReportBuilderFormsAnalyzerDialog} from './forms-analyzer-dialog';\nimport {AjfFormVariables} from './models';\nimport {AjfReportBuilderService} from './report-builder-service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-properties',\n  templateUrl: 'properties.html',\n  styleUrls: ['properties.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderProperties implements OnInit, OnChanges, OnDestroy {\n  /**\n   *  true when the first time chart type is setted\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  initChartType = false;\n\n  /**\n   * the current widget\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  currentWidget: AjfReportWidget | null = null;\n  get currentLayoutWidget(): AjfReportLayoutWidget {\n    return this.currentWidget as AjfReportLayoutWidget;\n  }\n  get currentTextWidget(): AjfReportTextWidget {\n    return this.currentWidget as AjfReportTextWidget;\n  }\n\n  /**\n   * this array contains the forms exploited for generate data labels\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  forms: AjfForm[] = [];\n\n\n  colors: string[] = [];\n\n  /**\n   * the name of the section that contains the currentWidget\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  origin: string;\n\n  /**\n   * FAKE DATA\n   */\n\n  formsJson: any = {forms: []};\n\n  /**\n   * WIDGET\n   */\n\n  widgetName = '';\n  getHTML: Observable<string | undefined>;\n  getHeightWidget: Observable<number | undefined>;\n  getFontSizeWidget: Observable<number | undefined>;\n  getFontAlignWidget: Observable<number | undefined>;\n  getBackgroundColorWidget: Observable<string>;\n  getColorWidget: Observable<string>;\n  getStyle: Observable<any>;\n  getChartBackgroundColor: Observable<string[]>;\n  getChartBorderColor: Observable<string[]>;\n  getVisibility: Observable<AjfCondition>;\n  getColor: Observable<String[]>;\n\n  marginExpanded: boolean = false;\n  getMarginWidget: Observable<number[] | undefined>;\n  getMarginWidgetTop: Observable<number>;\n  getMarginWidgetRight: Observable<number>;\n  getMarginWidgetBottom: Observable<number>;\n  getMarginWidgetLeft: Observable<number>;\n\n  paddingExpanded: boolean = false;\n  getPaddingWidget: Observable<number[] | undefined>;\n  getPaddingWidgetTop: Observable<number>;\n  getPaddingWidgetRight: Observable<number>;\n  getPaddingWidgetBottom: Observable<number>;\n  getPaddingWidgetLeft: Observable<number>;\n\n  borderWidthExpanded: boolean = false;\n  getBorderWidthWidget: Observable<number[] | undefined>;\n  getBorderWidthWidgetTop: Observable<number>;\n  getBorderWidthWidgetRight: Observable<number>;\n  getBorderWidthWidgetBottom: Observable<number>;\n  getBorderWidthWidgetLeft: Observable<number>;\n\n  borderRadiusExpanded: boolean = false;\n  getBorderRadiusWidget: Observable<number[] | undefined>;\n  getBorderRadiusWidgetTopLeft: Observable<number>;\n  getBorderRadiusWidgetTopRight: Observable<number>;\n  getBorderRadiusWidgetBottomRight: Observable<number>;\n  getBorderRadiusWidgetBottomLeft: Observable<number>;\n\n  backgroundColor = '#127bdc';\n  styleBackgroundColor = 'rgb(255,255,255,0)';\n  borderColor = '#127bdc';\n  styleColor = 'rgb(0,0,0,0)';\n  wbackgroundColor: string;\n  fontSize: string;\n  bubble: string;\n\n  dialogRef: MatDialogRef<AjfReportBuilderFormsAnalyzerDialog>;\n  container: AjfFormVariables;\n\n\n\n  align = [false, 'center', 'right', 'justify'];\n\n  fonts = [\n    false,\n    'blackr',\n    'black-italic',\n    'bold',\n    'bold-condensed',\n    'bold-condensed-italic',\n    'bold-italic',\n    'condensed',\n    'condensed-italic',\n    'italic',\n    'light',\n    'light-italic',\n    'medium',\n    'medium-italic',\n    'thinr',\n    'thin-italic'\n  ];\n  currentModule: any = {};\n  quillModules = {\n    toolbar: [\n      ['formula'],\n      ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n      // ['blockquote', 'code-block'],\n\n      [{ 'header': 1 }, { 'header': 2 }],               // custom button values\n      [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n      [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript\n      // [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\n      // [{ 'direction': 'rtl' }],                         // text direction\n\n      [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\n      [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n\n      [{ 'color': this.colors },\n      { 'background': this.colors }],          // dropdown with defaults from theme\n      [{ 'font': this.fonts }],\n      [{ 'align': this.align }],\n\n      ['clean'],                                         // remove formatting button\n\n      // ['link', 'class', 'video']                         // link and image, video\n    ]\n  };\n\n  /**\n   * CHART\n   */\n\n\n  getChartYLabels: Observable<string[]>;\n\n  chartBorderColor: string[] = [];\n  chartBorderWidth = 3;\n\n  /**\n   *\n   * IMAGE\n   */\n\n  imageUrl = 'https://angular.io/resources/images/logos/angular2/angular.png';\n\n  /**\n   *\n   * TEXT\n   */\n\n  htmlText = '';\n\n\n  /**\n   * these variables indicate that the user want to change section\n   */\n  reportStyles = false;\n  sectionStyles = false;\n  widgetStyles = true;\n  sectionColor = false;\n  widgetColor = false;\n  visibilitySection = false;\n  currentColor = '';\n\n  private _icon: { fontSet: string, fontIcon: string } | null = null;\n  get icon(): { fontSet: string, fontIcon: string } | null { return this._icon; }\n\n  iconSet: any = {\n    'icon': 'true',\n    'title': 'report',\n    'data': null\n  };\n\n  flagSet: any = {\n    'icon': 'false',\n    'class': ['flag-icon'],\n    'prefixClass': 'flag-icon-',\n    'title': 'flags',\n    'data': [\n      {\n        'class': 'dz',\n        'info': 'Algeria'\n      },\n      {\n        'class': 'ao',\n        'info': 'Angola'\n      },\n      {\n        'class': 'bj',\n        'info': 'Benin'\n      },\n      {\n        'class': 'bw',\n        'info': 'Botswana'\n      },\n      {\n        'class': 'bf',\n        'info': 'Burkina Faso'\n      },\n      {\n        'class': 'bi',\n        'info': 'Burundi'\n      },\n      {\n        'class': 'cm',\n        'info': 'Cameroon'\n      },\n      {\n        'class': 'cv',\n        'info': 'Cabo Verde'\n      },\n      {\n        'class': 'cf',\n        'info': 'The Central African Republic'\n      },\n      {\n        'class': 'td',\n        'info': 'Chad'\n      },\n      {\n        'class': 'km',\n        'info': 'The Comoros'\n      },\n      {\n        'class': 'ci',\n        'info': 'Cote D\\'avoire'\n      },\n      {\n        'class': 'cd',\n        'info': 'The Democratic Republic of Congo'\n      },\n      {\n        'class': 'dj',\n        'info': 'Dijibouti'\n      },\n      {\n        'class': 'eg',\n        'info': 'Egypt'\n      },\n      {\n        'class': 'gq',\n        'info': 'Equatorial Guinea'\n      },\n      {\n        'class': 'er',\n        'info': 'Eritrea'\n      },\n      {\n        'class': 'et',\n        'info': 'Ethiopia'\n      },\n      {\n        'class': 'tf',\n        'info': 'French Southern Territories'\n      },\n      {\n        'class': 'ga',\n        'info': 'Gabon'\n      },\n      {\n        'class': 'gm',\n        'info': 'The Gambia'\n      },\n      {\n        'class': 'gh',\n        'info': 'Ghana'\n      },\n      {\n        'class': 'gn',\n        'info': 'Guinea'\n      },\n      {\n        'class': 'gw',\n        'info': 'Guinea-Bissau'\n      },\n      {\n        'class': 'ke',\n        'info': 'Kenya'\n      },\n      {\n        'class': 'ls',\n        'info': 'Leshotho'\n      },\n      {\n        'class': 'lr',\n        'info': 'Liberia'\n      },\n      {\n        'class': 'ly',\n        'info': 'Libya'\n      },\n      {\n        'class': 'mg',\n        'info': 'Madagascar'\n      },\n      {\n        'class': 'mw',\n        'info': 'Malawy'\n      },\n      {\n        'class': 'ml',\n        'info': 'Mali'\n      },\n      {\n        'class': 'mr',\n        'info': 'Mauritania'\n      },\n      {\n        'class': 'mu',\n        'info': 'Mauritius'\n      },\n      {\n        'class': 'yt',\n        'info': 'Mayotte'\n      },\n      {\n        'class': 'ma',\n        'info': 'Marocco'\n      },\n      {\n        'class': 'mz',\n        'info': 'Mozambique'\n      },\n      {\n        'class': 'na',\n        'info': 'Namibia'\n      },\n      {\n        'class': 'ne',\n        'info': 'Niger'\n      },\n      {\n        'class': 'ng',\n        'info': 'Nigeria'\n      },\n      {\n        'class': 'cg',\n        'info': 'Republic of the Congo'\n      },\n      {\n        'class': 'rw',\n        'info': 'Rwnda'\n      },\n      {\n        'class': 're',\n        'info': 'rèunion'\n      },\n      {\n        'class': 'sh',\n        'info': 'Saint Helena, Ascension and Tristan da Cunha'\n      },\n      {\n        'class': 'st',\n        'info': 'Sao Tome and Principe'\n      },\n      {\n        'class': 'sn',\n        'info': 'Senegal'\n      },\n      {\n        'class': 'sc',\n        'info': 'Seychelles'\n      },\n      {\n        'class': 'sl',\n        'info': 'Sierra Leone'\n      },\n      {\n        'class': 'so',\n        'info': 'Somalia'\n      },\n      {\n        'class': 'za',\n        'info': 'South Africa'\n      },\n      {\n        'class': 'ss',\n        'info': 'South Sudan'\n      },\n      {\n        'class': 'sd',\n        'info': 'Sudan'\n      },\n      {\n        'class': 'sz',\n        'info': 'Swaziland'\n      },\n      {\n        'class': 'tz',\n        'info': 'Tanzania'\n      },\n      {\n        'class': 'tg',\n        'info': 'Togo'\n      },\n      {\n        'class': 'tn',\n        'info': 'Tunisia'\n      },\n      {\n        'class': 'ug',\n        'info': 'Uganda'\n      },\n      {\n        'class': 'eh',\n        'info': 'Western Sahara'\n      },\n      {\n        'class': 'zm',\n        'info': 'Zambia'\n      },\n      {\n        'class': 'zw',\n        'info': 'Zimbawe'\n      },\n      {\n        'class': 'iq',\n        'info': 'Iraq'\n      },\n      {\n        'class': 'lb',\n        'info': 'Lebanon'\n      },\n      {\n        'class': 'bd',\n        'info': 'Bangladesh'\n      },\n      {\n        'class': 'ir',\n        'info': 'Iran (Islamic Republic of)'\n      },\n      {\n        'class': 'my',\n        'info': 'Malaysia'\n      },\n      {\n        'class': 'np',\n        'info': 'Nepal'\n      },\n      {\n        'class': 'pk',\n        'info': 'Pakistan'\n      },\n      {\n        'class': 'th',\n        'info': 'Thailand'\n      },\n      {\n        'class': 'jo',\n        'info': 'Jordan'\n      },\n      {\n        'class': 'ye',\n        'info': 'Yemen'\n      }\n    ]\n  };\n\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n  private _formsSub: Subscription = Subscription.EMPTY;\n  private _colorSub: Subscription = Subscription.EMPTY;\n  private _headerStyleSub: Subscription = Subscription.EMPTY;\n  private _contentStylesSub: Subscription = Subscription.EMPTY;\n  private _footerStylesSub: Subscription = Subscription.EMPTY;\n  private _originSub: Subscription = Subscription.EMPTY;\n  private _stylesUpdatesSubs: Subscription = Subscription.EMPTY;\n\n  private _updateWidgetMarginEvt: EventEmitter<{ idx: number, value: any }> =\n  new EventEmitter<{ idx: number, value: any }>();\n  private _updateWidgetPaddingEvt: EventEmitter<{ idx: number, value: any }> =\n  new EventEmitter<{ idx: number, value: any }>();\n  private _updateWidgetBorderWidthEvt: EventEmitter<{ idx: number, value: any }> =\n  new EventEmitter<{ idx: number, value: any }>();\n  private _updateWidgetBorderRadiusEvt: EventEmitter<{ idx: number, value: any }> =\n  new EventEmitter<{ idx: number, value: any }>();\n\n  constructor(\n    private _dialog: MatDialog,\n    private service: AjfReportBuilderService\n  ) {\n    this.setForms();\n\n    this.iconSet.data = Object.keys(service.iconSets).filter(x => x != 'ajf-icon').map(i => {\n      return { name: i, icons: service.iconSets[i] };\n    });\n\n    this._headerStyleSub = this.service.headerStyles.subscribe(s => {\n      if (s['background-color'] != null) {\n        this.styleBackgroundColor = s['background-color'];\n      }\n    });\n    this._contentStylesSub = this.service.contentStyles.subscribe(s => {\n      if (s['background-color'] != null) {\n        this.styleBackgroundColor = s['background-color'];\n      }\n    });\n    this._footerStylesSub = this.service.footerStyles.subscribe(s => {\n      if (s['background-color'] != null) {\n        this.styleBackgroundColor = s['background-color'];\n      }\n    });\n    this._originSub = this.service.origin.subscribe(s => {\n      this.origin = s;\n    });\n  }\n\n\n  /**\n   *\n   * UTILS\n   */\n\n\n  /**\n   * return a number value\n   *\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  toNumber(value: string): number {\n    let numberPattern = /^(-)?\\d+/g;\n\n    if (value == null) {\n      return 0;\n    } else {\n      const matches = value.match(numberPattern);\n      if (matches == null || matches.length == 0) { return 0; }\n      return Number(matches[0]);\n    }\n  }\n\n  toNumberArray(value: string): number[] {\n    if (value == null) {\n      return [];\n    } else {\n      return (value || '').replace('px', '').split(' ')\n        .filter(v => v !== '' && v != null)\n        .map(v => this.toNumber(v));\n    }\n  }\n\n  fillPxNumberArray(value: number[]) {\n    const vl = value.length;\n    switch (vl) {\n      case 0:\n        return [0, 0, 0, 0];\n      case 1:\n        const v = value[0];\n        return [v, v, v, v];\n      case 2:\n        const v21 = value[0];\n        const v22 = value[1];\n        return [v21, v22, v21, v22];\n      case 3:\n        const v31 = value[0];\n        const v32 = value[1];\n        const v33 = value[2];\n        return [v31, v32, v33, v32];\n      default:\n        return value;\n    }\n  }\n\n  percent(value: number) {\n    let temp = this.roundTo(value * 100, 3);\n    return temp;\n  }\n\n  roundTo(value: number, decimalPositions: number) {\n    let i = value * Math.pow(10, decimalPositions);\n\n    i = Math.floor(i);\n\n    return i / Math.pow(10, decimalPositions);\n  }\n  /**\n   * call to service to set the forms\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n\n  setForms(): void {\n    let forms: AjfForm[] = [];\n    try {\n      for (let i = 0; i < this.formsJson.forms.length; i++) {\n        forms.push(AjfForm.fromJson(this.formsJson.forms[i]));\n      }\n      this.service.setReportForms(forms);\n    } catch (e) { }\n  }\n\n  /**\n   * call to service to set the width of the idx column of layout widget\n   *\n   * @param col\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  instantColumnValue(col: number, idx: number) {\n    this.service.instantColumnValue(col, idx);\n  }\n\n  /**\n   *  force copy of style\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  // TODO delete this\n  setStyle() {\n    if (this.currentWidget == null) { return; }\n    this.currentWidget.styles = deepCopy(this.currentWidget.styles);\n    this.service.updateCurrentWidget(this.currentWidget);\n  }\n\n  /**\n   * call to service to add new style to widget\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setWidgetStyles(label: string, value: any) {\n    this.service.setWidgetStyles(label, value);\n    this.currentColor = value;\n    this.setStyle();\n  }\n\n  setWidgetMargin(idx: number, value: any): void {\n    this._updateWidgetMarginEvt.emit({ idx, value });\n  }\n\n  setWidgetPadding(idx: number, value: any): void {\n    this._updateWidgetPaddingEvt.emit({ idx, value });\n  }\n\n  setWidgetBorderWidth(idx: number, value: any): void {\n    this._updateWidgetBorderWidthEvt.emit({ idx, value });\n  }\n\n  setWidgetBorderRadius(idx: number, value: any): void {\n    this._updateWidgetBorderRadiusEvt.emit({ idx, value });\n  }\n\n  /**\n   * call to service to add new style to section\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setSectionStyles(label: string, value: any) {\n    this.service.setSectionStyles(this.origin, label, value);\n    this.styleColor = value;\n  }\n\n\n  /**\n   * call to service to add new style to report\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setReportStyles(label: string, value: any) {\n    this.service.setReportStyles(label, value);\n    this.styleBackgroundColor = value;\n  }\n\n  /**\n   * add custom color\n   *\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  addCustomColor() {\n    this.service.addCustomColor(this.currentColor);\n    this.service.updateCurrentWidget(this.currentWidget);\n  }\n\n  /**\n   * get the module exploit to quill text editor\n   *\n   * @returns\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  getModule() {\n    return this.quillModules;\n  }\n\n  /**\n   * true is the input type value is equal to current widget type\n   *\n   * @param value\n   * @returns\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  isChartTypeSelected(value: number) {\n    if (this.initChartType == false) {\n      return false;\n    }\n    const myObj = <AjfReportChartWidget>this.currentWidget;\n    if (value === myObj.chartType) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n\n  /* layout functions */\n\n  /**\n   * call to service to add a column to current layout widget\n   *\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  addColumn() {\n    this.service.addColumn();\n  }\n\n  /**\n   * call to service to add a obj to current layout widget\n   *\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  fixedColumn(idx: number) {\n    this.service.fixedColumn(idx);\n  }\n\n  /**\n   * call to service to remove obj of current layout widget\n   *\n   * @param idx\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  unfixedColumn(idx: number) {\n    this.service.remove('unfixedColumn', idx);\n  }\n\n  /* image functions */\n\n  /**\n   * call to service to set image url\n   *\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setImageUrl() {\n    this.service.setImageUrl(this.imageUrl);\n  }\n\n  setIcon(icon: { fontSet: string, fontIcon: string }) {\n    this._icon = icon;\n    this.service.setIcon(icon);\n  }\n\n  /* chart functions */\n\n  /**\n   * call to service to set the type of chart\n   *\n   * @param type\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setChartType(type: number) {\n    this.initChartType = true;\n    this.service.setChartType(type);\n  }\n\n  setChartBorderColor(value: number) {\n    this.service.setChartBorderWidth(value);\n  }\n\n  tabValue: string = 'backgroundColor';\n  setTab(event: any) {\n    if (event.index === 0) {\n      this.tabValue = 'backgroundColor';\n    } else {\n      this.tabValue = 'borderColor';\n    }\n  }\n\n  /**\n   * call to service to remove background color to current chart\n   *\n   * @param index\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  removeChartBackgroundColor(index: number) {\n    this.service.removeChartBackgroundColor(index);\n  }\n\n  /**\n   * call to service to remove border color to current chart\n   *\n   * @param index\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  removeChartBorderColor(index: number) {\n    this.service.removeChartBorderColor(index);\n  }\n\n  hideMenu() {\n    this.service.updateCurrentWidget(null);\n  }\n\n  openFormulaDialog(event: any) {\n    this.dialogRef = this._dialog.open(AjfReportBuilderFormsAnalyzerDialog);\n    this.dialogRef.componentInstance.aggregation = AjfAggregationType.None;\n    this.dialogRef.componentInstance.isFormula = true;\n    if (event != null && event.reference != null) {\n      this.dialogRef.componentInstance.formula = event.formula;\n      this.dialogRef.componentInstance.reference = event.reference;\n    }\n\n  }\n\n  ngOnInit(): void {\n    this._formsSub = this.service.reportForms\n      .subscribe(x => {\n        this.forms = x || [];\n      });\n\n    this._currentWidgetSub = this.service.currentWidget\n      .subscribe(x => {\n        if (x != null) {\n          if (this.currentWidget !== x) {\n            this.currentWidget = x;\n            this.widgetName = AjfReportWidgetType[x.widgetType];\n            this.reportStyles = false;\n            this.sectionStyles = false;\n            this.widgetStyles = false;\n            this.sectionColor = false;\n            this.widgetColor = false;\n            this.visibilitySection = false;\n          }\n        } else {\n          this.currentWidget = null;\n          this.widgetName = '';\n        }\n      });\n    this._colorSub = this.service.colors\n      .subscribe(x => {\n        if (x && x.length > 0) {\n          this.colors = x;\n\n          this.quillModules = {\n            toolbar: [\n              ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n              // ['blockquote', 'code-block'],\n              [{ 'header': 1 }, { 'header': 2 }],               // custom button values\n              [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n              [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript\n              // [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\n              // [{ 'direction': 'rtl' }],                         // text direction\n\n              [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\n              [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n\n              [{ 'color': this.colors },\n              { 'background': this.colors }],          // dropdown with defaults from theme\n              [{ 'font': this.fonts }],\n              [{ 'align': this.align }],\n              ['formula'],\n              ['clean'],                                         // remove formatting button\n\n              // ['link', 'class', 'video']                         // link and image, video\n            ]\n          };\n        }\n      });\n\n\n    this.getHTML = this.service.currentWidget.pipe(\n      map((widget: AjfReportWidget | null) => {\n        if (widget != null) {\n          const myObj = <AjfReportTextWidget>this.currentWidget;\n          return myObj.htmlText;\n        }\n        return '';\n      }),\n      distinctUntilChanged(),\n      startWith('<p><br></p>')\n    );\n\n\n    this.getHeightWidget = this.service.currentWidget.pipe(\n      filter(x => x != null),\n      map((myObj: AjfReportWidget | null) => {\n        if (myObj != null) {\n          let value = this.toNumber(myObj.styles['height']);\n          if (value != null || value != null) {\n            return value;\n          }\n        }\n      }),\n      distinctUntilChanged()\n    );\n\n    this.getFontSizeWidget = this.service.currentWidget.pipe(\n      map((myObj: AjfReportWidget | null) => {\n        if (myObj != null) {\n          return (this.toNumber(myObj.styles['font-size']) || 12);\n        }\n      }),\n      distinctUntilChanged()\n    );\n\n    this.getFontAlignWidget = this.service.currentWidget.pipe(\n      map((myObj: AjfReportWidget | null) => {\n        if (myObj != null) {\n          return ((myObj.styles['text-align']) || 'center');\n        }\n      }),\n      distinctUntilChanged()\n    );\n\n    this.getBorderWidthWidget = this.service.currentWidget.pipe(\n      map((myObj: AjfReportWidget | null) => {\n        if (myObj != null) {\n          return this.fillPxNumberArray(this.toNumberArray(myObj.styles['border-width']));\n        }\n      }),\n      distinctUntilChanged(),\n      startWith([0, 0, 0, 0])\n    );\n    this.getBorderWidthWidgetTop = this.getBorderWidthWidget.pipe(\n      filter(m => m != null),\n      map(m => m![0])\n    );\n    this.getBorderWidthWidgetRight = this.getBorderWidthWidget.pipe(\n      filter(m => m != null),\n      map(m => m![1])\n    );\n    this.getBorderWidthWidgetBottom = this.getBorderWidthWidget.pipe(\n      filter(m => m != null),\n      map(m => m![2])\n    );\n    this.getBorderWidthWidgetLeft = this.getBorderWidthWidget.pipe(\n      filter(m => m != null),\n      map(m => m![3])\n    );\n\n    this.getBorderRadiusWidget = this.service.currentWidget.pipe(\n      map((myObj: AjfReportWidget | null) => {\n        if (myObj != null) {\n          return this.fillPxNumberArray(this.toNumberArray(myObj.styles['border-radius']));\n        }\n      }),\n      distinctUntilChanged(),\n      startWith([0, 0, 0, 0])\n    );\n    this.getBorderRadiusWidgetTopLeft = this.getBorderRadiusWidget.pipe(\n      filter(m => m != null),\n      map(m => m![0])\n    );\n    this.getBorderRadiusWidgetTopRight = this.getBorderRadiusWidget.pipe(\n      filter(m => m != null),\n      map(m => m![1])\n    );\n    this.getBorderRadiusWidgetBottomRight = this.getBorderRadiusWidget.pipe(\n      filter(m => m != null),\n      map(m => m![2])\n    );\n    this.getBorderRadiusWidgetBottomLeft = this.getBorderRadiusWidget.pipe(\n      filter(m => m != null),\n      map(m => m![3])\n    );\n\n    this.getMarginWidget = this.service.currentWidget.pipe(\n      map((myObj: AjfReportWidget | null) => {\n        if (myObj != null && myObj.styles != null && myObj.styles['margin'] != null) {\n          return this.fillPxNumberArray(this.toNumberArray(myObj.styles['margin']));\n        }\n      }),\n      distinctUntilChanged(),\n      startWith([0, 0, 0, 0])\n    );\n    this.getMarginWidgetTop = this.getMarginWidget.pipe(\n      filter(m => m != null),\n      map(m => m![0])\n    );\n    this.getMarginWidgetRight = this.getMarginWidget.pipe(\n      filter(m => m != null),\n      map(m => m![1])\n    );\n    this.getMarginWidgetBottom = this.getMarginWidget.pipe(\n      filter(m => m != null),\n      map(m => m![2])\n    );\n    this.getMarginWidgetLeft = this.getMarginWidget.pipe(\n      filter(m => m != null),\n      map(m => m![3])\n    );\n\n    this.getPaddingWidget = this.service.currentWidget.pipe(\n      map((myObj: AjfReportWidget | null) => {\n        if (myObj != null && myObj.styles != null && myObj.styles['padding'] != null) {\n          return this.fillPxNumberArray(this.toNumberArray(myObj.styles['padding']));\n        }\n      }),\n      distinctUntilChanged()\n    );\n    this.getPaddingWidgetTop = this.getPaddingWidget.pipe(\n      filter(m => m != null),\n      map(m => m![0])\n    );\n    this.getPaddingWidgetRight = this.getPaddingWidget.pipe(\n      filter(m => m != null),\n      map(m => m![1])\n    );\n    this.getPaddingWidgetBottom = this.getPaddingWidget.pipe(\n      filter(m => m != null),\n      map(m => m![2])\n    );\n    this.getPaddingWidgetLeft = this.getPaddingWidget.pipe(\n      filter(m => m != null),\n      map(m => m![3])\n    );\n\n    this.getBackgroundColorWidget = this.service.currentWidget.pipe(\n      map((myObj: AjfReportWidget | null) => {\n        if (myObj != null && myObj.styles != null) {\n          return myObj.styles['backgroundColor'] || '';\n        }\n      }),\n      distinctUntilChanged()\n    );\n\n    this.getColorWidget = this.service.currentWidget.pipe(\n      map((myObj: AjfReportWidget | null) => {\n        if (myObj != null && myObj.styles != null) {\n          return myObj.styles['color'] || '';\n        }\n      }),\n      distinctUntilChanged()\n    );\n\n    this._stylesUpdatesSubs = (<Observable<{idx: any; value: any}>>this._updateWidgetMarginEvt)\n      .pipe(withLatestFrom(this.getMarginWidget))\n      .subscribe((r: [{ idx: number, value: any }, number[] | undefined]) => {\n        if (r == null) { return; }\n        const idx = r[0].idx;\n        const value = r[0].value;\n        const v = r[1] || [0, 0, 0, 0];\n        if (v == null || v.length < idx) { return; }\n        v[idx] = value;\n        this.setWidgetStyles('margin', v);\n      });\n\n    this._stylesUpdatesSubs.add((<Observable<{idx: any; value: any}>>this._updateWidgetPaddingEvt)\n      .pipe(withLatestFrom(this.getPaddingWidget))\n      .subscribe((r: [{ idx: number, value: any }, number[] | undefined]) => {\n        if (r == null) { return; }\n        const idx = r[0].idx;\n        const value = r[0].value;\n        const v = r[1] || [0, 0, 0, 0];\n        if (v == null || v.length < idx) { return; }\n        v[idx] = value;\n        this.setWidgetStyles('padding', v);\n      }));\n\n    this._stylesUpdatesSubs\n      .add((<Observable<{idx: any; value: any}>>this._updateWidgetBorderWidthEvt)\n        .pipe(withLatestFrom(this.getBorderWidthWidget))\n        .subscribe((r: [{ idx: number, value: any }, number[] | undefined]) => {\n          if (r == null) { return; }\n          const idx = r[0].idx;\n          const value = r[0].value;\n          const v = r[1] || [0, 0, 0, 0];\n          if (v == null || v.length < idx) { return; }\n          v[idx] = value;\n          this.setWidgetStyles('border-width', v);\n        })\n      );\n\n    this._stylesUpdatesSubs.add(\n      (<Observable<{idx: any; value: any}>>this._updateWidgetBorderRadiusEvt)\n        .pipe(withLatestFrom(this.getBorderRadiusWidget))\n        .subscribe((r: [{ idx: number, value: any }, number[] | undefined]) => {\n          if (r == null) { return; }\n          const idx = r[0].idx;\n          const value = r[0].value;\n          const v = r[1] || [0, 0, 0, 0];\n          if (v == null || v.length < idx) { return; }\n          v[idx] = value;\n          this.setWidgetStyles('border-radius', v);\n        })\n      );\n  }\n\n  ngOnChanges(changes: any) {\n    this.currentWidget = changes.widget.currentValue;\n    if (this.currentWidget == null) { return; }\n    this.widgetName = AjfReportWidgetType[this.currentWidget.widgetType];\n  }\n\n  ngOnDestroy(): void {\n    this._currentWidgetSub.unsubscribe();\n    this._formsSub.unsubscribe();\n    this._colorSub.unsubscribe();\n    this._headerStyleSub.unsubscribe();\n    this._contentStylesSub.unsubscribe();\n    this._footerStylesSub.unsubscribe();\n    this._originSub.unsubscribe();\n    this._stylesUpdatesSubs.unsubscribe();\n  }\n\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Renderer2,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {\n  NG_VALUE_ACCESSOR,\n  NG_VALIDATORS,\n  ControlValueAccessor,\n  FormControl,\n  Validator\n} from '@angular/forms';\n\nimport {Subscription} from 'rxjs';\n\nimport {AjfReportBuilderService} from './report-builder-service';\n\nimport {default as Quill} from 'quill';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-quill-editor',\n  template: `\n    <ng-content select=\"[ajf-quill-editor-toolbar]\"></ng-content>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AjfQuillEditor),\n    multi: true\n  }, {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => AjfQuillEditor),\n    multi: true\n  }],\n  styleUrls: ['quill-editor.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfQuillEditor\n  implements AfterViewInit, ControlValueAccessor, OnChanges, OnDestroy, Validator {\n\n  quillEditor: any;\n  editorElem: HTMLElement;\n  emptyArray: any[] = [];\n  content: any;\n\n  listenFunc: Function;\n\n  previewElemFormula: any;\n  private _init: boolean = false;\n\n  dateFormats = [\n    {\n      'label': 'June 23rd 2017, 12:39:12 pm',\n      'value': 'MMMM Do YYYY, h:mm:ss a',\n      'validator': 'MMMMDoYYYYhmmssa'\n    }, {\n      'label': 'Friday',\n      'value': 'dddd',\n      'validator': 'dddd'\n    }, {\n      'label': 'Jun 23rd 17',\n      'value': 'MMM Do YY',\n      'validator': 'MMMDoYY'\n    }];\n\n\n  fonts = [\n    false,\n    'blackr',\n    'black-italic',\n    'bold',\n    'bold-condensed',\n    'bold-condensed-italic',\n    'bold-italic',\n    'condensed',\n    'condensed-italic',\n    'italic',\n    'light',\n    'light-italic',\n    'medium',\n    'medium-italic',\n    'thinr',\n    'thin-italic'\n  ];\n\n  defaultModules = {\n    formula: true,\n    toolbar: [\n      ['formula'],\n      ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\n      // ['blockquote', 'code-block'],\n\n      [{ 'header': 1 }, { 'header': 2 }],               // custom button values\n      [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n      [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript\n      // [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\n      // [{ 'direction': 'rtl' }],                         // text direction\n\n      [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\n      [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n\n      [{ 'color': this.emptyArray.slice() },\n      { 'background': this.emptyArray.slice() }],          // dropdown with defaults from theme\n      [{ 'font': this.fonts }],\n      [{ 'align': this.emptyArray.slice() }],\n\n      ['clean'],                                         // remove formatting button\n\n      // ['link', 'image', 'video']                         // link and image, video\n    ]\n  };\n\n  font = Quill.import('formats/font');\n\n\n  @Input() theme: string;\n  @Input() modules: Object;\n  @Input() readOnly: boolean;\n  @Input() placeholder: string;\n  @Input() maxLength: number;\n  @Input() minLength: number;\n  @Input() formats: string[];\n  @Input() initHTML: string;\n\n  @Output() editorCreated: EventEmitter<any> = new EventEmitter();\n  @Output() contentChanged: EventEmitter<any> = new EventEmitter();\n  @Output() selectionChanged: EventEmitter<any> = new EventEmitter();\n\n\n  /**\n   * this event is fired when the user click on formula button on quill editor rool barƒ\n   *\n   * @memberof QuillEditorComponent\n   */\n  @Output() formulaClick: EventEmitter<any> = new EventEmitter<any>();\n\n\n  onModelChange: Function = () => { };\n  onModelTouched: Function = () => { };\n\n  private _formulas: { formula: any, unlisten: Function | null }[] = [];\n  private _formulaTextSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    private _service: AjfReportBuilderService) {\n    this.font.whitelist = this.fonts;\n    this.font.whitelist.push('regular');\n\n    this._formulaTextSub =\n      this._service.getFormulaToHtmlEvent()\n        .subscribe((event: any) => {\n\n          // reference is defined only when the user want to edit the formula\n          if (event.reference !== undefined) {\n            event.reference.innerHTML = event.formula;\n            this.renderer.setAttribute(event.reference, 'formula', event.formula);\n            const efs = this._formulas.filter(f => f.formula === event.reference);\n            let formulaEntry;\n            let unlisten;\n            if (efs.length > 0) {\n              formulaEntry = efs[0];\n              unlisten = formulaEntry.unlisten;\n              if (unlisten != null) {\n                unlisten();\n              }\n            } else {\n              formulaEntry = { formula: event.reference, unlisten: null };\n              this._formulas.push(formulaEntry);\n            }\n            formulaEntry.unlisten = this.renderer.listen(\n              event.reference, 'click', () => {\n                let obj = {\n                  'formula': event.formula,\n                  'reference': event.reference\n                };\n                this.formulaClick.emit(obj);\n              }\n            );\n          } else {\n            const quillEditor = this.elementRef.nativeElement.querySelector('.ajf-ql-editor');\n            const link = this.renderer.createElement('a');\n            this.renderer.setAttribute(link, 'href', 'javascript:void(0)');\n            this.renderer.setStyle(link, 'cursor', 'pointer');\n            this.renderer.setAttribute(link, 'formula', this.check(event.formula));\n            const linkLabel = this.renderer.createText(event.formula);\n            this.renderer.appendChild(link, linkLabel);\n            // add listener related on the click event of the new formula\n            const unlisten = this.renderer.listen(\n              link, 'click', (_) => {\n                let obj = {\n                  'formula': this.check(event.formula),\n                  'reference': link\n                };\n                this.formulaClick.emit(obj);\n              }\n            );\n            this.renderer.appendChild(quillEditor, link);\n            this._formulas.push({ unlisten, formula: link });\n          }\n        });\n  }\n\n  check(value: string): string {\n    this.dateFormats.forEach((elem: any) => {\n      if (elem.value == value) {\n        return <string>elem.validator;\n      }\n    });\n    return <string>value;\n  }\n  /**\n   * this function search fomulas inside the init text\n   * and allocate the related listener on click event\n   *\n   * @memberof QuillEditorComponent\n   */\n  setHTML() {\n    this.writeValue(this.initHTML);\n  }\n\n  ngAfterViewInit() {\n    const toolbarElem = this.elementRef.nativeElement.querySelector('[ajf-quill-editor-toolbar]');\n    let modules: any = this.modules || this.defaultModules;\n\n    Quill.register(this.font, true);\n\n    if (toolbarElem) {\n      modules['toolbar'] = toolbarElem;\n      modules['formula'] = true;\n    }\n    this.elementRef.nativeElement.insertAdjacentHTML(\n      'beforeend', '<div quill-editor-element></div>'\n    );\n\n    this.editorElem = this.elementRef.nativeElement.querySelector('[quill-editor-element]');\n\n    this.quillEditor = new Quill(this.editorElem, {\n      modules: modules,\n      placeholder: this.placeholder || 'Insert text here ...',\n      readOnly: this.readOnly || false,\n      theme: this.theme || 'snow',\n      formats: this.formats\n    });\n\n\n    this.editorCreated.emit(this.quillEditor);\n    this.setHTML();\n\n    // mark model as touched if editor lost focus\n    this.quillEditor.on('selection-change', (range: any, oldRange: any, source: string) => {\n      this.selectionChanged.emit({\n        editor: this.quillEditor,\n        range: range,\n        oldRange: oldRange,\n        source: source\n      });\n\n      if (!range) {\n        this.onModelTouched();\n      }\n    });\n\n    // update model if text changes\n    this.quillEditor.on('text-change', (delta: any, oldDelta: any, source: string) => {\n      let html: any = this.editorElem.children[0].innerHTML;\n      const text = this.quillEditor.getText();\n\n      if (html === '<p><br></p>') {\n        html = null;\n      }\n\n      this.onModelChange(html);\n\n      this.contentChanged.emit({\n        editor: this.quillEditor,\n        html: html,\n        text: text,\n        delta: delta,\n        oldDelta: oldDelta,\n        source: source\n      });\n    });\n\n    let elem = this.elementRef.nativeElement.querySelector('.ajf-ql-formula');\n    this.listenFunc = this.renderer.listen(elem, 'click', (_) => {\n      this.formulaClick.emit();\n\n    });\n\n  }\n\n  writeValue(currentValue: any) {\n    this.content = currentValue;\n\n    if (this.quillEditor) {\n      if (currentValue) {\n        if (currentValue == this.initHTML && !this._init) {\n          let editor = this.elementRef.nativeElement.querySelector('.ajf-ql-editor');\n          editor.innerHTML = this.initHTML;\n          let allFormulas = this.elementRef.nativeElement.querySelectorAll('[formula]');\n          allFormulas.forEach((elem: any) => {\n            const unlisten = this.renderer.listen(\n              elem, 'click', (_) => {\n                let obj = {\n                  'formula': this.check(elem.innerText),\n                  'reference': elem\n                };\n                this.formulaClick.emit(obj);\n              }\n            );\n            this.renderer.setStyle(elem, 'cursor', 'pointer');\n            this._formulas.push({ unlisten, formula: elem });\n            this._init = true;\n          });\n        } else if (currentValue != this.initHTML) {\n          this.quillEditor.pasteHTML(currentValue);\n        }\n        return;\n      }\n      this.quillEditor.setText('');\n    }\n  }\n\n  registerOnChange(fn: Function): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: Function): void {\n    this.onModelTouched = fn;\n  }\n\n  validate(_c: FormControl) {\n    if (!this.quillEditor) {\n      return null;\n    }\n\n    let err: {\n      minLengthError?: { given: number, minLength: number };\n      maxLengthError?: { given: number, maxLength: number };\n    } = {},\n      valid = true;\n\n    const textLength = this.quillEditor.getText().trim().length;\n\n    if (this.minLength) {\n      err.minLengthError = {\n        given: textLength,\n        minLength: this.minLength\n      };\n\n      valid = textLength >= this.minLength || !textLength;\n    }\n\n    if (this.maxLength) {\n      err.maxLengthError = {\n        given: textLength,\n        maxLength: this.maxLength\n      };\n\n      valid = textLength <= this.maxLength && valid;\n    }\n\n    return valid ? null : err;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    if (changes['readOnly'] && this.quillEditor) {\n      this.quillEditor.enable(!changes['readOnly'].currentValue);\n    }\n    if (changes['modules'] && this.quillEditor) {\n\n      Quill.register(this.font, true);\n      this.quillEditor = new Quill(this.editorElem, {\n        modules: changes['modules']['currentValue'],\n        placeholder: this.placeholder || 'Insert text here ...',\n        readOnly: this.readOnly || false,\n        theme: this.theme || 'snow',\n        formats: this.formats\n      });\n      this.elementRef.nativeElement.children[0].remove();\n    }\n  }\n  ngOnDestroy() {\n    for (let i = 0; i < this._formulas.length; i++) {\n      let unlisten = this._formulas[i].unlisten;\n      if (unlisten != null) {\n        unlisten();\n      }\n    }\n    this._formulaTextSub.unsubscribe();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Observable, Subscription, timer} from 'rxjs';\nimport {distinctUntilChanged, map, startWith} from 'rxjs/operators';\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  ViewEncapsulation\n} from '@angular/core';\nimport {CdkDrag, CdkDragDrop} from '@angular/cdk/drag-drop';\n\nimport {AjfImageType} from '@ajf/core/image';\nimport {\n  AjfDataset,\n  AjfReportChartWidget,\n  AjfReportColumnWidget,\n  AjfReportImageWidget,\n  AjfReportLayoutWidget,\n  AjfReportMapWidget,\n  AjfReportTableWidget,\n  AjfReportTextWidget,\n  AjfReportWidget,\n  AjfReportWidgetType,\n} from '@ajf/core/reports';\n\nimport {AjfReportBuilderDragData} from './report-builder-drag-data';\nimport {AjfReportBuilderService} from './report-builder-service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-renderer-widget',\n  templateUrl: 'renderer-widget.html',\n  styleUrls: ['renderer-widget.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderRendererWidget implements OnInit, OnDestroy, OnChanges {\n  get widgetTypes() { return AjfReportWidgetType; }\n\n  @Input()\n  widget: AjfReportWidget;\n\n  get layoutWidget(): AjfReportLayoutWidget {\n    return this.widget as AjfReportLayoutWidget;\n  }\n\n  @Input()\n  position: number;\n\n  @Input()\n  section: string;\n\n  // this boolean sign if is dragged a widget\n  onDragged = false;\n\n  currentContentWidget: AjfReportWidget | null = null;\n  obj: any;\n  fixedZoom: any;\n\n  getTableTitles: Observable<string[]>;\n  getTableContent: Observable<string[][] | undefined>;\n\n  getChartType: Observable<number>;\n  getDataset: Observable<AjfDataset[][]>;\n  getChartBackgroundColor: Observable<string[]>;\n  getChartBorderColor: Observable<string[]>;\n  getChartBorderWidth: Observable<number>;\n\n  layoutShow: boolean;\n\n  private _onDraggedSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n    private service: AjfReportBuilderService\n  ) { }\n\n  canDropPredicate(item: CdkDrag<AjfReportBuilderDragData>): boolean {\n    item.data.dropZones.forEach(d => {\n      if (['header', 'widget'].indexOf(d) > -1) {\n        return true;\n      }\n    });\n    return false;\n  }\n\n  /**\n   *  sign the start of mouse drag with 200 ms of delay\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragStartHandler(): void {\n    let s = timer(200)\n      .subscribe(() => {\n        s.unsubscribe();\n        this.service.dragStarted();\n      });\n  }\n\n  /**\n   * sign the end of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEndHandler(): void {\n    this.service.dragEnded();\n  }\n\n  getColumnContent(): AjfReportColumnWidget[] {\n    const myObj: AjfReportLayoutWidget = <AjfReportLayoutWidget>this.widget;\n\n    return <AjfReportColumnWidget[]>myObj.content;\n  }\n\n  getIcon(): {fontSet: string, fontIcon: string} | null {\n    const defVal = {fontSet: '', fontIcon: ''};\n    const myObj: AjfReportImageWidget = <AjfReportImageWidget>this.widget;\n    if (myObj.icon == null) { return null; }\n    return myObj.icon.evaluate({}) || defVal;\n  }\n\n  getFlag(): string | null {\n    const defVal = 'ch';\n    const myObj: AjfReportImageWidget = <AjfReportImageWidget>this.widget;\n    if (myObj.flag == null) { return null; }\n    return myObj.flag.evaluate({}) || defVal;\n  }\n\n  getPercent(index: number): string {\n    const myObj: AjfReportLayoutWidget = <AjfReportLayoutWidget>this.widget;\n    const percent = myObj.columns[index] * 100;\n\n    return `${percent.toString()}%`;\n  }\n\n  getImageUrl(): string | null {\n    const defVal = '';\n    const myObj: AjfReportImageWidget = <AjfReportImageWidget>this.widget;\n    if (myObj.url == null) { return null; }\n    return myObj.url.evaluate({}) || defVal;\n  }\n\n  getImageType() {\n    return this.widget != null ?\n      (<AjfReportImageWidget>this.widget).imageType :\n      AjfImageType.Image;\n  }\n\n  getHtmlText(): string {\n    let myObj: AjfReportTextWidget;\n    myObj = <AjfReportTextWidget>this.widget;\n    if (myObj.htmlText === '') {\n      return '...';\n    } else {\n      return myObj.htmlText;\n    }\n  }\n\n  getCoordinate(): number[] {\n    let myObj: AjfReportMapWidget;\n    myObj = <AjfReportMapWidget>this.widget;\n    if (myObj.coordinate == null) {\n      return [51.505, -0.09, 13];\n    } else {\n      return myObj.coordinate as any;\n    }\n  }\n\n  getTileLayer(): string {\n    let myObj: AjfReportMapWidget;\n    myObj = <AjfReportMapWidget>this.widget;\n    if (myObj.tileLayer === '') {\n      return 'http://{s}.tile.osm.org/{z}/{x}/{y}.png';\n    } else {\n      return myObj.tileLayerMap;\n    }\n  }\n\n  getAttribution(): string {\n    let myObj: AjfReportMapWidget;\n    myObj = <AjfReportMapWidget>this.widget;\n    if (myObj.attribution === '') {\n      return \"&copy; <a href='http://osm.org/copyright'>O</a> contributors\";\n    } else {\n      return myObj.attributionMap;\n    }\n  }\n\n  addToList(event: CdkDragDrop<AjfReportBuilderDragData>, toColumn: AjfReportColumnWidget): void {\n    this.onDragEndHandler();\n    this.service.addToColumn(event, toColumn);\n  }\n\n  ngOnInit(): void {\n    this._onDraggedSub = this.service.onDragged\n      .subscribe(x => {\n        this.onDragged = x;\n      });\n\n    this.getChartType = this.service.currentWidget.pipe(\n      map((widget: AjfReportWidget | null) => {\n        if (widget == null) { return 0; }\n        const myObj = <AjfReportChartWidget>this.widget;\n        return <number>(myObj.chartType);\n      }),\n      distinctUntilChanged(),\n      startWith(0)\n    );\n\n    this.getDataset = this.service.currentWidget.pipe(\n      map((widget: AjfReportWidget | null) => {\n        if (widget != null && (widget as AjfReportChartWidget).dataset != null) {\n          const myObj = <AjfReportChartWidget>this.widget;\n          return <any>myObj.dataset;\n        } else {\n          return [];\n        }\n      }),\n      distinctUntilChanged()\n    );\n\n    this.getTableTitles = this.service.currentWidget.pipe(\n      map((widget: AjfReportWidget | null) => {\n        if (widget == null) { return []; }\n\n        const myObj = <AjfReportTableWidget>this.widget;\n\n        if (myObj.dataset != null) {\n          let tableTitle: string[] = [];\n\n          for (let i = 0; i < myObj.dataset.length; i++) {\n            if (myObj.dataset[i][0] != null) {\n              tableTitle.push(myObj.dataset[i][0].label);\n            }\n          }\n          return tableTitle;\n        } else {\n          return [];\n        }\n      })\n    );\n\n    this.getTableContent = this.service.currentWidget.pipe(\n      map((widget: AjfReportWidget | null) => {\n        if (widget == null) { return []; }\n\n        const myObj = <AjfReportTableWidget>this.widget;\n\n        if (myObj.dataset != null) {\n          let tableContent: string[][] = [];\n\n          for (let i = 0; i < myObj.dataset.length; i++) {\n            for (let j = 0; j < myObj.dataset[i].length; j++) {\n              if (\n                (myObj.dataset[i] != null) &&\n                (myObj.dataset[i][j + 1] != null)\n              ) {\n                if (tableContent[j] == null) {\n                  tableContent[j] = [];\n                }\n                if (tableContent[j][i] == null) {\n                  tableContent[j][i] = ' ';\n                }\n                tableContent[j].splice(i, 1, myObj.dataset[i][j + 1].label);\n              }\n            }\n          }\n          return tableContent;\n        }\n      })\n    );\n\n    this.service.updateCurrentWidget(this.widget);\n  }\n\n  ngOnChanges(changes: any) {\n    if (changes.widget && changes.widget.currentValue != null) {\n      this.widget = changes.widget.currentValue;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._onDraggedSub.unsubscribe();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {Subscription} from 'rxjs';\n\nimport {AjfReportWidget} from '@ajf/core/reports';\nimport {deepCopy} from '@ajf/core/utils';\nimport {AjfReportBuilderService} from './report-builder-service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'theme-color-dialog',\n  templateUrl: 'theme-color-dialog.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderThemeColorDialog implements OnInit , AfterViewInit, OnDestroy {\n  @ViewChild('colorpic')\n  elem: any;\n\n  currentWidget: AjfReportWidget | null = null;\n\n  currentColor = 'rgb(255,255,255,0)';\n  section: string = 'color';\n\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n    private _service: AjfReportBuilderService,\n    private _dialogRef: MatDialogRef<AjfReportBuilderThemeColorDialog>\n  ) { }\n\n  setWidgetStyles(value: any) {\n    this._service.setWidgetStyles(this.section, value);\n    this.currentColor = value;\n    this.setStyle();\n  }\n\n  setStyle() {\n    if (this.currentWidget == null) { return; }\n    this.currentWidget.styles = deepCopy(this.currentWidget.styles);\n    this._service.updateCurrentWidget(this.currentWidget);\n  }\n\n  addCustomColor() {\n    this._service.addCustomColor(this.currentColor);\n    this._service.updateCurrentWidget(this.currentWidget);\n    this._dialogRef.close();\n  }\n\n  close() {\n    this._dialogRef.close();\n  }\n  ngOnInit() {\n    this._currentWidgetSub = this._service.currentWidget\n      .subscribe(x => {\n        if (x !== null) {\n          if (this.currentWidget !== x) {\n            this.currentWidget = x;\n          }\n        } else {\n          this.currentWidget = null;\n        }\n      });\n  }\n\n  ngAfterViewInit() {\n    this.elem.nativeElement.children[1].firstElementChild['style']['position'] = 'initial';\n  }\n\n  ngOnDestroy() {\n    this._currentWidgetSub.unsubscribe();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Observable, Subscription} from 'rxjs';\nimport {distinctUntilChanged, map} from 'rxjs/operators';\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\n\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\n\nimport {AjfReportWidget} from '@ajf/core/reports';\nimport {deepCopy} from '@ajf/core/utils';\n\nimport {AjfReportBuilderThemeColorDialog} from './theme-color-dialog';\nimport {AjfReportBuilderService} from './report-builder-service';\n/**\n * this component manages the report text\n *\n * @export\n */\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-theme-color',\n  templateUrl: 'theme-color.html',\n  styleUrls: ['theme-color.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderThemeColor implements OnInit, OnDestroy {\n  currentWidget: AjfReportWidget | null = null;\n\n  alphaColor: number = 1;\n  colors: string[];\n  currentColor: string;\n\n  getColorWidget: Observable<string>;\n\n  dialogRef: MatDialogRef<AjfReportBuilderThemeColorDialog>;\n\n  styleBackgroundColor = 'rgb(255,255,255,0)';\n  styleColor = 'rgb(0,0,0,0)';\n\n  @Input()\n  section: string;\n\n  @Input()\n  label: string;\n\n  @Input()\n  init: string;\n\n  /**\n   * the name of the section that contains the currentWidget\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  origin: string;\n\n  private _colorsSub: Subscription = Subscription.EMPTY;\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n  private _originSub: Subscription = Subscription.EMPTY;\n  private _headerStyleSub: Subscription = Subscription.EMPTY;\n  private _contentStylesSub: Subscription = Subscription.EMPTY;\n  private _footerStylesSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n    private _service: AjfReportBuilderService,\n    public dialog: MatDialog\n  ) {\n  }\n\n  setStyles(value: any) {\n    switch (this.section) {\n      case 'widget':\n        this.setWidgetStyles(value);\n        break;\n      case 'report':\n        this.setReportStyles(value);\n        break;\n      case 'section':\n        this.setSectionStyles(value);\n        break;\n      case 'chart':\n        this.setChartStyle(value);\n        break;\n    }\n  }\n\n  setChartStyle(value: any) {\n    if (this.label === 'backgroundColor') {\n      this.addChartBackgroundColor(value);\n    } else {\n      this.addChartBorderColor(value);\n    }\n  }\n\n  setAlphaColor(value: any) {\n\n    value = value.toFixed(2);\n    for (let i = 0; i < this.colors.length; i++) {\n      let lastComma = this.colors[i].lastIndexOf(',');\n      this.colors[i] = this.colors[i].substring(0, lastComma) + ',' + value + ')';\n    }\n  }\n\n  /**\n   * call to service to add new style to widget\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setWidgetStyles(value: any) {\n    if (this.section === 'chart') {\n      this.setChartStyle(value);\n    } else {\n      this._service.setWidgetStyles(this.label, value);\n      this.currentColor = value;\n      this.setStyle();\n    }\n  }\n\n  /**\n   * call to service to add new style to section\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setSectionStyles(value: any) {\n    this._service.setSectionStyles(this.origin, this.label, value);\n    this.styleColor = value;\n  }\n\n  /**\n   * call to service to add new style to report\n   *\n   * @param label\n   * @param value\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  setReportStyles(value: any) {\n    this._service.setReportStyles(this.label, value);\n    this.styleBackgroundColor = value;\n  }\n\n  /**\n   * call to service to add background color to current chart\n   *\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  addChartBackgroundColor(value: any) {\n    this._service.addChartBackgroundColor(value);\n  }\n\n  /**\n   * call to service to add border color to current chart\n   *\n   *\n   * @memberOf AjfReportBuilderProperties\n   */\n  addChartBorderColor(value: any) {\n    this._service.addChartBorderColor(value);\n  }\n\n  setStyle() {\n    if (this.currentWidget == null) { return; }\n    this.currentWidget.styles = deepCopy(this.currentWidget.styles);\n    this._service.updateCurrentWidget(this.currentWidget);\n  }\n\n  openDialog() {\n    this.dialogRef = this.dialog.open(AjfReportBuilderThemeColorDialog);\n  }\n\n  ngOnInit() {\n\n    this._colorsSub = this._service.colors\n      .subscribe(x => {\n        this.colors = x;\n      }\n      );\n\n    this._currentWidgetSub = this._service.currentWidget\n      .subscribe(x => {\n        if (x != null) {\n          if (this.currentWidget !== x) {\n            this.currentWidget = x;\n          }\n        } else {\n          this.currentWidget = null;\n        }\n      });\n\n    this.getColorWidget = this._service.currentWidget.pipe(\n      map((myObj: AjfReportWidget | null) => {\n        if (myObj != null) {\n          return myObj.styles['color'] || '';\n        }\n      }),\n      distinctUntilChanged()\n    );\n\n    this._originSub = this._service.origin.subscribe(s => {\n      this.origin = s;\n    });\n\n    this._headerStyleSub = this._service.headerStyles.subscribe(s => {\n      if (s['background-color'] != null) {\n        this.styleBackgroundColor = s['background-color'];\n      }\n    });\n    this._contentStylesSub = this._service.contentStyles.subscribe(s => {\n      if (s['background-color'] != null) {\n        this.styleBackgroundColor = s['background-color'];\n      }\n    });\n    this._footerStylesSub = this._service.footerStyles.subscribe(s => {\n      if (s['background-color'] != null) {\n        this.styleBackgroundColor = s['background-color'];\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._colorsSub.unsubscribe();\n    this._currentWidgetSub.unsubscribe();\n    this._originSub.unsubscribe();\n    this._headerStyleSub.unsubscribe();\n    this._contentStylesSub.unsubscribe();\n    this._footerStylesSub.unsubscribe();\n  }\n}\n\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\nimport {AjfReportBuilderService} from './report-builder-service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'toolbar-dialog',\n  templateUrl: 'toolbar-dialog.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderToolbarDialog {\n  constructor(\n    private _service: AjfReportBuilderService,\n    private _dialogRef: MatDialogRef<AjfReportBuilderToolbarDialog>\n  ) { }\n\n  resetReport() {\n    let emptyReport: any = {\n      'header': { 'content': [], 'styles': {} },\n      'content': { 'content': [], 'styles': {} },\n      'footer': { 'content': [], 'styles': {} },\n      'styles': {}\n    };\n    this._service.setReport(emptyReport);\n    this._dialogRef.close();\n  }\n\n  close() {\n    this._dialogRef.close();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy, Component, EventEmitter, ViewEncapsulation\n} from '@angular/core';\nimport {CdkDrag, CdkDragDrop} from '@angular/cdk/drag-drop';\n\nimport {Observable} from 'rxjs';\n\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\n\nimport {AjfReport} from '@ajf/core/reports';\nimport {AjfReportBuilderDragData} from './report-builder-drag-data';\nimport {AjfReportBuilderService} from './report-builder-service';\nimport {AjfReportBuilderToolbarDialog} from './toolbar-dialog';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-toolbar',\n  outputs: ['addClick'],\n  styleUrls: ['toolbar.css'],\n  templateUrl: 'toolbar.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an ajf builder toolbar\n * @implements : OnDestroy\n */\nexport class AjfReportBuilderToolbar {\n  // this is an any EventEmitter\n  addClick: EventEmitter<any> = new EventEmitter<any>();\n  dialogRef: MatDialogRef<AjfReportBuilderToolbarDialog>;\n  zoom = false;\n\n  lastJson: string;\n\n  emptyContent: Observable<boolean>;\n\n  constructor(\n    private _service: AjfReportBuilderService,\n    public dialog: MatDialog) {\n      this.emptyContent = this._service.emptyContent;\n  }\n\n  canDropPredicate(item: CdkDrag<AjfReportBuilderDragData>): boolean {\n    return item.data.dropZones.indexOf('widget') > -1;\n  }\n\n  JSONRequest() {\n  }\n  /**\n   * this method will pass event to event emitter\n   */\n  onAddClick(event: any): void {\n    this.addClick.emit(event);\n  }\n\n  addToList(event: CdkDragDrop<AjfReportBuilderDragData>) {\n    if (event.item.data.widget != null) {\n      this._service.addCustomWidgets({\n        json: JSON.stringify(event.item.data.widget.toJson()),\n        type: ''\n      });\n    }\n  }\n\n  undoLastOperation() {\n    try {\n      let myObj = JSON.parse(this._service.popJsonStack() || '');\n      this._service.setReport(AjfReport.fromJson(myObj));\n    } catch (e) { }\n  }\n\n  isZoomed() {\n    this.zoom = !this.zoom;\n    if (this.zoom) {\n      this._service.fixedZoomIn();\n    } else {\n      this._service.fixedZoomOut();\n    }\n  }\n\n  openDialog() {\n    this.dialogRef = this.dialog.open(AjfReportBuilderToolbarDialog);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation} from '@angular/core';\n\nimport {ajfReportBuilderWidgetToString} from './utils';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-widget-toolbar-button',\n  inputs: ['widgetType'],\n  templateUrl: 'widget-toolbar-button.html',\n  styleUrls: ['widget-toolbar-button.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an ajf builder field toolbar button\n * @implements : OnInit\n */\nexport class AjfReportBuilderWidgetToolbarButton implements OnInit {\n  widgetType: string;\n  widgetIcon: string;\n\n  constructor() { }\n  ngOnInit(): void {\n    this.widgetIcon = ajfReportBuilderWidgetToString(this.widgetType);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {Subscription} from 'rxjs';\n\nimport {AjfReportLayoutWidget, AjfReportWidget, AjfReportWidgetType} from '@ajf/core/reports';\nimport {AjfReportBuilderService} from './report-builder-service';\nimport {ajfWidgetTypeToLabel, widgetReportBuilderIconName} from './utils';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-widgets-row-buttons',\n  inputs: ['from', 'fromWidget', 'position', 'widget', 'child', 'isOver'],\n  templateUrl: 'widgets-row-buttons.html',\n  styleUrls: ['widgets-row-buttons.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AjfReportBuilderWidgetsRowButtons implements OnDestroy, OnInit {\n  from: string;\n  fromWidget: AjfReportWidget;\n  position: number;\n  widget: AjfReportWidget;\n  child: boolean;\n  currentWidget: AjfReportWidget | null = null;\n  isClicked = false;\n  color: string[] = [];\n  isOver = false;\n\n  widgetIcon: string;\n  widgetLabel: string;\n  label: string;\n\n  // this boolean sign if is dragged a widget\n  onDragged = false;\n\n  // this boolean sign if is on over a widget\n  onOver = false;\n\n  private _currentWidgetSub: Subscription = Subscription.EMPTY;\n  private _onDraggedSub: Subscription = Subscription.EMPTY;\n  private _onOverSub: Subscription = Subscription.EMPTY;\n\n\n  /**\n   *\n   * @param private _afjBuilderService: AjfBuilderService\n   */\n  constructor(private _service: AjfReportBuilderService) {\n\n  }\n\n  selectedWidget() {\n    this.isClicked = !this.isClicked;\n    this._service.setOrigin(this.from);\n    this._service.updateCurrentWidget(this.widget);\n  }\n\n  remove() {\n    if (this.fromWidget != null) {\n      this._service.updateCurrentWidget(this.fromWidget);\n    }\n    this._service.remove(this.from, this.position);\n  }\n\n  onFocus(): boolean {\n    if (this.widget === this.currentWidget) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  changeColumn(direction: string) {\n\n    if (direction == 'back') {\n      this._service.changeColumn(\n        this.position, this.position - 1, <AjfReportLayoutWidget>this.fromWidget);\n    } else {\n      this._service.changeColumn(\n        this.position, this.position + 1, <AjfReportLayoutWidget>this.fromWidget);\n    }\n  }\n  isColumn(): boolean {\n    if (this.label === 'Column') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isOneColumn(): boolean {\n    let rootObj = <AjfReportLayoutWidget>this.fromWidget;\n    if (rootObj.columns.length > 1) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  ngOnInit() {\n    this.label = AjfReportWidgetType[this.widget.widgetType];\n    this.widgetIcon = widgetReportBuilderIconName(this.widget.widgetType);\n    this.widgetLabel = ajfWidgetTypeToLabel(this.widget.widgetType);\n\n    this._onDraggedSub = this._service.onDragged\n      .subscribe(x => {\n        this.onDragged = x;\n      });\n\n    this._onOverSub = this._service.onOver\n      .subscribe(x => {\n        this.onOver = x;\n      });\n\n    this._currentWidgetSub = this._service.currentWidget\n      .subscribe(\n      x => {\n        this.currentWidget = x;\n        if (x !== this.widget) {\n          this.isClicked = false;\n        }\n      });\n\n  }\n  ngOnDestroy(): void {\n    this._onDraggedSub.unsubscribe();\n    this._onOverSub.unsubscribe();\n    this._currentWidgetSub.unsubscribe();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\n\nimport {timer} from 'rxjs';\n\nimport {AjfChartType, AjfReportWidgetType} from '@ajf/core/reports';\nimport {sizedEnumToStringArray} from '@ajf/core/utils';\nimport {AjfReportBuilderService} from './report-builder-service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder-widgets-toolbar',\n  templateUrl: 'widgets-toolbar.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an Ajf builder fields toolbar\n */\nexport class AjfReportBuilderWidgetsToolbar {\n  // fieldTypes is an array string that contains the field options\n  chartTypes: string[] = sizedEnumToStringArray(AjfChartType);\n  widgetTypes: string[] = sizedEnumToStringArray(AjfReportWidgetType);\n\n\n  /**\n   *\n   * @param private _afjBuilderService: AjfBuilderService\n   */\n  constructor(private service: AjfReportBuilderService) {\n    // delete Column widget\n    let pos = this.widgetTypes.indexOf('Column');\n    if (pos !== -1) {\n      this.widgetTypes.splice(pos, 1);\n    }\n  }\n  /**\n   *  sign the start of mouse drag with 200 ms of delay\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragStartHandler(): void {\n    let s = timer(200)\n      .subscribe(() => {\n        if (s != null) { s.unsubscribe(); }\n        this.service.dragStarted();\n      });\n  }\n\n  /**\n   * sign the end of mouse drag\n   *\n   * @memberOf AjfReportBuilderContent\n   */\n  onDragEndHandler(): void {\n    this.service.dragEnded();\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterContentInit, ChangeDetectionStrategy, Component, Input, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport {MatSidenav} from '@angular/material/sidenav';\n\nimport {AjfReport} from '@ajf/core/reports';\nimport {AjfReportBuilderService} from './report-builder-service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'ajf-report-builder',\n  templateUrl: 'report-builder.html',\n  styleUrls: ['report-builder.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * This class will define an ajf form builderx\n */\nexport class AjfReportBuilder implements AfterContentInit {\n  @ViewChild(MatSidenav) startSidenav: MatSidenav;\n\n  private _init: boolean = false;\n\n  private _report: AjfReport;\n  get report(): AjfReport { return this._report; }\n  @Input() set report(report: AjfReport) {\n    if (report != null) {\n      this._report = report;\n      if (this._init) {\n        this._setCurrentReport();\n      }\n    }\n  }\n\n  constructor(private _service: AjfReportBuilderService) { }\n\n  ngAfterContentInit(): void {\n    this._setCurrentReport();\n    this._init = true;\n  }\n\n  private _setCurrentReport(): void {\n    this._service.setReportForms(this.report != null ? this.report.forms || [] : []);\n    this._service.setReport(this.report);\n  }\n}\n","/**\n * @license\n * Copyright (C) 2018 Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\nimport {TranslateModule} from '@ngx-translate/core';\n\nimport {ColorPickerModule} from 'ngx-color-picker';\n\nimport {AjfCommonModule} from '@ajf/core/common';\nimport {AjfMapModule} from '@ajf/core/map';\nimport {AjfTableModule} from '@ajf/core/table';\nimport {AjfTextModule} from '@ajf/core/text';\nimport {AjfImageModule} from '@ajf/material/image';\nimport {AjfMonacoEditorModule} from '@ajf/material/monaco-editor';\n\nimport {AjfReportBuilderColumn} from './column';\nimport {AjfReportBuilderConditionEditor} from './condition-editor';\nimport {AjfReportBuilderContent} from './content';\nimport {AjfReportBuilderCustomWidgetDialog} from './custom-widget-dialog';\nimport {AjfReportBuilderCustomWidgetToolbarButton} from './custom-widget-toolbar-button';\nimport {AjfReportBuilderCustomWidgetsToolbar} from './custom-widgets-toolbar';\nimport {AjfReportBuilderFormsAnalyzerDialog} from './forms-analyzer-dialog';\nimport {AjfReportBuilderFormsAnalyzer} from './forms-analyzer';\nimport {AjfImageFilterPipe} from './image-filter';\nimport {AjfReportBuilderImageGroup} from './image-group';\nimport {AjfReportBuilderProperties} from './properties';\nimport {AjfQuillEditor} from './quill-editor';\nimport {AjfReportBuilderRendererWidget} from './renderer-widget';\nimport {AjfReportBuilderThemeColorDialog} from './theme-color-dialog';\nimport {AjfReportBuilderThemeColor} from './theme-color';\nimport {AjfReportBuilderToolbarDialog} from './toolbar-dialog';\nimport {AjfReportBuilderToolbar} from './toolbar';\nimport {AjfReportBuilderWidgetToolbarButton} from './widget-toolbar-button';\nimport {AjfReportBuilderWidgetsRowButtons} from './widgets-row-buttons';\nimport {AjfReportBuilderWidgetsToolbar} from './widgets-toolbar';\nimport {AjfReportBuilderService} from './report-builder-service';\nimport {AjfReportBuilder} from './report-builder';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    DragDropModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatIconModule,\n    MatListModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n    MatSliderModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    TranslateModule,\n    ColorPickerModule,\n    AjfCommonModule,\n    AjfImageModule,\n    AjfMapModule,\n    AjfMonacoEditorModule,\n    AjfTableModule,\n    AjfTextModule,\n  ],\n  declarations: [\n    AjfQuillEditor,\n    AjfReportBuilderColumn,\n    AjfReportBuilderConditionEditor,\n    AjfReportBuilderContent,\n    AjfReportBuilderCustomWidgetDialog,\n    AjfReportBuilderCustomWidgetToolbarButton,\n    AjfReportBuilderCustomWidgetsToolbar,\n    AjfReportBuilderFormsAnalyzerDialog,\n    AjfReportBuilderFormsAnalyzer,\n    AjfReportBuilderImageGroup,\n    AjfReportBuilderProperties,\n    AjfReportBuilderRendererWidget,\n    AjfReportBuilderThemeColorDialog,\n    AjfReportBuilderThemeColor,\n    AjfReportBuilderToolbarDialog,\n    AjfReportBuilderToolbar,\n    AjfReportBuilderWidgetToolbarButton,\n    AjfReportBuilderWidgetsRowButtons,\n    AjfReportBuilderWidgetsToolbar,\n    AjfReportBuilder,\n    AjfImageFilterPipe,\n  ],\n  exports: [\n    AjfReportBuilder,\n  ],\n  entryComponents: [\n    AjfReportBuilderFormsAnalyzerDialog,\n    AjfReportBuilderThemeColorDialog,\n    AjfReportBuilderToolbarDialog,\n  ],\n  providers: [\n    AjfReportBuilderService,\n  ]\n})\nexport class AjfReportBuilderModule { }\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","AJF_REPORTS_CONFIG","InjectionToken","AjfReportBuilderService","reportsConfig","_this","_customWidgetsUpdate","Subject","_originUpdate","_savedReportUpdate","_jsonStack","BehaviorSubject","_emptyContent","_onDraggedUpdate","_onOverUpdate","_fixedZoomUpdate","_onDragEnterUpdate","_headerWidgetsUpdate","_contentWidgetsUpdate","_footerWidgetsUpdate","_colorUpdate","_defaultColor","_currentWidgetUpdate","_formsVariablesUpdate","_conditionNamesUpdate","_saveReport","_report","_reportStylesUpdate","_reportFormsUpdate","_updates","header","content","footer","color","customWidgets","_saveReportEvent","EventEmitter","_saveFormulaTOHtml","columnWidthChangedEmitter","_iconSets","ajf-icon","_lastDeletedJson","icons","tslib_1.__assign","_origin","pipe","startWith","share","_savedReport","_onDragged","_onOver","_fixedZoom","_onDragEnter","_reportStyles","scan","styles","op","_reportForms","forms","_customWidgets","widgets","_formsVariables","filter","variables","publishReplay","refCount","_conditionNames","_headerWidgets","_headerStyles","map","_contentWidgets","_contentStyles","_footerWidgets","_footerStyles","_color","_currentWidget","widget","undefined","f","_c","fillFormsVariables","subscribe","reportObs","r","_colors","tempColors","parseColor","obj","AjfReportLayoutWidget","layoutObj","j","columnObj","z","widgetObj","_styles","_widgets","json","_r","combineLatest","report","reportForms","w","curRo","toJson","ro","AjfReport","AjfReportContainer","setSaveReport","next","pushJsonStack","JSON","stringify","getFormulaToHtmlEvent","asObservable","defineProperty","filterNodes","nodes","AjfNodeGroup","AjfSlide","AjfRepeatingSlide","AjfStringField","splice","cssStyles","colors","forEach","k","indexOf","push","labels","names","types","flattenNodes","extractLabelsNodes","extractNamesNodes","extractTypesNodes","label","name","fieldType","setOrigin","origin","roundTo","value","decimalPositions","Math","pow","floor","isNumber","test","isNumberArray","v","fixedZoomIn","fixedZoomOut","dragEnter","array","index","dragStarted","dragEnded","overStarted","overEnded","dragLeave","saveReport","emit","saveImageFormula","formula","flag","icon","saveFormulaToHtml","htmlFormula","reference","setEmptyContent","val","currentStack","getValue","popJsonStack","pop","updateCurrentWidget","updateArrayWidgets","type","newWidget","Error","_widget","instantColumnValue","newValue","idx","myObj","size","columns","spreadValue","objNum","sum","idxFirstNoObj","add","foundFirstNoObj","re1","RegExp","re2","re3","oldValue","Number","toFixed","String","setImageUrl","imageUrl","setUrl","setIcon","setFlag","saveCondition","conditionText","visibility","condition","saveChartFormula","_label","_level","_mainIndex","_index","formulaText","aggregationType","dataset","AjfFormula","aggregation","AjfAggregation","saveTableFormula","removeTableMainData","_removeFromCurrentWidgetArrayProperty","removeData","setChartType","_setCurrentWidgetProperty","removeMainData","_idx","removeRelatedData","_mainIdx","setChartBackgroundColor","addChartBackgroundColor","_addToCurrentWidgetArrayProperty","removeChartBackgroundColor","setChartBorderColor","setChartBorderWidth","addChartBorderColor","removeChartBorderColor","setReport","setWidgetStyles","isPxStyle","Array","join","setSectionStyles","setReportStyles","setReportForms","_form","addCustomWidgets","position","resetCustomWidgets","changeLabelCustomWidget","addHeaderWidget","_addWidgetToContainer","addContentWidget","addfooterWidget","unfixedColumn","num","checkSum","parseFloat","addColumn","tmpValue","tempObj","widgetType","AjfReportColumnWidget","removeWidgetToColumn","column","remove","node","spread","addToContent","addToColumn","event","toColumn","dragData","fromColumn","fromIndex","arrayFrom","parse","AjfReportWidget","fromJson","AjfReportWidgetType","changePositionOnColumn","toIndex","fromWidget","toWidget","fixedColumn","changeColumn","from","to","layoutWidget","fromColumnValue","toColumnValue","addCustomColor","subj","propName","arr","Injectable","decorators","Optional","Inject","args","AjfReportBuilderColumn","_service","showActions","layoutShow","onDragged","_onDraggedSub","Subscription","EMPTY","addToList","onDragEndHandler","onDragStartHandler","timer","unsubscribe","ngOnInit","x","ngOnDestroy","Component","selector","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","propDecorators","ajfWidgetTypeStringToLabel","sanitizeConditionString","str","trim","replace","AjfReportBuilderConditionEditor","isValid","operators","_conditionNamesSub","extractNames","formsVariables","concat","setCurrent","id","currentId","appendText","checkValidation","validateCondition","AjfCondition","validate","text","_goBackNum","conditionTextArea","newStr","el","nativeElement","sStart","min","selectionStart","selectionEnd","sEnd","max","startingString","substr","endingString","initialLenght","closed","createTextRange","range","move","select","focus","setSelectionRange","hideErrorMessage","errorMessage","conditionNames","ViewChild","AjfReportBuilderContent","service","cdRef","fixedZoom","onDragEnter","show","headerWidgets","contentWidgets","footerWidgets","onOver","currentWidget","_fixedZoomSub","_onDragEnterSub","_headerWidgetsSub","_contentWidgetsSub","_footerWidgetsSub","_onOverSub","_currentWidgetSub","headerStyles","contentStyles","footerStyles","onMouseOver","onMouseLeave","canDropPredicate","dropZones","item","data","d","isLayout","onDragEnterHandler","onDragLeaveHandler","onDragEnterCheck","arrayTo","itemData","deepCopy","bool","ngAfterViewChecked","detectChanges","host","(mouseover)","(mouseleave)","AjfReportBuilderCustomWidgetDialog","_dialogRef","changeLabel","close","AjfReportBuilderCustomWidgetToolbarButton","widgetIcon","toLowerCase","widgetLabel","inputs","AjfReportBuilderCustomWidgetsToolbar","dialog","_customWidgetsSub","_threeColumnsLayout","_fourColumnsLayout","openDialog","open","componentInstance","AjfReportBuilderFormsAnalyzerDialog","_","aggregationTypes","sizedEnumToStringArray","AjfAggregationType","formulaDate","safeFormulaText","Sum","currentIndex","formsVariablesName","formsVariablesType","_formAnalyzerSub","_first","init","imageType","AjfImageType","Flag","onEditorInit","monaco","languages","typescript","javascriptDefaults","setDiagnosticsOptions","noSemanticValidation","noSyntaxValidation","setCompilerOptions","target","ScriptTarget","ES2015","allowNonTsExtensions","allowJs","module","ModuleKind","addExtraLib","e","_extraLibs","_initFormsVariablesNames","_updateVariables","_updateFunctions","formVar","_fieldVarType","AjfValidatedProperty","UTIL_FUNCTIONS","AjfFieldType","Boolean","Date","DateInput","Time","Empty","Formula","MultipleChoice","SingleChoice","Table","Text","insertVariable","setCurrentId","setAggregationType","validateFormula","saveDataset","saveFormulaHtml","level","mainIndex","variable","monacoEditor","editor","split","getPosition","ln","lineNumber","line","col","substring","setPosition","setVariable","setValue","reset","labelText","AjfValidationService","Input","formulaTextArea","AjfMonacoEditor","AjfReportBuilderFormsAnalyzer","choicesOrigins","currentMainDataIndex","_dataset","setCurrentIndex","isSelected","getMainData","mainData","getDataset","getRelatedData","relatedData","getTableHeader","getTableData","tableData","needMainData","chartType","AjfChartType","Scatter","Bubble","removeDataset","editMode","dialogRef","Chart","openDialogAddMainData","openDialogChartEditMainData","openDialogTableEditMainData","openDialogChartAddDataset","openDialogTableAddDataset","openDialogChartAddDataOfDataset","openDialogChartEditDataset","openDialogTableEditDataset","openDialogChartEditDataOfDataset","AjfImageFilterPipe","transform","items","info","includes","Pipe","AjfReportBuilderImageGroup","_icon","_classes","valueToSearch","formulaClick","fontSet","fontIcon","setSearch","currentTarget","emitFormula","getFlag","returnValue","class","prefixClass","toggle","AjfReportBuilderProperties","_dialog","initChartType","formsJson","widgetName","marginExpanded","paddingExpanded","borderWidthExpanded","borderRadiusExpanded","backgroundColor","styleBackgroundColor","borderColor","styleColor","align","fonts","currentModule","quillModules","toolbar","list","script","background","font","chartBorderColor","chartBorderWidth","htmlText","reportStyles","sectionStyles","widgetStyles","sectionColor","widgetColor","visibilitySection","currentColor","iconSet","title","flagSet","_formsSub","_colorSub","_headerStyleSub","_contentStylesSub","_footerStylesSub","_originSub","_stylesUpdatesSubs","_updateWidgetMarginEvt","_updateWidgetPaddingEvt","_updateWidgetBorderWidthEvt","_updateWidgetBorderRadiusEvt","tabValue","setForms","keys","iconSets","toNumber","matches","match","toNumberArray","fillPxNumberArray","v21","v22","v31","v32","percent","AjfForm","setStyle","setWidgetMargin","setWidgetPadding","setWidgetBorderWidth","setWidgetBorderRadius","getModule","isChartTypeSelected","setTab","hideMenu","openFormulaDialog","isFormula","getHTML","distinctUntilChanged","getHeightWidget","getFontSizeWidget","getFontAlignWidget","getBorderWidthWidget","getBorderWidthWidgetTop","m","getBorderWidthWidgetRight","getBorderWidthWidgetBottom","getBorderWidthWidgetLeft","getBorderRadiusWidget","getBorderRadiusWidgetTopLeft","getBorderRadiusWidgetTopRight","getBorderRadiusWidgetBottomRight","getBorderRadiusWidgetBottomLeft","getMarginWidget","getMarginWidgetTop","getMarginWidgetRight","getMarginWidgetBottom","getMarginWidgetLeft","getPaddingWidget","getPaddingWidgetTop","getPaddingWidgetRight","getPaddingWidgetBottom","getPaddingWidgetLeft","getBackgroundColorWidget","getColorWidget","withLatestFrom","ngOnChanges","changes","currentValue","AjfQuillEditor","elementRef","renderer","emptyArray","_init","dateFormats","validator","defaultModules","slice","Quill","import","editorCreated","contentChanged","selectionChanged","onModelChange","onModelTouched","_formulas","_formulaTextSub","whitelist","innerHTML","setAttribute","efs","formulaEntry","unlisten","listen","quillEditor","querySelector","link_1","createElement","check","linkLabel","createText","appendChild","elem","setHTML","writeValue","initHTML","ngAfterViewInit","toolbarElem","modules","register","insertAdjacentHTML","editorElem","placeholder","readOnly","theme","formats","on","oldRange","source","delta","oldDelta","html","children","getText","listenFunc","pasteHTML","querySelectorAll","innerText","setText","registerOnChange","fn","registerOnTouched","err","valid","textLength","minLength","minLengthError","given","maxLength","maxLengthError","enable","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","NG_VALIDATORS","Output","AjfReportBuilderRendererWidget","currentContentWidget","getColumnContent","getIcon","evaluate","getPercent","toString","getImageUrl","url","getImageType","Image","getHtmlText","getCoordinate","coordinate","getTileLayer","tileLayer","tileLayerMap","getAttribution","attribution","attributionMap","getChartType","getTableTitles","tableTitle","getTableContent","tableContent","section","AjfReportBuilderThemeColorDialog","firstElementChild","AjfReportBuilderThemeColor","alphaColor","_colorsSub","setStyles","setChartStyle","setAlphaColor","lastComma","lastIndexOf","AjfReportBuilderToolbarDialog","resetReport","AjfReportBuilderToolbar","addClick","zoom","emptyContent","JSONRequest","onAddClick","undoLastOperation","isZoomed","outputs","AjfReportBuilderWidgetToolbarButton","AjfReportBuilderWidgetsRowButtons","isClicked","isOver","selectedWidget","onFocus","direction","isColumn","isOneColumn","AjfReportBuilderWidgetsToolbar","chartTypes","widgetTypes","pos","AjfReportBuilder","_setCurrentReport","ngAfterContentInit","AjfReportBuilderModule","NgModule","imports","CommonModule","FormsModule","DragDropModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatDialogModule","MatGridListModule","MatIconModule","MatListModule","MatSelectModule","MatSidenavModule","MatSlideToggleModule","MatSliderModule","MatTabsModule","MatToolbarModule","MatTooltipModule","TranslateModule","ColorPickerModule","AjfCommonModule","AjfImageModule","AjfMapModule","AjfMonacoEditorModule","AjfTableModule","AjfTextModule","declarations","exports","entryComponents"],"mappings":"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"}