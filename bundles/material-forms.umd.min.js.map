{"version":3,"sources":["src/material/material-forms.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ajf","material","forms","tslib","ng","core","dialog","rxjs","operators","input","common","button","card","formField","icon","radio","select","slideToggle","toolbar","ngxTranslate","barcode","calendar","checkboxGroup","pageSlider","time","this","i0","forms$1","common$1","_super","AjfFieldWarningDialog","decorators","type","Component","args","template","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","AjfWarningAlertService","_dialog","prototype","showWarningAlertPrompt","warnings","open","componentInstance","message","join","afterClosed","pipe","map","result","Injectable","ctorParameters","MatDialog","AjfBooleanFieldComponent","cdr","service","was","call","__extends","styles","ChangeDetectorRef","AjfFormRendererService","AjfBaseFieldComponent","AjfDateFieldComponent","AjfDateInputFieldComponent","_dvs","_this","onChange","val","value","length","_minDateStr","_maxDateStr","_onInstanceChange","transform","instance","node","minDate","maxDate","AjfDateValueStringPipe","propDecorators","ViewChild","MatInput","static","AjfEmptyFieldComponent","AjfBarcodeFieldComponent","AjfInputFieldComponent","AjfMultipleChoiceFieldComponent","searchThreshold","Number","Optional","Inject","AJF_SEARCH_ALERT_THRESHOLD","AjfFieldWithChoicesComponent","AjfSingleChoiceFieldComponent","AjfTableFieldComponent","goToNextCell","ev","row","column","currentCell","controls","show","_showCell","preventDefault","stopPropagation","goToCell","_resetControls","forEach","cell","nextCell","AjfTimeFieldComponent","AjfFieldService","componentsMap","AjfFieldType","String","component","Text","inputs","Boolean","Formula","readonly","Date","DateInput","Table","Empty","SingleChoice","MultipleChoice","Time","Barcode","providedIn","ɵprov","AjfFieldService_Factory","token","AjfFormField","cfr","fieldService","selector","ComponentFactoryResolver","AjfFormRenderer","rendererService","changeDetectorRef","topBar","scrollToSlide","slide","formSlider","to","position","Input","AjfGetTableCellControlPipe","FormControl","apply","arguments","ctrl","Pipe","name","AjfIsCellEditablePipe","editable","AjfFormsModule","forRoot","ngModule","providers","NgModule","imports","CommonModule","ReactiveFormsModule","MatButtonModule","MatCardModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatRadioModule","MatSelectModule","MatSlideToggleModule","MatToolbarModule","TranslateModule","AjfCalendarModule","AjfBarcodeModule","AjfCheckboxGroupModule","AjfCommonModule","AjfPageSliderModule","AjfTimeModule","declarations","entryComponents","ɵajf_src_material_forms_forms_a","ɵajf_src_material_forms_forms_b","ɵajf_src_material_forms_forms_c","Object","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('@ajf/core/forms'), require('@angular/core'), require('@angular/material/dialog'), require('rxjs/operators'), require('@angular/material/input'), require('@angular/common'), require('@angular/forms'), require('@angular/material/button'), require('@angular/material/card'), require('@angular/material/form-field'), require('@angular/material/icon'), require('@angular/material/radio'), require('@angular/material/select'), require('@angular/material/slide-toggle'), require('@angular/material/toolbar'), require('@ngx-translate/core'), require('@ajf/core/common'), require('@ajf/material/barcode'), require('@ajf/material/calendar'), require('@ajf/material/checkbox-group'), require('@ajf/material/page-slider'), require('@ajf/material/time')) :\n    typeof define === 'function' && define.amd ? define('@ajf/material/forms', ['exports', 'tslib', '@ajf/core/forms', '@angular/core', '@angular/material/dialog', 'rxjs/operators', '@angular/material/input', '@angular/common', '@angular/forms', '@angular/material/button', '@angular/material/card', '@angular/material/form-field', '@angular/material/icon', '@angular/material/radio', '@angular/material/select', '@angular/material/slide-toggle', '@angular/material/toolbar', '@ngx-translate/core', '@ajf/core/common', '@ajf/material/barcode', '@ajf/material/calendar', '@ajf/material/checkbox-group', '@ajf/material/page-slider', '@ajf/material/time'], factory) :\n    (global = global || self, factory((global.ajf = global.ajf || {}, global.ajf.material = global.ajf.material || {}, global.ajf.material.forms = {}), global.tslib, global.ng.core.forms, global.ng.core, global.ng.material.dialog, global.rxjs.operators, global.ng.material.input, global.ng.common, global.ng.forms, global.ng.material.button, global.ng.material.card, global.ng.material.formField, global.ng.material.icon, global.ng.material.radio, global.ng.material.select, global.ng.material.slideToggle, global.ng.material.toolbar, global.ngxTranslate.core, global.ng.core.common, global.ng.material.barcode, global.ng.material.calendar, global.ng.material.checkboxGroup, global.ng.material.pageSlider, global.ng.material.time));\n}(this, (function (exports, tslib, forms, i0, dialog, operators, input, common, forms$1, button, card, formField, icon, radio, select, slideToggle, toolbar, core, common$1, barcode, calendar, checkboxGroup, pageSlider, time) { 'use strict';\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFieldWarningDialog = /** @class */ (function () {\n        function AjfFieldWarningDialog() {\n        }\n        AjfFieldWarningDialog.decorators = [\n            { type: i0.Component, args: [{\n                        template: \"<mat-dialog-content><div [innerHTML]=\\\"message\\\"></div></mat-dialog-content>\\n<mat-dialog-actions>\\n  <button mat-button [mat-dialog-close]=\\\"true\\\">Ok</button>\\n  <button mat-button [mat-dialog-close]=\\\"false\\\">Cancel</button>\\n</mat-dialog-actions>\\n\",\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None\n                    }] }\n        ];\n        return AjfFieldWarningDialog;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfWarningAlertService = /** @class */ (function () {\n        function AjfWarningAlertService(_dialog) {\n            this._dialog = _dialog;\n        }\n        AjfWarningAlertService.prototype.showWarningAlertPrompt = function (warnings) {\n            var dialog = this._dialog.open(AjfFieldWarningDialog);\n            dialog.componentInstance.message = warnings.join('<br>');\n            return dialog.afterClosed().pipe(operators.map(function (result) { return ({ result: result }); }));\n        };\n        AjfWarningAlertService.decorators = [\n            { type: i0.Injectable }\n        ];\n        /** @nocollapse */\n        AjfWarningAlertService.ctorParameters = function () { return [\n            { type: dialog.MatDialog }\n        ]; };\n        return AjfWarningAlertService;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfBooleanFieldComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfBooleanFieldComponent, _super);\n        function AjfBooleanFieldComponent(cdr, service, was) {\n            return _super.call(this, cdr, service, was) || this;\n        }\n        AjfBooleanFieldComponent.decorators = [\n            { type: i0.Component, args: [{\n                        template: \"<mat-slide-toggle *ngIf=\\\"control|async as ctrl\\\" [formControl]=\\\"ctrl!\\\" [disabled]=\\\"readonly\\\"></mat-slide-toggle>\\n\",\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfBooleanFieldComponent.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: forms.AjfFormRendererService },\n            { type: AjfWarningAlertService }\n        ]; };\n        return AjfBooleanFieldComponent;\n    }(forms.AjfBaseFieldComponent));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfDateFieldComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfDateFieldComponent, _super);\n        function AjfDateFieldComponent(cdr, service, was) {\n            return _super.call(this, cdr, service, was) || this;\n        }\n        AjfDateFieldComponent.decorators = [\n            { type: i0.Component, args: [{\n                        template: \"<ajf-calendar\\n  *ngIf=\\\"control|async as ctrl\\\"\\n  selectionMode=\\\"day\\\"\\n  [dateOnlyForDay]=\\\"true\\\"\\n  [minDate]=\\\"instance.node.minDate|ajfDateValue\\\"\\n  [maxDate]=\\\"instance.node.maxDate|ajfDateValue\\\"\\n  [formControl]=\\\"ctrl!\\\"\\n></ajf-calendar>\\n\",\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfDateFieldComponent.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: forms.AjfFormRendererService },\n            { type: AjfWarningAlertService }\n        ]; };\n        return AjfDateFieldComponent;\n    }(forms.AjfBaseFieldComponent));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfDateInputFieldComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfDateInputFieldComponent, _super);\n        function AjfDateInputFieldComponent(cdr, service, was, _dvs) {\n            var _this = _super.call(this, cdr, service, was) || this;\n            _this._dvs = _dvs;\n            return _this;\n        }\n        AjfDateInputFieldComponent.prototype.onChange = function () {\n            if (this.input == null) {\n                return;\n            }\n            var val = this.input.value || '';\n            if (val.length > 0) {\n                if ((this._minDateStr != null && val < this._minDateStr)\n                    || (this._maxDateStr != null && val > this._maxDateStr)) {\n                    this.input.value = '';\n                }\n            }\n        };\n        AjfDateInputFieldComponent.prototype._onInstanceChange = function () {\n            this._minDateStr = this._dvs.transform(this.instance.node.minDate);\n            this._maxDateStr = this._dvs.transform(this.instance.node.maxDate);\n        };\n        AjfDateInputFieldComponent.decorators = [\n            { type: i0.Component, args: [{\n                        template: \"<mat-form-field *ngIf=\\\"control|async as ctrl\\\">\\n  <input matInput type=\\\"date\\\"\\n      [attr.aria-label]=\\\"instance.node.label || (instance|ajfNodeCompleteName)\\\"\\n      [min]=\\\"instance.node.minDate|ajfDateValueString\\\"\\n      [max]=\\\"instance.node.maxDate|ajfDateValueString\\\"\\n      [readonly]=\\\"readonly\\\"\\n      (change)=\\\"onChange()\\\"\\n      [formControl]=\\\"ctrl!\\\">\\n</mat-form-field>\\n\",\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfDateInputFieldComponent.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: forms.AjfFormRendererService },\n            { type: AjfWarningAlertService },\n            { type: forms.AjfDateValueStringPipe }\n        ]; };\n        AjfDateInputFieldComponent.propDecorators = {\n            input: [{ type: i0.ViewChild, args: [input.MatInput, { static: false },] }]\n        };\n        return AjfDateInputFieldComponent;\n    }(forms.AjfBaseFieldComponent));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfEmptyFieldComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfEmptyFieldComponent, _super);\n        function AjfEmptyFieldComponent(cdr, service, was) {\n            return _super.call(this, cdr, service, was) || this;\n        }\n        AjfEmptyFieldComponent.decorators = [\n            { type: i0.Component, args: [{\n                        template: \"<h1 [innerHTML]=\\\"instance.node.label | translate\\\"></h1>\\n<div [innerHTML]=\\\"instance.node.HTML | translate\\\"></div>\\n\",\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfEmptyFieldComponent.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: forms.AjfFormRendererService },\n            { type: AjfWarningAlertService }\n        ]; };\n        return AjfEmptyFieldComponent;\n    }(forms.AjfBaseFieldComponent));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfBarcodeFieldComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfBarcodeFieldComponent, _super);\n        function AjfBarcodeFieldComponent(cdr, service, was) {\n            return _super.call(this, cdr, service, was) || this;\n        }\n        AjfBarcodeFieldComponent.decorators = [\n            { type: i0.Component, args: [{\n                        template: \"<ajf-barcode *ngIf=\\\"control|async as ctrl\\\" [formControl]=\\\"ctrl!\\\" [readonly]=\\\"readonly\\\"></ajf-barcode>\\n\",\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfBarcodeFieldComponent.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: forms.AjfFormRendererService },\n            { type: AjfWarningAlertService }\n        ]; };\n        return AjfBarcodeFieldComponent;\n    }(forms.AjfBaseFieldComponent));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfInputFieldComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfInputFieldComponent, _super);\n        function AjfInputFieldComponent(cdr, service, was) {\n            return _super.call(this, cdr, service, was) || this;\n        }\n        AjfInputFieldComponent.decorators = [\n            { type: i0.Component, args: [{\n                        template: \"<mat-form-field *ngIf=\\\"control|async as ctrl\\\">\\n  <input matInput *ngIf=\\\"type === 'text'\\\" type=\\\"text\\\" [readonly]=\\\"readonly\\\" [formControl]=\\\"ctrl!\\\">\\n  <input matInput *ngIf=\\\"type === 'number'\\\" type=\\\"number\\\" [readonly]=\\\"readonly\\\" [formControl]=\\\"ctrl!\\\">\\n</mat-form-field>\\n\",\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfInputFieldComponent.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: forms.AjfFormRendererService },\n            { type: AjfWarningAlertService }\n        ]; };\n        return AjfInputFieldComponent;\n    }(forms.AjfInputFieldComponent));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfMultipleChoiceFieldComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfMultipleChoiceFieldComponent, _super);\n        function AjfMultipleChoiceFieldComponent(cdr, service, was, searchThreshold) {\n            return _super.call(this, cdr, service, was, searchThreshold) || this;\n        }\n        AjfMultipleChoiceFieldComponent.decorators = [\n            { type: i0.Component, args: [{\n                        template: \"<ng-container *ngIf=\\\"!(instance|ajfExpandFieldWithChoices:searchThreshold); else expanded\\\">\\n  <mat-select *ngIf=\\\"control|async as ctrl\\\" [formControl]=\\\"ctrl!\\\" [multiple]=\\\"true\\\" [disabled]=\\\"readonly\\\">\\n    <mat-option [value]=\\\"choice.value\\\"\\n        *ngFor=\\\"let choice of instance.filteredChoices\\\">\\n      {{ choice.label | translate }}\\n    </mat-option>\\n  </mat-select>\\n</ng-container>\\n<ng-template #expanded>\\n  <ajf-checkbox-group *ngIf=\\\"control|async as ctrl\\\" class=\\\"ajf-choices-container\\\"\\n      [formControl]=\\\"ctrl!\\\">\\n    <ajf-checkbox-group-item *ngFor=\\\"let choice of instance.filteredChoices\\\"\\n        [readonly]=\\\"readonly\\\"\\n        [value]=\\\"choice.value\\\">\\n      {{ choice.label | translate }}\\n    </ajf-checkbox-group-item>\\n  </ajf-checkbox-group>\\n</ng-template>\\n\",\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfMultipleChoiceFieldComponent.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: forms.AjfFormRendererService },\n            { type: AjfWarningAlertService },\n            { type: Number, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [forms.AJF_SEARCH_ALERT_THRESHOLD,] }] }\n        ]; };\n        return AjfMultipleChoiceFieldComponent;\n    }(forms.AjfFieldWithChoicesComponent));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfSingleChoiceFieldComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfSingleChoiceFieldComponent, _super);\n        function AjfSingleChoiceFieldComponent(cdr, service, was, searchThreshold) {\n            return _super.call(this, cdr, service, was, searchThreshold) || this;\n        }\n        AjfSingleChoiceFieldComponent.decorators = [\n            { type: i0.Component, args: [{\n                        template: \"<ng-container *ngIf=\\\"!(instance|ajfExpandFieldWithChoices:searchThreshold) ; else expanded\\\">\\n  <mat-select *ngIf=\\\"control|async as ctrl\\\" [formControl]=\\\"ctrl!\\\" [disabled]=\\\"readonly\\\">\\n    <mat-option [value]=\\\"choice.value\\\"\\n        *ngFor=\\\"let choice of instance.filteredChoices\\\">\\n      {{ choice.label | translate }}\\n    </mat-option>\\n  </mat-select>\\n</ng-container>\\n<ng-template #expanded>\\n  <mat-radio-group *ngIf=\\\"control|async as ctrl\\\" class=\\\"ajf-choices-container\\\"\\n      [formControl]=\\\"ctrl!\\\">\\n    <mat-radio-button [value]=\\\"choice.value\\\" [disabled]=\\\"readonly\\\"\\n        *ngFor=\\\"let choice of instance.filteredChoices\\\">\\n      {{ choice.label | translate }}\\n    </mat-radio-button>\\n  </mat-radio-group>\\n</ng-template>\\n\",\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfSingleChoiceFieldComponent.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: forms.AjfFormRendererService },\n            { type: AjfWarningAlertService },\n            { type: Number, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [forms.AJF_SEARCH_ALERT_THRESHOLD,] }] }\n        ]; };\n        return AjfSingleChoiceFieldComponent;\n    }(forms.AjfFieldWithChoicesComponent));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfTableFieldComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfTableFieldComponent, _super);\n        function AjfTableFieldComponent(cdr, service, was) {\n            return _super.call(this, cdr, service, was) || this;\n        }\n        AjfTableFieldComponent.prototype.goToNextCell = function (ev, row, column) {\n            var rowLength = this.instance.controls[row][1].length;\n            var currentCell = this.instance.controls[row][1][column];\n            if (column + 1 >= rowLength) {\n                column = 0;\n                if (row + 1 >= this.instance.controls.length) {\n                    row = 1;\n                }\n                else {\n                    row += 1;\n                }\n            }\n            else {\n                column += 1;\n            }\n            if (typeof currentCell !== 'string') {\n                currentCell.show = false;\n            }\n            this._showCell(row, column);\n            ev.preventDefault();\n            ev.stopPropagation();\n        };\n        AjfTableFieldComponent.prototype.goToCell = function (row, column) {\n            this._resetControls();\n            this._showCell(row, column);\n        };\n        AjfTableFieldComponent.prototype._resetControls = function () {\n            this.instance.controls.forEach(function (row) { return row[1].forEach(function (cell) {\n                if (typeof cell !== 'string') {\n                    cell.show = false;\n                }\n            }); });\n        };\n        AjfTableFieldComponent.prototype._showCell = function (row, column) {\n            if (row >= this.instance.controls.length || column >= this.instance.controls[row][1].length) {\n                return;\n            }\n            var nextCell = this.instance.controls[row][1][column];\n            if (typeof nextCell !== 'string') {\n                nextCell.show = true;\n            }\n        };\n        AjfTableFieldComponent.decorators = [\n            { type: i0.Component, args: [{\n                        template: \"<table class=\\\"ajf-table-field\\\">\\n  <ng-container *ngIf=\\\"instance.node as node\\\">\\n    <ng-container *ngFor=\\\"let columns of instance.controls; let row = index\\\">\\n      <tr [ngClass]=\\\"row | ajfTableRowClass\\\">\\n        <td>\\n          <ng-container *ngIf=\\\"columns[0] != null\\\">\\n            {{ columns[0] | ajfTranslateIfString | ajfFormatIfNumber: '.0-2' }}\\n          </ng-container>\\n        </td>\\n        <td *ngFor=\\\"let c of columns[1]; let column = index\\\">\\n          <ng-container *ngIf=\\\"c|ajfGetTableCellControl as contr\\\">\\n            <ng-container *ngIf=\\\"contr != null\\\">\\n              <input *ngIf=\\\"row > 0 && contr!.show && (node.rows[row-1][column]|ajfIsCellEditable); else plainTextCell\\\"\\n                (focusout)=\\\"contr!.show = false\\\" type=\\\"number\\\" [formControl]=\\\"contr\\\"\\n                (keydown.tab)=\\\"goToNextCell($event, row, column)\\\" autoFocus>\\n              <ng-template #plainTextCell>\\n                <span *ngIf=\\\"row > 0; else labelCell\\\" class=\\\"ajf-table-cell\\\"\\n                  (click)=\\\"goToCell(row, column)\\\">{{ contr!.value | ajfTranslateIfString | ajfFormatIfNumber: '.0-2' }}</span>\\n                <ng-template #labelCell>{{ contr | ajfTranslateIfString | ajfFormatIfNumber: '.0-2' }}</ng-template>\\n              </ng-template>\\n            </ng-container>\\n          </ng-container>\\n        </td>\\n      </tr>\\n    </ng-container>\\n  </ng-container>\\n</table>\\n\",\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None,\n                        styles: [\"table.ajf-table-field{border-collapse:collapse;border-spacing:0;width:100%}table.ajf-table-field tr td{position:relative}table.ajf-table-field tr td span,table.ajf-table-field tr td input{cursor:text;position:absolute;width:100%;box-sizing:border-box;outline:none;top:0;right:0;bottom:0;left:0;display:inline-block;border-top:solid 1px #ccc;border-right:solid 1px transparent;border-bottom:solid 1px transparent;border-left:solid 1px #ccc;font-family:inherit;font-size:inherit;line-height:inherit;text-align:center}table.ajf-table-field tr td:last-child span,table.ajf-table-field tr td:last-child input{border-right-color:#ccc}table.ajf-table-field tr:last-of-type td span,table.ajf-table-field tr:last-of-type td input{border-bottom-color:#ccc}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfTableFieldComponent.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: forms.AjfFormRendererService },\n            { type: AjfWarningAlertService }\n        ]; };\n        return AjfTableFieldComponent;\n    }(forms.AjfBaseFieldComponent));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfTimeFieldComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfTimeFieldComponent, _super);\n        function AjfTimeFieldComponent(cdr, service, was) {\n            return _super.call(this, cdr, service, was) || this;\n        }\n        AjfTimeFieldComponent.decorators = [\n            { type: i0.Component, args: [{\n                        template: \"<ajf-time *ngIf=\\\"control|async as ctrl\\\" [formControl]=\\\"ctrl!\\\" [readonly]=\\\"readonly\\\"></ajf-time>\\n\",\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfTimeFieldComponent.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: forms.AjfFormRendererService },\n            { type: AjfWarningAlertService }\n        ]; };\n        return AjfTimeFieldComponent;\n    }(forms.AjfBaseFieldComponent));\n\n    var AjfFieldService = /** @class */ (function (_super) {\n        tslib.__extends(AjfFieldService, _super);\n        function AjfFieldService() {\n            var _this = _super.call(this) || this;\n            _this.componentsMap[forms.AjfFieldType.String] = { component: AjfInputFieldComponent },\n                _this.componentsMap[forms.AjfFieldType.Text] = { component: AjfInputFieldComponent },\n                _this.componentsMap[forms.AjfFieldType.Number] = {\n                    component: AjfInputFieldComponent, inputs: { type: 'number' }\n                },\n                _this.componentsMap[forms.AjfFieldType.Boolean] = { component: AjfBooleanFieldComponent },\n                _this.componentsMap[forms.AjfFieldType.Formula] = {\n                    component: AjfInputFieldComponent, inputs: { readonly: true }\n                },\n                _this.componentsMap[forms.AjfFieldType.Date] = { component: AjfDateFieldComponent },\n                _this.componentsMap[forms.AjfFieldType.DateInput] = { component: AjfDateInputFieldComponent },\n                _this.componentsMap[forms.AjfFieldType.Table] = { component: AjfTableFieldComponent },\n                _this.componentsMap[forms.AjfFieldType.Empty] = { component: AjfEmptyFieldComponent },\n                _this.componentsMap[forms.AjfFieldType.SingleChoice] = { component: AjfSingleChoiceFieldComponent },\n                _this.componentsMap[forms.AjfFieldType.MultipleChoice] = { component: AjfMultipleChoiceFieldComponent },\n                _this.componentsMap[forms.AjfFieldType.Time] = { component: AjfTimeFieldComponent },\n                _this.componentsMap[forms.AjfFieldType.Barcode] = { component: AjfBarcodeFieldComponent };\n            return _this;\n        }\n        AjfFieldService.decorators = [\n            { type: i0.Injectable, args: [{ providedIn: 'root' },] }\n        ];\n        /** @nocollapse */\n        AjfFieldService.ctorParameters = function () { return []; };\n        AjfFieldService.ɵprov = i0[\"ɵɵdefineInjectable\"]({ factory: function AjfFieldService_Factory() { return new AjfFieldService(); }, token: AjfFieldService, providedIn: \"root\" });\n        return AjfFieldService;\n    }(forms.AjfFieldService));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFormField = /** @class */ (function (_super) {\n        tslib.__extends(AjfFormField, _super);\n        function AjfFormField(cdr, cfr, fieldService) {\n            var _this = _super.call(this, cdr, cfr) || this;\n            _this.componentsMap = fieldService.componentsMap;\n            return _this;\n        }\n        AjfFormField.decorators = [\n            { type: i0.Component, args: [{\n                        selector: 'ajf-field,ajf-form-field',\n                        template: \"<div\\n    [ngClass]=\\\"'ajf-field-' + (instance|ajfNodeCompleteName)\\\"\\n    [class.ajf-validated]=\\\"instance.validationResults|ajfFieldIsValid\\\"\\n>\\n  <ng-template ajf-field-host></ng-template>\\n</div>\\n<ng-container *ngIf=\\\"instance && instance.node && instance.node.attachments\\\">\\n  <a *ngFor=\\\"let attachment of instance.node.attachments\\\"\\n    [href]=\\\"attachment.value\\\" target=\\\"_blank\\\">{{attachment.label | translate}}</a>\\n</ng-container>\\n<div *ngIf=\\\"instance && instance.validationResults\\\" class=\\\"ajf-errors\\\">\\n  <ng-container *ngFor=\\\"let res of instance.validationResults\\\">\\n    <div class=\\\"error\\\" *ngIf=\\\"!res.result\\\">\\n      {{ res.error }} \\n    </div>\\n  </ng-container>\\n</div>\\n\",\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None,\n                        styles: [\"ajf-field .ajf-choices-container{display:flex;flex-direction:row;flex-wrap:wrap;align-items:stretch}ajf-field .ajf-item-container{position:relative}ajf-field .ajf-errors{font-style:italic;padding:5px}ajf-field tr.ajf-row-odd{background-color:gray}table{border-collapse:collapse;border-spacing:0}table tr td{position:relative}table tr td span,table tr td input{cursor:text;position:absolute;width:100%;box-sizing:border-box;outline:none;top:0;right:0;bottom:0;left:0;display:inline-block;border-top:solid 1px #ccc;border-right:solid 1px transparent;border-bottom:solid 1px transparent;border-left:solid 1px #ccc;font-family:inherit;font-size:inherit;line-height:inherit;text-align:center}table tr td:last-child span,table tr td:last-child input{border-right-color:#ccc}table tr:last-of-type td span,table tr:last-of-type td input{border-bottom-color:#ccc}input::-webkit-outer-spin-button,input::-webkit-inner-spin-button{-webkit-appearance:none;margin:0}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfFormField.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: i0.ComponentFactoryResolver },\n            { type: AjfFieldService }\n        ]; };\n        return AjfFormField;\n    }(forms.AjfFormField));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFormRenderer = /** @class */ (function (_super) {\n        tslib.__extends(AjfFormRenderer, _super);\n        function AjfFormRenderer(rendererService, changeDetectorRef) {\n            var _this = _super.call(this, rendererService, changeDetectorRef) || this;\n            _this.topBar = false;\n            return _this;\n        }\n        AjfFormRenderer.prototype.scrollToSlide = function (slide) {\n            this.formSlider.slide({ to: slide.position - 1 });\n        };\n        AjfFormRenderer.decorators = [\n            { type: i0.Component, args: [{\n                        selector: 'ajf-form',\n                        template: \"<ng-container *ngIf=\\\"formGroup|async as fg\\\">\\n  <form novalidate [formGroup]=\\\"fg!\\\">\\n    <div class=\\\"ajf-form-container\\\">\\n\\n      <mat-toolbar *ngIf=\\\"!hideTopToolbar\\\" class=\\\"ajf-btn-strip\\\">\\n        <ng-template ngFor let-slideInstance [ngForOf]=\\\"slides|async\\\" [ngForTrackBy]=\\\"trackNodeById\\\">\\n          <button mat-button class=\\\"ajf-topbar-button\\\"\\n          *ngIf=\\\"topBar != null && slideInstance.node != null && slideInstance.node.label != null && slideInstance.node.label.length > 0\\\"\\n              (click)=\\\"scrollToSlide(slideInstance)\\\">{{slideInstance.node.label | translate}}</button>\\n        </ng-template>\\n      </mat-toolbar>\\n\\n      <mat-toolbar *ngIf=\\\"!hideTopToolbar\\\">\\n        {{ title }}\\n        <span class=\\\"ajf-spacer\\\"></span>\\n        <button mat-button default *ngIf=\\\"!saveDisabled\\\" (click)=\\\"onSave($event)\\\"\\n            translate>Save</button>\\n      </mat-toolbar>\\n      <div class=\\\"ajf-slider-container\\\">\\n        <ajf-page-slider (orientationChange)=\\\"orientationChangeHandler($event)\\\"\\n            [fixedOrientation]=\\\"fixedOrientation\\\"\\n            [hideNavigationButtons]=\\\"hideNavigationButtons\\\"\\n            [orientation]=\\\"orientation\\\"\\n            #formSlider>\\n          <ng-container *ngIf=\\\"(slides|async) as curSlides\\\">\\n            <ng-container *ngIf=\\\"curSlides!.length > 0 && hasStartMessage\\\">\\n              <ajf-page-slider-item>\\n                <div class=\\\"ajf-form-page\\\">\\n                  <mat-card>\\n                    <mat-card-header>\\n                      <div class=\\\"ajf-page-slider-item-header\\\">\\n                        <h2>\\n                          <span class=\\\"ajf-form-header-number\\\">\\n                            1 &rarr;\\n                          </span>\\n                          <span class=\\\"ajf-title\\\">\\n                            <ng-content select=\\\"[ajfFormStartMessageTitle]\\\"></ng-content>\\n                          </span>\\n                        </h2>\\n                      </div>\\n                    </mat-card-header>\\n                    <mat-card-content>\\n                      <ng-content select=\\\"[ajfFormStartMessage]\\\"></ng-content>\\n                    </mat-card-content>\\n                  </mat-card>\\n                </div>\\n              </ajf-page-slider-item>\\n            </ng-container>\\n            <ng-container *ngFor=\\\"let slideInstance of curSlides; trackBy:trackNodeById\\\">\\n              <!-- non repeating slides -->\\n              <ng-container *ngIf=\\\"slideInstance.visible\\\">\\n                <ng-container *ngIf=\\\"!(slideInstance|ajfIsRepeatingSlideInstance)\\\">\\n                  <ajf-page-slider-item>\\n                    <div class=\\\"ajf-form-page\\\">\\n                      <mat-card>\\n                        <mat-card-header>\\n                          <div class=\\\"ajf-page-slider-item-header\\\">\\n                            <h2>\\n                              <span class=\\\"ajf-form-header-number\\\">{{ slideInstance.position + (hasStartMessage | ajfBoolToInt) }} &rarr;</span>\\n                              <span [innerHTML]=\\\"slideInstance.node.label | translate\\\"></span>\\n                            </h2>\\n                            <mat-icon class=\\\"ajf-warning\\\" *ngIf=\\\"!slideInstance.valid\\\">warning</mat-icon>\\n                            <mat-icon class=\\\"ajf-success\\\" *ngIf=\\\"slideInstance.valid\\\">check</mat-icon>\\n                          </div>\\n                        </mat-card-header>\\n                        <mat-card-content>\\n                          <ng-template ngFor let-fieldInstance [ngForOf]=\\\"slideInstance.flatNodes\\\" [ngForTrackBy]=\\\"trackNodeById\\\">\\n                            <div [ngClass]=\\\"'ajf-' + (fieldInstance|ajfAsFieldInstance).node.size\\\" class=\\\"ajf-field-entry\\\" *ngIf=\\\"fieldInstance.visible\\\">\\n                              <i [class]=\\\"(fieldInstance|ajfAsFieldInstance).node.fieldType | ajfFieldIcon\\\" item-right></i>\\n                              <p>{{ ((fieldInstance|ajfAsFieldInstance).node.description || '') | translate }}</p>\\n                              <label *ngIf=\\\"(fieldInstance|ajfAsFieldInstance).node.fieldType !== 7\\\" [innerHTML]=\\\"fieldInstance.node.label | translate\\\"></label>\\n                              <ajf-field [instance]=\\\"fieldInstance|ajfAsFieldInstance\\\" [readonly]=\\\"readonly\\\"></ajf-field>\\n                            </div>\\n                          </ng-template>\\n                        </mat-card-content>\\n                      </mat-card>\\n                    </div>\\n                  </ajf-page-slider-item>\\n                </ng-container>\\n                <!-- repeating slides -->\\n                <ng-container *ngIf=\\\"(slideInstance|ajfIsRepeatingSlideInstance)\\\">\\n                  <ajf-page-slider-item *ngFor=\\\"let curRep of ((slideInstance|ajfAsRepeatingSlideInstance).reps|ajfRange); let idx = index; let lastSlide = last\\\">\\n                    <div class=\\\"ajf-form-page\\\">\\n                      <mat-card>\\n                        <mat-card-header>\\n                          <div class=\\\"ajf-page-slider-item-header\\\">\\n                            <h2>\\n                              <span class=\\\"ajf-form-header-number\\\">{{ slideInstance.position|ajfIncrement:idx + (hasStartMessage | ajfBoolToInt) }} &rarr;</span>\\n                              <span [innerHTML]=\\\"slideInstance.node.label | translate\\\"></span>\\n                            </h2>\\n                            <mat-icon class=\\\"ajf-warning\\\" *ngIf=\\\"!(slideInstance|ajfValidSlide:idx)\\\">warning</mat-icon>\\n                            <mat-icon class=\\\"ajf-success\\\" *ngIf=\\\"(slideInstance|ajfValidSlide:idx)\\\">check</mat-icon>\\n                          </div>\\n                        </mat-card-header>\\n                        <mat-card-content>\\n                          <div *ngIf=\\\"lastSlide\\\" class=\\\"ajf-group-actions\\\">\\n                            <button (click)=\\\"addGroup(slideInstance)\\\" [disabled]=\\\"!(slideInstance|ajfAsRepeatingSlideInstance).canAdd\\\" mat-mini-fab>\\n                              <mat-icon>add</mat-icon>\\n                            </button>\\n                            <button (click)=\\\"removeGroup(slideInstance)\\\" [disabled]=\\\"!(slideInstance|ajfAsRepeatingSlideInstance).canRemove\\\" mat-mini-fab>\\n                              <mat-icon>remove</mat-icon>\\n                            </button>\\n                          </div>\\n                          <ng-template ngFor let-fieldInstance [ngForOf]=\\\"slideInstance.slideNodes[idx]\\\" [ngForTrackBy]=\\\"trackNodeById\\\">\\n                            <div [ngClass]=\\\"'ajf-' + (fieldInstance|ajfAsFieldInstance).node.size\\\" class=\\\"ajf-field-entry\\\" *ngIf=\\\"fieldInstance.visible\\\">\\n                              <i [class]=\\\"(fieldInstance|ajfAsFieldInstance).node.fieldType | ajfFieldIcon\\\" item-right></i>\\n                              <p>{{ ((fieldInstance|ajfAsFieldInstance).node.description || '') | translate }}</p>\\n                              <label [innerHTML]=\\\"fieldInstance.node.label | translate\\\"></label>\\n                              <ajf-field [instance]=\\\"fieldInstance|ajfAsFieldInstance\\\" [readonly]=\\\"readonly\\\"></ajf-field>\\n                            </div>\\n                          </ng-template>\\n                        </mat-card-content>\\n                      </mat-card>\\n                    </div>\\n                  </ajf-page-slider-item>\\n                </ng-container>\\n              </ng-container>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"curSlides && curSlides!.length > 0 && hasEndMessage\\\">\\n              <ajf-page-slider-item>\\n                <div class=\\\"ajf-form-page\\\">\\n                  <mat-card>\\n                    <mat-card-header>\\n                      <div class=\\\"ajf-page-slider-item-header\\\">\\n                        <h2>\\n                          <span *ngIf=\\\"(slidesNum|async) as snum\\\" class=\\\"ajf-form-header-number\\\">\\n                            {{ snum! + (hasStartMessage | ajfBoolToInt ) + 1 }} &rarr;\\n                          </span>\\n                          <span class=\\\"ajf-title\\\">\\n                            <ng-content select=\\\"[ajfFormEndMessageTitle]\\\"></ng-content>\\n                          </span>\\n                        </h2>\\n                      </div>\\n                    </mat-card-header>\\n                    <mat-card-content>\\n                      <ng-content select=\\\"[ajfFormEndMessage]\\\"></ng-content>\\n                    </mat-card-content>\\n                  </mat-card>\\n                </div>\\n              </ajf-page-slider-item>\\n            </ng-container>\\n          </ng-container>\\n          <div ajfPageSliderBar *ngIf=\\\"!hideBottomToolbar\\\">\\n            <div class=\\\"ajf-left-bar\\\">\\n              <div class=\\\"ajf-errors\\\" *ngIf=\\\"((errors | async) || 0) > 0\\\">\\n                <button mat-button (click)=\\\"goToPrevError()\\\" danger>\\n                  <mat-icon>arrow_upward</mat-icon>\\n                </button>\\n                <button mat-button (click)=\\\"goToNextError()\\\" danger>\\n                  <mat-icon>arrow_downward</mat-icon>\\n                </button>\\n              </div>\\n              <div class=\\\"ajf-info-box ajf-error\\\">\\n                <div class=\\\"ajf-title\\\" translate>Errors</div>\\n                <div class=\\\"ajf-content\\\">\\n                  {{ errors | async }} / {{ slidesNum|async }}\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </ajf-page-slider>\\n      </div>\\n    </div>\\n  </form>\\n</ng-container>\\n\",\n                        encapsulation: i0.ViewEncapsulation.None,\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        styles: [\"ajf-form{display:block}ajf-form .ajf-form-container{display:flex;flex-direction:column;position:absolute;top:0;right:0;bottom:0;left:0}ajf-form .ajf-form-container mat-toolbar.ajf-btn-strip{overflow:auto}ajf-form .ajf-form-container mat-toolbar.ajf-btn-strip button.ajf-topbar-button.mat-button{flex:1 1 auto}ajf-form .ajf-form-container mat-toolbar.ajf-btn-strip button.ajf-topbar-button.mat-button *{display:block;width:100%;overflow:hidden;text-overflow:ellipsis}ajf-form .ajf-form-container mat-toolbar.ajf-hidden{opacity:0}ajf-form .ajf-form-container .ajf-topbar-button{margin-right:10px}ajf-form .ajf-form-container>.ajf-slider-container{flex:1;position:relative}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider{height:100%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content{padding:16px}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page{flex:1;max-height:100%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card{margin:1em 0 3em}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content{display:flex;flex-wrap:wrap;flex-direction:row;align-content:flex-start;position:relative}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content .ajf-group-actions{position:absolute;right:0;top:-30px;padding:15px;z-index:10}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content>.ajf-field-entry{flex:1 0 auto;padding-left:10px;padding-right:10px;width:100%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content>.ajf-field-entry.ajf-normal{width:100%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content>.ajf-field-entry.ajf-small{width:50%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content>.ajf-field-entry.ajf-smaller{width:33%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content>.ajf-field-entry.ajf-tiny{width:25%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>mat-card>mat-card-content>.ajf-field-entry.ajf-mini{width:20%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header{display:flex;align-items:center;width:100%}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header>h2{flex:1}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header>h2>.ajf-form-header-number{margin-right:.5em}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header mat-icon.ajf-warning{color:#f53d3d}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header mat-icon.ajf-success{color:#32db64}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header h2>.ajf-title{display:inline-block;margin-right:40px;white-space:normal;vertical-align:top}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar{display:flex;align-items:flex-start;flex-direction:row;position:absolute;bottom:0}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-right-button{float:right}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-button-icon-only ion-icon{padding:0 .1em}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-info-box{height:40px;padding:4px}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-info-box>div{height:16px;line-height:16px}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-info-box>div.ajf-content{font-weight:bold}ajf-form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-info-box.ajf-error{order:2;color:red}ajf-form .ajf-form-container .ajf-spacer{flex:1 0 auto}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfFormRenderer.ctorParameters = function () { return [\n            { type: forms.AjfFormRendererService },\n            { type: i0.ChangeDetectorRef }\n        ]; };\n        AjfFormRenderer.propDecorators = {\n            topBar: [{ type: i0.Input }]\n        };\n        return AjfFormRenderer;\n    }(forms.AjfFormRenderer));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var FormControl = /** @class */ (function (_super) {\n        tslib.__extends(FormControl, _super);\n        function FormControl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return FormControl;\n    }(forms$1.FormControl));\n    var AjfGetTableCellControlPipe = /** @class */ (function () {\n        function AjfGetTableCellControlPipe() {\n        }\n        AjfGetTableCellControlPipe.prototype.transform = function (ctrl) {\n            if (ctrl == null || typeof ctrl === 'string') {\n                return null;\n            }\n            return ctrl;\n        };\n        AjfGetTableCellControlPipe.decorators = [\n            { type: i0.Pipe, args: [{ name: 'ajfGetTableCellControl' },] }\n        ];\n        return AjfGetTableCellControlPipe;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfIsCellEditablePipe = /** @class */ (function () {\n        function AjfIsCellEditablePipe() {\n        }\n        AjfIsCellEditablePipe.prototype.transform = function (cell) {\n            if (cell == null || typeof cell === 'string') {\n                return false;\n            }\n            return cell.editable === true;\n        };\n        AjfIsCellEditablePipe.decorators = [\n            { type: i0.Pipe, args: [{ name: 'ajfIsCellEditable' },] }\n        ];\n        return AjfIsCellEditablePipe;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFormsModule = /** @class */ (function () {\n        function AjfFormsModule() {\n        }\n        AjfFormsModule.forRoot = function () {\n            return {\n                ngModule: AjfFormsModule,\n                providers: [\n                    AjfFieldService,\n                ],\n            };\n        };\n        AjfFormsModule.decorators = [\n            { type: i0.NgModule, args: [{\n                        imports: [\n                            common.CommonModule,\n                            forms$1.ReactiveFormsModule,\n                            button.MatButtonModule,\n                            card.MatCardModule,\n                            dialog.MatDialogModule,\n                            formField.MatFormFieldModule,\n                            icon.MatIconModule,\n                            input.MatInputModule,\n                            radio.MatRadioModule,\n                            select.MatSelectModule,\n                            slideToggle.MatSlideToggleModule,\n                            toolbar.MatToolbarModule,\n                            core.TranslateModule,\n                            forms.AjfFormsModule,\n                            calendar.AjfCalendarModule,\n                            barcode.AjfBarcodeModule,\n                            checkboxGroup.AjfCheckboxGroupModule,\n                            common$1.AjfCommonModule,\n                            pageSlider.AjfPageSliderModule,\n                            time.AjfTimeModule\n                        ],\n                        declarations: [\n                            AjfBarcodeFieldComponent,\n                            AjfBooleanFieldComponent,\n                            AjfDateFieldComponent,\n                            AjfDateInputFieldComponent,\n                            AjfEmptyFieldComponent,\n                            AjfFieldWarningDialog,\n                            AjfFormField,\n                            AjfFormRenderer,\n                            AjfGetTableCellControlPipe,\n                            AjfInputFieldComponent,\n                            AjfIsCellEditablePipe,\n                            AjfMultipleChoiceFieldComponent,\n                            AjfSingleChoiceFieldComponent,\n                            AjfTableFieldComponent,\n                            AjfTimeFieldComponent\n                        ],\n                        entryComponents: [\n                            AjfBarcodeFieldComponent,\n                            AjfBooleanFieldComponent,\n                            AjfDateFieldComponent,\n                            AjfDateInputFieldComponent,\n                            AjfEmptyFieldComponent,\n                            AjfInputFieldComponent,\n                            AjfMultipleChoiceFieldComponent,\n                            AjfSingleChoiceFieldComponent,\n                            AjfTableFieldComponent,\n                            AjfTimeFieldComponent\n                        ],\n                        exports: [\n                            AjfFormField,\n                            AjfFormRenderer\n                        ],\n                        providers: [\n                            AjfFieldService,\n                            AjfWarningAlertService,\n                        ],\n                    },] }\n        ];\n        return AjfFormsModule;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.AjfBooleanFieldComponent = AjfBooleanFieldComponent;\n    exports.AjfDateFieldComponent = AjfDateFieldComponent;\n    exports.AjfDateInputFieldComponent = AjfDateInputFieldComponent;\n    exports.AjfEmptyFieldComponent = AjfEmptyFieldComponent;\n    exports.AjfFieldService = AjfFieldService;\n    exports.AjfFieldWarningDialog = AjfFieldWarningDialog;\n    exports.AjfFormField = AjfFormField;\n    exports.AjfFormRenderer = AjfFormRenderer;\n    exports.AjfFormsModule = AjfFormsModule;\n    exports.AjfInputFieldComponent = AjfInputFieldComponent;\n    exports.AjfMultipleChoiceFieldComponent = AjfMultipleChoiceFieldComponent;\n    exports.AjfSingleChoiceFieldComponent = AjfSingleChoiceFieldComponent;\n    exports.AjfTableFieldComponent = AjfTableFieldComponent;\n    exports.AjfTimeFieldComponent = AjfTimeFieldComponent;\n    exports.AjfWarningAlertService = AjfWarningAlertService;\n    exports.ɵajf_src_material_forms_forms_a = AjfBarcodeFieldComponent;\n    exports.ɵajf_src_material_forms_forms_b = AjfGetTableCellControlPipe;\n    exports.ɵajf_src_material_forms_forms_c = AjfIsCellEditablePipe;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-forms.umd.js.map\n"]}