{"version":3,"file":"ajf-material-monaco-editor.mjs","sources":["../../../projects/material/monaco-editor/src/auto-complete-item-model.ts","../../../projects/material/monaco-editor/src/editor-language-model.ts","../../../projects/material/monaco-editor/src/autocomplete-singleton-model.ts","../../../projects/material/monaco-editor/src/editor-options-model.ts","../../../projects/material/monaco-editor/src/monaco-editor.ts","../../../projects/material/monaco-editor/src/monaco-editor.html","../../../projects/material/monaco-editor/src/monaco-editor-module.ts","../../../projects/material/monaco-editor/src/public_api.ts","../../../projects/material/monaco-editor/src/ajf-material-monaco-editor.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\n/**\n * Representation of AutoCompleteItem\n */\nexport class AutoCompleteItem {\n  label: string = '';\n  kind: number = 0;\n  documentation: string = '';\n  insertText: string = '';\n\n  constructor() {}\n\n  setLabel(label: string): AutoCompleteItem {\n    this.label = label;\n    return this;\n  }\n\n  setKind(kind: number): AutoCompleteItem {\n    this.kind = kind;\n    return this;\n  }\n\n  setDocumentation(documentation: string): AutoCompleteItem {\n    this.documentation = documentation;\n    return this;\n  }\n\n  setInsertText(insertText: string): AutoCompleteItem {\n    this.insertText = insertText;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\n/**\n * List of dev language avalaible in Monaco Editor\n */\nexport class IEditorLanguage {\n  static readonly BAT = 'bat';\n  static readonly C = 'c';\n  static readonly CPP = 'cpp';\n  static readonly CSHARP = 'csharp';\n  static readonly CSS = 'css';\n  static readonly DOCKERFILE = 'dockerfile';\n  static readonly FSHARP = 'fsharp';\n  static readonly GO = 'go';\n  static readonly HANDLEBARS = 'handlebars';\n  static readonly HTML = 'html';\n  static readonly INI = 'ini';\n  static readonly JADE = 'jade';\n  static readonly JAVASCRIPT = 'javascript';\n  static readonly JSON = 'json';\n  static readonly LESS = 'less';\n  static readonly LUA = 'lua';\n  static readonly MARKDOWN = 'markdown';\n  static readonly OBJECTIVEC = 'objective-c';\n  static readonly PHP = 'php';\n  static readonly PLAINTEXT = 'plaintext';\n  static readonly POSTIATS = 'postiats';\n  static readonly POWERSHELL = 'powershell';\n  static readonly PYTHON = 'python';\n  static readonly R = 'r';\n  static readonly RAZOR = 'razor';\n  static readonly RUBY = 'ruby';\n  static readonly SCSS = 'scss';\n  static readonly SQL = 'sql';\n  static readonly SWIFT = 'swift';\n  static readonly TYPESCRIPT = 'typescript';\n  static readonly VB = 'vb';\n  static readonly XML = 'xml';\n  static readonly YAML = 'yaml';\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AutoCompleteItem} from './auto-complete-item-model';\nimport {IEditorLanguage} from './editor-language-model';\n\ndeclare const monaco: any;\n\n/**\n * Manage the autoCompletion for all instances of the editors\n */\nexport class AutoCompleteSingleton {\n  /**\n   * We use a singleton, because this class can be call from all the Monaco Editor Components\n   */\n  static getInstance() {\n    if (!AutoCompleteSingleton._instance) {\n      AutoCompleteSingleton._instance = new AutoCompleteSingleton();\n    }\n    return AutoCompleteSingleton._instance;\n  }\n\n  get autoCompleteValues(): {[p: string]: AutoCompleteItem[]} {\n    return this._autoCompleteValues;\n  }\n\n  private static _instance: AutoCompleteSingleton | null = null;\n  private _autoCompleteValues: {[key: string]: AutoCompleteItem[]} = {};\n\n  private constructor() {}\n\n  /**\n   * Init autoComplete for language passed in param if is not already done.\n   * @param language\n   */\n  initAutoComplete(language: IEditorLanguage) {\n    if (this._autoCompleteValues[language.toString()]) {\n      return;\n    }\n\n    this._autoCompleteValues[language.toString()] = [];\n\n    // This event is fired when the user press Ctrl + Space, to show Intelissense (Autocomplete)\n    monaco.languages.registerCompletionItemProvider(language, {\n      provideCompletionItems: function (model: any) {\n        // Get new autoComplete list for the current content\n        AutoCompleteSingleton.getInstance().parseAutoCompleteValues(language, model.getValue());\n        return AutoCompleteSingleton.getInstance().autoCompleteValues[language.toString()];\n      },\n    });\n  }\n\n  /**\n   * Parse the content passed in param for the language passed in param\n   * @param language\n   * @param content\n   */\n  parseAutoCompleteValues(language: IEditorLanguage, content: string): AutoCompleteItem[] {\n    switch (language) {\n      case IEditorLanguage.XML:\n        return this._parseXmlAutoComplete(content);\n      case IEditorLanguage.JSON:\n        return this._parseJsonAutoComplete(content);\n      default:\n        return [];\n    }\n  }\n\n  /**\n   * Parse the XML content and add all tags in AutoComplete for XML Language\n   * @param content\n   */\n  private _parseXmlAutoComplete(content: string): AutoCompleteItem[] {\n    let tempList: AutoCompleteItem[] = [];\n    let parser = new DOMParser();\n    let tags = parser.parseFromString(content, 'text/xml').getElementsByTagName('*');\n\n    for (let i = 0; i < tags.length; i++) {\n      // Add TAG only if it not already existing in autoComplete list and in tempList\n      if (\n        !this._autoCompleteValues[IEditorLanguage.XML].find(obj => obj.label === tags[i].tagName) &&\n        !tempList.find(obj => obj.label === tags[i].tagName)\n      ) {\n        // Create autoComplete object\n        let obj = new AutoCompleteItem()\n          .setLabel(tags[i].tagName)\n          .setKind(monaco.languages.CompletionItemKind.Function)\n          .setDocumentation('')\n          .setInsertText(`<${tags[i].tagName}><${tags[i].tagName}>`);\n\n        tempList.push(obj);\n      }\n    }\n\n    // Add tempList list in the _autoCompleteValues, to maintain a list updated\n    if (tempList.length > 0) {\n      this._autoCompleteValues[IEditorLanguage.XML.toString()] =\n        this._autoCompleteValues[IEditorLanguage.XML.toString()].concat(tempList);\n    }\n\n    return tempList;\n  }\n\n  private _parseJsonAutoComplete(content: string): AutoCompleteItem[] {\n    /* tslint:disable-next-line */\n    const regex =\n      /(?:\\'|\\')([^']*)(?:\\'|\\')(?=:)(?:\\:\\s*)(?:\\'|\\')?(true|false|[0-9a-zA-Z\\+\\-\\,\\.\\$]*)/g;\n    let tempList: AutoCompleteItem[] = [];\n    let m: any;\n\n    while ((m = regex.exec(content)) !== null) {\n      // This is necessary to avoid infinite loops with zero-width matches\n      if (m.index === regex.lastIndex) {\n        regex.lastIndex++;\n      }\n\n      // Add Element only if it not already existing in autoComplete list and in tempList\n      if (\n        m[1] &&\n        !this._autoCompleteValues[IEditorLanguage.JSON].find(obj => obj.label === m[1]) &&\n        !tempList.find(obj => obj.label === m[1])\n      ) {\n        let obj = new AutoCompleteItem()\n          .setLabel(m[1])\n          .setKind(monaco.languages.CompletionItemKind.Value)\n          .setDocumentation('')\n          .setInsertText(`'${m[1]}':`);\n\n        tempList.push(obj);\n      }\n    }\n\n    // Add tempList list in the _autoCompleteValues, to maintain a list updated\n    if (tempList.length > 0) {\n      this._autoCompleteValues[IEditorLanguage.JSON.toString()] =\n        this._autoCompleteValues[IEditorLanguage.JSON.toString()].concat(tempList);\n    }\n\n    return tempList;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {IEditorLanguage} from './editor-language-model';\nimport {IEditorScrollbarOptions} from './editor-scrollbar-options';\nimport {IEditorTheme} from './editor-theme';\n/**\n * Configuration options for the editor.\n */\nexport class IEditorOptions {\n  /**\n   * Enable experimental screen reader support.\n   * Defaults to `true`.\n   */\n  experimentalScreenReader?: boolean;\n  /**\n   * The aria label for the editor's textarea (when it is focused).\n   */\n  ariaLabel?: string;\n  /**\n   * Render vertical lines at the specified columns.\n   * Defaults to empty array.\n   */\n  rulers?: number[];\n  /**\n   * A string containing the word separators used when doing word navigation.\n   * Defaults to ``~!@#$%^&*()-=+[{]}\\\\|;:\\'',.`<``>`/?\n   */\n  wordSeparators?: string;\n  /**\n   * Enable Linux primary clipboard.\n   * Defaults to true.\n   */\n  selectionClipboard?: boolean;\n  /**\n   * Control the rendering of line numbers.\n   * If it is a function, it will be invoked when rendering a line number\n   * and the return value will be rendered.\n   * Otherwise, if it is a truey, line numbers will be rendered normally\n   * (equivalent of using an identity function).\n   * Otherwise, line numbers will not be rendered.\n   * Defaults to true.\n   */\n  lineNumbers?: boolean;\n  /**\n   * Should the corresponding line be selected when clicking on the line number?\n   * Defaults to true.\n   */\n  selectOnLineNumbers?: boolean;\n  /**\n   * Control the width of line numbers, by reserving horizontal space\n   * for rendering at least an amount of digits.\n   * Defaults to 5.\n   */\n  lineNumbersMinChars?: number;\n  /**\n   * Enable the rendering of the glyph margin.\n   * Defaults to false.\n   */\n  glyphMargin?: boolean;\n  /**\n   * The width reserved for line decorations (in px).\n   * Line decorations are placed between line numbers and the editor content.\n   * Defaults to 10.\n   */\n  lineDecorationsWidth?: number;\n  /**\n   * When revealing the cursor, a virtual padding (px) is added to the cursor,\n   * turning it into a rectangle.\n   * This virtual padding ensures that the cursor gets revealed before\n   * hitting the edge of the viewport.\n   * Defaults to 30 (px).\n   */\n  revealHorizontalRightPadding?: number;\n  /**\n   * Render the editor selection with rounded borders.\n   * Defaults to true.\n   */\n  roundedSelection?: boolean;\n  /**\n   * Theme to be used for rendering. Consists of two parts, the UI theme and the syntax theme,\n   * separated by a space.\n   * The current available UI themes are: 'vs' (default), 'vs-dark', 'hc-black'\n   * The syntax themes are contributed. The default is 'default-theme'\n   */\n  theme?: IEditorTheme;\n  /**\n   * Should the editor be read only.\n   * Defaults to false.\n   */\n  readOnly?: boolean;\n  /**\n   * Control the behavior and rendering of the scrollbars.\n   */\n  scrollbar?: IEditorScrollbarOptions;\n  /**\n   * The number of vertical lanes the overview ruler should render.\n   * Defaults to 2.\n   */\n  overviewRulerLanes?: number;\n  /**\n   * Control the cursor animation style, possible values are\n   * 'blink', 'smooth', 'phase', 'expand' and 'solid'.\n   * Defaults to 'blink'.\n   */\n  cursorBlinking?: string;\n  /**\n   * Zoom the font in the editor when using the mouse wheel in combination with holding Ctrl.\n   * Defaults to false.\n   */\n  mouseWheelZoom?: boolean;\n  /**\n   * Control the cursor style, either 'block' or 'line'.\n   * Defaults to 'line'.\n   */\n  cursorStyle?: string;\n  /**\n   * Enable font ligatures.\n   * Defaults to false.\n   */\n  fontLigatures?: boolean;\n  /**\n   * Disable the use of `translate3d`.\n   * Defaults to false.\n   */\n  disableTranslate3d?: boolean;\n  /**\n   * Should the cursor be hidden in the overview ruler.\n   * Defaults to false.\n   */\n  hideCursorInOverviewRuler?: boolean;\n  /**\n   * Enable that scrolling can go one screen size after the last line.\n   * Defaults to true.\n   */\n  scrollBeyondLastLine?: boolean;\n  /**\n   * Enable that the editor will install an interval to check\n   * if its container dom node size has changed.\n   * Enabling this might have a severe performance impact.\n   * Defaults to false.\n   */\n  automaticLayout?: boolean;\n  /**\n   * Control the wrapping strategy of the editor.\n   * Using -1 means no wrapping whatsoever.\n   * Using 0 means viewport width wrapping (ajusts with the resizing of the editor).\n   * Using a positive number means wrapping after a fixed number of characters.\n   * Defaults to 300.\n   */\n  wrappingColumn?: number;\n  /**\n   * Control the alternate style of viewport wrapping.\n   * When set to true viewport wrapping is used only when the window width\n   * is less than the number of columns specified in the wrappingColumn property.\n   * Has no effect if wrappingColumn is not a positive number.\n   * Defaults to false.\n   */\n  wordWrap?: boolean;\n  /**\n   * Control indentation of wrapped lines. Can be: 'none', 'same' or 'indent'.\n   * Defaults to 'none'.\n   */\n  wrappingIndent?: string;\n  /**\n   * Configure word wrapping characters. A break will be introduced before these characters.\n   * Defaults to '{([+'.\n   */\n  wordWrapBreakBeforeCharacters?: string;\n  /**\n   * Configure word wrapping characters. A break will be introduced after these characters.\n   * Defaults to ' \\t})]?|&,;'.\n   */\n  wordWrapBreakAfterCharacters?: string;\n  /**\n   * Configure word wrapping characters. A break will be introduced after these characters\n   * only if no `wordWrapBreakBeforeCharacters` or `wordWrapBreakAfterCharacters` were found.\n   * Defaults to '.'.\n   */\n  wordWrapBreakObtrusiveCharacters?: string;\n  /**\n   * Performance guard: Stop rendering a line after x characters.\n   * Defaults to 10000 if wrappingColumn is -1. Defaults to -1 if wrappingColumn is `>`= 0.\n   * Use -1 to never stop rendering\n   */\n  stopRenderingLineAfter?: number;\n  /**\n   * Enable hover.\n   * Defaults to true.\n   */\n  hover?: boolean;\n  /**\n   * Enable custom contextmenu.\n   * Defaults to true.\n   */\n  contextmenu?: boolean;\n  /**\n   * A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\n   * Defaults to 1.\n   */\n  mouseWheelScrollSensitivity?: number;\n  /**\n   * Enable quick suggestions (shadow suggestions)\n   * Defaults to true.\n   */\n  quickSuggestions?: boolean;\n  /**\n   * Quick suggestions show delay (in ms)\n   * Defaults to 500 (ms)\n   */\n  quickSuggestionsDelay?: number;\n  /**\n   * Enables parameter hints\n   */\n  parameterHints?: boolean;\n  /**\n   * Render icons in suggestions box.\n   * Defaults to true.\n   */\n  iconsInSuggestions?: boolean;\n  /**\n   * Enable auto closing brackets.\n   * Defaults to true.\n   */\n  autoClosingBrackets?: boolean;\n  /**\n   * Enable format on type.\n   * Defaults to false.\n   */\n  formatOnType?: boolean;\n  /**\n   * Enable the suggestion box to pop-up on trigger characters.\n   * Defaults to true.\n   */\n  suggestOnTriggerCharacters?: boolean;\n  /**\n   * Accept suggestions on ENTER.\n   * Defaults to true.\n   */\n  acceptSuggestionOnEnter?: boolean;\n  /**\n   * Enable snippet suggestions. Default to 'true'.\n   */\n  snippetSuggestions?: 'top' | 'bottom' | 'inline' | 'none';\n  /**\n   * Enable tab completion. Defaults to 'false'\n   */\n  tabCompletion?: boolean;\n  /**\n   * Enable word based suggestions. Defaults to 'true'\n   */\n  wordBasedSuggestions?: boolean;\n  /**\n   * Enable selection highlight.\n   * Defaults to true.\n   */\n  selectionHighlight?: boolean;\n  /**\n   * Show code lens\n   * Defaults to true.\n   */\n  codeLens?: boolean;\n  /**\n   * Enable code folding\n   * Defaults to true.\n   */\n  folding?: boolean;\n  /**\n   * Enable rendering of whitespace.\n   * Defaults to none.\n   */\n  renderWhitespace?: 'none' | 'boundary' | 'all';\n  /**\n   * Enable rendering of control characters.\n   * Defaults to false.\n   */\n  renderControlCharacters?: boolean;\n  /**\n   * Enable rendering of indent guides.\n   * Defaults to false.\n   */\n  renderIndentGuides?: boolean;\n  /**\n   * Enable rendering of current line highlight.\n   * Defaults to true.\n   */\n  renderLineHighlight?: boolean;\n  /**\n   * Inserting and deleting whitespace follows tab stops.\n   */\n  useTabStops?: boolean;\n  /**\n   * The font family\n   */\n  fontFamily?: string;\n  /**\n   * The font weight\n   */\n  fontWeight?:\n    | 'normal'\n    | 'bold'\n    | 'bolder'\n    | 'lighter'\n    | 'initial'\n    | 'inherit'\n    | '100'\n    | '200'\n    | '300'\n    | '400'\n    | '500'\n    | '600'\n    | '700'\n    | '800'\n    | '900';\n  /**\n   * The font size\n   */\n  fontSize?: number;\n  /**\n   * The line height\n   */\n  lineHeight?: number;\n\n  /**\n   * Content to show\n   */\n  value: string = '';\n  /**\n   * Language of content to show\n   */\n  language: IEditorLanguage = 'en';\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChange,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {AutoCompleteSingleton} from './autocomplete-singleton-model';\nimport {IEditorLanguage} from './editor-language-model';\nimport {IEditorOptions} from './editor-options-model';\nimport {IEditorScrollbarOptions} from './editor-scrollbar-options';\nimport {IEditorTheme} from './editor-theme';\n\ndeclare const monaco: any;\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'ajf-monaco-editor',\n  styleUrls: ['monaco-editor.scss'],\n  templateUrl: 'monaco-editor.html',\n  // eslint-disable-next-line\n  host: {'(window:resize)': 'onResize($event)'},\n})\nexport class AjfMonacoEditor implements OnDestroy, AfterViewInit, OnChanges {\n  @Input() experimentalScreenReader?: boolean;\n  @Input() ariaLabel?: string;\n  @Input() rulers?: number[];\n  @Input() wordSeparators?: string;\n  @Input() selectionClipboard?: boolean;\n  @Input() lineNumbers?: boolean;\n  @Input() selectOnLineNumbers?: boolean;\n  @Input() lineNumbersMinChars?: number;\n  @Input() glyphMargin?: boolean;\n  @Input() lineDecorationsWidth?: number;\n  @Input() revealHorizontalRightPadding?: number;\n  @Input() roundedSelection?: boolean;\n  @Input() theme?: IEditorTheme;\n  @Input() readOnly?: boolean;\n  @Input() scrollbar?: IEditorScrollbarOptions;\n  @Input() overviewRulerLanes?: number;\n  @Input() cursorBlinking?: string;\n  @Input() mouseWheelZoom?: boolean;\n  @Input() cursorStyle?: string;\n  @Input() fontLigatures?: boolean;\n  @Input() disableTranslate3d?: boolean;\n  @Input() hideCursorInOverviewRuler?: boolean;\n  @Input() scrollBeyondLastLine?: boolean;\n  @Input() automaticLayout?: boolean;\n  @Input() wrappingColumn?: number;\n  @Input() wordWrap?: boolean;\n  @Input() wrappingIndent?: string;\n  @Input() wordWrapBreakBeforeCharacters?: string;\n  @Input() wordWrapBreakAfterCharacters?: string;\n  @Input() wordWrapBreakObtrusiveCharacters?: string;\n  @Input() stopRenderingLineAfter?: number;\n  @Input() hover?: boolean;\n  @Input() contextmenu?: boolean;\n  @Input() mouseWheelScrollSensitivity?: number;\n  @Input() quickSuggestions?: boolean;\n  @Input() quickSuggestionsDelay?: number;\n  @Input() parameterHints?: boolean;\n  @Input() iconsInSuggestions?: boolean;\n  @Input() autoClosingBrackets?: boolean;\n  @Input() formatOnType?: boolean;\n  @Input() suggestOnTriggerCharacters?: boolean;\n  @Input() acceptSuggestionOnEnter?: boolean;\n  @Input() snippetSuggestions?: 'top' | 'bottom' | 'inline' | 'none';\n  @Input() tabCompletion?: boolean;\n  @Input() wordBasedSuggestions?: boolean;\n  @Input() selectionHighlight?: boolean;\n  @Input() codeLens?: boolean;\n  @Input() folding?: boolean;\n  @Input() renderWhitespace?: 'none' | 'boundary' | 'all';\n  @Input() renderControlCharacters?: boolean;\n  @Input() renderIndentGuides?: boolean;\n  @Input() renderLineHighlight?: boolean;\n  @Input() useTabStops?: boolean;\n  @Input() fontFamily?: string;\n  @Input()\n  fontWeight?:\n    | 'normal'\n    | 'bold'\n    | 'bolder'\n    | 'lighter'\n    | 'initial'\n    | 'inherit'\n    | '100'\n    | '200'\n    | '300'\n    | '400'\n    | '500'\n    | '600'\n    | '700'\n    | '800'\n    | '900';\n  @Input() fontSize?: number;\n  @Input() lineHeight?: number;\n\n  @Input() language: IEditorLanguage = 'en';\n\n  @Input() disableAutocomplete: boolean = false;\n  @Input() autoFormatOnLoad = true;\n  @Input() monacoLibPath = 'vs/loader.js';\n\n  @Input()\n  set valueToCompare(v: string) {\n    if (v !== this._valueToCompare) {\n      this._valueToCompare = v;\n\n      if (this._valueToCompare === void 0 || !this._valueToCompare || !this._editor) {\n        if (this._editor && this._editor.getEditorType() !== 'vs.editor.ICodeEditor') {\n          this._initEditor();\n          return;\n        }\n\n        return;\n      }\n\n      if (!this._value) {\n        this._value = '';\n      }\n\n      if (this._editor.getEditorType() === 'vs.editor.ICodeEditor') {\n        this._initEditor();\n        return;\n      }\n    }\n  }\n\n  @Input()\n  set value(v: string) {\n    if (v !== this._value) {\n      this._value = v;\n\n      if (this._value === void 0 || !this._editor) {\n        return;\n      }\n\n      if (this._editor.getEditorType() !== 'vs.editor.ICodeEditor') {\n        this._initEditor();\n        return;\n      }\n\n      this._editor.setValue(this._value);\n    }\n  }\n\n  @Output() readonly valueChange = new EventEmitter();\n  @Output() readonly valueToCompareChange = new EventEmitter();\n  @Output() readonly init = new EventEmitter();\n\n  @ViewChild('editor', {static: true}) editorContent!: ElementRef;\n\n  private _editor: any;\n  get editor(): any {\n    return this._editor;\n  }\n\n  private _value = '';\n  private _valueToCompare = '';\n\n  constructor() {}\n\n  /**\n   * load Monaco lib\n   */\n  ngAfterViewInit() {\n    let onGotAmdLoader = () => {\n      // Load monaco\n      (<any>window).require(['vs/editor/editor.main'], () => {\n        this._initMonaco();\n      });\n    };\n\n    // Load AMD loader if necessary\n    if (!(<any>window).require) {\n      let loaderScript = document.createElement('script');\n      loaderScript.type = 'text/javascript';\n      loaderScript.src = this.monacoLibPath;\n      loaderScript.addEventListener('load', onGotAmdLoader);\n      document.body.appendChild(loaderScript);\n    } else {\n      onGotAmdLoader();\n    }\n  }\n\n  /**\n   * Upon destruction of the component we make sure to dispose both the editor and\n   * the extra libs that we might've loaded\n   */\n  ngOnDestroy() {\n    this.dispose();\n  }\n\n  ngOnChanges(_changes: {[propKey: string]: SimpleChange}) {\n    if (this._editor) {\n      this._editor.updateOptions(this._getOptions());\n    }\n  }\n\n  /**\n   * Destroy the monaco componenent\n   */\n  dispose() {\n    let myDiv: HTMLDivElement = this.editorContent.nativeElement;\n    if (this._editor) {\n      this._editor.dispose();\n      while (myDiv.hasChildNodes()) {\n        if (myDiv.firstChild != null) {\n          myDiv.firstChild.remove();\n        }\n      }\n      this._editor = null;\n    }\n  }\n\n  /**\n   * Triggered when windows is resized\n   * @param event\n   */\n  onResize(_event: any) {\n    // Manually set monaco size because MonacoEditor doesn't work with Flexbox css\n    let myDiv: HTMLDivElement = this.editorContent.nativeElement;\n    if (myDiv == null || myDiv.parentElement == null) {\n      return;\n    }\n    myDiv.setAttribute('style', `height: ${myDiv.parentElement.offsetHeight}px; width:100%;`);\n  }\n\n  /**\n   * Init editor\n   * Is called once monaco library is available\n   */\n  private _initMonaco() {\n    this._initEditor();\n    this.init.emit();\n  }\n\n  private _initEditor() {\n    let myDiv: HTMLDivElement = this.editorContent.nativeElement;\n    let options = this._getOptions();\n    this.dispose();\n\n    if (!this._valueToCompare) {\n      this._editor = this._initSimpleEditor(myDiv, options);\n    } else {\n      this._editor = this._initDiffEditor(myDiv, options);\n    }\n\n    // Manually set monaco size because MonacoEditor doesn't work with Flexbox css\n    if (myDiv != null && myDiv.parentElement != null) {\n      myDiv.setAttribute('style', `height: ${myDiv.parentElement.offsetHeight}px; width:100%;`);\n    }\n\n    // Init Autocomplete if not disabled\n    if (!this.disableAutocomplete) {\n      AutoCompleteSingleton.getInstance().initAutoComplete(this.language);\n    }\n\n    // When content is loaded, scrollChange is trigerred,\n    // We can only force auto format at this moment, because editor\n    // doesn't have onReady event ...\n    //  this._editor.onDidScrollChange(() => {\n    //     if (this.autoFormatOnLoad && !this._isCodeFormatted) {\n    //         this._editor.getAction('editor.action.format').run();\n    //         this._isCodeFormatted = true;\n    //     }\n    // });\n\n    // Trigger on change event for simple editor\n    this._getOriginalModel().onDidChangeContent((_e: any) => {\n      let newVal: string = this._getOriginalModel().getValue();\n      if (this._value !== newVal) {\n        this._updateValue(newVal);\n      }\n    });\n\n    // Trigger on change event for diff editor\n    if (this._getModifiedModel()) {\n      this._getModifiedModel().onDidChangeContent((_e: any) => {\n        let newVal: string = this._getModifiedModel().getValue();\n        if (this._valueToCompare !== newVal) {\n          this._updateValueToCompare(newVal);\n        }\n      });\n    }\n  }\n\n  /**\n   * Create a simple editor text\n   * @param div\n   * @param options\n   */\n  private _initSimpleEditor(div: HTMLDivElement, options: any) {\n    return monaco.editor.create(div, options);\n  }\n\n  /**\n   * Create a diff editor to compare two string (_value and _valueToCompare)\n   * @param div\n   */\n  private _initDiffEditor(div: HTMLDivElement, options: any) {\n    let originalModel = monaco.editor.createModel(this._value, this.language);\n    let modifiedModel = monaco.editor.createModel(this._valueToCompare, this.language);\n\n    let diffEditor = monaco.editor.createDiffEditor(div, options);\n    diffEditor.setModel({\n      modified: modifiedModel,\n      original: originalModel,\n    });\n\n    return diffEditor;\n  }\n\n  private _getOptions(): IEditorOptions {\n    let options: IEditorOptions = new IEditorOptions();\n    options.experimentalScreenReader = this.experimentalScreenReader;\n    options.ariaLabel = this.ariaLabel;\n    options.rulers = this.rulers;\n    options.wordSeparators = this.wordSeparators;\n    options.selectionClipboard = this.selectionClipboard;\n    options.lineNumbers = this.lineNumbers;\n    options.selectOnLineNumbers = this.selectOnLineNumbers;\n    options.lineNumbersMinChars = this.lineNumbersMinChars;\n    options.glyphMargin = this.glyphMargin;\n    options.lineDecorationsWidth = this.lineDecorationsWidth;\n    options.revealHorizontalRightPadding = this.revealHorizontalRightPadding;\n    options.roundedSelection = this.roundedSelection;\n    options.theme = this.theme;\n    options.readOnly = this.readOnly;\n    options.scrollbar = this.scrollbar;\n    options.overviewRulerLanes = this.overviewRulerLanes;\n    options.cursorBlinking = this.cursorBlinking;\n    options.mouseWheelZoom = this.mouseWheelZoom;\n    options.cursorStyle = this.cursorStyle;\n    options.mouseWheelZoom = this.mouseWheelZoom;\n    options.fontLigatures = this.fontLigatures;\n    options.disableTranslate3d = this.disableTranslate3d;\n    options.hideCursorInOverviewRuler = this.hideCursorInOverviewRuler;\n    options.scrollBeyondLastLine = this.scrollBeyondLastLine;\n    options.automaticLayout = this.automaticLayout;\n    options.wrappingColumn = this.wrappingColumn;\n    options.wordWrap = this.wordWrap;\n    options.wrappingIndent = this.wrappingIndent;\n    options.wordWrapBreakBeforeCharacters = this.wordWrapBreakBeforeCharacters;\n    options.wordWrapBreakAfterCharacters = this.wordWrapBreakAfterCharacters;\n    options.wordWrapBreakObtrusiveCharacters = this.wordWrapBreakObtrusiveCharacters;\n    options.stopRenderingLineAfter = this.stopRenderingLineAfter;\n    options.hover = this.hover;\n    options.contextmenu = this.contextmenu;\n    options.mouseWheelScrollSensitivity = this.mouseWheelScrollSensitivity;\n    options.quickSuggestions = this.quickSuggestions;\n    options.quickSuggestionsDelay = this.quickSuggestionsDelay;\n    options.parameterHints = this.parameterHints;\n    options.iconsInSuggestions = this.iconsInSuggestions;\n    options.autoClosingBrackets = this.autoClosingBrackets;\n    options.formatOnType = this.formatOnType;\n    options.suggestOnTriggerCharacters = this.suggestOnTriggerCharacters;\n    options.acceptSuggestionOnEnter = this.acceptSuggestionOnEnter;\n    options.snippetSuggestions = this.snippetSuggestions;\n    options.tabCompletion = this.tabCompletion;\n    options.wordBasedSuggestions = this.wordBasedSuggestions;\n    options.selectionHighlight = this.selectionHighlight;\n    options.codeLens = this.codeLens;\n    options.folding = this.folding;\n    options.renderWhitespace = this.renderWhitespace;\n    options.renderControlCharacters = this.renderControlCharacters;\n    options.renderIndentGuides = this.renderIndentGuides;\n    options.renderLineHighlight = this.renderLineHighlight;\n    options.useTabStops = this.useTabStops;\n    options.fontFamily = this.fontFamily;\n    options.fontWeight = this.fontWeight;\n    options.fontSize = this.fontSize;\n    options.lineHeight = this.lineHeight;\n    options.value = this._value;\n    options.language = this.language;\n\n    Object.keys(options).forEach(key => {\n      if ((<any>options)[key] === undefined) {\n        delete (<any>options)[key]; // Remove all undefined properties\n      }\n    });\n    return options;\n  }\n\n  /**\n   * UpdateValue\n   *\n   * @param value\n   */\n  private _updateValue(value: string) {\n    this.value = value;\n    this._value = value;\n    this.valueChange.emit(value);\n  }\n\n  /**\n   * UpdateValue\n   *\n   * @param value\n   */\n  private _updateValueToCompare(value: string) {\n    this.valueToCompare = value;\n    this._valueToCompare = value;\n    this.valueToCompareChange.emit(value);\n  }\n\n  private _getOriginalModel() {\n    if (this._editor) {\n      let model = this._editor.getModel();\n      return model.original ? model.original : model;\n    }\n  }\n\n  private _getModifiedModel() {\n    if (this._editor) {\n      let model = this._editor.getModel();\n      return model.modified ? model.modified : null;\n    }\n  }\n}\n","<div #editor class=\"ajf-monaco-editor\"></div>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {AjfMonacoEditor} from './monaco-editor';\n\n@NgModule({\n  declarations: [AjfMonacoEditor],\n  exports: [AjfMonacoEditor],\n})\nexport class AjfMonacoEditorModule {}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport * from './monaco-editor-module';\nexport * from './monaco-editor';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}