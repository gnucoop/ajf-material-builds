{"version":3,"file":"forms.mjs","sources":["../../../../../../src/material/forms/field-warning-dialog.ts","../../../../../../src/material/forms/field-warning-dialog.html","../../../../../../src/material/forms/warning-alert-service.ts","../../../../../../src/material/forms/boolean-field.ts","../../../../../../src/material/forms/boolean-field.html","../../../../../../src/material/forms/date-field.ts","../../../../../../src/material/forms/date-field.html","../../../../../../src/material/forms/date-input-field.ts","../../../../../../src/material/forms/date-input-field.html","../../../../../../src/material/forms/empty-field.ts","../../../../../../src/material/forms/empty-field.html","../../../../../../src/material/forms/barcode-field.ts","../../../../../../src/material/forms/barcode-field.html","../../../../../../src/material/forms/input-field.ts","../../../../../../src/material/forms/input-field.html","../../../../../../src/material/forms/multiple-choice-field.ts","../../../../../../src/material/forms/multiple-choice-field.html","../../../../../../src/material/forms/range-field.ts","../../../../../../src/material/forms/range-field.html","../../../../../../src/material/forms/single-choice-field.ts","../../../../../../src/material/forms/single-choice-field.html","../../../../../../src/material/forms/table-field.ts","../../../../../../src/material/forms/table-field.html","../../../../../../src/material/forms/text-field.ts","../../../../../../src/material/forms/text-field.html","../../../../../../src/material/forms/time-field.ts","../../../../../../src/material/forms/time-field.html","../../../../../../src/material/forms/video-url-field.ts","../../../../../../src/material/forms/video-url-field.html","../../../../../../src/material/forms/field-service.ts","../../../../../../src/material/forms/field.ts","../../../../../../src/material/forms/field.html","../../../../../../src/material/forms/form.ts","../../../../../../src/material/forms/form.html","../../../../../../src/material/forms/forms-module.ts","../../../../../../src/material/forms/public-api.ts","../../../../../../src/material/forms/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\n\n\n@Component({\n  templateUrl: 'field-warning-dialog.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class AjfFieldWarningDialog {\n  message: string;\n}\n","<mat-dialog-content><div [innerHTML]=\"message\"></div></mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button [mat-dialog-close]=\"true\">Ok</button>\n  <button mat-button [mat-dialog-close]=\"false\">Cancel</button>\n</mat-dialog-actions>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfFieldWarningAlertResult,\n  AjfWarningAlertService as CoreWarningAlertService\n} from '@ajf/core/forms';\nimport {Injectable} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AjfFieldWarningDialog} from './field-warning-dialog';\n\n@Injectable()\nexport class AjfWarningAlertService implements CoreWarningAlertService {\n  constructor(private _dialog: MatDialog) {}\n\n  showWarningAlertPrompt(warnings: string[]): Observable<AjfFieldWarningAlertResult> {\n    const dialog = this._dialog.open(AjfFieldWarningDialog);\n    dialog.componentInstance.message = warnings.join('<br>');\n    return dialog.afterClosed().pipe(map((result: boolean) => ({result})));\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_WARNING_ALERT_SERVICE,\n  AjfBaseFieldComponent,\n  AjfFormRendererService\n} from '@ajf/core/forms';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n@Component({\n  templateUrl: 'boolean-field.html',\n  styleUrls: ['boolean-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfBooleanFieldComponent extends AjfBaseFieldComponent {\n  constructor(\n      cdr: ChangeDetectorRef, service: AjfFormRendererService,\n      @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService) {\n    super(cdr, service, was);\n  }\n}\n","<mat-slide-toggle *ngIf=\"control|async as ctrl\" [formControl]=\"ctrl!\"></mat-slide-toggle>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_WARNING_ALERT_SERVICE,\n  AjfBaseFieldComponent,\n  AjfDateFieldInstance,\n  AjfFormRendererService,\n} from '@ajf/core/forms';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  templateUrl: 'date-field.html',\n  styleUrls: ['date-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfDateFieldComponent extends AjfBaseFieldComponent<AjfDateFieldInstance> {\n  constructor(\n      cdr: ChangeDetectorRef, service: AjfFormRendererService,\n      @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService) {\n    super(cdr, service, was);\n  }\n}\n","<ajf-calendar\n  *ngIf=\"control|async as ctrl\"\n  selectionMode=\"day\"\n  [dateOnlyForDay]=\"true\"\n  [minDate]=\"instance.node.minDate|ajfDateValue\"\n  [maxDate]=\"instance.node.maxDate|ajfDateValue\"\n  [formControl]=\"ctrl!\"\n></ajf-calendar>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_WARNING_ALERT_SERVICE,\n  AjfBaseFieldComponent,\n  AjfDateFieldInstance,\n  AjfDateValueStringPipe,\n  AjfFormRendererService\n} from '@ajf/core/forms';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {MatInput} from '@angular/material/input';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  templateUrl: 'date-input-field.html',\n  styleUrls: ['date-input-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfDateInputFieldComponent extends AjfBaseFieldComponent<AjfDateFieldInstance> {\n  @ViewChild(MatInput, {static: false}) input: MatInput;\n\n  private _minDateStr: string|undefined;\n  private _maxDateStr: string|undefined;\n\n  constructor(\n      cdr: ChangeDetectorRef, service: AjfFormRendererService,\n      @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n      private _dvs: AjfDateValueStringPipe) {\n    super(cdr, service, was);\n  }\n\n  onChange(): void {\n    if (this.input == null) {\n      return;\n    }\n    const val = this.input.value || '';\n    if (val.length > 0) {\n      if ((this._minDateStr != null && val < this._minDateStr) ||\n          (this._maxDateStr != null && val > this._maxDateStr)) {\n        this.input.value = '';\n      }\n    }\n  }\n\n  protected override _onInstanceChange(): void {\n    this._minDateStr = this._dvs.transform(this.instance.node.minDate);\n    this._maxDateStr = this._dvs.transform(this.instance.node.maxDate);\n  }\n}\n","<mat-form-field *ngIf=\"control|async as ctrl\">\n  <input matInput type=\"date\"\n      [attr.aria-label]=\"instance|ajfNodeCompleteName\"\n      [min]=\"instance.node.minDate|ajfDateValueString\"\n      [max]=\"instance.node.maxDate|ajfDateValueString\"\n      (change)=\"onChange()\"\n      [formControl]=\"ctrl!\">\n</mat-form-field>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_WARNING_ALERT_SERVICE,\n  AjfBaseFieldComponent,\n  AjfEmptyFieldInstance,\n  AjfFormRendererService\n} from '@ajf/core/forms';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  templateUrl: 'empty-field.html',\n  styleUrls: ['empty-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfEmptyFieldComponent extends AjfBaseFieldComponent<AjfEmptyFieldInstance> {\n  constructor(\n      cdr: ChangeDetectorRef, service: AjfFormRendererService,\n      @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService) {\n    super(cdr, service, was);\n  }\n}\n","<h1 [innerHTML]=\"instance.node.label | transloco\"></h1>\n<div [innerHTML]=\"instance.node.HTML | transloco\"></div>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_WARNING_ALERT_SERVICE,\n  AjfBaseFieldComponent,\n  AjfFormRendererService\n} from '@ajf/core/forms';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  templateUrl: 'barcode-field.html',\n  styleUrls: ['barcode-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfBarcodeFieldComponent extends AjfBaseFieldComponent {\n  constructor(\n      cdr: ChangeDetectorRef, service: AjfFormRendererService,\n      @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService) {\n    super(cdr, service, was);\n  }\n}\n","<ajf-barcode *ngIf=\"control|async as ctrl\" [formControl]=\"ctrl!\"></ajf-barcode>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_WARNING_ALERT_SERVICE,\n  AjfFormRendererService,\n  AjfInputFieldComponent as CoreComponent,\n} from '@ajf/core/forms';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  templateUrl: 'input-field.html',\n  styleUrls: ['input-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfInputFieldComponent extends CoreComponent {\n  constructor(\n      cdr: ChangeDetectorRef, service: AjfFormRendererService,\n      @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService) {\n    super(cdr, service, was);\n  }\n}\n","<mat-form-field *ngIf=\"control|async as ctrl\">\n  <input matInput *ngIf=\"type === 'text'\" type=\"text\" [formControl]=\"ctrl!\"\n    [readonly]=\"instance|ajfIsReadonlyInputField\" [attr.aria-labelledby]=\"instance.node.name\">\n  <input matInput *ngIf=\"type === 'number'\" type=\"number\" [formControl]=\"ctrl!\"\n    [readonly]=\"instance|ajfIsReadonlyInputField\" [attr.aria-labelledby]=\"instance.node.name\">\n</mat-form-field>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_SEARCH_ALERT_THRESHOLD,\n  AJF_WARNING_ALERT_SERVICE,\n  AjfFieldWithChoicesComponent,\n  AjfFormRendererService\n} from '@ajf/core/forms';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  Optional,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  templateUrl: 'multiple-choice-field.html',\n  styleUrls: ['multiple-choice-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfMultipleChoiceFieldComponent<T> extends AjfFieldWithChoicesComponent<T> {\n  constructor(\n      cdr: ChangeDetectorRef, service: AjfFormRendererService,\n      @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n      @Optional() @Inject(AJF_SEARCH_ALERT_THRESHOLD) searchThreshold: number) {\n    super(cdr, service, was, searchThreshold);\n  }\n}\n","<ng-container *ngIf=\"!(instance|ajfExpandFieldWithChoices:searchThreshold); else expanded\">\n  <mat-select *ngIf=\"control|async as ctrl\" [formControl]=\"ctrl!\" [multiple]=\"true\">\n    <mat-option [value]=\"choice.value\"\n        *ngFor=\"let choice of instance.filteredChoices\">\n      {{ choice.label | transloco }}\n    </mat-option>\n  </mat-select>\n</ng-container>\n<ng-template #expanded>\n  <ajf-checkbox-group *ngIf=\"control|async as ctrl\" class=\"ajf-choices-container\"\n      [formControl]=\"ctrl!\">\n    <ajf-checkbox-group-item *ngFor=\"let choice of instance.filteredChoices\"\n        [value]=\"choice.value\">\n      {{ choice.label | transloco }}\n    </ajf-checkbox-group-item>\n  </ajf-checkbox-group>\n</ng-template>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_WARNING_ALERT_SERVICE,\n  AjfFormRendererService,\n} from '@ajf/core/forms';\nimport {AjfRange} from '@ajf/core/range';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  selector: 'ajf-range',\n  templateUrl: 'range-field.html',\n  styleUrls: ['range-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfRangeFieldComponent extends AjfRange {\n  constructor(\n      cdr: ChangeDetectorRef, service: AjfFormRendererService,\n      @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService) {\n    super(cdr, service, was);\n  }\n}\n","<mat-slider\n  *ngIf=\"control|async as ctrl\"\n  thumbLabel\n  [formControl]=\"ctrl!\"\n  [tickInterval]=\"step\"\n  [step]=\"step\"\n  [min]=\"start\"\n  [max]=\"end\"\n  [attr.aria-label]=\"name\"\n  [attr.name]=\"name\"\n></mat-slider>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_SEARCH_ALERT_THRESHOLD,\n  AJF_WARNING_ALERT_SERVICE,\n  AjfFieldWithChoicesComponent,\n  AjfFormRendererService\n} from '@ajf/core/forms';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  Optional,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  templateUrl: 'single-choice-field.html',\n  styleUrls: ['single-choice-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfSingleChoiceFieldComponent<T> extends AjfFieldWithChoicesComponent<T> {\n  constructor(\n      cdr: ChangeDetectorRef, service: AjfFormRendererService,\n      @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n      @Optional() @Inject(AJF_SEARCH_ALERT_THRESHOLD) searchThreshold: number) {\n    super(cdr, service, was, searchThreshold);\n  }\n}\n","<ng-container *ngIf=\"!(instance|ajfExpandFieldWithChoices:searchThreshold) ; else expanded\">\n  <mat-select *ngIf=\"control|async as ctrl\" [formControl]=\"ctrl!\">\n    <mat-option [value]=\"choice.value\"\n        *ngFor=\"let choice of instance.filteredChoices\">\n      {{ choice.label | transloco }}\n    </mat-option>\n  </mat-select>\n</ng-container>\n<ng-template #expanded>\n  <mat-radio-group *ngIf=\"control|async as ctrl\" class=\"ajf-choices-container\"\n      [attr.aria-labelledby]=\"instance.node.name\"\n      [formControl]=\"ctrl!\">\n    <mat-radio-button [value]=\"choice.value\"\n        *ngFor=\"let choice of instance.filteredChoices\">\n      {{ choice.label | transloco }}\n    </mat-radio-button>\n  </mat-radio-group>\n</ng-template>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_WARNING_ALERT_SERVICE,\n  AjfFormRendererService,\n  AjfTableFieldComponent as AjfCoreTableFieldComponent\n} from '@ajf/core/forms';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  templateUrl: 'table-field.html',\n  styleUrls: ['table-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfTableFieldComponent extends AjfCoreTableFieldComponent {\n  constructor(\n      cdr: ChangeDetectorRef, service: AjfFormRendererService,\n      @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService) {\n    super(cdr, service, was);\n  }\n}\n","<table class=\"ajf-table-field\">\n  <ng-container *ngIf=\"instance.node as node\">\n    <ng-container *ngFor=\"let columns of instance.controls; let row = index\">\n      <tr [ngClass]=\"row | ajfTableRowClass\">\n        <td>\n          <ng-container *ngIf=\"columns.length > 0 && columns[0] != null\">\n            {{ columns[0] | ajfTranslateIfString | ajfFormatIfNumber: '.0-2' }}\n          </ng-container>\n        </td>\n        <ng-container *ngIf=\"columns.length > 1\">\n          <td *ngFor=\"let c of columns[1]; let column = index\">\n            <ng-container *ngIf=\"row == 0; else controlCell\">\n              {{ c | ajfTranslateIfString | ajfFormatIfNumber: '.0-2' }}\n            </ng-container>\n            <ng-template #controlCell>\n              <ng-container *ngIf=\"c|ajfGetTableCellControl as contr\">\n                <ng-container *ngIf=\"contr != null\">\n                  <ng-container\n                    *ngIf=\"contr!.show && (node.rows[row-1][column]|ajfIsCellEditable); else plainTextCell\"\n                  >\n                    <ng-container\n                      *ngIf=\"contr.type === 'number';else genericInput\"\n                    >\n                      <input\n                        (focusout)=\"contr!.show = false\"\n                        type=\"number\"\n                        [formControl]=\"contr.control\"\n                        (keydown.tab)=\"goToNextCell($event, row, column)\"\n                        autofocus\n                      />\n                    </ng-container>\n                    <ng-template #genericInput>\n                      <input\n                        (focusout)=\"contr!.show = false\"\n                        [type]=\"contr.type\"\n                        [formControl]=\"contr.control\"\n                        (keydown.tab)=\"goToNextCell($event, row, column)\"\n                        autofocus\n                      />\n                    </ng-template>\n                  </ng-container>\n\n                  <ng-template #plainTextCell>\n                    <span class=\"ajf-table-cell\" (click)=\"goToCell(row, column)\"\n                      >{{ contr.control!.value | ajfTranslateIfString |\n                      ajfFormatIfNumber: '.0-2' }}</span\n                    >\n                  </ng-template>\n                </ng-container>\n              </ng-container>\n            </ng-template>\n          </td>\n        </ng-container>\n      </tr>\n    </ng-container>\n  </ng-container>\n</table>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_WARNING_ALERT_SERVICE,\n  AjfFormRendererService,\n  AjfInputFieldComponent as CoreComponent,\n} from '@ajf/core/forms';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  templateUrl: 'text-field.html',\n  styleUrls: ['text-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfTextFieldComponent extends CoreComponent {\n  constructor(\n      cdr: ChangeDetectorRef, service: AjfFormRendererService,\n      @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService) {\n    super(cdr, service, was);\n  }\n}\n","<mat-form-field *ngIf=\"control|async as ctrl\">\n  <textarea matInput cdkTextareaAutosize [formControl]=\"ctrl!\"></textarea>\n</mat-form-field>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_WARNING_ALERT_SERVICE,\n  AjfBaseFieldComponent,\n  AjfFormRendererService\n} from '@ajf/core/forms';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  templateUrl: 'time-field.html',\n  styleUrls: ['time-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfTimeFieldComponent extends AjfBaseFieldComponent {\n  constructor(\n      cdr: ChangeDetectorRef, service: AjfFormRendererService,\n      @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService) {\n    super(cdr, service, was);\n  }\n}\n","<ajf-time *ngIf=\"control|async as ctrl\" [formControl]=\"ctrl!\"></ajf-time>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_WARNING_ALERT_SERVICE,\n  AjfFormRendererService,\n  AjfVideoUrlFieldComponent as CoreComponent,\n} from '@ajf/core/forms';\nimport {HttpClient} from '@angular/common/http';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation\n} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  templateUrl: 'video-url-field.html',\n  styleUrls: ['video-url-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfVideoUrlFieldComponent extends CoreComponent {\n  constructor(\n      cdr: ChangeDetectorRef, service: AjfFormRendererService,\n      @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService, domSanitizer: DomSanitizer,\n      httpClient: HttpClient) {\n    super(cdr, service, was, domSanitizer, httpClient);\n  }\n}\n","<ng-container *ngIf=\"control|async as ctrl\">\n  <mat-form-field class=\"ajf-video-input\">\n    <input matInput type=\"url\" [formControl]=\"ctrl!\">\n  </mat-form-field>\n  <div class=\"ajf-video-thumbnail\">\n    <ng-container *ngIf=\"validUrl|async\">\n      <a target=\"_blank\" [href]=\"ctrl.value\">\n        <img *ngIf=\"videoThumbnail|async as thumb\" [src]=\"thumb\" class=\"\" alt=\"\">\n      </a>\n    </ng-container>\n  </div>\n</ng-container>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfFieldService as CoreService,\n  AjfFieldType,\n  AjfFileFieldComponent,\n  AjfImageFieldComponent,\n  AjfReadOnlyFieldComponent,\n  AjfReadOnlyFileFieldComponent,\n  AjfReadOnlyImageFieldComponent,\n  AjfReadOnlySelectFieldComponent,\n  AjfReadOnlyTableFieldComponent,\n  AjfReadOnlyVideoUrlFieldComponent,\n} from '@ajf/core/forms';\nimport {Injectable} from '@angular/core';\n\nimport {AjfBarcodeFieldComponent} from './barcode-field';\nimport {AjfBooleanFieldComponent} from './boolean-field';\nimport {AjfDateFieldComponent} from './date-field';\nimport {AjfDateInputFieldComponent} from './date-input-field';\nimport {AjfEmptyFieldComponent} from './empty-field';\nimport {AjfInputFieldComponent} from './input-field';\nimport {AjfMultipleChoiceFieldComponent} from './multiple-choice-field';\nimport {AjfRangeFieldComponent} from './range-field';\nimport {AjfSingleChoiceFieldComponent} from './single-choice-field';\nimport {AjfTableFieldComponent} from './table-field';\nimport {AjfTextFieldComponent} from './text-field';\nimport {AjfTimeFieldComponent} from './time-field';\nimport {AjfVideoUrlFieldComponent} from './video-url-field';\n\n@Injectable({providedIn: 'root'})\nexport class AjfFieldService extends CoreService {\n  constructor() {\n    super();\n    this.componentsMap[AjfFieldType.String] = {\n      component: AjfInputFieldComponent,\n      readOnlyComponent: AjfReadOnlyFieldComponent\n    },\n    this.componentsMap[AjfFieldType.Text] = {\n      component: AjfTextFieldComponent,\n      readOnlyComponent: AjfReadOnlyFieldComponent\n    },\n    this.componentsMap[AjfFieldType.Number] = {\n      component: AjfInputFieldComponent,\n      readOnlyComponent: AjfReadOnlyFieldComponent,\n      inputs: {type: 'number'}\n    },\n    this.componentsMap[AjfFieldType.Boolean] = {\n      component: AjfBooleanFieldComponent,\n      readOnlyComponent: AjfReadOnlyFieldComponent\n    },\n    this.componentsMap[AjfFieldType.Formula] = {\n      component: AjfInputFieldComponent,\n      readOnlyComponent: AjfReadOnlyFieldComponent,\n      inputs: {readonly: true}\n    },\n    this.componentsMap[AjfFieldType.Date] = {\n      component: AjfDateFieldComponent,\n      readOnlyComponent: AjfReadOnlyFieldComponent\n    },\n    this.componentsMap[AjfFieldType.DateInput] = {\n      component: AjfDateInputFieldComponent,\n      readOnlyComponent: AjfReadOnlyFieldComponent\n    },\n    this.componentsMap[AjfFieldType.Table] = {\n      component: AjfTableFieldComponent,\n      readOnlyComponent: AjfReadOnlyTableFieldComponent\n    },\n    this.componentsMap[AjfFieldType.Empty] = {component: AjfEmptyFieldComponent},\n    this.componentsMap[AjfFieldType.SingleChoice] = {\n      component: AjfSingleChoiceFieldComponent,\n      readOnlyComponent: AjfReadOnlySelectFieldComponent\n    },\n    this.componentsMap[AjfFieldType.MultipleChoice] = {\n      component: AjfMultipleChoiceFieldComponent,\n      readOnlyComponent: AjfReadOnlySelectFieldComponent\n    },\n    this.componentsMap[AjfFieldType.Time] = {\n      component: AjfTimeFieldComponent,\n      readOnlyComponent: AjfReadOnlyFieldComponent\n    },\n    this.componentsMap[AjfFieldType.Barcode] = {\n      component: AjfBarcodeFieldComponent,\n      readOnlyComponent: AjfReadOnlyFieldComponent\n    };\n    this.componentsMap[AjfFieldType.File] = {\n      component: AjfFileFieldComponent,\n      readOnlyComponent: AjfReadOnlyFileFieldComponent\n    };\n    this.componentsMap[AjfFieldType.Image] = {\n      component: AjfImageFieldComponent,\n      readOnlyComponent: AjfReadOnlyImageFieldComponent\n    };\n    this.componentsMap[AjfFieldType.VideoUrl] = {\n      component: AjfVideoUrlFieldComponent,\n      readOnlyComponent: AjfReadOnlyVideoUrlFieldComponent\n    };\n    this.componentsMap[AjfFieldType.Range] = {\n      component: AjfRangeFieldComponent,\n      readOnlyComponent: AjfReadOnlyFieldComponent\n    };\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldComponentsMap, AjfFormField as CoreFormField} from '@ajf/core/forms';\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {AjfFieldService} from './field-service';\n\n@Component({\n  selector: 'ajf-field,ajf-form-field',\n  templateUrl: 'field.html',\n  styleUrls: ['field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfFormField extends CoreFormField {\n  readonly componentsMap: AjfFieldComponentsMap;\n\n  constructor(\n      cdr: ChangeDetectorRef, cfr: ComponentFactoryResolver, fieldService: AjfFieldService) {\n    super(cdr, cfr);\n    this.componentsMap = fieldService.componentsMap;\n  }\n\n  static ngAcceptInputType_readonly: BooleanInput;\n}\n","<div\n    [ngClass]=\"'ajf-field-' + (instance|ajfNodeCompleteName)\"\n    [class.ajf-validated]=\"instance.validationResults|ajfFieldIsValid\"\n>\n  <ng-template ajf-field-host></ng-template>\n</div>\n<ng-container *ngIf=\"instance && instance.node && instance.node.attachments\">\n  <a *ngFor=\"let attachment of instance.node.attachments\"\n    [href]=\"attachment.value\" target=\"_blank\">{{attachment.label | transloco}}</a>\n</ng-container>\n<div *ngIf=\"!readonly && instance && instance.validationResults\" class=\"ajf-errors\">\n  <ng-container *ngFor=\"let res of instance.validationResults\">\n    <div class=\"error\" *ngIf=\"!res.result\">\n      {{ res.error|transloco }} \n    </div>\n  </ng-container>\n</div>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormRenderer as AjfCoreFormRenderer, AjfFormRendererService} from '@ajf/core/forms';\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  ViewEncapsulation\n} from '@angular/core';\n\n@Component({\n  selector: 'ajf-form',\n  templateUrl: 'form.html',\n  styleUrls: ['form.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AjfFormRenderer extends AjfCoreFormRenderer {\n  @Input() topBar: boolean = false;\n\n  constructor(rendererService: AjfFormRendererService, changeDetectorRef: ChangeDetectorRef) {\n    super(rendererService, changeDetectorRef);\n  }\n\n  static ngAcceptInputType_fixedOrientation: BooleanInput;\n  static ngAcceptInputType_hasEndMessage: BooleanInput;\n  static ngAcceptInputType_hasStartMessage: BooleanInput;\n  static ngAcceptInputType_hideBottomToolbar: BooleanInput;\n  static ngAcceptInputType_hideNavigationButtons: BooleanInput;\n  static ngAcceptInputType_hideTopToolbar: BooleanInput;\n  static ngAcceptInputType_readonly: BooleanInput;\n  static ngAcceptInputType_saveDisabled: BooleanInput;\n}\n","<ng-container *ngIf=\"formGroup|async as fg\">\n  <form novalidate [formGroup]=\"fg!\">\n    <div class=\"ajf-form-container\">\n      <mat-toolbar *ngIf=\"!hideTopToolbar && topBar\" class=\"ajf-btn-strip\">\n        <ng-template\n          ngFor\n          let-slideInstance\n          [ngForOf]=\"slides|async\"\n          [ngForTrackBy]=\"trackNodeById\"\n        >\n          <button\n            mat-button\n            class=\"ajf-topbar-button\"\n            *ngIf=\"slideInstance.node != null && slideInstance.node.label != null && slideInstance.node.label.length > 0\"\n            (click)=\"scrollToSlide(slideInstance)\"\n          >\n            {{slideInstance.node.label | transloco}}\n          </button>\n        </ng-template>\n      </mat-toolbar>\n      <mat-toolbar *ngIf=\"!hideTopToolbar\">\n        {{ title }}\n        <span class=\"ajf-spacer\"></span>\n        <!-- this content projection allow to add buttons on toolbar -->\n        <ng-content select=\"[ajfFormTopToolbarButtons]\"></ng-content>\n        <!-- apply a default save button only when ajfFormSaveButton is empty -->\n        <span *ngIf=\"!saveDisabled\" (click)=\"onSave($event)\">\n          <span #saveButton\n            ><ng-content select=\"[ajfFormSaveButton]\"></ng-content\n          ></span>\n          <button\n            *ngIf=\"saveButton != null  && saveButton.childNodes != null && saveButton.childNodes.length == 0\"\n            mat-button\n            default\n          >\n            {{'Save'|transloco}}\n          </button>\n        </span>\n      </mat-toolbar>\n      <div class=\"ajf-slider-container\">\n        <ajf-page-slider\n          (orientationChange)=\"orientationChangeHandler($event)\"\n          [fixedOrientation]=\"fixedOrientation\"\n          [hideNavigationButtons]=\"hideNavigationButtons\"\n          [orientation]=\"orientation\"\n          #formSlider\n        >\n          <ng-container *ngIf=\"(slides|async) as curSlides\">\n            <ng-container *ngIf=\"curSlides!.length > 0 && hasStartMessage\">\n              <ajf-page-slider-item>\n                <div class=\"ajf-form-page\">\n                  <mat-card>\n                    <mat-card-header>\n                      <div class=\"ajf-page-slider-item-header\">\n                        <h2>\n                          <span class=\"ajf-form-header-number\"> 1 &rarr; </span>\n                          <span class=\"ajf-title\">\n                            <ng-content\n                              select=\"[ajfFormStartMessageTitle]\"\n                            ></ng-content>\n                          </span>\n                        </h2>\n                      </div>\n                    </mat-card-header>\n                    <mat-card-content>\n                      <ng-content select=\"[ajfFormStartMessage]\"></ng-content>\n                    </mat-card-content>\n                  </mat-card>\n                </div>\n              </ajf-page-slider-item>\n            </ng-container>\n            <ng-container\n              *ngFor=\"let slideInstance of curSlides; trackBy:trackNodeById\"\n            >\n              <!-- non repeating slides -->\n              <ng-container *ngIf=\"slideInstance.visible\">\n                <ng-container\n                  *ngIf=\"!(slideInstance|ajfIsRepeatingSlideInstance)\"\n                >\n                  <ajf-page-slider-item>\n                    <div class=\"ajf-form-page\">\n                      <mat-card>\n                        <mat-card-header>\n                          <div class=\"ajf-page-slider-item-header\">\n                            <h2>\n                              <span class=\"ajf-form-header-number\"\n                                >{{ slideInstance.position + (hasStartMessage |\n                                ajfBoolToInt) }} &rarr;</span\n                              >\n                              <span\n                                [innerHTML]=\"slideInstance.node.label | transloco\"\n                              ></span>\n                            </h2>\n                            <mat-icon\n                              class=\"ajf-warning\"\n                              *ngIf=\"!slideInstance.valid\"\n                              >warning</mat-icon\n                            >\n                            <mat-icon\n                              class=\"ajf-success\"\n                              *ngIf=\"slideInstance.valid\"\n                              >check</mat-icon\n                            >\n                          </div>\n                        </mat-card-header>\n                        <mat-card-content>\n                          <ng-template\n                            ngFor\n                            let-fieldInstance\n                            [ngForOf]=\"slideInstance.flatNodes\"\n                            [ngForTrackBy]=\"trackNodeById\"\n                          >\n                            <div\n                              [ngClass]=\"'ajf-' + (fieldInstance|ajfAsFieldInstance).node.size\"\n                              class=\"ajf-field-entry\"\n                              *ngIf=\"fieldInstance.visible\"\n                            >\n                              <i\n                                [class]=\"(fieldInstance|ajfAsFieldInstance).node.fieldType | ajfFieldIcon\"\n                                item-right\n                              ></i>\n                              <p>\n                                {{\n                                ((fieldInstance|ajfAsFieldInstance).node.description\n                                || '') | transloco }}\n                              </p>\n                              <label\n                                [attr.id]=\"fieldInstance.node.name\"\n                                *ngIf=\"(fieldInstance|ajfAsFieldInstance).node.fieldType !== 7\"\n                                [innerHTML]=\"fieldInstance.node.label | transloco\"\n                              ></label>\n                              <mat-icon\n                                class=\"ajf-tooltip-icon\"\n                                *ngIf=\"(fieldInstance|ajfAsFieldInstance).node?.hint as hint\"\n                                [matTooltip]=\"hint\"\n                                matTooltipPosition=\"right\"\n                              >\n                                {{(fieldInstance|ajfAsFieldInstance).node?.hintIcon\n                                || 'help'}}</mat-icon\n                              >\n                              <ajf-field\n                                [instance]=\"fieldInstance|ajfAsFieldInstance\"\n                                [readonly]=\"readonly || !slideInstance.editable\"\n                              >\n                              </ajf-field>\n                            </div>\n                          </ng-template>\n                        </mat-card-content>\n                      </mat-card>\n                    </div>\n                  </ajf-page-slider-item>\n                </ng-container>\n                <!-- repeating slides -->\n                <ng-container\n                  *ngIf=\"(slideInstance|ajfIsRepeatingSlideInstance)\"\n                >\n                  <ajf-page-slider-item\n                    *ngFor=\"let curRep of ((slideInstance|ajfAsRepeatingSlideInstance).reps|ajfRange); let idx = index; let lastSlide = last\"\n                  >\n                    <div class=\"ajf-form-page\">\n                      <mat-card>\n                        <mat-card-header>\n                          <div class=\"ajf-page-slider-item-header\">\n                            <h2>\n                              <span class=\"ajf-form-header-number\"\n                                >{{ slideInstance.position|ajfIncrement:idx +\n                                (hasStartMessage | ajfBoolToInt) }} &rarr;</span\n                              >\n                              <span\n                                [innerHTML]=\"slideInstance.node.label | transloco\"\n                              ></span>\n                            </h2>\n                            <mat-icon\n                              class=\"ajf-warning\"\n                              *ngIf=\"!(slideInstance|ajfValidSlide:idx)\"\n                              >warning</mat-icon\n                            >\n                            <mat-icon\n                              class=\"ajf-success\"\n                              *ngIf=\"(slideInstance|ajfValidSlide:idx)\"\n                              >check</mat-icon\n                            >\n                          </div>\n                        </mat-card-header>\n                        <mat-card-content>\n                          <div\n                            *ngIf=\"lastSlide && !readonly\"\n                            class=\"ajf-group-actions\"\n                          >\n                            <button\n                              (click)=\"addGroup(slideInstance)\"\n                              [disabled]=\"!(slideInstance|ajfAsRepeatingSlideInstance).canAdd || ((slideInstance|ajfAsRepeatingSlideInstance).node?.disableRemoval && !slideInstance.valid)\"\n                              mat-mini-fab\n                            >\n                              <mat-icon>add</mat-icon>\n                            </button>\n                            <button\n                              (click)=\"removeGroup(slideInstance)\"\n                              [disabled]=\"!(slideInstance|ajfAsRepeatingSlideInstance).canRemove || (slideInstance|ajfAsRepeatingSlideInstance).node?.disableRemoval\"\n                              mat-mini-fab\n                            >\n                              <mat-icon>remove</mat-icon>\n                            </button>\n                          </div>\n                          <ng-template\n                            ngFor\n                            let-fieldInstance\n                            [ngForOf]=\"slideInstance.slideNodes[idx]\"\n                            [ngForTrackBy]=\"trackNodeById\"\n                          >\n                            <div\n                              [ngClass]=\"'ajf-' + (fieldInstance|ajfAsFieldInstance).node.size\"\n                              class=\"ajf-field-entry\"\n                              *ngIf=\"fieldInstance.visible\"\n                            >\n                              <i\n                                [class]=\"(fieldInstance|ajfAsFieldInstance).node.fieldType | ajfFieldIcon\"\n                                item-right\n                              ></i>\n                              <p>\n                                {{\n                                ((fieldInstance|ajfAsFieldInstance).node.description\n                                || '') | transloco }}\n                              </p>\n                              <label\n                                [attr.id]=\"fieldInstance.node.name\"\n                                [innerHTML]=\"fieldInstance.node.label | transloco\"\n                              ></label>\n                              <mat-icon\n                                class=\"ajf-tooltip-icon\"\n                                *ngIf=\"(fieldInstance|ajfAsFieldInstance).node?.hint as hint\"\n                                [matTooltip]=\"hint\"\n                                matTooltipPosition=\"right\"\n                              >\n                                {{(fieldInstance|ajfAsFieldInstance).node?.hintIcon\n                                || 'help'}}</mat-icon\n                              >\n                              <ajf-field\n                                [instance]=\"fieldInstance|ajfAsFieldInstance\"\n                                [readonly]=\"readonly || (!lastSlide && (slideInstance|ajfAsRepeatingSlideInstance).node?.disableRemoval)\"\n                              >\n                              </ajf-field>\n                            </div>\n                          </ng-template>\n                        </mat-card-content>\n                      </mat-card>\n                    </div>\n                  </ajf-page-slider-item>\n                </ng-container>\n              </ng-container>\n            </ng-container>\n            <ng-container\n              *ngIf=\"curSlides && curSlides!.length > 0 && hasEndMessage\"\n            >\n              <ajf-page-slider-item>\n                <div class=\"ajf-form-page\">\n                  <mat-card>\n                    <mat-card-header>\n                      <div class=\"ajf-page-slider-item-header\">\n                        <h2>\n                          <span\n                            *ngIf=\"(slidesNum|async) as snum\"\n                            class=\"ajf-form-header-number\"\n                          >\n                            {{ snum! + (hasStartMessage | ajfBoolToInt ) + 1 }}\n                            &rarr;\n                          </span>\n                          <span class=\"ajf-title\">\n                            <ng-content\n                              select=\"[ajfFormEndMessageTitle]\"\n                            ></ng-content>\n                          </span>\n                        </h2>\n                      </div>\n                    </mat-card-header>\n                    <mat-card-content>\n                      <ng-content select=\"[ajfFormEndMessage]\"></ng-content>\n                    </mat-card-content>\n                  </mat-card>\n                </div>\n              </ajf-page-slider-item>\n            </ng-container>\n          </ng-container>\n          <div ajfPageSliderBar *ngIf=\"!hideBottomToolbar\">\n            <div class=\"ajf-left-bar\">\n              <div class=\"ajf-errors\" *ngIf=\"((errors | async) || 0) > 0\">\n                <button mat-button (click)=\"goToPrevError()\" danger>\n                  <mat-icon>arrow_upward</mat-icon>\n                </button>\n                <button mat-button (click)=\"goToNextError()\" danger>\n                  <mat-icon>arrow_downward</mat-icon>\n                </button>\n              </div>\n              <div class=\"ajf-info-box ajf-error\">\n                <div class=\"ajf-title\">{{'Errors'|transloco}}</div>\n                <div class=\"ajf-content\">\n                  {{ errors | async }} / {{ slidesNum|async }}\n                </div>\n              </div>\n            </div>\n          </div>\n        </ajf-page-slider>\n      </div>\n    </div>\n  </form>\n</ng-container>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCommonModule} from '@ajf/core/common';\nimport {AJF_WARNING_ALERT_SERVICE, AjfFormsModule as AjfCoreFormsModule} from '@ajf/core/forms';\nimport {AjfTranslocoModule} from '@ajf/core/transloco';\nimport {AjfBarcodeModule} from '@ajf/material/barcode';\nimport {AjfCalendarModule} from '@ajf/material/calendar';\nimport {AjfCheckboxGroupModule} from '@ajf/material/checkbox-group';\nimport {AjfPageSliderModule} from '@ajf/material/page-slider';\nimport {AjfTimeModule} from '@ajf/material/time';\nimport {TextFieldModule} from '@angular/cdk/text-field';\nimport {CommonModule} from '@angular/common';\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\nimport {AjfBarcodeFieldComponent} from './barcode-field';\nimport {AjfBooleanFieldComponent} from './boolean-field';\nimport {AjfDateFieldComponent} from './date-field';\nimport {AjfDateInputFieldComponent} from './date-input-field';\nimport {AjfEmptyFieldComponent} from './empty-field';\nimport {AjfFormField} from './field';\nimport {AjfFieldService} from './field-service';\nimport {AjfFieldWarningDialog} from './field-warning-dialog';\nimport {AjfFormRenderer} from './form';\nimport {AjfInputFieldComponent} from './input-field';\nimport {AjfMultipleChoiceFieldComponent} from './multiple-choice-field';\nimport {AjfRangeFieldComponent} from './range-field';\nimport {AjfSingleChoiceFieldComponent} from './single-choice-field';\nimport {AjfTableFieldComponent} from './table-field';\nimport {AjfTextFieldComponent} from './text-field';\nimport {AjfTimeFieldComponent} from './time-field';\nimport {AjfVideoUrlFieldComponent} from './video-url-field';\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@NgModule({\n  imports: [\n    AjfBarcodeModule,       AjfCalendarModule,    AjfCommonModule,  AjfCoreFormsModule,\n    AjfCheckboxGroupModule, AjfPageSliderModule,  AjfTimeModule,    AjfTranslocoModule,\n    CommonModule,           MatButtonModule,      MatCardModule,    MatDialogModule,\n    MatFormFieldModule,     MatIconModule,        MatInputModule,   MatRadioModule,\n    MatSelectModule,        MatSlideToggleModule, MatToolbarModule, MatTooltipModule,\n    ReactiveFormsModule,    TextFieldModule,      MatSliderModule\n  ],\n  declarations: [\n    AjfBarcodeFieldComponent, AjfBooleanFieldComponent, AjfDateFieldComponent,\n    AjfDateInputFieldComponent, AjfEmptyFieldComponent, AjfFieldWarningDialog, AjfFormField,\n    AjfFormRenderer, AjfInputFieldComponent, AjfMultipleChoiceFieldComponent,\n    AjfRangeFieldComponent, AjfSingleChoiceFieldComponent, AjfTableFieldComponent,\n    AjfTextFieldComponent, AjfTimeFieldComponent, AjfVideoUrlFieldComponent\n  ],\n  entryComponents: [\n    AjfBarcodeFieldComponent, AjfBooleanFieldComponent, AjfDateFieldComponent,\n    AjfDateInputFieldComponent, AjfEmptyFieldComponent, AjfInputFieldComponent,\n    AjfMultipleChoiceFieldComponent, AjfRangeFieldComponent, AjfSingleChoiceFieldComponent,\n    AjfTableFieldComponent, AjfTextFieldComponent, AjfTimeFieldComponent, AjfVideoUrlFieldComponent\n  ],\n  exports: [\n    AjfFormField,\n    AjfFormRenderer,\n  ],\n  providers: [\n    AjfFieldService,\n    {provide: AJF_WARNING_ALERT_SERVICE, useClass: AjfWarningAlertService},\n  ],\n})\nexport class AjfFormsModule {\n  static forRoot(): ModuleWithProviders<AjfFormsModule> {\n    return {\n      ngModule: AjfFormsModule,\n      providers: [\n        AjfFieldService,\n      ],\n    };\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport * from './boolean-field';\nexport * from './date-field';\nexport * from './date-input-field';\nexport * from './empty-field';\nexport * from './field';\nexport * from './field-service';\nexport * from './field-warning-dialog';\nexport * from './input-field';\nexport * from './form';\nexport * from './forms-module';\nexport * from './multiple-choice-field';\nexport * from './single-choice-field';\nexport * from './table-field';\nexport * from './time-field';\nexport * from './warning-alert-service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["CoreComponent","AjfCoreTableFieldComponent","CoreService","CoreFormField","AjfCoreFormRenderer","AjfCoreFormsModule"],"mappings":"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"}